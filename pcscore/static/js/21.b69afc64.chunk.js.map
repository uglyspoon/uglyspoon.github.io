{"version":3,"sources":["containers/studentinfo/components/Dropzone.tsx","assets/xls.svg","assets/xlsx.svg","assets/trash.svg","assets/ZIP.svg","assets/RAR.svg"],"names":["Dropzone","_ref","saveFile","content","accept","_useState","useState","_useState2","Object","_Users_spoon_WWW_dabai_antd_demo_ts_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","files","setFiles","onDrop","useCallback","acceptedFiles","length","antd_es_message__WEBPACK_IMPORTED_MODULE_1__","warning","map","file","name","lastModified","suffix","split","pop","toLocaleLowerCase","_useDropzone","useDropzone","getRootProps","getInputProps","onClickDelete","e","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","className","styles","container","item","idx","key","src","XLSX","alt","XLS","ZIP","RAR","TRASH","style","width","cursor","data-index","onClick","whyDidYouRender","React","memo","module","exports","__webpack_require__","p"],"mappings":"qQAsBA,SAASA,EAATC,GAAoE,IAAhDC,EAAgDD,EAAhDC,SAAUC,EAAsCF,EAAtCE,QAASC,EAA6BH,EAA7BG,OAA6BC,EACxCC,mBAAqB,IADmBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC3DK,EAD2DH,EAAA,GACpDI,EADoDJ,EAAA,GAE5DK,EAASC,sBAAY,SAAAC,GACpBA,EAAcC,QACjBC,EAAA,EAAQC,QAAQ,uEAElBN,EAASG,EAAcI,IAAI,SAACC,GAAD,MAAqB,CAC9CC,KAAMD,EAAKC,KACXC,aAAcF,EAAKE,aACnBC,QAASH,EAAKC,KAAKG,MAAM,KAAKC,OAAS,IAAIC,wBAG7CvB,EAASY,EAAc,KACtB,CAACZ,IAb8DwB,EAe3BC,YAAY,CAAEf,SAAQR,WAArDwB,EAf0DF,EAe1DE,aAAcC,EAf4CH,EAe5CG,cAEhBC,EAAgB,SAACC,GACrBpB,EAAS,KAEX,OACEqB,EAAAC,EAAAC,cAAA,WAASC,UAAWC,IAAOC,WAEvB3B,EAAMK,OACJiB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACZzB,EAAMQ,IAAI,SAACoB,EAAMC,GAChB,OAAOP,EAAAC,EAAAC,cAAA,OAAKM,IAAKF,EAAKjB,aAAcc,UAAU,kBAC5CH,EAAAC,EAAAC,cAAA,WACmB,SAAhBI,EAAKhB,QAAqBU,EAAAC,EAAAC,cAAA,OAAKO,IAAKC,IAAMC,IAAI,SAC9B,QAAhBL,EAAKhB,QAAoBU,EAAAC,EAAAC,cAAA,OAAKO,IAAKG,IAAKD,IAAI,QAC5B,QAAhBL,EAAKhB,QAAoBU,EAAAC,EAAAC,cAAA,OAAKO,IAAKI,IAAKF,IAAI,QAC5B,QAAhBL,EAAKhB,QAAoBU,EAAAC,EAAAC,cAAA,OAAKO,IAAKK,IAAKH,IAAI,QAE7CX,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAcG,EAAKlB,OAErCY,EAAAC,EAAAC,cAAA,OAAKO,IAAKM,IAAOJ,IAAI,GAAGK,MAAO,CAAEC,MAAO,GAAIC,OAAQ,WAAaC,aAAYZ,EAAKa,QAAStB,QAIjGE,EAAAC,EAAAC,cAAA,MAASN,EAAa,CAACO,UAAW,aAChCH,EAAAC,EAAAC,cAAA,QAAWL,KACV1B,IAMbH,EAASqD,iBAAkB,EACZC,cAAMC,KAAKvD,8CCtE1BwD,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/21.b69afc64.chunk.js","sourcesContent":["import React, {useCallback, useState } from 'react'\nimport {useDropzone} from 'react-dropzone'\nimport styles from './Dropzone.less'\nimport XLS from 'assets/xls.svg';\nimport XLSX from 'assets/xlsx.svg';\nimport TRASH from 'assets/trash.svg';\nimport { message } from 'antd';\nimport ZIP from 'assets/ZIP.svg';\nimport RAR from 'assets/RAR.svg';\n\ntype fileType = {\n  name: string;\n  lastModified: number;\n  suffix: string;\n}\n\ntype DropzonePropsType = {\n  saveFile: (file: File) => void;\n  content: any;\n  accept: string[];\n}\n\nfunction Dropzone({ saveFile, content, accept }: DropzonePropsType) {\n  const [files, setFiles] = useState<fileType[]>([]);\n  const onDrop = useCallback(acceptedFiles => {\n    if (!acceptedFiles.length) {\n      message.warning('请检查文件格式之后再试~')\n    }\n    setFiles(acceptedFiles.map((file:fileType ) => ({\n      name: file.name,\n      lastModified: file.lastModified,\n      suffix: (file.name.split('.').pop() || '').toLocaleLowerCase()\n    })))\n\n    saveFile(acceptedFiles[0])\n  }, [saveFile])\n\n  const { getRootProps, getInputProps} = useDropzone({ onDrop, accept});\n\n  const onClickDelete = (e: any) => {\n    setFiles([])\n  }\n  return (\n    <section className={styles.container}>\n      {\n        files.length ?\n          <div className='dropzone'>\n            {files.map((item, idx) => {\n              return <div key={item.lastModified} className=\"file-container\">\n                <div>\n                  {item.suffix === 'xlsx' && <img src={XLSX} alt=\"xlsx\" />}\n                  {item.suffix === 'xls' && <img src={XLS} alt=\"xls\" />}\n                  {item.suffix === 'zip' && <img src={ZIP} alt=\"zip\" />}\n                  {item.suffix === 'rar' && <img src={RAR} alt=\"zip\" />}\n\n                  <span className=\"file-title\">{item.name}</span>\n                </div>\n                <img src={TRASH} alt=\"\" style={{ width: 20, cursor: 'pointer' }} data-index={idx} onClick={onClickDelete}/>\n              </div>\n            })}\n          </div> :\n          <div {...getRootProps({className: 'dropzone'})}>\n            <input {...getInputProps()} />\n            {content}\n          </div>\n      }\n    </section>\n  );\n}\nDropzone.whyDidYouRender = true;\nexport default React.memo(Dropzone);\n","module.exports = __webpack_public_path__ + \"static/media/xls.e3b573bf.svg\";","module.exports = __webpack_public_path__ + \"static/media/xlsx.99625958.svg\";","module.exports = __webpack_public_path__ + \"static/media/trash.3d4303e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/ZIP.f176b939.svg\";","module.exports = __webpack_public_path__ + \"static/media/RAR.a1b093e9.svg\";"],"sourceRoot":""}