{"version":3,"sources":["data/enums/Direction.ts","data/enums/PopupWindowType.ts","settings/Settings.ts","store/Actions.ts","store/editor/actionCreators.ts","utils/VirtualListUtil.ts","utils/NumberUtil.ts","utils/RectUtil.ts","data/enums/LabelType.ts","staticModels/EditorModel.ts","utils/UnitUtil.ts","data/enums/CustomCursorStyle.ts","utils/DrawUtil.ts","utils/PointUtil.ts","settings/RenderEngineConfig.ts","store/general/actionCreators.ts","data/enums/EventType.ts","store/selectors/EditorSelector.ts","utils/MouseEventUtil.ts","logic/render/BaseRenderEngine.ts","utils/RenderEngineUtil.ts","logic/render/RectRenderEngine.ts","utils/CanvasUtil.ts","logic/render/PointRenderEngine.ts","utils/LineUtil.ts","logic/render/PolygonRenderEngine.ts","data/enums/ContextType.ts","logic/render/PrimaryEditorRenderEngine.ts","logic/context/BaseContext.ts","staticModels/PlatformModel.ts","logic/actions/ImageActions.ts","logic/context/EditorContext.ts","store/selectors/GeneralSelector.ts","logic/actions/PopupActions.ts","logic/context/PopupContext.ts","logic/context/ContextManager.ts","logic/actions/EditorActions.ts","views/Common/VirtualList/VirtualList.tsx","logic/imageRepository/ImageLoadManager.ts","logic/imageRepository/ImageRepository.ts","utils/FileUtil.ts","data/enums/ProjectType.ts","views/EditorView/SideNavigationBar/ImagePreview/ImagePreview.tsx","views/EditorView/SideNavigationBar/ImagesList/ImagesList.tsx","data/info/LabelToolkitData.ts","views/Common/ImageButton/ImageButton.tsx","views/EditorView/SideNavigationBar/LabelInputField/LabelInputField.tsx","views/EditorView/SideNavigationBar/EmptyLabelList/EmptyLabelList.tsx","views/EditorView/SideNavigationBar/RectLabelsList/RectLabelsList.tsx","views/EditorView/SideNavigationBar/PointLabelsList/PointLabelsList.tsx","views/EditorView/SideNavigationBar/PolygonLabelsList/PolygonLabelsList.tsx","views/Common/TextButton/TextButton.tsx","views/EditorView/SideNavigationBar/LabelsToolkit/LabelsToolkit.tsx","views/EditorView/SideNavigationBar/SideNavigationBar.tsx","views/EditorView/VerticalEditorButton/VerticalEditorButton.tsx","utils/EditorUtil.ts","data/enums/AcceptedFileType.ts","views/EditorView/Editor/Editor.tsx","views/EditorView/BottomNavigationBar/BottomNavigationBar.tsx","views/EditorView/EditorContainer/EditorContainer.tsx","views/EditorView/StateBar/StateBar.tsx","views/Common/UnderlineTextButton/UnderlineTextButton.tsx","views/Common/TextInput/TextInput.tsx","views/EditorView/TopNavigationBar/TopNavigationBar.tsx","views/EditorView/EditorView.tsx","data/info/SocialMediaData.ts","data/info/EditorFeatureData.ts","views/MainView/ImagesDropZone/ImagesDropZone.tsx","data/enums/ExportFormatType.ts","views/MainView/MainView.tsx","views/PopupView/GenericYesNoPopup/GenericYesNoPopup.tsx","views/PopupView/LoadLabelNamesPopup/LoadLabelNamesPopup.tsx","utils/XMLSanitizerUtil.ts","utils/ExporterUtil.ts","logic/export/RectLabelsExporter.ts","data/export/AllExportFormatData.ts","data/export/PointExportFormatData.ts","logic/export/PointLabelsExport.ts","logic/export/AllLabelsExport.ts","data/export/PolygonExportFormatData.ts","logic/export/PolygonLabelsExporter.ts","data/export/RectExportFormatData.ts","views/PopupView/ExportLabelsPopup/ExportLabelPopup.tsx","views/PopupView/InsertLabelNamesPopup/InsertLabelNamesPopup.tsx","views/PopupView/ExitProjectPopup/ExitProjectPopup.tsx","views/PopupView/LoadMoreImagesPopup/LoadMoreImagesPopup.tsx","views/PopupView/PopupView.tsx","views/MobileMainView/MobileMainView.tsx","views/SizeItUpView/SizeItUpView.tsx","App.tsx","serviceWorker.ts","store/editor/reducer.ts","store/general/reducer.ts","store/index.ts","utils/PlatformUtil.ts","logic/initializer/AppInitializer.ts","index.tsx","configureStore.ts"],"names":["Direction","PopupWindowType","Settings","Object","classCallCheck","this","GITHUB_URL","MEDIUM_URL","PATREON_URL","TOP_NAVIGATION_BAR_HEIGHT_PX","BOTTOM_NAVIGATION_BAR_HEIGHT_PX","SIDE_NAVIGATION_BAR_WIDTH_CLOSED_PX","SIDE_NAVIGATION_BAR_WIDTH_OPEN_PX","TOOLKIT_TAB_HEIGHT_PX","EDITOR_MIN_WIDTH","EDITOR_MIN_HEIGHT","PRIMARY_COLOR","SECONDARY_COLOR","DARK_THEME_FIRST_COLOR","DARK_THEME_SECOND_COLOR","DARK_THEME_THIRD_COLOR","DARK_THEME_FORTH_COLOR","CANVAS_PADDING_WIDTH_PX","CROSS_HAIR_THICKNESS_PX","CROSS_HAIR_COLOR","RESIZE_HANDLE_DIMENSION_PX","RESIZE_HANDLE_HOVER_DIMENSION_PX","CLOSEABLE_POPUPS","LOAD_IMAGES","Action","updateProjectType","projectType","type","UPDATE_PROJECT_TYPE","payload","updateActiveImageIndex","activeImageIndex","UPDATE_ACTIVE_IMAGE_INDEX","updateActiveLabelNameIndex","activeLabelNameIndex","UPDATE_ACTIVE_LABEL_NAME_INDEX","updateLabelIndexByInfo","imageIndex","groupIndex","labelPointIndex","labelIndex","labelCheckd","UPDATE_LABEL_INDEX_BY_INFO","updateActiveLabelId","activeLabelId","UPDATE_ACTIVE_LABEL_ID","updateHighlightedLabelId","highlightedLabelId","UPDATE_HIGHLIGHTED_LABEL_ID","updateActiveLabelType","activeLabelType","UPDATE_ACTIVE_LABEL_TYPE","updateImageDataById","id","newImageData","UPDATE_IMAGE_DATA_BY_ID","addImageData","imageData","ADD_IMAGES_DATA","updateLabelNamesList","labelNames","UPDATE_LABEL_NAMES_LIST","updateFirstLabelCreatedFlag","firstLabelCreatedFlag","UPDATE_FIRST_LABEL_CREATED_FLAG","updateGroupList","groupName","UPDATE_GROUP_LIST","updateActiveGroupIndex","UPDATE_ACTIVE_GROUP_INDEX","findNextAvailableLabelIndex","FIND_NEXT_AVAILABLE_LABEL_INDEX","VirtualListUtil","createClass","key","value","listSize","childSize","childCount","columnCount","Math","floor","width","height","ceil","gridSize","sizeFromGrid","max","calculateGridSize","horizontalMargin","calculateContentSize","anchors","i","rowCount","anchor","x","y","push","NumberUtil","min","LabelType","RectUtil","rect","r1","r2","point","centerPoint","size","_objectSpread","containerRect","ratio","getRatio","innerRectHeight","innerRectWidth","inputRect","rectAnchor","delta","RIGHT","BOTTOM_RIGHT","BOTTOM","TOP_RIGHT","TOP","TOP_LEFT","LEFT","BOTTOM_LEFT","scale","position","isPointInside","snapValueToRange","EditorModel","canvas","mousePositionIndicator","cursor","primaryRenderingEngine","supportRenderingEngine","image","imageRectOnCanvas","imageScale","mousePositionOnCanvas","isLoading","CustomCursorStyle","UnitUtil","angleDeg","PI","angleRad","DrawUtil","getContext","clearRect","startPoint","endPoint","color","arguments","length","undefined","thickness","ctx","save","strokeStyle","lineWidth","lineCap","beginPath","moveTo","lineTo","stroke","restore","fillStyle","fill","fillRect","globalCompositeOperation","anchorPoint","radius","startAngleRad","deg2rad","endAngleRad","arc","startAngleDeg","endAngleDeg","closePath","text","textSize","bold","align","textAlign","textBaseline","font","fillText","round","random","hex","alpha","r","parseInt","slice","g","b","PointUtil","p1","p2","factor","sqrt","pow","RenderEngineConfig","lineThickness","lineActiveColor","lineInactiveColor","anchorSize","anchorHoverSize","suggestedAnchorDetectionSize","activeAnchorColor","inactiveAnchorColor","updateActivePopupType","activePopupType","UPDATE_ACTIVE_POPUP_TYPE","updateCustomCursorStyle","customCursorStyle","UPDATE_CUSTOM_CURSOR_STYLE","EventType","EditorSelector","store","getState","editor","projectName","imagesData","getActiveImageIndex","activeGroupIndex","groupList","getActiveGroupIndex","getImagesData","result","getActiveLabelId","_","find","getActiveImageData","labelRects","labelPoints","map","ele","labelPolygons","MouseEventUtil","event","MOUSE_DOWN","MOUSE_UP","MOUSE_MOVE","BaseRenderEngine","labelType","data","getEventType","mouseMoveHandler","mouseUpHandler","mouseDownHandler","RenderEngineUtil","activeImageRectOnCanvas","RenderEngineUtil_objectSpread","canvasSize","polygon","transferPointFromImageToCanvas","add","multiply","activeImageScale","transferPointFromCanvasToImage","subtract","translate","scaleRect","dispatch","DEFAULT","CANCEL","setValueBetweenPixels","topLeft","bottomRight","topLeftBetweenPixels","setPointBetweenPixels","bottomRightBetweenPixels","RectRenderEngine","_BaseRenderEngine","_this","possibleConstructorReturn","getPrototypeOf","call","config","startCreateRectPoint","startResizeRectAnchor","isMouseOverImage","isMouseOverCanvas","rectUnderMouse","getRectUnderMouse","calculateRectRelativeToActiveImage","anchorUnderMouse","getAnchorUnderMouseByRect","startRectResize","getHighlightedLabelId","startRectCreation","mousePositionSnapped","snapPointToRect","equals","minX","minY","maxX","maxY","addRectLabel","activeLabelRect","getActiveRectLabel","startAnchorPosition","resizeRect","scaledRect","produce","draft","labelRect","RectRenderEngine_objectSpread","endRectTransformation","activeLabelIndex","getActiveLabelNameIndex","uuidv1","checked","RECTANGLE","inherits","_this2","forEach","drawActiveRect","drawInactiveRect","drawCurrentlyCreatedRect","updateCursorStyle","mousePosition","imageRect","activeRect","activeRectBetweenPixels","setRectBetweenPixels","drawRect","rectOnImage","transferRectFromCanvasToImage","renderRect","endAnchorPositionSnapped","isActive","_this3","rectBetweenPixels","lineColor","mapRectToAnchors","center","handleRect","getRectWithCenterAndSize","handleRectBetweenPixels","drawRectWithFill","getAnchorUnderMouse","MOVE","wrapDefaultCursorStyleInCancel","style","activeRectLabel","isMouseOverRectEdges","outerRectDelta","outerRect","expand","innerRectDelta","innerRect","rectAnchors","anchorRect","activatedAnchor","CanvasUtil","canvasRect","getBoundingClientRect","clientX","left","clientY","top","PointRenderEngine","transformInProgress","addPointLabel","existedLabelIndexs","getAllPointLabelIndex","labelsLength","getLabelNameLength","labelPoint","storeNF","addNotification","message","insert","container","animationIn","animationOut","dismiss","duration","POINT","getLabelPointUnderMouse","pointOnCanvas","pointBetweenPixels","pointOnImage","isInProgress","activeLabelPoint","getActivePointLabel","pointSnapped","PointRenderEngine_objectSpread","renderPoint","handleColor","getSize","LineUtil","l","p","start","end","abs","ContextType","PolygonRenderEngine","activePath","resizeAnchorIndex","suggestedAnchorPositionOnCanvas","suggestedAnchorIndexInPolygon","POLYGON","isCreationInProgress","isMouseOverAnchor","addLabelAndFinishCreation","updateActivelyCreatedLabel","polygonUnderMouse","getPolygonUnderMouse","anchorIndex","vertices","reduce","indexUnderMouse","index","anchorOnCanvas","startExistingLabelResize","addSuggestedAnchorToPolygonLabel","isResizeInProgress","endExistingLabelResize","labelPolygon","pathOnCanvas","transferPolygonFromImageToCanvas","linesOnCanvas","mapPointsToLines","concat","j","isMouseOverLine","getCenter","discardSuggestedPoint","drawExistingLabels","drawActivelyCreatedLabel","drawActivelyResizeLabel","drawSuggestedAnchor","CLOSE","ADD","standardizedPoints","path","lines","drawPolygonWithFill","hexToRGB","line","drawLine","mapPointsToAnchors","_this4","activeLabelPolygon","getActivePolygonLabel","snappedMousePosition","polygonOnCanvas","drawPolygon","_this5","_this6","suggestedAnchorRect","polygonOnImage","transferPolygonFromCanvasToImage","addPolygonLabel","finishLabelCreation","labelId","applyResizeToPolygonLabel","_this7","activeLabel","PolygonRenderEngine_objectSpread","_this8","newAnchorPositionOnImage","arr","newItem","toConsumableArray","mouse","hoverReach","getDistanceFromLine","points","_this9","PrimaryEditorRenderEngine","drawImage","BaseContext","actions","PlatformModel","mobileDeviceData","isMac","isSafari","isFirefox","ImageActions","currentImageIndex","imageCount","EditorContext","_BaseContext","apply","keyCombo","action","editorData","EditorActions","getEditorData","fullRender","cancelLabelCreation","getPreviousImage","getNextImage","GeneralSelector","general","activeContext","PopupActions","ContextManager","restoreCtx","PopupContext","popupType","getActivePopupType","includes","close","activeCombo","window","addEventListener","onDown","onUp","context","activeCtx","getActiveContext","contextHistory","updateCtx","UPDATE_CONTEXT","EDITOR","getActions","POPUP","pop","keyCode","getKeyCodeFromEvent","isInCombo","addToCombo","execute","removeFromCombo","hotKey","matchCombo","indexOf","splice","combo1","combo2","mountSupportRenderingEngine","clearCanvas","render","status","activeKeyCombo","getActiveCombo","canvasPaddingWidth","fitInsideRectWithRatio","calculateImageRect","calculateImageScale","display","getMousePositionOnCanvasFromEvent","EditorActions_objectSpread","innerHTML","resizeCanvas","newCanvasSize","VirtualList","_React$Component","props","contentSize","childAnchors","scrollbars","loading","calculate","calculateAnchorPoints","getVirtualListStyle","getVirtualListContentStyle","onScrollStart","setState","isScrolling","onScrollStop","onScroll","values","viewportRect","scrollLeft","scrollTop","getChildren","_this$state","state","_this$props","overScanHeight","overScan","viewportRectWithOverScan","children","childRect","assign","isVisible","intersect","childStyle","childRender","onUpdate","setTimeout","localStorage","setItem","document","getElementsByClassName","offsetHeight","offsetWidth","getItem","newIndexs","getAttribute","filter","itme","idx","localData","JSON","parse","fileData","name","evt_click","MouseEvent","bubbles","view","querySelectorAll","dispatchEvent","item","evt_up","evt_down","_this$props2","nextProps","nextState","nextContext","getValues","displayContent","react_default","a","createElement","className","lib_default","ref","onScrollFrame","autoHide","React","Component","ImageLoadManager","fx","queue","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","abrupt","sent","stop","runQueue","run","_runQueue","_callee2","_context2","isRunning","runTasks","_runTasks","_callee3","_context3","shift","ImageRepository","uuid","repository","FileUtil","newfileData","loadStatus","onSuccess","onFailure","Promise","resolve","reject","url","URL","createObjectURL","Image","src","onload","onerror","reader","FileReader","readAsText","onloadend","evt","contents","target","split","ProjectType","ImagePreview","loadImage","_ref","saveLoadedImagePartial","getById","saveLoadedImage","handleLoadImageError","_x","_x2","ImagePreview_objectSpread","getStyle","imageRatio","imagePosition","getClassName","classNames","selected","isSelected","addAndRun","isChecked","onClick","data-index","draggable","alt","react_spinners_dist","sizeUnit","mapDispatchToProps","connect","ImagesList","imagesListRef","updateListSize","listBoundingBox","onClickHandler","renderImagePreview","SideNavigationBar_ImagePreview_ImagePreview","some","removeEventListener","switchCtx","LEFT_NAVBAR","VirtualList_VirtualList","LabelToolkitData","NAME","headerText","imageSrc","imageAlt","ImageButton","padding","href","isDisabled","externalClassName","imagePadding","buttonStyle","ImageButton_objectSpread","imageStyle","maxWidth","maxHeight","react","active","disabled","stopPropagation","rel","LabelInputField","dropdownOptionHeight","dropdownOptionCount","dropdownMargin","dropdownLabel","dropdown","openDropdown","isOpen","closeDropdown","clientRect","dropDownRect","getDropdownStyle","options","innerHeight","bottom","getDropdownOptions","option","onSelectLabel","mouseEnterHandler","mouseLeaveHandler","animate","requestAnimationFrame","loaded","highlighted","isHighlighted","onDelete","onCheck","onMouseEnter","onMouseLeave","onChange","ImageButton_ImageButton_ImageButton","getFirstLabelCreatedFlag","labelBefore","labelAfter","before","Fragment","after","listStyle","listStyleContent","deleteRectLabelById","labelRectId","currentLabel","checkRectLabelById","RectLabelsList_objectSpread","updateRectLabel","labelNameIndex","onClickCapture","SideNavigationBar_EmptyLabelList_EmptyLabelList","SideNavigationBar_LabelInputField_LabelInputField","deletePointLabelById","labelPointId","checkPointLabelById","PointLabelsList_objectSpread","updatePointLabel","alreadyFlag","deletePolygonLabelById","labelPolygonId","checkPolygonLabelById","PolygonLabelsList_objectSpread","updatePolygonLabel","TextButton","label","LabelsToolkit","labelsToolkitRef","tabs","updateToolkitSize","headerClickHandler","activeTab","renderChildren","currentGroupIndex","tabData","baseClass","header","content","SideNavigationBar_RectLabelsList_RectLabelsList","activeTabContentHeight","SideNavigationBar_PointLabelsList_PointLabelsList","SideNavigationBar_PolygonLabelsList_PolygonLabelsList","buttonOnClickHandle","renderChildrenWrapper","TextButton_TextButton_TextButton","deleteGroupList","IMAGE_RECOGNITION","RIGHT_NAVBAR","DELETE_GROUP_LIST","getActiveLabelType","SideNavigationBar","direction","isWithContext","renderContent","renderCompanion","right","with-context","closed","VerticalEditorButton","EditorUtil","getIndicator","cursorStyle","RESIZE","getCursorStyle","move","resize","cancel","AcceptedFileType","Editor","setActiveImage","updateModelAndRender","setLoadingStatus","console","log","calculateAllCharacteristics","update","updateMousePositionIndicator","mountEventListeners","mountRenderEngines","unmountEventListeners","prevProps","prevState","snapshot","swapSupportRenderingEngine","onContextMenu","preventDefault","loadDataFromLocalStorge","LOAD_DATA_FROM_LOCALSTORGE","totalImageCount","windowSize","_useState","useState","_useState2","slicedToArray","leftTabStatus","setLeftTabStatus","_useState3","_useState4","rightTabStatus","setRightTabStatus","calculateEditorSize","leftTabWidth","rightTabWidth","leftSideBarButtonOnClick","rightSideBarButtonOnClick","useEffect","SideNavigationBar_SideNavigationBar_SideNavigationBar","VerticalEditorButton_VerticalEditorButton_VerticalEditorButton","SideNavigationBar_ImagesList_ImagesList","onMouseDown","EditorView_Editor_Editor","EditorView_BottomNavigationBar_BottomNavigationBar","SideNavigationBar_LabelsToolkit_LabelsToolkit","pointLabeledImages","currentCount","currentImage","rectLabeledImages","polygonLabeledImages","getProgress","UnderlineTextButton","under","over","TextInput","isPassword","onFocus","inputStyle","labelStyle","barStyle","htmlFor","updateProjectName","UPDATE_PROJECT_NAME","EditorView_StateBar_StateBar","Common_TextInput_TextInput","toLowerCase","replace","setSelectionRange","UnderlineTextButton_UnderlineTextButton_UnderlineTextButton","EXPORT_LABELS","withPopup","EditorView_TopNavigationBar_TopNavigationBar","EditorView_EditorContainer_EditorContainer","SocialMediaData","displayName","tooltipMessage","EditorFeatureData","displayText","ExportFormatType","inputRef","useRef","onDrop","useCallback","acceptedFiles","file","onabort","img","readAsDataURL","_useDropzone","useDropzone","accept","IMAGE","getRootProps","getInputProps","current","click","marginRight","OBJECT_DETECTION","mapFileDataToImageData","marginTop","clear","e","files","jsonData","_loop","imageName","saveImageData","people","groupData","pointList","chunk","pose_keypoints_2d","groupTmp","stringify","title","multiple","MainView","projectInProgress","setProjectInProgress","projectCanceled","setProjectCanceled","withStyles","theme","tooltip","backgroundColor","boxShadow","shadows","fontSize","Tooltip","InProgress","Canceled","MainView_ImagesDropZone_ImagesDropZone","location","GenericYesNoPopup","acceptLabel","onAccept","skipAcceptButton","disableAcceptButton","rejectLabel","onReject","skipRejectButton","disableRejectButton","setMountStatus","labelsList","setLabelsList","invalidFileLoadedStatus","setInvalidFileLoadedStatus","TEXT","loadLabelsList","GenericYesNoPopup_GenericYesNoPopup_GenericYesNoPopup","INSERT_LABEL_NAMES","XMLSanitizerUtil","input","ExporterUtil","getProjectName","date","moment","format","RectLabelsExporter","exportFormatType","YOLO","exportAsYOLO","VOC","exportAsVOC","CSV","exportAsCSV","zip","JSZip","fileContent","wrapRectLabelsIntoYOLO","fileName","error","Error","generateAsync","then","saveAs","getExportFileName","toFixed","join","wrapImageIntoVOC","labelNamesList","getLabelNames","labels","wrapRectLabelsIntoVOC","sanitize","wrapRectLabelsIntoCSV","imageLabelData","blob","Blob","AllExportFormatData","PointExportFormatData","PointLabelsExporter","AllLabelsExporter","exportAsJson","mapImagesDataToVGGObject","mapImageDataToVGGFileData","regionsDataArray","mapImageDataToVGG","orderArray","tempArray","is_checked","all_points","temp","sort","peopleDataArray","personData","label_name","validPointLabelsArray","getValidPointLabelsArray","pointsData","validLabels","group","PolygonExportFormatData","VGG_JSON","PolygonLabelsExporter","exportAsVGGJson","regionsData","fileref","filename","base64_img_data","file_attributes","regions","getValidPolygonLabels","shape_attributes","mapPolygonToVGG","region_attributes","all_points_x","all_points_y","RectExportFormatData","ALL","exportLabelType","setExportLabelType","setExportFormatType","getOptions","exportFormatData","entry","export","setLabelNames","addHandle","newLabelNames","InsertLabelNamesPopup_objectSpread","defineProperty","labelInputs","keys","deleteHandle","extractLabelNamesList","LOAD_LABEL_NAMES","updateImageData","UPDATE_IMAGES_DATA","PopupView_LoadLabelNamesPopup_LoadLabelNamesPopup","PopupView_ExportLabelsPopup_ExportLabelPopup","PopupView_InsertLabelNamesPopup_InsertLabelNamesPopup","EXIT_PROJECT","PopupView_ExitProjectPopup_ExitProjectPopup","PopupView_LoadMoreImagesPopup_LoadMoreImagesPopup","selectPopup","scrollPosition","setScrollPosition","getEditorFeatureTiles","features","topNavigationBar","Hide","Show","firstStage","secondStage","thirdStage","fourthStage","getSocialMediaButtons","SizeItUpView","manufacturer","os","views_MobileMainView_MobileMainView","SizeItUpView_SizeItUpView_SizeItUpView","views_EditorView_EditorView","views_MainView_MainView","views_PopupView_PopupView","dist_default","Boolean","hostname","match","initialState","rootReducer","combineReducers","UPDATE_WINDOW_SIZE","reducer_objectSpread","_action$payload","addImagesData","newData","newGroupList","activeGroup","newActiveGroupIndex","findIndex","allIndex","Array","v","k","difference","PlatformUtil","userAgent","mobileDetect","MobileDetect","mobile","browser","AppInitializer","handleResize","detectDeviceParams","init","innerWidth","navigator","getMobileDeviceData","__webpack_require__","d","__webpack_exports__","createStore","inti","ReactDOM","es","src_App_0","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dc22ad7e.chunk.js","sourcesContent":["export enum Direction {\n    TOP = \"TOP\",\n    BOTTOM = \"BOTTOM\",\n    LEFT = \"LEFT\",\n    RIGHT = \"RIGHT\",\n    TOP_RIGHT = \"TOP_RIGHT\",\n    TOP_LEFT = \"TOP_LEFT\",\n    BOTTOM_RIGHT = \"BOTTOM_RIGHT\",\n    BOTTOM_LEFT = \"BOTTOM_LEFT\",\n    CENTER = \"CENTER\"\n}","export enum PopupWindowType {\n    LOAD_LABEL_NAMES = \"LOAD_LABEL_NAMES\",\n    LOAD_IMAGES = \"LOAD_IMAGES\",\n    EXPORT_LABELS = \"EXPORT_LABELS\",\n    INSERT_LABEL_NAMES = 'INSERT_LABEL_NAMES',\n    EXIT_PROJECT = 'EXIT_PROJECT'\n}","import { PopupWindowType } from \"../data/enums/PopupWindowType\";\n\nexport class Settings {\n  public static readonly GITHUB_URL: string = \"https://github.com/SkalskiP\";\n  public static readonly MEDIUM_URL: string = \"https://medium.com/@piotr.skalski92\";\n  public static readonly PATREON_URL: string = \"https://www.patreon.com/make_sense\";\n\n  public static readonly TOP_NAVIGATION_BAR_HEIGHT_PX: number = 35;\n  public static readonly BOTTOM_NAVIGATION_BAR_HEIGHT_PX: number = 45 + 1;\n  public static readonly SIDE_NAVIGATION_BAR_WIDTH_CLOSED_PX: number = 20 + 1;\n  public static readonly SIDE_NAVIGATION_BAR_WIDTH_OPEN_PX: number =\n    Settings.SIDE_NAVIGATION_BAR_WIDTH_CLOSED_PX + 300 + 1;\n  public static readonly TOOLKIT_TAB_HEIGHT_PX: number = 40;\n\n  public static readonly EDITOR_MIN_WIDTH: number = 900;\n  public static readonly EDITOR_MIN_HEIGHT: number = 500;\n\n  public static readonly PRIMARY_COLOR: string = \"#2af598\";\n  public static readonly SECONDARY_COLOR: string = \"#009efd\";\n\n  public static readonly DARK_THEME_FIRST_COLOR: string = \"#171717\";\n  public static readonly DARK_THEME_SECOND_COLOR: string = \"#C9FF2F\";\n  public static readonly DARK_THEME_THIRD_COLOR: string = \"#4c4c4c\";\n  public static readonly DARK_THEME_FORTH_COLOR: string = \"#252f35\";\n\n  public static readonly CANVAS_PADDING_WIDTH_PX: number = 20;\n  public static readonly CROSS_HAIR_THICKNESS_PX: number = 1;\n  public static readonly CROSS_HAIR_COLOR: string = \"#fff\";\n\n  public static readonly RESIZE_HANDLE_DIMENSION_PX: number = 6;\n  public static readonly RESIZE_HANDLE_HOVER_DIMENSION_PX = 16;\n\n  public static readonly CLOSEABLE_POPUPS: PopupWindowType[] = [\n    PopupWindowType.LOAD_IMAGES,\n    PopupWindowType.LOAD_IMAGES,\n    PopupWindowType.LOAD_IMAGES,\n  ];\n}\n","export enum Action {\n  UPDATE_PROJECT_TYPE = '@@UPDATE_PROJECT_TYPE',\n  UPDATE_PROJECT_NAME = '@@UPDATE_PROJECT_NAME',\n  UPDATE_ACTIVE_IMAGE_INDEX = '@@UPDATE_ACTIVE_IMAGE_INDEX',\n  UPDATE_IMAGE_DATA_BY_ID = '@@UPDATE_IMAGE_DATA_BY_ID',\n  UPDATE_GROUP_DATA_BY_INDEX = '@@UPDATE_GROUP_DATA_BY_INDEX',\n  ADD_IMAGES_DATA = '@@ADD_IMAGES_DATA',\n  UPDATE_IMAGES_DATA = '@@UPDATE_IMAGES_DATA',\n  UPDATE_WINDOW_SIZE = '@@UPDATE_WINDOW_SIZE',\n  UPDATE_ACTIVE_POPUP_TYPE = '@@UPDATE_ACTIVE_POPUP_TYPE',\n  UPDATE_ACTIVE_LABEL_NAME_INDEX = '@@UPDATE_ACTIVE_LABEL_NAME_INDEX',\n  UPDATE_ACTIVE_LABEL_TYPE = '@@UPDATE_ACTIVE_LABEL_TYPE',\n  UPDATE_ACTIVE_LABEL_ID = '@@UPDATE_ACTIVE_LABEL_ID',\n  UPDATE_HIGHLIGHTED_LABEL_ID = '@@UPDATE_HIGHLIGHTED_LABEL_ID',\n  UPDATE_LABEL_NAMES_LIST = '@@UPDATE_LABEL_NAMES_LIST',\n  UPDATE_FIRST_LABEL_CREATED_FLAG = '@@UPDATE_FIRST_LABEL_CREATED_FLAG',\n  UPDATE_CUSTOM_CURSOR_STYLE = '@@UPDATE_CUSTOM_CURSOR_STYLE',\n  UPDATE_CONTEXT = '@@UPDATE_CONTEXT',\n  UPDATE_GROUP_LIST = '@@UPDATE_GROUP_LIST',\n  UPDATE_ACTIVE_GROUP_INDEX = '@@UPDATE_ACTIVE_GROUP_INDEX',\n  FIND_NEXT_AVAILABLE_LABEL_INDEX = '@@FIND_NEXT_AVAILABLE_LABEL_INDEX',\n  DELETE_GROUP_LIST = '@@DELETE_GROUP_LIST',\n  LOAD_DATA_FROM_LOCALSTORGE = '@@LOAD_DATA_FROM_LOCALSTORGE',\n  UPDATE_LABEL_INDEX_BY_INFO = '@@UPDATE_LABEL_INDEX_BY_INFO',\n}\n","import { ProjectType } from '../../data/enums/ProjectType';\nimport { EditorActionTypes, ImageData } from './types';\nimport { Action } from '../Actions';\nimport { LabelType } from '../../data/enums/LabelType';\n\nexport function updateProjectType(projectType: ProjectType): EditorActionTypes {\n  return {\n    type: Action.UPDATE_PROJECT_TYPE,\n    payload: {\n      projectType,\n    },\n  };\n}\n\nexport function updateProjectName(projectName: string): EditorActionTypes {\n  return {\n    type: Action.UPDATE_PROJECT_NAME,\n    payload: {\n      projectName,\n    },\n  };\n}\n\nexport function updateActiveImageIndex(activeImageIndex: number): EditorActionTypes {\n  return {\n    type: Action.UPDATE_ACTIVE_IMAGE_INDEX,\n    payload: {\n      activeImageIndex,\n    },\n  };\n}\n\nexport function updateActiveLabelNameIndex(activeLabelNameIndex: number): EditorActionTypes {\n  return {\n    type: Action.UPDATE_ACTIVE_LABEL_NAME_INDEX,\n    payload: {\n      activeLabelNameIndex,\n    },\n  };\n}\n\nexport function updateLabelIndexByInfo(\n  imageIndex: number,\n  groupIndex: number,\n  labelPointIndex: number,\n  labelIndex: number,\n  labelCheckd: boolean\n): EditorActionTypes {\n  return {\n    type: Action.UPDATE_LABEL_INDEX_BY_INFO,\n    payload: {\n      imageIndex,\n      groupIndex,\n      labelPointIndex,\n      labelIndex,\n      labelCheckd,\n    },\n  };\n}\n\nexport function updateActiveLabelId(activeLabelId: string): EditorActionTypes {\n  return {\n    type: Action.UPDATE_ACTIVE_LABEL_ID,\n    payload: {\n      activeLabelId,\n    },\n  };\n}\n\nexport function updateHighlightedLabelId(highlightedLabelId: string): EditorActionTypes {\n  return {\n    type: Action.UPDATE_HIGHLIGHTED_LABEL_ID,\n    payload: {\n      highlightedLabelId,\n    },\n  };\n}\n\nexport function updateActiveLabelType(activeLabelType: LabelType): EditorActionTypes {\n  return {\n    type: Action.UPDATE_ACTIVE_LABEL_TYPE,\n    payload: {\n      activeLabelType,\n    },\n  };\n}\n\nexport function updateImageDataById(id: string, newImageData: ImageData): EditorActionTypes {\n  return {\n    type: Action.UPDATE_IMAGE_DATA_BY_ID,\n    payload: {\n      id,\n      newImageData,\n    },\n  };\n}\n\nexport function addImageData(imageData: ImageData[]): EditorActionTypes {\n  return {\n    type: Action.ADD_IMAGES_DATA,\n    payload: {\n      imageData,\n    },\n  };\n}\n\nexport function updateImageData(imageData: ImageData[]): EditorActionTypes {\n  return {\n    type: Action.UPDATE_IMAGES_DATA,\n    payload: {\n      imageData,\n    },\n  };\n}\n\nexport function updateLabelNamesList(labelNames: string[]) {\n  return {\n    type: Action.UPDATE_LABEL_NAMES_LIST,\n    payload: {\n      labelNames,\n    },\n  };\n}\n\nexport function updateFirstLabelCreatedFlag(firstLabelCreatedFlag: boolean) {\n  return {\n    type: Action.UPDATE_FIRST_LABEL_CREATED_FLAG,\n    payload: {\n      firstLabelCreatedFlag,\n    },\n  };\n}\n\nexport function updateGroupList(groupName: string) {\n  return {\n    type: Action.UPDATE_GROUP_LIST,\n    payload: {\n      groupName,\n    },\n  };\n}\nexport function updateActiveGroupIndex(groupIndex: number) {\n  return {\n    type: Action.UPDATE_ACTIVE_GROUP_INDEX,\n    payload: {\n      groupIndex,\n    },\n  };\n}\nexport function findNextAvailableLabelIndex() {\n  return {\n    type: Action.FIND_NEXT_AVAILABLE_LABEL_INDEX,\n  };\n}\n\nexport function deleteGroupList(groupIndex: number) {\n  return {\n    type: Action.DELETE_GROUP_LIST,\n    payload: {\n      groupIndex,\n    },\n  };\n}\n\nexport function loadDataFromLocalStorge() {\n  return {\n    type: Action.LOAD_DATA_FROM_LOCALSTORGE,\n  };\n}\n","import {ISize} from \"../interfaces/ISize\";\nimport {IPoint} from \"../interfaces/IPoint\";\n\nexport class VirtualListUtil {\n    public static calculateGridSize(listSize: ISize, childSize: ISize, childCount: number): ISize {\n        const columnCount: number = Math.floor(listSize.width / childSize.width);\n        const rowCount: number = Math.ceil(childCount / columnCount);\n        return {width: columnCount, height: rowCount};\n    }\n\n    public static calculateContentSize(listSize: ISize, childSize: ISize, gridSize: ISize): ISize {\n        const sizeFromGrid:ISize = {\n            width: childSize.width * gridSize.width,\n            height: childSize.height * gridSize.height\n        };\n\n        return {\n            width: Math.max(listSize.width, sizeFromGrid.width),\n            height: sizeFromGrid.height\n        }\n    }\n\n    public static calculateAnchorPoints(listSize: ISize, childSize: ISize, childCount: number): IPoint[] {\n        const gridSize: ISize = VirtualListUtil.calculateGridSize(listSize, childSize, childCount);\n        const contentWrapperSize: ISize = VirtualListUtil.calculateContentSize(listSize, childSize, gridSize);\n        const horizontalMargin = (contentWrapperSize.width - gridSize.width * childSize.width) / (gridSize.width + 1);\n\n        let anchors = [];\n        for (let i = 0; i < childCount; i++) {\n            const rowCount: number = Math.floor(i / gridSize.width);\n            const columnCount: number = i % gridSize.width;\n\n            const anchor: IPoint = {\n                x: rowCount * horizontalMargin + columnCount * childSize.width,\n                y: rowCount * childSize.height\n            };\n            anchors.push(anchor);\n        }\n        return anchors;\n    }\n}","export class NumberUtil {\n    public static snapValueToRange(value: number, min: number, max: number): number {\n        if (value < min)\n            return min;\n        if (value > max)\n            return max;\n\n        return value;\n    }\n}","import {IRect} from \"../interfaces/IRect\";\nimport {IPoint} from \"../interfaces/IPoint\";\nimport {ISize} from \"../interfaces/ISize\";\nimport {RectAnchor} from \"../data/RectAnchor\";\nimport {NumberUtil} from \"./NumberUtil\";\nimport {Direction} from \"../data/enums/Direction\";\n\nexport class RectUtil {\n    public static getRatio(rect: IRect): number {\n        if (!rect) return null;\n\n        return rect.width/rect.height\n    }\n\n    public static intersect(r1: IRect, r2: IRect) {\n        if (!r1 || !r2) return null;\n        return !(\n            r2.x > r1.x + r1.width ||\n            r2.x + r2.width < r1.x ||\n            r2.y > r1.y + r1.height ||\n            r2.y + r2.height < r1.y\n        );\n    }\n\n    public static isPointInside(rect: IRect, point: IPoint): boolean {\n        if (!rect || !point) return null;\n        return (\n            rect.x < point.x &&\n            rect.x + rect.width > point.x &&\n            rect.y < point.y &&\n            rect.y + rect.height > point.y\n        )\n    }\n\n    public static getRectWithCenterAndSize(centerPoint: IPoint, size: ISize): IRect {\n        return {\n            x: centerPoint.x - 0.5 * size.width,\n            y: centerPoint.y - 0.5 * size.height,\n            ...size\n        }\n    }\n\n    public static fitInsideRectWithRatio(containerRect: IRect, ratio: number): IRect {\n        const containerRectRatio = RectUtil.getRatio(containerRect);\n        if (containerRectRatio < ratio) {\n            const innerRectHeight = containerRect.width / ratio;\n            return {\n                x: containerRect.x,\n                y: containerRect.y + (containerRect.height - innerRectHeight) / 2,\n                width: containerRect.width,\n                height: innerRectHeight\n            }\n        }\n        else {\n            const innerRectWidth = containerRect.height * ratio;\n            return {\n                x: containerRect.x + (containerRect.width - innerRectWidth) / 2,\n                y: containerRect.y,\n                width: innerRectWidth,\n                height: containerRect.height\n            }\n        }\n    }\n\n    public static resizeRect(inputRect: IRect, rectAnchor: Direction, delta): IRect {\n        const rect: IRect = {...inputRect};\n        switch (rectAnchor) {\n            case Direction.RIGHT:\n                rect.width += delta.x;\n                break;\n            case Direction.BOTTOM_RIGHT:\n                rect.width += delta.x;\n                rect.height += delta.y;\n                break;\n            case Direction.BOTTOM:\n                rect.height += delta.y;\n                break;\n            case Direction.TOP_RIGHT:\n                rect.width += delta.x;\n                rect.y += delta.y;\n                rect.height -= delta.y;\n                break;\n            case Direction.TOP:\n                rect.y += delta.y;\n                rect.height -= delta.y;\n                break;\n            case Direction.TOP_LEFT:\n                rect.x += delta.x;\n                rect.width -= delta.x;\n                rect.y += delta.y;\n                rect.height -= delta.y;\n                break;\n            case Direction.LEFT:\n                rect.x += delta.x;\n                rect.width -= delta.x;\n                break;\n            case Direction.BOTTOM_LEFT:\n                rect.x += delta.x;\n                rect.width -= delta.x;\n                rect.height += delta.y;\n                break;\n        }\n\n        if (rect.width < 0)  {\n            rect.x = rect.x + rect.width;\n            rect.width = - rect.width;\n        }\n\n        if (rect.height < 0)  {\n            rect.y = rect.y + rect.height;\n            rect.height = - rect.height;\n        }\n\n        return rect;\n    }\n\n    public static translate(rect: IRect, delta: IPoint): IRect {\n        return {\n            ...rect,\n            x: rect.x + delta.x,\n            y: rect.y + delta.y\n        }\n    }\n\n    public static expand(rect: IRect, delta: IPoint): IRect {\n        return {\n            x: rect.x - delta.x,\n            y: rect.y - delta.y,\n            width: rect.width + 2 * delta.x,\n            height: rect.height + 2 * delta.y\n        }\n    }\n\n    public static scaleRect(rect:IRect, scale: number): IRect {\n        return {\n            x: rect.x * scale,\n            y: rect.y * scale,\n            width: rect.width * scale,\n            height: rect.height * scale\n        }\n    }\n\n    public static mapRectToAnchors(rect: IRect): RectAnchor[] {\n        return [\n            {type: Direction.TOP_LEFT, position: {x: rect.x, y: rect.y}},\n            {type: Direction.TOP, position: {x: rect.x + 0.5 * rect.width, y: rect.y}},\n            {type: Direction.TOP_RIGHT, position: {x: rect.x + rect.width, y: rect.y}},\n            {type: Direction.LEFT, position: {x: rect.x, y: rect.y + 0.5 * rect.height}},\n            {type: Direction.RIGHT, position: {x: rect.x + rect.width, y: rect.y + 0.5 * rect.height}},\n            {type: Direction.BOTTOM_LEFT, position: {x: rect.x, y: rect.y + rect.height}},\n            {type: Direction.BOTTOM, position: {x: rect.x + 0.5 * rect.width, y: rect.y + rect.height}},\n            {type: Direction.BOTTOM_RIGHT, position: {x: rect.x + rect.width, y: rect.y + rect.height}}\n        ]\n    }\n\n    public static snapPointToRect(point: IPoint, rect: IRect): IPoint {\n        if (RectUtil.isPointInside(rect, point))\n            return point;\n\n        return {\n            x: NumberUtil.snapValueToRange(point.x, rect.x, rect.x + rect.width),\n            y: NumberUtil.snapValueToRange(point.y, rect.y, rect.y + rect.height)\n        }\n    }\n}","export enum LabelType {\n  NAME = \"NAME\",\n  POINT = \"POINT\",\n  RECTANGLE = \"RECTANGLE\",\n  POLYGON = \"POLYGON\",\n  ALL = \"ALL\",\n}\n","import { PrimaryEditorRenderEngine } from \"../logic/render/PrimaryEditorRenderEngine\";\nimport { BaseRenderEngine } from \"../logic/render/BaseRenderEngine\";\nimport { IRect } from \"../interfaces/IRect\";\nimport { IPoint } from \"../interfaces/IPoint\";\n\nexport class EditorModel {\n  public static canvas: HTMLCanvasElement;\n  public static mousePositionIndicator: HTMLDivElement;\n  public static cursor: HTMLDivElement;\n  public static primaryRenderingEngine: PrimaryEditorRenderEngine;\n  public static supportRenderingEngine: BaseRenderEngine;\n  public static image: HTMLImageElement;\n  public static imageRectOnCanvas: IRect;\n  public static imageScale: number; // Image / Canvas\n  public static mousePositionOnCanvas: IPoint;\n  public static isLoading: boolean = false;\n}\n","export class UnitUtil {\n\n    public static deg2rad(angleDeg:number) {\n        return(angleDeg * Math.PI/180);\n    }\n\n    public static rad2deg(angleRad:number) {\n        return(angleRad * 180/Math.PI);\n    }\n}","export enum CustomCursorStyle {\n    DEFAULT = \"DEFAULT\",\n    MOVE = \"MOVE\",\n    RESIZE = \"RESIZE\",\n    ADD = \"ADD\",\n    CANCEL = \"CANCEL\",\n    CLOSE = \"CLOSE\"\n}","import { IPoint } from \"../interfaces/IPoint\";\nimport { IRect } from \"../interfaces/IRect\";\nimport { UnitUtil } from \"./UnitUtil\";\n\nexport class DrawUtil {\n  public static clearCanvas(canvas: HTMLCanvasElement): void {\n    let ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n  }\n\n  public static drawLine(\n    canvas: HTMLCanvasElement,\n    startPoint: IPoint,\n    endPoint: IPoint,\n    color: string = \"#111111\",\n    thickness: number = 1\n  ): void {\n    let ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = thickness;\n    ctx.lineCap = \"round\";\n    ctx.beginPath();\n    ctx.moveTo(startPoint.x, startPoint.y);\n    ctx.lineTo(endPoint.x + 1, endPoint.y + 1);\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  public static drawRect(\n    canvas: HTMLCanvasElement,\n    rect: IRect,\n    color: string = \"#fff\",\n    thickness: number = 1\n  ): void {\n    let ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = thickness;\n    ctx.beginPath();\n    ctx.rect(rect.x, rect.y, rect.width, rect.height);\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  public static drawRectWithFill(\n    canvas: HTMLCanvasElement,\n    rect: IRect,\n    color: string = \"#ADCC53\"\n  ): void {\n    let ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\n    ctx.save();\n    ctx.fillStyle = color;\n    ctx.beginPath();\n    ctx.rect(rect.x, rect.y, rect.width, rect.height);\n    ctx.fill();\n    ctx.restore();\n  }\n\n  public static shadeEverythingButRect(\n    canvas: HTMLCanvasElement,\n    rect: IRect,\n    color: string = \"rgba(0, 0, 0, 0.7)\"\n  ): void {\n    let ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\n    ctx.save();\n    ctx.fillStyle = color;\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    ctx.globalCompositeOperation = \"destination-out\";\n    ctx.fillRect(rect.x, rect.y, rect.width, rect.height);\n    ctx.restore();\n  }\n\n  public static drawCircleWithFill(\n    canvas: HTMLCanvasElement,\n    anchorPoint: IPoint,\n    radius: number,\n    color: string = \"#ffffff\"\n  ): void {\n    const ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\n    ctx.save();\n    const startAngleRad = UnitUtil.deg2rad(0);\n    const endAngleRad = UnitUtil.deg2rad(360);\n    ctx.fillStyle = color;\n    ctx.beginPath();\n    ctx.arc(anchorPoint.x, anchorPoint.y, radius, startAngleRad, endAngleRad, false);\n    ctx.fill();\n    ctx.restore();\n  }\n\n  public static drawCircle(\n    canvas: HTMLCanvasElement,\n    anchorPoint: IPoint,\n    radius: number,\n    startAngleDeg: number,\n    endAngleDeg: number,\n    thickness: number = 20,\n    color: string = \"#ffffff\"\n  ): void {\n    let ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\n    let startAngleRad = UnitUtil.deg2rad(startAngleDeg);\n    let endAngleRad = UnitUtil.deg2rad(endAngleDeg);\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = thickness;\n    ctx.beginPath();\n    ctx.arc(anchorPoint.x, anchorPoint.y, radius, startAngleRad, endAngleRad, false);\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  public static drawPolygon(\n    canvas: HTMLCanvasElement,\n    anchors: IPoint[],\n    color: string = \"#fff\",\n    thickness: number = 1\n  ): void {\n    let ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = thickness;\n    ctx.beginPath();\n    ctx.moveTo(anchors[0].x, anchors[0].y);\n    for (let i = 1; i < anchors.length; i++) {\n      ctx.lineTo(anchors[i].x, anchors[i].y);\n    }\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  public static drawPolygonWithFill(\n    canvas: HTMLCanvasElement,\n    anchors: IPoint[],\n    color: string = \"#fff\"\n  ): void {\n    let ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\n    ctx.save();\n    ctx.fillStyle = color;\n    ctx.beginPath();\n    ctx.moveTo(anchors[0].x, anchors[0].y);\n    for (let i = 1; i < anchors.length; i++) {\n      ctx.lineTo(anchors[i].x, anchors[i].y);\n    }\n    ctx.closePath();\n    ctx.fill();\n    ctx.restore();\n  }\n\n  public static drawText(\n    canvas: HTMLCanvasElement,\n    text: string,\n    textSize: number,\n    anchorPoint: IPoint,\n    color: string = \"#ffffff\",\n    bold: boolean = false,\n    align: string = \"center\"\n  ): void {\n    let ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\n    ctx.save();\n    ctx.fillStyle = color;\n    ctx.textAlign = align as CanvasTextAlign;\n    ctx.textBaseline = \"middle\";\n    ctx.font = (bold ? \"bold \" : \"\") + textSize + \"px Arial\";\n    ctx.fillText(text, anchorPoint.x, anchorPoint.y);\n    ctx.restore();\n  }\n\n  public static getRandomRGBColor(): string {\n    return (\n      \"rgb(\" +\n      Math.round(Math.random() * 255) +\n      \",\" +\n      Math.round(Math.random() * 255) +\n      \",\" +\n      Math.round(Math.random() * 255) +\n      \")\"\n    );\n  }\n\n  public static hexToRGB(hex: string, alpha: number): string {\n    const r = parseInt(hex.slice(1, 3), 16);\n    const g = parseInt(hex.slice(3, 5), 16);\n    const b = parseInt(hex.slice(5, 7), 16);\n\n    if (alpha) {\n      return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\n    } else {\n      return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\n    }\n  }\n}\n","import { IPoint } from '../interfaces/IPoint';\n\nexport class PointUtil {\n  public static equals(p1: IPoint, p2: IPoint): boolean {\n    return p1.x === p2.x && p1.y === p2.y;\n  }\n\n  public static add(p1: IPoint, p2: IPoint): IPoint {\n    return {\n      x: p1.x + p2.x,\n      y: p1.y + p2.y,\n    };\n  }\n\n  public static subtract(p1: IPoint, p2: IPoint): IPoint {\n    return {\n      x: p1.x - p2.x,\n      y: p1.y - p2.y,\n    };\n  }\n\n  public static multiply(p1: IPoint, factor: number) {\n    return {\n      x: p1.x * factor,\n      y: p1.y * factor,\n    };\n  }\n\n  public static devide(p1: IPoint, factor: number) {\n    return {\n      x: p1.x / factor,\n      y: p1.y / factor,\n    };\n  }\n\n  public static getEuclidianDistance(p1: IPoint, p2: IPoint): number {\n    return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2));\n  }\n}\n","import {ISize} from \"../interfaces/ISize\";\nimport {Settings} from \"./Settings\";\n\nexport class RenderEngineConfig {\n    public readonly lineThickness: number = 2;\n    public readonly lineActiveColor: string = Settings.PRIMARY_COLOR;\n    public readonly lineInactiveColor: string = \"#fff\";\n    public readonly anchorSize: ISize = {\n        width: Settings.RESIZE_HANDLE_DIMENSION_PX,\n        height: Settings.RESIZE_HANDLE_DIMENSION_PX\n    };\n    public readonly anchorHoverSize: ISize = {\n        width: Settings.RESIZE_HANDLE_HOVER_DIMENSION_PX,\n        height: Settings.RESIZE_HANDLE_HOVER_DIMENSION_PX\n    };\n    public readonly suggestedAnchorDetectionSize: ISize = {\n        width: 100,\n        height: 100\n    };\n    public readonly activeAnchorColor: string = Settings.SECONDARY_COLOR;\n    public readonly inactiveAnchorColor: string = Settings.DARK_THEME_SECOND_COLOR;\n}","import {ISize} from \"../../interfaces/ISize\";\nimport {GeneralActionTypes} from \"./types\";\nimport {Action} from \"../Actions\";\nimport {PopupWindowType} from \"../../data/enums/PopupWindowType\";\nimport {CustomCursorStyle} from \"../../data/enums/CustomCursorStyle\";\nimport {ContextType} from \"../../data/enums/ContextType\";\n\nexport function updateWindowSize(windowSize: ISize): GeneralActionTypes {\n    return {\n        type: Action.UPDATE_WINDOW_SIZE,\n        payload: {\n            windowSize,\n        },\n    };\n}\n\nexport function updateActivePopupType(activePopupType: PopupWindowType): GeneralActionTypes {\n    return {\n        type: Action.UPDATE_ACTIVE_POPUP_TYPE,\n        payload: {\n            activePopupType,\n        }\n    }\n}\n\nexport function updateCustomCursorStyle(customCursorStyle: CustomCursorStyle): GeneralActionTypes {\n    return {\n        type: Action.UPDATE_CUSTOM_CURSOR_STYLE,\n        payload: {\n            customCursorStyle,\n        }\n    }\n}\n\nexport function updateActiveContext(activeContext: ContextType): GeneralActionTypes {\n    return {\n        type: Action.UPDATE_CONTEXT,\n        payload: {\n            activeContext,\n        },\n    };\n}","export enum EventType {\n    MOUSE_UP = \"mouseup\",\n    MOUSE_DOWN = \"mousedown\",\n    MOUSE_MOVE = \"mousemove\",\n    KEY_DOWN = \"keydown\",\n    KEY_UP = \"keyup\"\n}","import { ImageData, LabelPoint, LabelPolygon, LabelRect } from '../editor/types';\nimport _ from 'lodash';\nimport { LabelType } from '../../data/enums/LabelType';\nimport { store } from '../../index';\n\nexport class EditorSelector {\n  public static getProjectName(): string {\n    return store.getState().editor.projectName;\n  }\n\n  public static getLabelNames(): string[] {\n    return store.getState().editor.labelNames;\n  }\n\n  public static getActiveImageIndex(): number {\n    return store.getState().editor.activeImageIndex;\n  }\n\n  public static getActiveGroupIndex(): number {\n    return store.getState().editor.imagesData[this.getActiveImageIndex()].activeGroupIndex;\n  }\n\n  public static getActiveLabelNameIndex(): number {\n    return store.getState().editor.imagesData[this.getActiveImageIndex()].groupList[this.getActiveGroupIndex()]\n      .activeLabelNameIndex;\n  }\n  public static getLabelNameLength(): number {\n    return store.getState().editor.labelNames.length;\n  }\n\n  public static getImagesData(): ImageData[] {\n    return store.getState().editor.imagesData;\n  }\n\n  public static getActiveImageData(): ImageData | null {\n    let activeImageIndex: number | null = EditorSelector.getActiveImageIndex();\n\n    if (activeImageIndex === null) return null;\n\n    let imagesData: ImageData[] = EditorSelector.getImagesData();\n    return imagesData[activeImageIndex];\n  }\n\n  public static getActiveLabelId(): string | null {\n    const result = store.getState().editor.imagesData[this.getActiveImageIndex()].groupList[this.getActiveGroupIndex()]\n      .activeLabelId;\n    if (!result) {\n      // console.log(result);\n    }\n    return result;\n  }\n\n  public static getHighlightedLabelId(): string | null {\n    return store.getState().editor.imagesData[this.getActiveImageIndex()].groupList[this.getActiveGroupIndex()]\n      .highlightedLabelId;\n  }\n\n  public static getActiveRectLabel(): LabelRect | null {\n    let activeLabelId: string | null = EditorSelector.getActiveLabelId();\n    let activeGroupIndex: number | null = EditorSelector.getActiveGroupIndex();\n\n    if (activeLabelId === null) return null;\n\n    return _.find(EditorSelector.getActiveImageData().groupList[activeGroupIndex].labelRects, {\n      id: activeLabelId,\n    });\n  }\n\n  public static getActivePointLabel(): LabelPoint | null {\n    let activeLabelId: string | null = EditorSelector.getActiveLabelId();\n    let activeGroupIndex: number | null = EditorSelector.getActiveGroupIndex();\n\n    if (activeLabelId === null) return null;\n\n    return _.find(EditorSelector.getActiveImageData().groupList[activeGroupIndex].labelPoints, {\n      id: activeLabelId,\n    });\n  }\n\n  public static getAllPointLabelIndex(): number[] {\n    //  let activeLabelId: string | null = EditorSelector.getActiveLabelId();\n    let activeGroupIndex: number | null = EditorSelector.getActiveGroupIndex();\n\n    const indexs = EditorSelector.getActiveImageData().groupList[activeGroupIndex].labelPoints.map(\n      ele => ele.labelIndex\n    );\n    return indexs;\n  }\n\n  public static getActivePolygonLabel(): LabelPolygon | null {\n    let activeLabelId: string | null = EditorSelector.getActiveLabelId();\n    let activeGroupIndex: number | null = EditorSelector.getActiveGroupIndex();\n\n    if (activeLabelId === null) return null;\n\n    return _.find(EditorSelector.getActiveImageData().groupList[activeGroupIndex].labelPolygons, {\n      id: activeLabelId,\n    });\n  }\n\n  public static getActiveLabelType(): LabelType {\n    return EditorSelector.getActiveImageData().groupList[EditorSelector.getActiveGroupIndex()].activeLabelType;\n  }\n\n  public static getFirstLabelCreatedFlag(): boolean {\n    return EditorSelector.getActiveImageData().groupList[EditorSelector.getActiveGroupIndex()].firstLabelCreatedFlag;\n  }\n}\n","import {EventType} from \"../data/enums/EventType\";\n\nexport class MouseEventUtil {\n    public static getEventType(event: Event): EventType | null {\n        if (!event) return null;\n\n        switch (event.type) {\n            case EventType.MOUSE_DOWN:\n                return EventType.MOUSE_DOWN;\n            case EventType.MOUSE_UP:\n                return EventType.MOUSE_UP;\n            case EventType.MOUSE_MOVE:\n                return EventType.MOUSE_MOVE;\n            default:\n                return null;\n        }\n    }\n}","import {EditorData} from \"../../data/EditorData\";\nimport {MouseEventUtil} from \"../../utils/MouseEventUtil\";\nimport {EventType} from \"../../data/enums/EventType\";\nimport {LabelType} from \"../../data/enums/LabelType\";\n\nexport abstract class BaseRenderEngine {\n    protected readonly canvas: HTMLCanvasElement;\n    public labelType: LabelType;\n\n    protected constructor(canvas: HTMLCanvasElement) {\n        this.canvas = canvas;\n    }\n\n    public update(data: EditorData): void {\n        if (!!data.event) {\n            switch (MouseEventUtil.getEventType(data.event)) {\n                case EventType.MOUSE_MOVE:\n                    this.mouseMoveHandler(data);\n                    break;\n                case EventType.MOUSE_UP:\n                    this.mouseUpHandler(data);\n                    break;\n                case EventType.MOUSE_DOWN:\n                    this.mouseDownHandler(data);\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n\n    protected abstract mouseDownHandler(data: EditorData): void;\n    protected abstract mouseMoveHandler(data: EditorData): void;\n    protected abstract mouseUpHandler(data: EditorData): void;\n\n    abstract render(data: EditorData): void;\n\n    abstract isInProgress(): boolean;\n}","import { EditorData } from '../data/EditorData';\nimport { RectUtil } from './RectUtil';\nimport { store } from '../index';\nimport { CustomCursorStyle } from '../data/enums/CustomCursorStyle';\nimport { updateCustomCursorStyle } from '../store/general/actionCreators';\nimport { IPoint } from '../interfaces/IPoint';\nimport { PointUtil } from './PointUtil';\nimport { IRect } from '../interfaces/IRect';\n\nexport class RenderEngineUtil {\n  public static isMouseOverImage(data: EditorData): boolean {\n    return RectUtil.isPointInside(data.activeImageRectOnCanvas, data.mousePositionOnCanvas);\n  }\n\n  public static isMouseOverCanvas(data: EditorData): boolean {\n    return RectUtil.isPointInside({ x: 0, y: 0, ...data.canvasSize }, data.mousePositionOnCanvas);\n  }\n\n  public static transferPolygonFromImageToCanvas(polygon: IPoint[], data: EditorData): IPoint[] {\n    return polygon.map((point: IPoint) => RenderEngineUtil.transferPointFromImageToCanvas(point, data));\n  }\n\n  public static transferPointFromImageToCanvas(point: IPoint, data: EditorData): IPoint {\n    return PointUtil.add(PointUtil.multiply(point, 1 / data.activeImageScale), data.activeImageRectOnCanvas);\n  }\n\n  public static transferPolygonFromCanvasToImage(polygon: IPoint[], data: EditorData): IPoint[] {\n    return polygon.map((point: IPoint) => RenderEngineUtil.transferPointFromCanvasToImage(point, data));\n  }\n\n  public static transferPointFromCanvasToImage(point: IPoint, data: EditorData): IPoint {\n    return PointUtil.multiply(PointUtil.subtract(point, data.activeImageRectOnCanvas), data.activeImageScale);\n  }\n\n  public static transferRectFromCanvasToImage(rect: IRect, data: EditorData): IRect {\n    return RectUtil.translate(RectUtil.scaleRect(rect, 1 / data.activeImageScale), data.activeImageRectOnCanvas);\n  }\n\n  public static wrapDefaultCursorStyleInCancel(data: EditorData) {\n    if (RectUtil.isPointInside(data.activeImageRectOnCanvas, data.mousePositionOnCanvas)) {\n      store.dispatch(updateCustomCursorStyle(CustomCursorStyle.DEFAULT));\n    } else {\n      store.dispatch(updateCustomCursorStyle(CustomCursorStyle.CANCEL));\n    }\n  }\n\n  public static setValueBetweenPixels(value: number): number {\n    return Math.floor(value) + 0.5;\n  }\n\n  public static setPointBetweenPixels(point: IPoint): IPoint {\n    return {\n      x: RenderEngineUtil.setValueBetweenPixels(point.x),\n      y: RenderEngineUtil.setValueBetweenPixels(point.y),\n    };\n  }\n\n  public static setRectBetweenPixels(rect: IRect): IRect {\n    const topLeft: IPoint = {\n      x: rect.x,\n      y: rect.y,\n    };\n    const bottomRight: IPoint = {\n      x: rect.x + rect.width,\n      y: rect.y + rect.height,\n    };\n    const topLeftBetweenPixels = RenderEngineUtil.setPointBetweenPixels(topLeft);\n    const bottomRightBetweenPixels = RenderEngineUtil.setPointBetweenPixels(bottomRight);\n    return {\n      x: topLeftBetweenPixels.x,\n      y: topLeftBetweenPixels.y,\n      width: bottomRightBetweenPixels.x - topLeftBetweenPixels.x,\n      height: bottomRightBetweenPixels.y - topLeftBetweenPixels.y,\n    };\n  }\n}\n","import { IPoint } from \"../../interfaces/IPoint\";\nimport { IRect } from \"../../interfaces/IRect\";\nimport { RectUtil } from \"../../utils/RectUtil\";\nimport { DrawUtil } from \"../../utils/DrawUtil\";\nimport { store } from \"../..\";\nimport { ImageData, LabelRect } from \"../../store/editor/types\";\nimport uuidv1 from \"uuid/v1\";\nimport {\n  updateActiveLabelId,\n  updateFirstLabelCreatedFlag,\n  updateHighlightedLabelId,\n  updateImageDataById,\n} from \"../../store/editor/actionCreators\";\nimport { PointUtil } from \"../../utils/PointUtil\";\nimport { RectAnchor } from \"../../data/RectAnchor\";\nimport { RenderEngineConfig } from \"../../settings/RenderEngineConfig\";\nimport { updateCustomCursorStyle } from \"../../store/general/actionCreators\";\nimport { CustomCursorStyle } from \"../../data/enums/CustomCursorStyle\";\nimport { EditorSelector } from \"../../store/selectors/EditorSelector\";\nimport { EditorData } from \"../../data/EditorData\";\nimport { BaseRenderEngine } from \"./BaseRenderEngine\";\nimport { RenderEngineUtil } from \"../../utils/RenderEngineUtil\";\nimport { LabelType } from \"../../data/enums/LabelType\";\nimport _ from \"lodash\";\nimport produce from \"immer\";\n\nexport class RectRenderEngine extends BaseRenderEngine {\n  private config: RenderEngineConfig = new RenderEngineConfig();\n\n  // =================================================================================================================\n  // STATE\n  // =================================================================================================================\n\n  private startCreateRectPoint: IPoint;\n  private startResizeRectAnchor: RectAnchor;\n\n  public constructor(canvas: HTMLCanvasElement) {\n    super(canvas);\n    this.labelType = LabelType.RECTANGLE;\n  }\n\n  // =================================================================================================================\n  // EVENT HANDLERS\n  // =================================================================================================================\n\n  public mouseDownHandler = (data: EditorData) => {\n    const isMouseOverImage: boolean = RenderEngineUtil.isMouseOverImage(data);\n    const isMouseOverCanvas: boolean = RenderEngineUtil.isMouseOverCanvas(data);\n    if (isMouseOverCanvas) {\n      const rectUnderMouse: LabelRect = this.getRectUnderMouse(\n        data.activeImageScale,\n        data.activeImageRectOnCanvas,\n        data.mousePositionOnCanvas\n      );\n      if (!!rectUnderMouse) {\n        const rect: IRect = this.calculateRectRelativeToActiveImage(rectUnderMouse.rect, data.activeImageScale);\n        const anchorUnderMouse: RectAnchor = this.getAnchorUnderMouseByRect(\n          rect,\n          data.mousePositionOnCanvas,\n          data.activeImageRectOnCanvas\n        );\n        if (!!anchorUnderMouse) {\n          store.dispatch(updateActiveLabelId(rectUnderMouse.id));\n          this.startRectResize(anchorUnderMouse);\n        } else {\n          if (!!EditorSelector.getHighlightedLabelId())\n            store.dispatch(updateActiveLabelId(EditorSelector.getHighlightedLabelId()));\n          else this.startRectCreation(data.mousePositionOnCanvas);\n        }\n      } else if (isMouseOverImage) {\n        this.startRectCreation(data.mousePositionOnCanvas);\n      }\n    }\n  };\n\n  public mouseUpHandler = (data: EditorData) => {\n    if (!!data.activeImageRectOnCanvas) {\n      const mousePositionSnapped: IPoint = RectUtil.snapPointToRect(\n        data.mousePositionOnCanvas,\n        data.activeImageRectOnCanvas\n      );\n\n      if (!!this.startCreateRectPoint && !PointUtil.equals(this.startCreateRectPoint, mousePositionSnapped)) {\n        const minX: number = Math.min(this.startCreateRectPoint.x, mousePositionSnapped.x);\n        const minY: number = Math.min(this.startCreateRectPoint.y, mousePositionSnapped.y);\n        const maxX: number = Math.max(this.startCreateRectPoint.x, mousePositionSnapped.x);\n        const maxY: number = Math.max(this.startCreateRectPoint.y, mousePositionSnapped.y);\n\n        const rect: IRect = {\n          x: (minX - data.activeImageRectOnCanvas.x) * data.activeImageScale,\n          y: (minY - data.activeImageRectOnCanvas.y) * data.activeImageScale,\n          width: (maxX - minX) * data.activeImageScale,\n          height: (maxY - minY) * data.activeImageScale,\n        };\n        this.addRectLabel(rect);\n      }\n\n      if (!!this.startResizeRectAnchor) {\n        const activeLabelRect: LabelRect = EditorSelector.getActiveRectLabel();\n        const rect: IRect = this.calculateRectRelativeToActiveImage(activeLabelRect.rect, data.activeImageScale);\n        const startAnchorPosition: IPoint = PointUtil.add(\n          this.startResizeRectAnchor.position,\n          data.activeImageRectOnCanvas\n        );\n        const delta: IPoint = PointUtil.subtract(mousePositionSnapped, startAnchorPosition);\n        const resizeRect: IRect = RectUtil.resizeRect(rect, this.startResizeRectAnchor.type, delta);\n        const scaledRect: IRect = RectUtil.scaleRect(resizeRect, data.activeImageScale);\n\n        const imageData = EditorSelector.getActiveImageData();\n        const activeGroupIndex = EditorSelector.getActiveGroupIndex();\n        const newImageData = produce(imageData, draft => {\n          draft.groupList[activeGroupIndex].labelRects = imageData.groupList[activeGroupIndex].labelRects.map(\n            (labelRect: LabelRect) => {\n              if (labelRect.id === activeLabelRect.id) {\n                return {\n                  ...labelRect,\n                  rect: scaledRect,\n                };\n              }\n              return labelRect;\n            }\n          );\n        });\n\n        store.dispatch(updateImageDataById(imageData.id, newImageData));\n      }\n    }\n    this.endRectTransformation();\n  };\n\n  public mouseMoveHandler = (data: EditorData) => {\n    if (!!data.activeImageRectOnCanvas && !!data.mousePositionOnCanvas) {\n      const isOverImage: boolean = RenderEngineUtil.isMouseOverImage(data);\n      if (isOverImage && !this.startResizeRectAnchor) {\n        const labelRect: LabelRect = this.getRectUnderMouse(\n          data.activeImageScale,\n          data.activeImageRectOnCanvas,\n          data.mousePositionOnCanvas\n        );\n        if (!!labelRect) {\n          if (EditorSelector.getHighlightedLabelId() !== labelRect.id) {\n            store.dispatch(updateHighlightedLabelId(labelRect.id));\n          }\n        } else {\n          if (EditorSelector.getHighlightedLabelId() !== null) {\n            store.dispatch(updateHighlightedLabelId(null));\n          }\n        }\n      }\n    }\n  };\n\n  // =================================================================================================================\n  // RENDERING\n  // =================================================================================================================\n\n  public render(data: EditorData) {\n    const activeLabelId: string = EditorSelector.getActiveLabelId();\n    const imageData: ImageData = EditorSelector.getActiveImageData();\n    const activeGroupIndex = EditorSelector.getActiveGroupIndex();\n\n    if (imageData) {\n      imageData.groupList[activeGroupIndex].labelRects.forEach((labelRect: LabelRect) => {\n        labelRect.id === activeLabelId\n          ? this.drawActiveRect(\n              labelRect,\n              data.mousePositionOnCanvas,\n              data.activeImageRectOnCanvas,\n              data.activeImageScale\n            )\n          : this.drawInactiveRect(labelRect, data);\n      });\n      this.drawCurrentlyCreatedRect(data.mousePositionOnCanvas, data.activeImageRectOnCanvas);\n      this.updateCursorStyle(data);\n    }\n  }\n\n  private drawCurrentlyCreatedRect(mousePosition: IPoint, imageRect: IRect) {\n    if (!!this.startCreateRectPoint) {\n      const mousePositionSnapped: IPoint = RectUtil.snapPointToRect(mousePosition, imageRect);\n      const activeRect: IRect = {\n        x: this.startCreateRectPoint.x,\n        y: this.startCreateRectPoint.y,\n        width: mousePositionSnapped.x - this.startCreateRectPoint.x,\n        height: mousePositionSnapped.y - this.startCreateRectPoint.y,\n      };\n      const activeRectBetweenPixels = RenderEngineUtil.setRectBetweenPixels(activeRect);\n      DrawUtil.drawRect(this.canvas, activeRectBetweenPixels, this.config.lineActiveColor, this.config.lineThickness);\n    }\n  }\n\n  private drawInactiveRect(labelRect: LabelRect, data: EditorData) {\n    const rectOnImage: IRect = RenderEngineUtil.transferRectFromCanvasToImage(labelRect.rect, data);\n    const highlightedLabelId: string = EditorSelector.getHighlightedLabelId();\n    this.renderRect(rectOnImage, labelRect.id === highlightedLabelId);\n  }\n\n  private drawActiveRect(labelRect: LabelRect, mousePosition: IPoint, imageRect: IRect, scale: number) {\n    let rect: IRect = this.calculateRectRelativeToActiveImage(labelRect.rect, scale);\n    if (!!this.startResizeRectAnchor) {\n      const startAnchorPosition: IPoint = PointUtil.add(this.startResizeRectAnchor.position, imageRect);\n      const endAnchorPositionSnapped: IPoint = RectUtil.snapPointToRect(mousePosition, imageRect);\n      const delta = PointUtil.subtract(endAnchorPositionSnapped, startAnchorPosition);\n      rect = RectUtil.resizeRect(rect, this.startResizeRectAnchor.type, delta);\n    }\n    const rectOnImage: IRect = RectUtil.translate(rect, imageRect);\n    this.renderRect(rectOnImage, true);\n  }\n\n  private renderRect(rectOnImage: IRect, isActive: boolean) {\n    const rectBetweenPixels = RenderEngineUtil.setRectBetweenPixels(rectOnImage);\n    const lineColor: string = isActive ? this.config.lineActiveColor : this.config.lineInactiveColor;\n    DrawUtil.drawRect(this.canvas, rectBetweenPixels, lineColor, this.config.lineThickness);\n    if (isActive) {\n      const handleCenters: IPoint[] = RectUtil.mapRectToAnchors(rectOnImage).map(\n        (rectAnchor: RectAnchor) => rectAnchor.position\n      );\n      handleCenters.forEach((center: IPoint) => {\n        const handleRect: IRect = RectUtil.getRectWithCenterAndSize(center, this.config.anchorSize);\n        const handleRectBetweenPixels: IRect = RenderEngineUtil.setRectBetweenPixels(handleRect);\n        DrawUtil.drawRectWithFill(this.canvas, handleRectBetweenPixels, this.config.activeAnchorColor);\n      });\n    }\n  }\n\n  private updateCursorStyle(data: EditorData) {\n    if (!!this.canvas && !!data.mousePositionOnCanvas) {\n      const rectAnchorUnderMouse: RectAnchor = this.getAnchorUnderMouse(\n        data.activeImageScale,\n        data.mousePositionOnCanvas,\n        data.activeImageRectOnCanvas\n      );\n      if (!!rectAnchorUnderMouse || !!this.startResizeRectAnchor) {\n        store.dispatch(updateCustomCursorStyle(CustomCursorStyle.MOVE));\n        return;\n      }\n      if (RenderEngineUtil.isMouseOverCanvas(data)) {\n        if (\n          !RectUtil.isPointInside(data.activeImageRectOnCanvas, data.mousePositionOnCanvas) &&\n          !!this.startCreateRectPoint\n        )\n          store.dispatch(updateCustomCursorStyle(CustomCursorStyle.MOVE));\n        else RenderEngineUtil.wrapDefaultCursorStyleInCancel(data);\n        this.canvas.style.cursor = \"none\";\n      } else {\n        this.canvas.style.cursor = \"default\";\n      }\n    }\n  }\n\n  // =================================================================================================================\n  // HELPERS\n  // =================================================================================================================\n\n  public isInProgress(): boolean {\n    return !!this.startCreateRectPoint || !!this.startResizeRectAnchor;\n  }\n\n  private calculateRectRelativeToActiveImage(rect: IRect, scale: number): IRect {\n    return RectUtil.scaleRect(rect, 1 / scale);\n  }\n\n  private addRectLabel = (rect: IRect) => {\n    const activeLabelIndex = EditorSelector.getActiveLabelNameIndex();\n    const imageData: ImageData = EditorSelector.getActiveImageData();\n    const labelRect: LabelRect = {\n      id: uuidv1(),\n      labelIndex: activeLabelIndex,\n      checked: false,\n      rect,\n    };\n    imageData.groupList[EditorSelector.getActiveGroupIndex()].labelRects.push(labelRect);\n    store.dispatch(updateImageDataById(imageData.id, imageData));\n    store.dispatch(updateFirstLabelCreatedFlag(true));\n    store.dispatch(updateActiveLabelId(labelRect.id));\n  };\n\n  private getRectUnderMouse(scale: number, imageRect: IRect, mousePosition: IPoint): LabelRect {\n    const activeRectLabel: LabelRect = EditorSelector.getActiveRectLabel();\n    if (!!activeRectLabel && this.isMouseOverRectEdges(activeRectLabel.rect, scale, imageRect, mousePosition)) {\n      return activeRectLabel;\n    }\n\n    const labelRects: LabelRect[] = EditorSelector.getActiveImageData().groupList[EditorSelector.getActiveGroupIndex()]\n      .labelRects;\n    for (let i = 0; i < labelRects.length; i++) {\n      if (this.isMouseOverRectEdges(labelRects[i].rect, scale, imageRect, mousePosition)) {\n        return labelRects[i];\n      }\n    }\n    return null;\n  }\n\n  private isMouseOverRectEdges(rect: IRect, scale: number, imageRect: IRect, mousePosition: IPoint): boolean {\n    const rectOnImage: IRect = RectUtil.translate(this.calculateRectRelativeToActiveImage(rect, scale), imageRect);\n\n    const outerRectDelta: IPoint = {\n      x: this.config.anchorHoverSize.width / 2,\n      y: this.config.anchorHoverSize.height / 2,\n    };\n    const outerRect: IRect = RectUtil.expand(rectOnImage, outerRectDelta);\n\n    const innerRectDelta: IPoint = {\n      x: -this.config.anchorHoverSize.width / 2,\n      y: -this.config.anchorHoverSize.height / 2,\n    };\n    const innerRect: IRect = RectUtil.expand(rectOnImage, innerRectDelta);\n\n    return RectUtil.isPointInside(outerRect, mousePosition) && !RectUtil.isPointInside(innerRect, mousePosition);\n  }\n\n  private getAnchorUnderMouseByRect(rect: IRect, mousePosition: IPoint, imageRect: IRect): RectAnchor {\n    const rectAnchors: RectAnchor[] = RectUtil.mapRectToAnchors(rect);\n    for (let i = 0; i < rectAnchors.length; i++) {\n      const anchorRect: IRect = RectUtil.translate(\n        RectUtil.getRectWithCenterAndSize(rectAnchors[i].position, this.config.anchorHoverSize),\n        imageRect\n      );\n      if (!!mousePosition && RectUtil.isPointInside(anchorRect, mousePosition)) {\n        return rectAnchors[i];\n      }\n    }\n    return null;\n  }\n\n  private getAnchorUnderMouse(scale: number, mousePosition: IPoint, imageRect: IRect): RectAnchor {\n    const labelRects: LabelRect[] = EditorSelector.getActiveImageData().groupList[EditorSelector.getActiveGroupIndex()]\n      .labelRects;\n    for (let i = 0; i < labelRects.length; i++) {\n      const rect: IRect = this.calculateRectRelativeToActiveImage(labelRects[i].rect, scale);\n      const rectAnchor = this.getAnchorUnderMouseByRect(rect, mousePosition, imageRect);\n      if (!!rectAnchor) return rectAnchor;\n    }\n    return null;\n  }\n\n  private startRectCreation(mousePosition: IPoint) {\n    this.startCreateRectPoint = mousePosition;\n    store.dispatch(updateActiveLabelId(null));\n  }\n\n  private startRectResize(activatedAnchor: RectAnchor) {\n    this.startResizeRectAnchor = activatedAnchor;\n  }\n\n  private endRectTransformation() {\n    this.startCreateRectPoint = null;\n    this.startResizeRectAnchor = null;\n  }\n}\n","import React from \"react\";\nimport {IPoint} from \"../interfaces/IPoint\";\nimport {IRect} from \"../interfaces/IRect\";\nimport {ISize} from \"../interfaces/ISize\";\n\nexport class CanvasUtil {\n    public static getMousePositionOnCanvasFromEvent(event: React.MouseEvent<HTMLCanvasElement, MouseEvent> | MouseEvent, canvas: HTMLCanvasElement): IPoint {\n        if (!!canvas && !!event) {\n            const canvasRect: ClientRect | DOMRect = canvas.getBoundingClientRect();\n            return {\n                x: event.clientX - canvasRect.left,\n                y: event.clientY - canvasRect.top\n            }\n        }\n        return null;\n    }\n\n    public static getClientRect(canvas: HTMLCanvasElement): IRect {\n        if (!!canvas) {\n            const canvasRect: ClientRect | DOMRect = canvas.getBoundingClientRect();\n            return {\n                x: canvasRect.left,\n                y: canvasRect.top,\n                width: canvasRect.width,\n                height: canvasRect.height\n            }\n        }\n        return null;\n    }\n\n    public static getSize(canvas: HTMLCanvasElement): ISize {\n        if (!!canvas) {\n            const canvasRect: ClientRect | DOMRect = canvas.getBoundingClientRect();\n            return {\n                width: canvasRect.width,\n                height: canvasRect.height\n            }\n        }\n        return null;\n    }\n}","import { IRect } from '../../interfaces/IRect';\nimport { RenderEngineConfig } from '../../settings/RenderEngineConfig';\nimport { IPoint } from '../../interfaces/IPoint';\nimport { CanvasUtil } from '../../utils/CanvasUtil';\nimport { store } from '../../index';\nimport { ImageData, LabelPoint } from '../../store/editor/types';\nimport uuidv1 from 'uuid/v1';\nimport {\n  updateActiveLabelId,\n  updateFirstLabelCreatedFlag,\n  updateHighlightedLabelId,\n  updateImageDataById,\n  updateActiveLabelNameIndex,\n  findNextAvailableLabelIndex,\n} from '../../store/editor/actionCreators';\nimport { RectUtil } from '../../utils/RectUtil';\nimport { DrawUtil } from '../../utils/DrawUtil';\nimport { updateCustomCursorStyle } from '../../store/general/actionCreators';\nimport { CustomCursorStyle } from '../../data/enums/CustomCursorStyle';\nimport { EditorSelector } from '../../store/selectors/EditorSelector';\nimport { EditorData } from '../../data/EditorData';\nimport { BaseRenderEngine } from './BaseRenderEngine';\nimport { RenderEngineUtil } from '../../utils/RenderEngineUtil';\nimport { LabelType } from '../../data/enums/LabelType';\nimport produce from 'immer';\nimport { store as storeNF } from 'react-notifications-component';\n\nexport class PointRenderEngine extends BaseRenderEngine {\n  private config: RenderEngineConfig = new RenderEngineConfig();\n\n  // =================================================================================================================\n  // STATE\n  // =================================================================================================================\n\n  private transformInProgress: boolean = false;\n\n  public constructor(canvas: HTMLCanvasElement) {\n    super(canvas);\n    this.labelType = LabelType.POINT;\n  }\n\n  // =================================================================================================================\n  // EVENT HANDLERS\n  // =================================================================================================================\n\n  public mouseDownHandler(data: EditorData): void {\n    const isMouseOverImage: boolean = RenderEngineUtil.isMouseOverImage(data);\n    const isMouseOverCanvas: boolean = RenderEngineUtil.isMouseOverCanvas(data);\n\n    if (isMouseOverCanvas) {\n      const labelPoint: LabelPoint = this.getLabelPointUnderMouse(data.mousePositionOnCanvas, data);\n      if (!!labelPoint) {\n        const pointOnCanvas: IPoint = RenderEngineUtil.transferPointFromImageToCanvas(labelPoint.point, data);\n        const pointBetweenPixels = RenderEngineUtil.setPointBetweenPixels(pointOnCanvas);\n        const handleRect: IRect = RectUtil.getRectWithCenterAndSize(pointBetweenPixels, this.config.anchorHoverSize);\n        if (RectUtil.isPointInside(handleRect, data.mousePositionOnCanvas)) {\n          store.dispatch(updateActiveLabelId(labelPoint.id));\n          this.transformInProgress = true;\n          return;\n        } else {\n          store.dispatch(updateActiveLabelId(null));\n          const pointOnImage: IPoint = RenderEngineUtil.transferPointFromCanvasToImage(\n            data.mousePositionOnCanvas,\n            data\n          );\n          this.addPointLabel(pointOnImage);\n        }\n      } else if (isMouseOverImage) {\n        const pointOnImage: IPoint = RenderEngineUtil.transferPointFromCanvasToImage(data.mousePositionOnCanvas, data);\n        this.addPointLabel(pointOnImage);\n      }\n    }\n  }\n\n  public mouseUpHandler(data: EditorData): void {\n    if (this.isInProgress()) {\n      const activeLabelPoint: LabelPoint = EditorSelector.getActivePointLabel();\n      const pointSnapped: IPoint = RectUtil.snapPointToRect(data.mousePositionOnCanvas, data.activeImageRectOnCanvas);\n      const pointOnImage: IPoint = RenderEngineUtil.transferPointFromCanvasToImage(pointSnapped, data);\n      const imageData = EditorSelector.getActiveImageData();\n      const activeGroupIndex = EditorSelector.getActiveGroupIndex();\n      const newImageData = produce(imageData, draft => {\n        draft.groupList[activeGroupIndex].labelPoints = imageData.groupList[activeGroupIndex].labelPoints.map(\n          (labelPoint: LabelPoint) => {\n            if (activeLabelPoint && labelPoint.id === activeLabelPoint.id) {\n              return {\n                ...labelPoint,\n                point: pointOnImage,\n              };\n            }\n            return labelPoint;\n          }\n        );\n      });\n\n      store.dispatch(updateImageDataById(imageData.id, newImageData));\n    }\n    this.transformInProgress = false;\n  }\n\n  public mouseMoveHandler(data: EditorData): void {\n    const isOverImage: boolean = RenderEngineUtil.isMouseOverImage(data);\n    if (isOverImage) {\n      const labelPoint: LabelPoint = this.getLabelPointUnderMouse(data.mousePositionOnCanvas, data);\n      if (!!labelPoint) {\n        if (EditorSelector.getHighlightedLabelId() !== labelPoint.id) {\n          store.dispatch(updateHighlightedLabelId(labelPoint.id));\n        }\n      } else {\n        if (EditorSelector.getHighlightedLabelId() !== null) {\n          store.dispatch(updateHighlightedLabelId(null));\n        }\n      }\n    }\n  }\n\n  // =================================================================================================================\n  // RENDERING\n  // =================================================================================================================\n\n  public render(data: EditorData): void {\n    if (!data.activeImageRectOnCanvas) {\n      return;\n    }\n    const activeLabelId: string = EditorSelector.getActiveLabelId();\n    const highlightedLabelId: string = EditorSelector.getHighlightedLabelId();\n    const imageData: ImageData = EditorSelector.getActiveImageData();\n    if (imageData) {\n      const activeGroupIndex = EditorSelector.getActiveGroupIndex();\n      imageData.groupList[activeGroupIndex].labelPoints.forEach((labelPoint: LabelPoint) => {\n        if (labelPoint.id === activeLabelId) {\n          if (this.isInProgress()) {\n            const pointSnapped: IPoint = RectUtil.snapPointToRect(\n              data.mousePositionOnCanvas,\n              data.activeImageRectOnCanvas\n            );\n            const pointBetweenPixels: IPoint = RenderEngineUtil.setPointBetweenPixels(pointSnapped);\n            const handleRect: IRect = RectUtil.getRectWithCenterAndSize(pointBetweenPixels, this.config.anchorSize);\n            DrawUtil.drawRectWithFill(this.canvas, handleRect, this.config.activeAnchorColor);\n          } else {\n            this.renderPoint(labelPoint, true, data);\n          }\n        } else {\n          this.renderPoint(labelPoint, labelPoint.id === activeLabelId || labelPoint.id === highlightedLabelId, data);\n        }\n      });\n    }\n    this.updateCursorStyle(data);\n  }\n\n  private renderPoint(labelPoint: LabelPoint, isActive: boolean, data: EditorData) {\n    const pointOnImage: IPoint = RenderEngineUtil.transferPointFromImageToCanvas(labelPoint.point, data);\n    const pointBetweenPixels = RenderEngineUtil.setPointBetweenPixels(pointOnImage);\n    const handleRect: IRect = RectUtil.getRectWithCenterAndSize(pointBetweenPixels, this.config.anchorSize);\n    const handleColor: string = isActive ? this.config.activeAnchorColor : this.config.inactiveAnchorColor;\n    DrawUtil.drawRectWithFill(this.canvas, handleRect, handleColor);\n  }\n\n  private updateCursorStyle(data: EditorData) {\n    if (!!this.canvas && !!data.mousePositionOnCanvas) {\n      const labelPoint: LabelPoint = this.getLabelPointUnderMouse(data.mousePositionOnCanvas, data);\n      if (!!labelPoint) {\n        const pointOnCanvas: IPoint = RenderEngineUtil.transferPointFromImageToCanvas(labelPoint.point, data);\n        const pointBetweenPixels = RenderEngineUtil.setPointBetweenPixels(pointOnCanvas);\n        const handleRect: IRect = RectUtil.getRectWithCenterAndSize(pointBetweenPixels, this.config.anchorHoverSize);\n        if (RectUtil.isPointInside(handleRect, data.mousePositionOnCanvas)) {\n          store.dispatch(updateCustomCursorStyle(CustomCursorStyle.MOVE));\n          return;\n        }\n      } else if (this.isInProgress()) {\n        store.dispatch(updateCustomCursorStyle(CustomCursorStyle.MOVE));\n        return;\n      }\n\n      if (RectUtil.isPointInside({ x: 0, y: 0, ...CanvasUtil.getSize(this.canvas) }, data.mousePositionOnCanvas)) {\n        RenderEngineUtil.wrapDefaultCursorStyleInCancel(data);\n        this.canvas.style.cursor = 'none';\n      } else {\n        this.canvas.style.cursor = 'default';\n      }\n    }\n  }\n\n  // =================================================================================================================\n  // HELPERS\n  // =================================================================================================================\n\n  public isInProgress(): boolean {\n    return this.transformInProgress;\n  }\n\n  private getLabelPointUnderMouse(mousePosition: IPoint, data: EditorData): LabelPoint {\n    const activeGroupIndex = EditorSelector.getActiveGroupIndex();\n    const labelPoints: LabelPoint[] = EditorSelector.getActiveImageData().groupList[activeGroupIndex].labelPoints;\n    for (let i = 0; i < labelPoints.length; i++) {\n      const pointOnCanvas: IPoint = RenderEngineUtil.transferPointFromImageToCanvas(labelPoints[i].point, data);\n      const handleRect: IRect = RectUtil.getRectWithCenterAndSize(pointOnCanvas, this.config.anchorHoverSize);\n      if (RectUtil.isPointInside(handleRect, mousePosition)) {\n        return labelPoints[i];\n      }\n    }\n    return null;\n  }\n\n  private addPointLabel = (point: IPoint) => {\n    const activeLabelIndex = EditorSelector.getActiveLabelNameIndex();\n    const activeGroupIndex = EditorSelector.getActiveGroupIndex();\n    const imageData: ImageData = EditorSelector.getActiveImageData();\n    const existedLabelIndexs = EditorSelector.getAllPointLabelIndex();\n    const labelsLength = EditorSelector.getLabelNameLength();\n\n    const labelPoint: LabelPoint = {\n      id: uuidv1(),\n      labelIndex: activeLabelIndex,\n      checked: false,\n      point,\n    };\n\n    if (existedLabelIndexs.length === labelsLength) {\n      storeNF.addNotification({\n        message: '已经添加全部的关节',\n        type: 'warning',\n        insert: 'top',\n        container: 'top-center',\n        animationIn: ['animated', 'fadeIn'],\n        animationOut: ['animated', 'fadeOut'],\n        dismiss: {\n          duration: 1000,\n        },\n      });\n      return;\n    }\n\n    const newImageData = produce(imageData, draft => {\n      draft.groupList[activeGroupIndex].labelPoints.push(labelPoint);\n    });\n    store.dispatch(updateImageDataById(imageData.id, newImageData));\n    store.dispatch(updateFirstLabelCreatedFlag(true));\n    store.dispatch(updateActiveLabelId(labelPoint.id));\n    store.dispatch(findNextAvailableLabelIndex());\n  };\n}\n","import {ILine} from \"../interfaces/ILine\";\nimport {IPoint} from \"../interfaces/IPoint\";\n\nexport class LineUtil {\n    public static getDistanceFromLine(l: ILine, p: IPoint): number {\n        if (l.start.x !== l.end.x || l.start.y !== l.end.y) {\n            const nom: number = Math.abs((l.end.y - l.start.y) * p.x - (l.end.x - l.start.x) * p.y + l.end.x * l.start.y - l.end.y * l.start.x);\n            const denom: number = Math.sqrt(Math.pow(l.end.y - l.start.y, 2) + Math.pow(l.end.x - l.start.x, 2));\n            return nom / denom;\n        }\n        return null;\n    }\n\n    public static getCenter(l: ILine): IPoint {\n        return {\n            x: (l.start.x + l.end.x) / 2,\n            y: (l.start.y + l.end.y) / 2\n        }\n    }\n}","import { store } from \"../../index\";\nimport { RectUtil } from \"../../utils/RectUtil\";\nimport { updateCustomCursorStyle } from \"../../store/general/actionCreators\";\nimport { CustomCursorStyle } from \"../../data/enums/CustomCursorStyle\";\nimport { EditorData } from \"../../data/EditorData\";\nimport { BaseRenderEngine } from \"./BaseRenderEngine\";\nimport { RenderEngineConfig } from \"../../settings/RenderEngineConfig\";\nimport { IPoint } from \"../../interfaces/IPoint\";\nimport { ILine } from \"../../interfaces/ILine\";\nimport { DrawUtil } from \"../../utils/DrawUtil\";\nimport { IRect } from \"../../interfaces/IRect\";\nimport { ImageData, LabelPolygon } from \"../../store/editor/types\";\nimport { EditorSelector } from \"../../store/selectors/EditorSelector\";\nimport uuidv1 from \"uuid/v1\";\nimport {\n  updateActiveLabelId,\n  updateFirstLabelCreatedFlag,\n  updateHighlightedLabelId,\n  updateImageDataById,\n} from \"../../store/editor/actionCreators\";\nimport { LineUtil } from \"../../utils/LineUtil\";\nimport { MouseEventUtil } from \"../../utils/MouseEventUtil\";\nimport { EventType } from \"../../data/enums/EventType\";\nimport { RenderEngineUtil } from \"../../utils/RenderEngineUtil\";\nimport { LabelType } from \"../../data/enums/LabelType\";\nimport produce from \"immer\";\n\nexport class PolygonRenderEngine extends BaseRenderEngine {\n  private config: RenderEngineConfig = new RenderEngineConfig();\n\n  // =================================================================================================================\n  // STATE\n  // =================================================================================================================\n\n  private activePath: IPoint[] = [];\n  private resizeAnchorIndex: number = null;\n  private suggestedAnchorPositionOnCanvas: IPoint = null;\n  private suggestedAnchorIndexInPolygon: number = null;\n\n  public constructor(canvas: HTMLCanvasElement) {\n    super(canvas);\n    this.labelType = LabelType.POLYGON;\n  }\n\n  // =================================================================================================================\n  // EVENT HANDLERS\n  // =================================================================================================================\n\n  public update(data: EditorData): void {\n    if (!!data.event) {\n      switch (MouseEventUtil.getEventType(data.event)) {\n        case EventType.MOUSE_MOVE:\n          this.mouseMoveHandler(data);\n          break;\n        case EventType.MOUSE_UP:\n          this.mouseUpHandler(data);\n          break;\n        case EventType.MOUSE_DOWN:\n          this.mouseDownHandler(data);\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  public mouseDownHandler(data: EditorData): void {\n    const isMouseOverCanvas: boolean = RenderEngineUtil.isMouseOverCanvas(data);\n    if (isMouseOverCanvas) {\n      if (this.isCreationInProgress()) {\n        const isMouseOverStartAnchor: boolean = this.isMouseOverAnchor(data.mousePositionOnCanvas, this.activePath[0]);\n        if (isMouseOverStartAnchor) {\n          this.addLabelAndFinishCreation(data);\n        } else {\n          this.updateActivelyCreatedLabel(data);\n        }\n      } else {\n        const polygonUnderMouse: LabelPolygon = this.getPolygonUnderMouse(data);\n        if (!!polygonUnderMouse) {\n          const anchorIndex: number = polygonUnderMouse.vertices.reduce(\n            (indexUnderMouse: number, anchor: IPoint, index: number) => {\n              if (indexUnderMouse === null) {\n                const anchorOnCanvas: IPoint = RenderEngineUtil.transferPointFromImageToCanvas(anchor, data);\n                if (this.isMouseOverAnchor(data.mousePositionOnCanvas, anchorOnCanvas)) {\n                  return index;\n                }\n              }\n              return indexUnderMouse;\n            },\n            null\n          );\n\n          if (anchorIndex !== null) {\n            this.startExistingLabelResize(data, polygonUnderMouse.id, anchorIndex);\n          } else {\n            const isMouseOverNewAnchor: boolean = this.isMouseOverAnchor(\n              data.mousePositionOnCanvas,\n              this.suggestedAnchorPositionOnCanvas\n            );\n            if (isMouseOverNewAnchor) {\n              store.dispatch(updateActiveLabelId(polygonUnderMouse.id));\n              this.addSuggestedAnchorToPolygonLabel(data);\n            } else {\n              this.updateActivelyCreatedLabel(data);\n            }\n          }\n        } else {\n          this.updateActivelyCreatedLabel(data);\n        }\n      }\n    }\n  }\n\n  public mouseUpHandler(data: EditorData): void {\n    if (this.isResizeInProgress()) this.endExistingLabelResize(data);\n  }\n\n  public mouseMoveHandler(data: EditorData): void {\n    if (!!data.activeImageRectOnCanvas && !!data.mousePositionOnCanvas) {\n      const isOverImage: boolean = RenderEngineUtil.isMouseOverImage(data);\n      if (isOverImage && !this.isCreationInProgress()) {\n        const labelPolygon: LabelPolygon = this.getPolygonUnderMouse(data);\n        if (!!labelPolygon && !this.isResizeInProgress()) {\n          if (EditorSelector.getHighlightedLabelId() !== labelPolygon.id) {\n            store.dispatch(updateHighlightedLabelId(labelPolygon.id));\n          }\n          const pathOnCanvas: IPoint[] = RenderEngineUtil.transferPolygonFromImageToCanvas(labelPolygon.vertices, data);\n          const linesOnCanvas: ILine[] = this.mapPointsToLines(pathOnCanvas.concat(pathOnCanvas[0]));\n\n          for (let j = 0; j < linesOnCanvas.length; j++) {\n            if (this.isMouseOverLine(data.mousePositionOnCanvas, linesOnCanvas[j])) {\n              this.suggestedAnchorPositionOnCanvas = LineUtil.getCenter(linesOnCanvas[j]);\n              this.suggestedAnchorIndexInPolygon = j + 1;\n              break;\n            }\n          }\n        } else {\n          if (EditorSelector.getHighlightedLabelId() !== null) {\n            store.dispatch(updateHighlightedLabelId(null));\n            this.discardSuggestedPoint();\n          }\n        }\n      }\n    }\n  }\n\n  // =================================================================================================================\n  // RENDERING\n  // =================================================================================================================\n\n  public render(data: EditorData): void {\n    const imageData: ImageData = EditorSelector.getActiveImageData();\n    if (imageData) {\n      this.drawExistingLabels(data);\n      this.drawActivelyCreatedLabel(data);\n      this.drawActivelyResizeLabel(data);\n      this.updateCursorStyle(data);\n      this.drawSuggestedAnchor(data);\n    }\n  }\n\n  private updateCursorStyle(data: EditorData) {\n    if (!!this.canvas && !!data.mousePositionOnCanvas) {\n      const isMouseOverCanvas: boolean = RenderEngineUtil.isMouseOverCanvas(data);\n      if (isMouseOverCanvas) {\n        if (this.isCreationInProgress()) {\n          const isMouseOverStartAnchor: boolean = this.isMouseOverAnchor(\n            data.mousePositionOnCanvas,\n            this.activePath[0]\n          );\n          if (isMouseOverStartAnchor && this.activePath.length > 2)\n            store.dispatch(updateCustomCursorStyle(CustomCursorStyle.CLOSE));\n          else store.dispatch(updateCustomCursorStyle(CustomCursorStyle.DEFAULT));\n        } else {\n          const anchorUnderMouse: IPoint = this.getAnchorUnderMouse(data);\n          const isMouseOverNewAnchor: boolean = this.isMouseOverAnchor(\n            data.mousePositionOnCanvas,\n            this.suggestedAnchorPositionOnCanvas\n          );\n          if (!!isMouseOverNewAnchor) {\n            store.dispatch(updateCustomCursorStyle(CustomCursorStyle.ADD));\n          } else if (this.isResizeInProgress()) {\n            store.dispatch(updateCustomCursorStyle(CustomCursorStyle.MOVE));\n          } else if (!!anchorUnderMouse) {\n            store.dispatch(updateCustomCursorStyle(CustomCursorStyle.MOVE));\n          } else {\n            RenderEngineUtil.wrapDefaultCursorStyleInCancel(data);\n          }\n        }\n        this.canvas.style.cursor = \"none\";\n      } else {\n        this.canvas.style.cursor = \"default\";\n      }\n    }\n  }\n\n  private drawActivelyCreatedLabel(data: EditorData) {\n    const standardizedPoints: IPoint[] = this.activePath.map((point: IPoint) =>\n      RenderEngineUtil.setPointBetweenPixels(point)\n    );\n    const path = standardizedPoints.concat(data.mousePositionOnCanvas);\n    const lines: ILine[] = this.mapPointsToLines(path);\n\n    DrawUtil.drawPolygonWithFill(this.canvas, path, DrawUtil.hexToRGB(this.config.lineActiveColor, 0.2));\n    lines.forEach((line: ILine) => {\n      DrawUtil.drawLine(this.canvas, line.start, line.end, this.config.lineActiveColor, this.config.lineThickness);\n    });\n    this.mapPointsToAnchors(standardizedPoints).forEach((handleRect: IRect) => {\n      DrawUtil.drawRectWithFill(this.canvas, handleRect, this.config.activeAnchorColor);\n    });\n  }\n\n  private drawActivelyResizeLabel(data: EditorData) {\n    const activeLabelPolygon: LabelPolygon = EditorSelector.getActivePolygonLabel();\n    if (!!activeLabelPolygon && this.isResizeInProgress()) {\n      const snappedMousePosition: IPoint = RectUtil.snapPointToRect(\n        data.mousePositionOnCanvas,\n        data.activeImageRectOnCanvas\n      );\n      const polygonOnCanvas: IPoint[] = activeLabelPolygon.vertices.map((point: IPoint, index: number) => {\n        return index === this.resizeAnchorIndex\n          ? snappedMousePosition\n          : RenderEngineUtil.transferPointFromImageToCanvas(point, data);\n      });\n      this.drawPolygon(polygonOnCanvas, true);\n    }\n  }\n\n  private drawExistingLabels(data: EditorData) {\n    const activeLabelId: string = EditorSelector.getActiveLabelId();\n    const highlightedLabelId: string = EditorSelector.getHighlightedLabelId();\n    const imageData: ImageData = EditorSelector.getActiveImageData();\n    const activeGroupIndex = EditorSelector.getActiveGroupIndex();\n\n    imageData.groupList[activeGroupIndex].labelPolygons.forEach((labelPolygon: LabelPolygon) => {\n      const isActive: boolean = labelPolygon.id === activeLabelId || labelPolygon.id === highlightedLabelId;\n      const pathOnCanvas: IPoint[] = RenderEngineUtil.transferPolygonFromImageToCanvas(labelPolygon.vertices, data);\n      if (!(labelPolygon.id === activeLabelId && this.isResizeInProgress())) {\n        this.drawPolygon(pathOnCanvas, isActive);\n      }\n    });\n  }\n\n  private drawPolygon(polygon: IPoint[], isActive: boolean) {\n    const color: string = isActive ? this.config.lineActiveColor : this.config.lineInactiveColor;\n    const standardizedPoints: IPoint[] = polygon.map((point: IPoint) => RenderEngineUtil.setPointBetweenPixels(point));\n    if (isActive) {\n      DrawUtil.drawPolygonWithFill(this.canvas, standardizedPoints, DrawUtil.hexToRGB(color, 0.2));\n    }\n    DrawUtil.drawPolygon(this.canvas, standardizedPoints, color, this.config.lineThickness);\n    if (isActive) {\n      this.mapPointsToAnchors(standardizedPoints).forEach((handleRect: IRect) => {\n        DrawUtil.drawRectWithFill(this.canvas, handleRect, this.config.activeAnchorColor);\n      });\n    }\n  }\n\n  private drawSuggestedAnchor(data: EditorData) {\n    if (this.suggestedAnchorPositionOnCanvas) {\n      const suggestedAnchorRect: IRect = RectUtil.getRectWithCenterAndSize(\n        this.suggestedAnchorPositionOnCanvas,\n        this.config.suggestedAnchorDetectionSize\n      );\n      const isMouseOverSuggestedAnchor: boolean = RectUtil.isPointInside(\n        suggestedAnchorRect,\n        data.mousePositionOnCanvas\n      );\n\n      if (isMouseOverSuggestedAnchor) {\n        const handleRect = RectUtil.getRectWithCenterAndSize(\n          this.suggestedAnchorPositionOnCanvas,\n          this.config.anchorSize\n        );\n        DrawUtil.drawRectWithFill(this.canvas, handleRect, this.config.lineInactiveColor);\n      }\n    }\n  }\n\n  // =================================================================================================================\n  // CREATION\n  // =================================================================================================================\n\n  private updateActivelyCreatedLabel(data: EditorData) {\n    if (this.isCreationInProgress()) {\n      const mousePositionSnapped: IPoint = RectUtil.snapPointToRect(\n        data.mousePositionOnCanvas,\n        data.activeImageRectOnCanvas\n      );\n      this.activePath.push(mousePositionSnapped);\n    } else {\n      const isMouseOverImage: boolean = RectUtil.isPointInside(\n        data.activeImageRectOnCanvas,\n        data.mousePositionOnCanvas\n      );\n      if (isMouseOverImage) {\n        this.activePath.push(data.mousePositionOnCanvas);\n        store.dispatch(updateActiveLabelId(null));\n      }\n    }\n  }\n\n  public cancelLabelCreation() {\n    this.activePath = [];\n  }\n\n  private finishLabelCreation() {\n    this.activePath = [];\n  }\n\n  public addLabelAndFinishCreation(data: EditorData) {\n    if (this.isCreationInProgress() && this.activePath.length > 2) {\n      const polygonOnImage: IPoint[] = RenderEngineUtil.transferPolygonFromCanvasToImage(this.activePath, data);\n      this.addPolygonLabel(polygonOnImage);\n      this.finishLabelCreation();\n    }\n  }\n\n  private addPolygonLabel(polygon: IPoint[]) {\n    const activeLabelIndex = EditorSelector.getActiveLabelNameIndex();\n    const imageData: ImageData = EditorSelector.getActiveImageData();\n    const labelPolygon: LabelPolygon = {\n      id: uuidv1(),\n      labelIndex: activeLabelIndex,\n      checked: false,\n      vertices: polygon,\n    };\n    const activeGroupIndex = EditorSelector.getActiveGroupIndex();\n\n    imageData.groupList[activeGroupIndex].labelPolygons.push(labelPolygon);\n    store.dispatch(updateImageDataById(imageData.id, imageData));\n    store.dispatch(updateFirstLabelCreatedFlag(true));\n    store.dispatch(updateActiveLabelId(labelPolygon.id));\n  }\n\n  // =================================================================================================================\n  // TRANSFER\n  // =================================================================================================================\n\n  private startExistingLabelResize(data: EditorData, labelId: string, anchorIndex: number) {\n    store.dispatch(updateActiveLabelId(labelId));\n    this.resizeAnchorIndex = anchorIndex;\n  }\n\n  private endExistingLabelResize(data: EditorData) {\n    this.applyResizeToPolygonLabel(data);\n    this.resizeAnchorIndex = null;\n  }\n\n  private applyResizeToPolygonLabel(data: EditorData) {\n    const imageData: ImageData = EditorSelector.getActiveImageData();\n    const activeLabel: LabelPolygon = EditorSelector.getActivePolygonLabel();\n    const activeGroupIndex = EditorSelector.getActiveGroupIndex();\n    const newImageData = produce(imageData, draft => {\n      draft.groupList[activeGroupIndex].labelPolygons = imageData.groupList[activeGroupIndex].labelPolygons.map(\n        (polygon: LabelPolygon) => {\n          if (polygon.id !== activeLabel.id) {\n            return polygon;\n          } else {\n            return {\n              ...polygon,\n              vertices: polygon.vertices.map((value: IPoint, index: number) => {\n                if (index !== this.resizeAnchorIndex) {\n                  return value;\n                } else {\n                  const snappedMousePosition: IPoint = RectUtil.snapPointToRect(\n                    data.mousePositionOnCanvas,\n                    data.activeImageRectOnCanvas\n                  );\n                  return RenderEngineUtil.transferPointFromCanvasToImage(snappedMousePosition, data);\n                }\n              }),\n            };\n          }\n        }\n      );\n    });\n\n    store.dispatch(updateImageDataById(imageData.id, newImageData));\n    store.dispatch(updateActiveLabelId(activeLabel.id));\n  }\n\n  private discardSuggestedPoint(): void {\n    this.suggestedAnchorIndexInPolygon = null;\n    this.suggestedAnchorPositionOnCanvas = null;\n  }\n\n  // =================================================================================================================\n  // UPDATE\n  // =================================================================================================================\n\n  private addSuggestedAnchorToPolygonLabel(data: EditorData) {\n    const imageData: ImageData = EditorSelector.getActiveImageData();\n    const activeLabel: LabelPolygon = EditorSelector.getActivePolygonLabel();\n    const newAnchorPositionOnImage: IPoint = RenderEngineUtil.transferPointFromCanvasToImage(\n      this.suggestedAnchorPositionOnCanvas,\n      data\n    );\n    const insert = (arr, index, newItem) => [...arr.slice(0, index), newItem, ...arr.slice(index)];\n    const activeGroupIndex = EditorSelector.getActiveGroupIndex();\n\n    const newImageData: ImageData = produce(imageData, draft => {\n      draft.groupList[imageData.activeGroupIndex].labelPolygons = imageData.groupList[\n        activeGroupIndex\n      ].labelPolygons.map((polygon: LabelPolygon) => {\n        if (polygon.id !== activeLabel.id) {\n          return polygon;\n        } else {\n          return {\n            ...polygon,\n            vertices: insert(polygon.vertices, this.suggestedAnchorIndexInPolygon, newAnchorPositionOnImage),\n          };\n        }\n      });\n    });\n\n    store.dispatch(updateImageDataById(newImageData.id, newImageData));\n    this.startExistingLabelResize(data, activeLabel.id, this.suggestedAnchorIndexInPolygon);\n    this.discardSuggestedPoint();\n  }\n\n  // =================================================================================================================\n  // VALIDATORS\n  // =================================================================================================================\n\n  public isInProgress(): boolean {\n    return this.isCreationInProgress() || this.isResizeInProgress();\n  }\n\n  private isCreationInProgress(): boolean {\n    return this.activePath !== null && this.activePath.length !== 0;\n  }\n\n  private isResizeInProgress(): boolean {\n    return this.resizeAnchorIndex !== null;\n  }\n\n  private isMouseOverAnchor(mouse: IPoint, anchor: IPoint): boolean {\n    if (!mouse || !anchor) return null;\n    return RectUtil.isPointInside(RectUtil.getRectWithCenterAndSize(anchor, this.config.anchorSize), mouse);\n  }\n\n  private isMouseOverLine(mouse: IPoint, l: ILine): boolean {\n    const hoverReach: number = this.config.anchorHoverSize.width / 2;\n    const minX: number = Math.min(l.start.x, l.end.x);\n    const maxX: number = Math.max(l.start.x, l.end.x);\n    const minY: number = Math.min(l.start.y, l.end.y);\n    const maxY: number = Math.max(l.start.y, l.end.y);\n\n    return (\n      minX - hoverReach <= mouse.x &&\n      maxX + hoverReach >= mouse.x &&\n      (minY - hoverReach <= mouse.y && maxY + hoverReach >= mouse.y) &&\n      LineUtil.getDistanceFromLine(l, mouse) < hoverReach\n    );\n  }\n\n  // =================================================================================================================\n  // MAPPERS\n  // =================================================================================================================\n\n  private mapPointsToLines(points: IPoint[]): ILine[] {\n    const lines: ILine[] = [];\n    for (let i = 0; i < points.length - 1; i++) {\n      lines.push({ start: points[i], end: points[i + 1] });\n    }\n    return lines;\n  }\n\n  private mapPointsToAnchors(points: IPoint[]): IRect[] {\n    return points.map((point: IPoint) => RectUtil.getRectWithCenterAndSize(point, this.config.anchorSize));\n  }\n\n  // =================================================================================================================\n  // GETTERS\n  // =================================================================================================================\n\n  private getPolygonUnderMouse(data: EditorData): LabelPolygon {\n    const activeGroupIndex = EditorSelector.getActiveGroupIndex();\n    const labelPolygons: LabelPolygon[] = EditorSelector.getActiveImageData().groupList[activeGroupIndex].labelPolygons;\n    for (let i = 0; i < labelPolygons.length; i++) {\n      const pathOnCanvas: IPoint[] = RenderEngineUtil.transferPolygonFromImageToCanvas(labelPolygons[i].vertices, data);\n      const linesOnCanvas: ILine[] = this.mapPointsToLines(pathOnCanvas.concat(pathOnCanvas[0]));\n\n      for (let j = 0; j < linesOnCanvas.length; j++) {\n        if (this.isMouseOverLine(data.mousePositionOnCanvas, linesOnCanvas[j])) return labelPolygons[i];\n      }\n      for (let j = 0; j < pathOnCanvas.length; j++) {\n        if (this.isMouseOverAnchor(data.mousePositionOnCanvas, pathOnCanvas[j])) return labelPolygons[i];\n      }\n    }\n    return null;\n  }\n\n  private getAnchorUnderMouse(data: EditorData): IPoint {\n    const activeGroupIndex = EditorSelector.getActiveGroupIndex();\n\n    const labelPolygons: LabelPolygon[] = EditorSelector.getActiveImageData().groupList[activeGroupIndex].labelPolygons;\n    for (let i = 0; i < labelPolygons.length; i++) {\n      const pathOnCanvas: IPoint[] = RenderEngineUtil.transferPolygonFromImageToCanvas(labelPolygons[i].vertices, data);\n      for (let j = 0; j < pathOnCanvas.length; j++) {\n        if (this.isMouseOverAnchor(data.mousePositionOnCanvas, pathOnCanvas[j])) return pathOnCanvas[j];\n      }\n    }\n    return null;\n  }\n}\n","export enum ContextType {\n    EDITOR = \"EDITOR\",\n    LEFT_NAVBAR = \"LEFT_NAVBAR\",\n    RIGHT_NAVBAR = \"RIGHT_NAVBAR\",\n    POPUP = \"POPUP\",\n    DROPDOWN = \"DROPDOWN\"\n}","import {IRect} from \"../../interfaces/IRect\";\nimport {BaseRenderEngine} from \"./BaseRenderEngine\";\nimport {EditorData} from \"../../data/EditorData\";\n\nexport class PrimaryEditorRenderEngine extends BaseRenderEngine {\n\n    public constructor(canvas: HTMLCanvasElement) {\n        super(canvas);\n    }\n\n    // =================================================================================================================\n    // EVENT HANDLERS\n    // =================================================================================================================\n\n    public mouseMoveHandler(data: EditorData): void {}\n    public mouseDownHandler(data: EditorData): void {}\n    public mouseUpHandler(data: EditorData): void {}\n\n    // =================================================================================================================\n    // RENDERING\n    // =================================================================================================================\n\n    public render(data: EditorData): void {}\n\n    public drawImage(image: HTMLImageElement, imageRect: IRect) {\n        if (!!image && !!this.canvas) {\n            const ctx = this.canvas.getContext(\"2d\");\n            ctx.drawImage(image, imageRect.x, imageRect.y, imageRect.width, imageRect.height);\n        }\n    }\n\n    isInProgress(): boolean {\n        return false;\n    }\n}","import {HotKeyAction} from \"../../data/HotKeyAction\";\n\nexport class BaseContext {\n    public static actions: HotKeyAction[] = [];\n\n    public static getActions(): HotKeyAction[] {\n        return this.actions;\n    }\n}","import {MobileDeviceData} from \"../data/MobileDeviceData\";\n\nexport class PlatformModel {\n    public static mobileDeviceData: MobileDeviceData;\n    public static isMac: boolean;\n    public static isSafari: boolean;\n    public static isFirefox: boolean;\n}","import {EditorSelector} from \"../../store/selectors/EditorSelector\";\nimport {store} from \"../../index\";\nimport {updateActiveImageIndex} from \"../../store/editor/actionCreators\";\n\nexport class ImageActions {\n    public static getPreviousImage(): void {\n        const currentImageIndex: number = EditorSelector.getActiveImageIndex();\n        store.dispatch(updateActiveImageIndex(currentImageIndex - 1));\n    }\n\n    public static getNextImage(): void {\n        const currentImageIndex: number = EditorSelector.getActiveImageIndex();\n        store.dispatch(updateActiveImageIndex(currentImageIndex + 1));\n    }\n\n    public static getImageByIndex(index: number): void {\n        const imageCount: number = EditorSelector.getImagesData().length;\n\n        if (index < 0 || index > imageCount - 1)\n            return;\n        else\n            store.dispatch(updateActiveImageIndex(index));\n    }\n}","import {HotKeyAction} from \"../../data/HotKeyAction\";\nimport {EditorModel} from \"../../staticModels/EditorModel\";\nimport {LabelType} from \"../../data/enums/LabelType\";\nimport {EditorData} from \"../../data/EditorData\";\nimport {EditorActions} from \"../actions/EditorActions\";\nimport {PolygonRenderEngine} from \"../render/PolygonRenderEngine\";\nimport {BaseContext} from \"./BaseContext\";\nimport {PlatformModel} from \"../../staticModels/PlatformModel\";\nimport {ImageActions} from \"../actions/ImageActions\";\n\nexport class EditorContext extends BaseContext {\n    public static actions: HotKeyAction[] = [\n        {\n            keyCombo: [\"Enter\"],\n            action: (event: KeyboardEvent) => {\n                if (EditorModel.supportRenderingEngine && EditorModel.supportRenderingEngine.labelType === LabelType.POLYGON) {\n                    const editorData: EditorData = EditorActions.getEditorData();\n                    (EditorModel.supportRenderingEngine as PolygonRenderEngine).addLabelAndFinishCreation(editorData);\n                }\n                EditorActions.fullRender();\n            }\n        },\n        {\n            keyCombo: [\"Escape\"],\n            action: (event: KeyboardEvent) => {\n                if (EditorModel.supportRenderingEngine && EditorModel.supportRenderingEngine.labelType === LabelType.POLYGON)\n                    (EditorModel.supportRenderingEngine as PolygonRenderEngine).cancelLabelCreation();\n                EditorActions.fullRender();\n            }\n        },\n        {\n            keyCombo: PlatformModel.isMac ? [\"Meta\", \"ArrowLeft\"] : [\"Control\", \"ArrowLeft\"],\n            action: (event: KeyboardEvent) => {\n                ImageActions.getPreviousImage()\n            }\n        },\n        {\n            keyCombo: PlatformModel.isMac ? [\"Meta\", \"ArrowRight\"] : [\"Control\", \"ArrowRight\"],\n            action: (event: KeyboardEvent) => {\n                ImageActions.getNextImage();\n            }\n        }\n    ];\n}","import {store} from \"../..\";\nimport {PopupWindowType} from \"../../data/enums/PopupWindowType\";\nimport {ContextType} from \"../../data/enums/ContextType\";\n\nexport class GeneralSelector {\n    public static getActivePopupType(): PopupWindowType {\n        return store.getState().general.activePopupType;\n    }\n\n    public static getActiveContext(): ContextType {\n        return store.getState().general.activeContext;\n    }\n}","import {ContextManager} from \"../context/ContextManager\";\nimport {store} from \"../../index\";\nimport {updateActivePopupType} from \"../../store/general/actionCreators\";\n\nexport class PopupActions {\n    public static close() {\n        store.dispatch(updateActivePopupType(null));\n        ContextManager.restoreCtx();\n    }\n}","import {HotKeyAction} from \"../../data/HotKeyAction\";\nimport {PopupWindowType} from \"../../data/enums/PopupWindowType\";\nimport {GeneralSelector} from \"../../store/selectors/GeneralSelector\";\nimport {BaseContext} from \"./BaseContext\";\nimport {PopupActions} from \"../actions/PopupActions\";\nimport {Settings} from \"../../settings/Settings\";\n\nexport class PopupContext extends BaseContext {\n    public static actions: HotKeyAction[] = [\n        {\n            keyCombo: [\"Escape\"],\n            action: (event: KeyboardEvent) => {\n                const popupType: PopupWindowType = GeneralSelector.getActivePopupType();\n                const canBeClosed: boolean = Settings.CLOSEABLE_POPUPS.includes(popupType);\n                if (canBeClosed) {\n                    PopupActions.close();\n                }\n            }\n        }\n    ];\n}","import {ContextType} from \"../../data/enums/ContextType\";\nimport {HotKeyAction} from \"../../data/HotKeyAction\";\nimport {store} from \"../../index\";\nimport {updateActiveContext} from \"../../store/general/actionCreators\";\nimport * as _ from \"lodash\";\nimport {EditorContext} from \"./EditorContext\";\nimport {PopupContext} from \"./PopupContext\";\nimport {GeneralSelector} from \"../../store/selectors/GeneralSelector\";\n\nexport class ContextManager {\n    private static activeCombo: string[] = [];\n    private static actions: HotKeyAction[] = [];\n    private static contextHistory: ContextType[] = [];\n\n    public static getActiveCombo(): string[] {\n        return ContextManager.activeCombo;\n    }\n\n    public static init(): void {\n        window.addEventListener(\"keydown\", ContextManager.onDown);\n        window.addEventListener(\"keyup\", ContextManager.onUp);\n    }\n\n    public static switchCtx(context: ContextType): void {\n        const activeCtx: ContextType = GeneralSelector.getActiveContext();\n\n        if (activeCtx !== context) {\n            ContextManager.contextHistory.push(activeCtx);\n            ContextManager.updateCtx(context);\n        }\n    }\n\n    private static updateCtx(context: ContextType): void {\n        store.dispatch(updateActiveContext(context));\n        switch (context) {\n            case ContextType.EDITOR:\n                ContextManager.actions = EditorContext.getActions();\n                break;\n            case ContextType.POPUP:\n                ContextManager.actions = PopupContext.getActions();\n                break;\n            default:\n                ContextManager.actions = [];\n        }\n    }\n\n    public static restoreCtx(): void {\n        ContextManager.updateCtx(ContextManager.contextHistory.pop());\n    }\n\n    private static onDown(event: KeyboardEvent): void {\n        const keyCode: string = ContextManager.getKeyCodeFromEvent(event);\n        if (!ContextManager.isInCombo(keyCode)) {\n            ContextManager.addToCombo(keyCode);\n            ContextManager.execute(event);\n        }\n    }\n\n    private static onUp(event: KeyboardEvent): void {\n        const keyCode: string = ContextManager.getKeyCodeFromEvent(event);\n        ContextManager.removeFromCombo(keyCode);\n    }\n\n    private static execute(event: KeyboardEvent): void {\n        for (let i = 0; i < ContextManager.actions.length; i++) {\n            const hotKey: HotKeyAction = ContextManager.actions[i];\n            if (ContextManager.matchCombo(ContextManager.activeCombo, hotKey.keyCombo)) {\n                hotKey.action(event);\n            }\n        }\n    }\n\n    private static isInCombo(keyCode: string): boolean {\n        return ContextManager.activeCombo.indexOf(keyCode) >= 0;\n    }\n\n    private static addToCombo(keyCode: string): void {\n        ContextManager.activeCombo.push(keyCode);\n    }\n\n    private static removeFromCombo(keyCode: string): void {\n        const index: number = ContextManager.activeCombo.indexOf(keyCode);\n        if (index >= 0) {\n            ContextManager.activeCombo.splice(index, 1);\n        }\n    }\n\n    private static getKeyCodeFromEvent(event: KeyboardEvent): string {\n        return event.key;\n    }\n\n    private static matchCombo(combo1: string[], combo2: string[]): boolean {\n        return _.isEmpty(_.xor(combo1, combo2))\n    }\n}","import { LabelType } from '../../data/enums/LabelType';\nimport { EditorModel } from '../../staticModels/EditorModel';\nimport { RectRenderEngine } from '../render/RectRenderEngine';\nimport { PointRenderEngine } from '../render/PointRenderEngine';\nimport { PolygonRenderEngine } from '../render/PolygonRenderEngine';\nimport { IRect } from '../../interfaces/IRect';\nimport { Settings } from '../../settings/Settings';\nimport { RectUtil } from '../../utils/RectUtil';\nimport { EditorData } from '../../data/EditorData';\nimport { CanvasUtil } from '../../utils/CanvasUtil';\nimport { ISize } from '../../interfaces/ISize';\nimport React from 'react';\nimport { IPoint } from '../../interfaces/IPoint';\nimport { DrawUtil } from '../../utils/DrawUtil';\nimport { PrimaryEditorRenderEngine } from '../render/PrimaryEditorRenderEngine';\nimport { ContextManager } from '../context/ContextManager';\n\nexport class EditorActions {\n  // =================================================================================================================\n  // RENDER ENGINES\n  // =================================================================================================================\n\n  public static mountSupportRenderingEngine(activeLabelType: LabelType) {\n    switch (activeLabelType) {\n      case LabelType.RECTANGLE:\n        EditorModel.supportRenderingEngine = new RectRenderEngine(EditorModel.canvas);\n        break;\n      case LabelType.POINT:\n        EditorModel.supportRenderingEngine = new PointRenderEngine(EditorModel.canvas);\n        break;\n      case LabelType.POLYGON:\n        EditorModel.supportRenderingEngine = new PolygonRenderEngine(EditorModel.canvas);\n        break;\n      default:\n        EditorModel.supportRenderingEngine = null;\n        break;\n    }\n  }\n\n  public static swapSupportRenderingEngine(activeLabelType: LabelType) {\n    EditorActions.mountSupportRenderingEngine(activeLabelType);\n  }\n\n  public static mountRenderEngines(activeLabelType: LabelType) {\n    EditorModel.primaryRenderingEngine = new PrimaryEditorRenderEngine(EditorModel.canvas);\n    EditorActions.mountSupportRenderingEngine(activeLabelType);\n  }\n\n  // =================================================================================================================\n  // RENDER\n  // =================================================================================================================\n\n  public static fullRender() {\n    DrawUtil.clearCanvas(EditorModel.canvas);\n    EditorModel.primaryRenderingEngine.drawImage(EditorModel.image, EditorModel.imageRectOnCanvas);\n    EditorModel.primaryRenderingEngine.render(EditorActions.getEditorData());\n    EditorModel.supportRenderingEngine && EditorModel.supportRenderingEngine.render(EditorActions.getEditorData());\n  }\n\n  // =================================================================================================================\n  // SETTERS\n  // =================================================================================================================\n\n  public static setLoadingStatus(status: boolean) {\n    EditorModel.isLoading = status;\n  }\n\n  public static setActiveImage(image: HTMLImageElement) {\n    EditorModel.image = image;\n  }\n\n  // =================================================================================================================\n  // GETTERS\n  // =================================================================================================================\n\n  public static getEditorData(event?: Event): EditorData {\n    return {\n      mousePositionOnCanvas: EditorModel.mousePositionOnCanvas,\n      canvasSize: CanvasUtil.getSize(EditorModel.canvas),\n      activeImageScale: EditorModel.imageScale,\n      activeImageRectOnCanvas: EditorModel.imageRectOnCanvas,\n      activeKeyCombo: ContextManager.getActiveCombo(),\n      event: event,\n    };\n  }\n\n  // =================================================================================================================\n  // CALCULATIONS\n  // =================================================================================================================\n\n  public static calculateImageRect(image: HTMLImageElement): IRect | null {\n    if (!!image) {\n      const canvasPaddingWidth: number = Settings.CANVAS_PADDING_WIDTH_PX;\n      const imageRect: IRect = { x: 0, y: 0, width: image.width, height: image.height };\n      const canvasRect: IRect = {\n        x: canvasPaddingWidth,\n        y: canvasPaddingWidth,\n        width: EditorModel.canvas.width - 2 * canvasPaddingWidth,\n        height: EditorModel.canvas.height - 2 * canvasPaddingWidth,\n      };\n      return RectUtil.fitInsideRectWithRatio(canvasRect, RectUtil.getRatio(imageRect));\n    }\n    return null;\n  }\n\n  public static calculateImageScale(image: HTMLImageElement): number | null {\n    if (!image || !EditorModel.imageRectOnCanvas) return null;\n\n    return image.width / EditorModel.imageRectOnCanvas.width;\n  }\n\n  // =================================================================================================================\n  // HELPERS\n  // =================================================================================================================\n\n  public static calculateAllCharacteristics() {\n    EditorModel.imageRectOnCanvas = EditorActions.calculateImageRect(EditorModel.image);\n    EditorModel.imageScale = EditorActions.calculateImageScale(EditorModel.image);\n  }\n\n  public static resizeCanvas = (newCanvasSize: ISize) => {\n    if (!!newCanvasSize && !!EditorModel.canvas) {\n      EditorModel.canvas.width = newCanvasSize.width;\n      EditorModel.canvas.height = newCanvasSize.height;\n    }\n  };\n\n  public static updateMousePositionIndicator(event: React.MouseEvent<HTMLCanvasElement, MouseEvent> | MouseEvent) {\n    if (!EditorModel.imageRectOnCanvas || !EditorModel.canvas) {\n      EditorModel.mousePositionIndicator.style.display = 'none';\n      EditorModel.cursor.style.display = 'none';\n      return;\n    }\n\n    const mousePositionOnCanvas: IPoint = CanvasUtil.getMousePositionOnCanvasFromEvent(event, EditorModel.canvas);\n    const canvasRect: IRect = { x: 0, y: 0, ...CanvasUtil.getSize(EditorModel.canvas) };\n    const isOverCanvas: boolean = RectUtil.isPointInside(canvasRect, mousePositionOnCanvas);\n\n    if (!isOverCanvas) {\n      EditorModel.mousePositionIndicator.style.display = 'none';\n      EditorModel.cursor.style.display = 'none';\n      return;\n    }\n\n    const isOverImage: boolean = RectUtil.isPointInside(EditorModel.imageRectOnCanvas, mousePositionOnCanvas);\n\n    if (isOverImage) {\n      const scale = EditorModel.imageScale;\n      const x: number = Math.round((mousePositionOnCanvas.x - EditorModel.imageRectOnCanvas.x) * scale);\n      const y: number = Math.round((mousePositionOnCanvas.y - EditorModel.imageRectOnCanvas.y) * scale);\n      const text: string = 'x: ' + x + ', y: ' + y;\n\n      EditorModel.mousePositionIndicator.innerHTML = text;\n      EditorModel.mousePositionIndicator.style.left = mousePositionOnCanvas.x + 15 + 'px';\n      EditorModel.mousePositionIndicator.style.top = mousePositionOnCanvas.y + 15 + 'px';\n      EditorModel.mousePositionIndicator.style.display = 'block';\n    } else {\n      EditorModel.mousePositionIndicator.style.display = 'none';\n    }\n\n    EditorModel.cursor.style.left = mousePositionOnCanvas.x + 'px';\n    EditorModel.cursor.style.top = mousePositionOnCanvas.y + 'px';\n    EditorModel.cursor.style.display = 'block';\n  }\n}\n","import React from 'react';\nimport { ISize } from '../../../interfaces/ISize';\nimport { IRect } from '../../../interfaces/IRect';\nimport Scrollbars from 'react-custom-scrollbars';\nimport { VirtualListUtil } from '../../../utils/VirtualListUtil';\nimport { IPoint } from '../../../interfaces/IPoint';\nimport { RectUtil } from '../../../utils/RectUtil';\nimport _ from 'lodash';\nimport { EditorActions } from '../../../logic/actions/EditorActions';\nimport { EditorSelector } from '../../../store/selectors/EditorSelector';\nimport { ImageData } from '../../../store/editor/types';\nimport {\n  updateGroupList,\n  updateActiveGroupIndex,\n  updateLabelIndexByInfo,\n  updateActiveImageIndex,\n} from '../../../store/editor/actionCreators';\nimport { RenderEngineUtil } from '../../../utils/RenderEngineUtil';\nimport { EditorModel } from '../../../staticModels/EditorModel';\n\ninterface IProps {\n  size: ISize;\n  childCount: number;\n  childSize: ISize;\n  childRender: (index: number, isScrolling: boolean, isVisible: boolean, style: React.CSSProperties) => any;\n  overScanHeight?: number;\n}\n\ninterface IState {\n  viewportRect: IRect;\n  isScrolling: boolean;\n}\n\nexport class VirtualList extends React.Component<IProps, IState> {\n  private gridSize: ISize;\n  private contentSize: ISize;\n  private childAnchors: IPoint[];\n  private scrollbars: Scrollbars;\n  private loading: boolean;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      viewportRect: null,\n      isScrolling: false,\n    };\n    this.loading = false;\n  }\n\n  public componentDidMount(): void {\n    const { size, childSize, childCount } = this.props;\n    this.calculate(size, childSize, childCount);\n    this.setState({\n      viewportRect: {\n        x: 0,\n        y: 0,\n        width: this.props.size.width,\n        height: this.props.size.height,\n      },\n    });\n  }\n\n  public componentWillUpdate(nextProps: Readonly<IProps>, nextState: Readonly<IState>, nextContext: any): void {\n    const { size, childSize, childCount } = nextProps;\n    if (\n      this.props.size.height !== size.height ||\n      this.props.size.width !== size.width ||\n      this.props.childCount !== childCount\n    ) {\n      this.calculate(size, childSize, childCount);\n      this.setState({\n        viewportRect: {\n          x: this.scrollbars.getValues().scrollLeft,\n          y: this.scrollbars.getValues().scrollTop,\n          width: size.width,\n          height: size.height,\n        },\n      });\n    }\n  }\n\n  private calculate = (size: ISize, childSize: ISize, childCount: number) => {\n    this.gridSize = VirtualListUtil.calculateGridSize(size, childSize, childCount);\n    this.contentSize = VirtualListUtil.calculateContentSize(size, childSize, this.gridSize);\n    this.childAnchors = VirtualListUtil.calculateAnchorPoints(size, childSize, childCount);\n  };\n\n  private getVirtualListStyle = (): React.CSSProperties => {\n    return {\n      position: 'relative',\n      width: this.props.size.width,\n      height: this.props.size.height,\n    };\n  };\n\n  private getVirtualListContentStyle = (): React.CSSProperties => {\n    return {\n      width: this.contentSize.width,\n      height: this.contentSize.height,\n    };\n  };\n\n  private onScrollStart = () => {\n    this.setState({ isScrolling: true });\n  };\n\n  private onScrollStop = () => {\n    this.setState({ isScrolling: false });\n    // this.onUpdate();\n  };\n\n  private onScroll = values => {\n    this.setState({\n      viewportRect: {\n        x: values.scrollLeft,\n        y: values.scrollTop,\n        width: this.props.size.width,\n        height: this.props.size.height,\n      },\n    });\n  };\n\n  private getChildren = () => {\n    const { viewportRect, isScrolling } = this.state;\n    const { overScanHeight, childSize } = this.props;\n    const overScan: number = !!overScanHeight ? overScanHeight : 0;\n\n    const viewportRectWithOverScan: IRect = {\n      x: viewportRect.x,\n      y: viewportRect.y - overScan,\n      width: viewportRect.width,\n      height: viewportRect.height + 2 * overScan,\n    };\n    // let showImageIndexs: number[] = [];\n    const result = this.childAnchors.reduce((children, anchor: IPoint, index: number) => {\n      const childRect = Object.assign(anchor, childSize);\n      const isVisible = RectUtil.intersect(viewportRectWithOverScan, childRect);\n\n      if (isVisible) {\n        const childStyle: React.CSSProperties = {\n          position: 'absolute',\n          left: anchor.x,\n          top: anchor.y,\n          width: childSize.width,\n          height: childSize.height,\n        };\n        // showImageIndexs.push(index);\n        return children.concat(this.props.childRender(index, isScrolling, isVisible, childStyle));\n      } else {\n        return children;\n      }\n    }, []);\n    // if (showImageIndexs && !_.isEqual(showImageIndexs, (window as any).showImageIndexs)) {\n    //   console.log(showImageIndexs, (window as any).showImageIndexs, '(window as any).showImageIndexs');\n    //   (window as any).showImageIndexs = showImageIndexs;\n    // }\n\n    return result;\n  };\n  private onUpdate = () => {\n    const imagesData = EditorSelector.getImagesData();\n    const activeImageIndex = EditorSelector.getActiveImageIndex();\n    if (this.state.isScrolling) {\n      return;\n    }\n    setTimeout(() => {\n      localStorage.setItem(\n        'offsetHeight',\n        (document.getElementsByClassName('TopNavigationBar')[0] as any).offsetHeight\n      );\n      localStorage.setItem(\n        'offsetWidth',\n        (document.getElementsByClassName('SideNavigationBar left')[0] as any).offsetWidth\n      );\n      const editorData = EditorActions.getEditorData();\n      const offsetWidth = localStorage.getItem('offsetWidth');\n      const offsetHeight = localStorage.getItem('offsetHeight');\n      const newIndexs: number[] = [];\n      [].slice\n        .call(document.getElementsByClassName('ImagePreview'))\n        .forEach(r => newIndexs.push(+r.getAttribute('data-index')));\n      // const showImageIndexs: number[] = (window as any).showImageIndexs || [];\n      const showImagesData = imagesData.filter((itme, idx) => newIndexs.includes(idx));\n      showImagesData.forEach((imageData, imageIndex) => {\n        const localData: ImageData = JSON.parse(localStorage.getItem(imageData.fileData.name));\n        // updateActiveImageIndex(imageIndex);\n        const evt_click = new MouseEvent('click', {\n          bubbles: true,\n          view: window,\n        });\n        document.querySelectorAll('.VirtualListContent .ImagePreview')[imageIndex].dispatchEvent(evt_click);\n        if (localData) {\n          localData.groupList.forEach((item, groupIndex) => {\n            if (groupIndex !== 0) {\n              updateGroupList(`person-${groupIndex}`);\n              updateActiveGroupIndex(groupIndex);\n            }\n            item.labelPoints.forEach((labelPoint, labelPointIndex) => {\n              const point = RenderEngineUtil.transferPointFromImageToCanvas(labelPoint.point, editorData);\n              const evt_up = new MouseEvent('mouseup', {\n                bubbles: true,\n                view: window,\n                clientX: point.x + +offsetWidth,\n                clientY: point.y + +offsetHeight,\n              });\n              const evt_down = new MouseEvent('mousedown', {\n                bubbles: true,\n                view: window,\n                clientX: point.x + +offsetWidth,\n                clientY: point.y + +offsetHeight,\n              });\n              EditorModel.canvas.dispatchEvent(evt_up);\n              EditorModel.canvas.dispatchEvent(evt_down);\n              updateLabelIndexByInfo(\n                imageIndex,\n                groupIndex,\n                labelPointIndex,\n                labelPoint.labelIndex,\n                labelPoint.checked\n              );\n            });\n          });\n        }\n      });\n      //   updateActiveImageIndex(activeImageIndex);\n    }, 1000);\n  };\n  public render() {\n    const displayContent = !!this.props.size && !!this.props.childSize && !!this.gridSize;\n\n    return (\n      <div className=\"VirtualList\" style={this.getVirtualListStyle()}>\n        <Scrollbars\n          ref={ref => (this.scrollbars = ref)}\n          onScrollFrame={this.onScroll}\n          onScrollStart={this.onScrollStart}\n          onScrollStop={this.onScrollStop}\n          autoHide={true}\n          //   onUpdate={this.onUpdate}\n        >\n          {displayContent && (\n            <div className=\"VirtualListContent\" style={this.getVirtualListContentStyle()}>\n              {this.getChildren()}\n            </div>\n          )}\n        </Scrollbars>\n      </div>\n    );\n  }\n}\n","export class ImageLoadManager {\n  private static queue: (() => Promise<any>)[] = [];\n  private static isRunning: boolean = false;\n\n  public static add(fx: Promise<any>) {\n    ImageLoadManager.queue.push(async () => await fx);\n  }\n\n  public static run() {\n    setTimeout(() => ImageLoadManager.runQueue(), 10);\n  }\n\n  public static addAndRun(fx: Promise<any>) {\n    ImageLoadManager.add(fx);\n    ImageLoadManager.run();\n  }\n\n  public static async runQueue() {\n    if (!ImageLoadManager.isRunning) {\n      ImageLoadManager.isRunning = true;\n      await ImageLoadManager.runTasks();\n      ImageLoadManager.isRunning = false;\n    }\n  }\n\n  private static async runTasks() {\n    while (ImageLoadManager.queue.length > 0) {\n      const fx = ImageLoadManager.queue.shift();\n      await fx();\n    }\n  }\n}\n","export type ImageMap = { [s: string]: HTMLImageElement; };\n\nexport class ImageRepository {\n    private static repository: ImageMap = {};\n\n    public static store(uuid: string, image: HTMLImageElement): string {\n        ImageRepository.repository[uuid] = image;\n        return uuid;\n    }\n\n    public static getById(uuid: string): HTMLImageElement {\n        return ImageRepository.repository[uuid];\n    }\n}","import uuidv1 from 'uuid/v1';\nimport { ImageData } from '../store/editor/types';\n\nexport class FileUtil {\n  public static mapFileDataToImageData(fileData: File): ImageData {\n    if (JSON.parse(localStorage.getItem(fileData.name))) {\n      var newfileData = JSON.parse(localStorage.getItem(fileData.name));\n      newfileData.fileData = fileData;\n      newfileData.loadStatus = false;\n      // newfileData.groupList.forEach((item, idx) => {\n      //   item.firstLabelCreatedFlag = false;\n      //   // newfileData.groupList[idx].labelPoints = [];\n      // });\n      // console.log(newfileData);\n      return newfileData;\n    }\n    return {\n      id: uuidv1(),\n      fileData: fileData,\n      loadStatus: false,\n      activeGroupIndex: 0,\n      groupList: [\n        {\n          labelRects: [],\n          labelPoints: [],\n          labelPolygons: [],\n          activeLabelNameIndex: 0,\n          activeLabelType: null,\n          activeLabelId: null,\n          highlightedLabelId: null,\n          firstLabelCreatedFlag: false,\n        },\n      ],\n    };\n  }\n\n  public static loadImage(\n    fileData: File,\n    onSuccess: (image: HTMLImageElement) => any,\n    onFailure: () => any\n  ): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const url = URL.createObjectURL(fileData);\n      const image = new Image();\n      image.src = url;\n      image.onload = () => {\n        onSuccess(image);\n        resolve();\n      };\n      image.onerror = () => {\n        onFailure();\n        reject();\n      };\n    });\n  }\n\n  public static loadLabelsList(fileData: File, onSuccess: (labels: string[]) => any, onFailure: () => any) {\n    const reader = new FileReader();\n    reader.readAsText(fileData);\n    reader.onloadend = function(evt: any) {\n      const contents: string = evt.target.result;\n      onSuccess(contents.split(/[\\r\\n]/));\n    };\n    reader.onerror = () => onFailure();\n  }\n}\n","export enum ProjectType {\n    IMAGE_RECOGNITION = \"IMAGE_RECOGNITION\",\n    OBJECT_DETECTION = \"OBJECT_DETECTION\"\n}","import classNames from 'classnames';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { ClipLoader } from 'react-spinners';\nimport { ImageLoadManager } from '../../../../logic/imageRepository/ImageLoadManager';\nimport { IRect } from '../../../../interfaces/IRect';\nimport { ISize } from '../../../../interfaces/ISize';\nimport { ImageRepository } from '../../../../logic/imageRepository/ImageRepository';\nimport { Settings } from '../../../../settings/Settings';\nimport { AppState } from '../../../../store';\nimport { updateImageDataById } from '../../../../store/editor/actionCreators';\nimport { ImageData } from '../../../../store/editor/types';\nimport { FileUtil } from '../../../../utils/FileUtil';\nimport { RectUtil } from '../../../../utils/RectUtil';\nimport './ImagePreview.scss';\n\ninterface IProps {\n  imageData: ImageData;\n  style: React.CSSProperties;\n  size: ISize;\n  index: number;\n  isScrolling?: boolean;\n  isChecked?: boolean;\n  onClick?: () => any;\n  isSelected?: boolean;\n  updateImageDataById: (id: string, newImageData: ImageData) => any;\n}\n\ninterface IState {\n  image: HTMLImageElement;\n}\n\nclass ImagePreview extends React.Component<IProps, IState> {\n  private isLoading: boolean = false;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      image: null,\n    };\n  }\n\n  public componentDidMount(): void {\n    ImageLoadManager.addAndRun(this.loadImage(this.props.imageData, this.props.isScrolling));\n  }\n\n  public componentWillUpdate(nextProps: Readonly<IProps>, nextState: Readonly<IState>, nextContext: any): void {\n    if (this.props.imageData.id !== nextProps.imageData.id) {\n      if (nextProps.imageData.loadStatus) {\n        ImageLoadManager.addAndRun(this.loadImage(nextProps.imageData, nextProps.isScrolling));\n      } else {\n        this.setState({ image: null });\n      }\n    }\n\n    if (this.props.isScrolling && !nextProps.isScrolling) {\n      ImageLoadManager.addAndRun(this.loadImage(nextProps.imageData, false));\n    }\n  }\n\n  shouldComponentUpdate(nextProps: Readonly<IProps>, nextState: Readonly<IState>, nextContext: any): boolean {\n    return (\n      this.props.imageData.id !== nextProps.imageData.id ||\n      this.state.image !== nextState.image ||\n      this.props.isSelected !== nextProps.isSelected ||\n      this.props.isChecked !== nextProps.isChecked\n    );\n  }\n\n  private loadImage = async (imageData: ImageData, isScrolling: boolean) => {\n    if (imageData.loadStatus) {\n      const image = ImageRepository.getById(imageData.id);\n      if (this.state.image !== image) {\n        this.setState({ image });\n      }\n    } else if (!isScrolling || !this.isLoading) {\n      this.isLoading = true;\n      const saveLoadedImagePartial = (image: HTMLImageElement) => this.saveLoadedImage(image, imageData);\n      await FileUtil.loadImage(imageData.fileData, saveLoadedImagePartial, this.handleLoadImageError);\n    }\n  };\n\n  private saveLoadedImage = (image: HTMLImageElement, imageData: ImageData) => {\n    this.props.updateImageDataById(imageData.id, { ...imageData, loadStatus: true });\n    ImageRepository.store(imageData.id, image);\n    if (imageData.id === this.props.imageData.id) {\n      this.setState({ image });\n      this.isLoading = false;\n    }\n  };\n\n  private getStyle = () => {\n    const { size } = this.props;\n\n    const containerRect: IRect = {\n      x: 0.15 * size.width,\n      y: 0.15 * size.height,\n      width: 0.7 * size.width,\n      height: 0.7 * size.height,\n    };\n\n    const imageRect: IRect = {\n      x: 0,\n      y: 0,\n      width: this.state.image.width,\n      height: this.state.image.height,\n    };\n\n    const imageRatio = RectUtil.getRatio(imageRect);\n    const imagePosition: IRect = RectUtil.fitInsideRectWithRatio(containerRect, imageRatio);\n\n    return {\n      width: imagePosition.width,\n      height: imagePosition.height,\n      left: imagePosition.x,\n      top: imagePosition.y,\n    };\n  };\n\n  private handleLoadImageError = () => {};\n\n  private getClassName = () => {\n    return classNames('ImagePreview', {\n      selected: this.props.isSelected,\n    });\n  };\n\n  public render() {\n    const { isChecked, style, onClick, index } = this.props;\n    return (\n      <div className={this.getClassName()} style={style} onClick={onClick ? onClick : undefined} data-index={index}>\n        {!!this.state.image ? (\n          [\n            <div className=\"Foreground\" key={'Foreground'} style={this.getStyle()}>\n              <img\n                className=\"Image\"\n                draggable={false}\n                src={this.state.image.src}\n                alt={this.state.image.alt}\n                style={{ ...this.getStyle(), left: 0, top: 0 }}\n              />\n              {isChecked && (\n                <img className=\"CheckBox\" draggable={false} src={'ico/checkbox-checked-color.png'} alt={'checkbox'} />\n              )}\n            </div>,\n            <div className=\"Background\" key={'Background'} style={this.getStyle()} />,\n          ]\n        ) : (\n          <ClipLoader sizeUnit={'px'} size={30} color={Settings.SECONDARY_COLOR} loading={true} />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  updateImageDataById,\n};\n\nconst mapStateToProps = (state: AppState) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ImagePreview);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { LabelType } from '../../../../data/enums/LabelType';\nimport { ISize } from '../../../../interfaces/ISize';\nimport { AppState } from '../../../../store';\nimport {\n  updateActiveImageIndex,\n  updateActiveLabelId,\n  updateActiveLabelType,\n  updateGroupList,\n  updateActiveGroupIndex,\n  updateLabelIndexByInfo,\n} from '../../../../store/editor/actionCreators';\nimport { ImageData } from '../../../../store/editor/types';\nimport { VirtualList } from '../../../Common/VirtualList/VirtualList';\nimport ImagePreview from '../ImagePreview/ImagePreview';\nimport './ImagesList.scss';\nimport { ContextManager } from '../../../../logic/context/ContextManager';\nimport { ContextType } from '../../../../data/enums/ContextType';\nimport { EditorSelector } from '../../../../store/selectors/EditorSelector';\nimport { EditorActions } from '../../../../logic/actions/EditorActions';\nimport { RenderEngineUtil } from '../../../../utils/RenderEngineUtil';\nimport { EditorModel } from '../../../../staticModels/EditorModel';\n\ninterface IProps {\n  activeImageIndex: number;\n  imagesData: ImageData[];\n  updateActiveImageIndex: (activeImageIndex: number) => any;\n  updateActiveLabelId: (activeLabelId: string) => any;\n  updateActiveLabelType: (activeLabelType: LabelType) => any;\n  activeLabelType: LabelType;\n  updateGroupList: (groupName: string) => any;\n  updateActiveGroupIndex: (groupIndex: number) => any;\n  updateLabelIndexByInfo: (\n    imageIndex: number,\n    groupIndex: number,\n    labelPointIndex: number,\n    labelIndex: number,\n    checked: boolean\n  ) => any;\n}\n\ninterface IState {\n  size: ISize;\n}\n\nclass ImagesList extends React.Component<IProps, IState> {\n  private imagesListRef: HTMLDivElement;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      size: null,\n    };\n  }\n\n  public componentDidMount(): void {\n    this.updateListSize();\n    window.addEventListener('resize', this.updateListSize);\n  }\n\n  public componentWillUnmount(): void {\n    window.removeEventListener('resize', this.updateListSize);\n  }\n\n  private updateListSize = () => {\n    if (!this.imagesListRef) return;\n\n    const listBoundingBox = this.imagesListRef.getBoundingClientRect();\n    this.setState(\n      {\n        size: {\n          width: listBoundingBox.width,\n          height: listBoundingBox.height,\n        },\n      },\n      () => {\n        // localStorage.setItem(\n        //   'offsetHeight',\n        //   (document.getElementsByClassName('TopNavigationBar')[0] as any).offsetHeight\n        // );\n        // localStorage.setItem(\n        //   'offsetWidth',\n        //   (document.getElementsByClassName('SideNavigationBar left')[0] as any).offsetWidth\n        // );\n        // setTimeout(() => {\n        //   const editorData = EditorActions.getEditorData();\n        //   const offsetWidth = localStorage.getItem('offsetWidth');\n        //   const offsetHeight = localStorage.getItem('offsetHeight');\n        //   const showImageIndexs: number[] = (window as any).showImageIndexs || [];\n        //   const showImagesData = this.props.imagesData.filter((itme, idx) => showImageIndexs.includes(idx));\n        //   console.log('showImagesData', showImagesData.length);\n        //   showImagesData.forEach((imageData, imageIndex) => {\n        //     console.log('activeImageIndex', imageIndex);\n        //     const localData: ImageData = JSON.parse(localStorage.getItem(imageData.fileData.name));\n        //     // updateActiveImageIndex(imageIndex);\n        //     const evt_click = new MouseEvent('click', {\n        //       bubbles: true,\n        //       view: window,\n        //     });\n        //     document.querySelectorAll('.VirtualListContent .ImagePreview')[imageIndex].dispatchEvent(evt_click);\n        //     if (localData) {\n        //       localData.groupList.forEach((item, groupIndex) => {\n        //         if (groupIndex !== 0) {\n        //           updateGroupList(`person-${groupIndex}`);\n        //           updateActiveGroupIndex(groupIndex);\n        //         }\n        //         item.labelPoints.forEach((labelPoint, labelPointIndex) => {\n        //           const point = RenderEngineUtil.transferPointFromImageToCanvas(labelPoint.point, editorData);\n        //           const evt_up = new MouseEvent('mouseup', {\n        //             bubbles: true,\n        //             view: window,\n        //             clientX: point.x + +offsetWidth,\n        //             clientY: point.y + +offsetHeight,\n        //           });\n        //           const evt_down = new MouseEvent('mousedown', {\n        //             bubbles: true,\n        //             view: window,\n        //             clientX: point.x + +offsetWidth,\n        //             clientY: point.y + +offsetHeight,\n        //           });\n        //           EditorModel.canvas.dispatchEvent(evt_up);\n        //           EditorModel.canvas.dispatchEvent(evt_down);\n        //           console.log(imageIndex, groupIndex, labelPointIndex, labelPoint.labelIndex);\n        //           updateLabelIndexByInfo(\n        //             imageIndex,\n        //             groupIndex,\n        //             labelPointIndex,\n        //             labelPoint.labelIndex,\n        //             labelPoint.checked\n        //           );\n        //         });\n        //       });\n        //     }\n        //   });\n        // }, 1000);\n      }\n    );\n  };\n\n  private onClickHandler = (index: number) => {\n    // console.log(this.props.activeLabelType);\n    this.props.updateActiveImageIndex(index);\n    this.props.updateActiveLabelType(this.props.activeLabelType);\n    this.props.updateActiveLabelId(null);\n  };\n\n  private renderImagePreview = (\n    index: number,\n    isScrolling: boolean,\n    isVisible: boolean,\n    style: React.CSSProperties\n  ) => {\n    return (\n      <ImagePreview\n        key={index}\n        index={index}\n        style={style}\n        size={{ width: 150, height: 150 }}\n        isScrolling={isScrolling}\n        isChecked={\n          this.props.imagesData[index].groupList.some(item => item.labelRects.length > 0) ||\n          this.props.imagesData[index].groupList.some(item => item.labelPoints.length > 0) ||\n          this.props.imagesData[index].groupList.some(item => item.labelPolygons.length > 0)\n        }\n        imageData={this.props.imagesData[index]}\n        onClick={() => this.onClickHandler(index)}\n        isSelected={this.props.activeImageIndex === index}\n      />\n    );\n  };\n\n  public render() {\n    const { size } = this.state;\n    return (\n      <div\n        className=\"ImagesList\"\n        ref={ref => (this.imagesListRef = ref)}\n        onClick={() => ContextManager.switchCtx(ContextType.LEFT_NAVBAR)}\n      >\n        {!!size && (\n          <VirtualList\n            size={size}\n            childSize={{ width: 150, height: 150 }}\n            childCount={this.props.imagesData.length}\n            childRender={this.renderImagePreview}\n            overScanHeight={200}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  updateActiveImageIndex,\n  updateActiveLabelId,\n  updateActiveLabelType,\n  updateLabelIndexByInfo,\n  updateActiveGroupIndex,\n  updateGroupList,\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  activeImageIndex: state.editor.activeImageIndex,\n  imagesData: state.editor.imagesData,\n  activeLabelType:\n    state.editor.imagesData[EditorSelector.getActiveImageIndex()].groupList[EditorSelector.getActiveGroupIndex()]\n      .activeLabelType,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ImagesList);\n","import { LabelType } from \"../enums/LabelType\";\n\nexport interface ILabelToolkit {\n  labelType: LabelType;\n  headerText: string;\n  imageSrc: string;\n  imageAlt: string;\n}\n\nexport const LabelToolkitData: ILabelToolkit[] = [\n  {\n    labelType: LabelType.NAME,\n    headerText: \"图像识别\",\n    imageSrc: \"ico/object.png\",\n    imageAlt: \"object\",\n  },\n  {\n    labelType: LabelType.RECTANGLE,\n    headerText: \"矩形\",\n    imageSrc: \"ico/rectangle.png\",\n    imageAlt: \"rectangle\",\n  },\n  {\n    labelType: LabelType.POINT,\n    headerText: \"点\",\n    imageSrc: \"ico/point.png\",\n    imageAlt: \"point\",\n  },\n  {\n    labelType: LabelType.POLYGON,\n    headerText: \"多边形\",\n    imageSrc: \"ico/polygon.png\",\n    imageAlt: \"polygon\",\n  },\n];\n","import * as React from 'react';\nimport {ISize} from \"../../../interfaces/ISize\";\nimport './ImageButton.scss';\nimport classNames from \"classnames\";\n\ninterface Props {\n    size:ISize,\n    padding?:number;\n    image:string,\n    imageAlt:string,\n    href?:string\n    onClick?:() => any;\n    style?:React.CSSProperties\n    isActive?:boolean;\n    isDisabled?:boolean;\n    externalClassName?:string;\n}\n\nexport const ImageButton = (props:Props) => {\n    const {size, padding, image, imageAlt, href, onClick, style, isActive, isDisabled, externalClassName} = props;\n    const imagePadding:number = !!padding ? padding : 10;\n\n    const onClickHandler = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n        event.stopPropagation();\n        !!onClick && onClick();\n    };\n\n    const buttonStyle:React.CSSProperties = {\n        ...style,\n        width: size.width,\n        height: size.height\n    };\n\n    const imageStyle:React.CSSProperties = {\n        maxWidth: size.width - imagePadding,\n        maxHeight: size.height - imagePadding\n    };\n\n    const getClassName = () => {\n        return classNames(\n            \"ImageButton\",\n            externalClassName,\n            {\n                \"active\": isActive,\n                \"disabled\": isDisabled,\n            }\n        );\n    };\n    \n    return(\n        <div className={getClassName()} style={buttonStyle} onClick={onClickHandler}>\n            {!!href && <a href={href} style={imageStyle} target=\"_blank\" rel=\"noopener noreferrer\">\n                <img\n                    draggable={false}\n                    alt={imageAlt}\n                    src={image}\n                    style={imageStyle}\n                />\n            </a>}\n            {!href && <img\n                draggable={false}\n                alt={imageAlt}\n                src={image}\n                style={imageStyle}\n            />}\n        </div>\n    );\n};","import React from \"react\";\nimport { ISize } from \"../../../../interfaces/ISize\";\nimport \"./LabelInputField.scss\";\nimport classNames from \"classnames\";\nimport { ImageButton } from \"../../../Common/ImageButton/ImageButton\";\nimport { IRect } from \"../../../../interfaces/IRect\";\nimport { IPoint } from \"../../../../interfaces/IPoint\";\nimport { RectUtil } from \"../../../../utils/RectUtil\";\nimport { AppState } from \"../../../../store\";\nimport { connect } from \"react-redux\";\nimport {\n  updateActiveLabelId,\n  updateHighlightedLabelId,\n  findNextAvailableLabelIndex,\n} from \"../../../../store/editor/actionCreators\";\nimport Scrollbars from \"react-custom-scrollbars\";\n\ninterface IProps {\n  size: ISize;\n  isActive: boolean;\n  isHighlighted: boolean;\n  id: string;\n  index: number;\n  value: string;\n  checked: boolean;\n  options: string[];\n  onDelete: (id: string) => any;\n  onCheck: (id: string) => any;\n  onSelectLabel: (labelRectId: string, labelNameIndex: number) => any;\n  updateHighlightedLabelId: (highlightedLabelId: string) => any;\n  updateActiveLabelId: (highlightedLabelId: string) => any;\n  findNextAvailableLabelIndex: () => any;\n}\n\ninterface IState {\n  animate: boolean;\n  isOpen: boolean;\n}\n\nclass LabelInputField extends React.Component<IProps, IState> {\n  private dropdownOptionHeight: number = 30;\n  private dropdownOptionCount: number = 6;\n  private dropdownMargin: number = 4;\n  private dropdownLabel: HTMLDivElement;\n  private dropdown: HTMLDivElement;\n\n  public constructor(props) {\n    super(props);\n    this.state = {\n      animate: false,\n      isOpen: false,\n    };\n  }\n\n  public componentDidMount(): void {\n    requestAnimationFrame(() => {\n      this.setState({ animate: true });\n    });\n  }\n\n  private getClassName() {\n    return classNames(\"LabelInputField\", {\n      loaded: this.state.animate,\n      active: this.props.isActive,\n      highlighted: this.props.isHighlighted,\n    });\n  }\n\n  private openDropdown = () => {\n    this.setState({ isOpen: true });\n    window.addEventListener(\"mousedown\", this.closeDropdown);\n  };\n\n  private closeDropdown = (event: MouseEvent) => {\n    const mousePosition: IPoint = { x: event.clientX, y: event.clientY };\n    const clientRect = this.dropdown.getBoundingClientRect();\n    const dropDownRect: IRect = {\n      x: clientRect.left,\n      y: clientRect.top,\n      width: clientRect.width,\n      height: clientRect.height,\n    };\n\n    if (!RectUtil.isPointInside(dropDownRect, mousePosition)) {\n      this.setState({ isOpen: false });\n      window.removeEventListener(\"mousedown\", this.closeDropdown);\n    }\n  };\n\n  private getDropdownStyle = (): React.CSSProperties => {\n    const clientRect = this.dropdownLabel.getBoundingClientRect();\n    const height: number = Math.min(this.props.options.length, this.dropdownOptionCount) * this.dropdownOptionHeight;\n    const style = {\n      width: clientRect.width,\n      height: height,\n      left: clientRect.left,\n    };\n\n    if ((window.innerHeight * 2) / 3 < clientRect.top)\n      return Object.assign(style, { top: clientRect.top - this.dropdownMargin - height });\n    else return Object.assign(style, { top: clientRect.bottom + this.dropdownMargin });\n  };\n\n  private getDropdownOptions = () => {\n    const onClick = (index: number, event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n      this.setState({ isOpen: false });\n      window.removeEventListener(\"mousedown\", this.closeDropdown);\n      this.props.onSelectLabel(this.props.id, index);\n      this.props.updateHighlightedLabelId(null);\n      this.props.updateActiveLabelId(this.props.id);\n      this.props.findNextAvailableLabelIndex();\n      event.stopPropagation();\n    };\n\n    return this.props.options.map((option: string, index: number) => {\n      return (\n        <div\n          className=\"DropdownOption\"\n          key={option}\n          style={{ height: this.dropdownOptionHeight }}\n          onClick={event => onClick(index, event)}\n        >\n          {option}\n        </div>\n      );\n    });\n  };\n\n  private mouseEnterHandler = () => {\n    this.props.updateHighlightedLabelId(this.props.id);\n  };\n\n  private mouseLeaveHandler = () => {\n    this.props.updateHighlightedLabelId(null);\n  };\n\n  private onClickHandler = () => {\n    this.props.updateActiveLabelId(this.props.id);\n  };\n\n  public render() {\n    const { size, id, value, onDelete, onCheck, checked } = this.props;\n\n    return (\n      <div\n        className={this.getClassName()}\n        style={{\n          width: size.width,\n          height: size.height,\n        }}\n        key={id}\n        onMouseEnter={this.mouseEnterHandler}\n        onMouseLeave={this.mouseLeaveHandler}\n        onClick={this.onClickHandler}\n      >\n        <div\n          className=\"LabelInputFieldWrapper\"\n          style={{\n            width: size.width,\n            height: size.height,\n          }}\n        >\n          <div className=\"Marker\" />\n          <div className=\"Content\">\n            <div className=\"ContentWrapper\">\n              <div className=\"DropdownLabel\" ref={ref => (this.dropdownLabel = ref)} onClick={this.openDropdown}>\n                {value ? value : \"选择一个标签\"}\n              </div>\n              {this.state.isOpen && (\n                <div className=\"Dropdown\" style={this.getDropdownStyle()} ref={ref => (this.dropdown = ref)}>\n                  <Scrollbars>\n                    <div>{this.getDropdownOptions()}</div>\n                  </Scrollbars>\n                </div>\n              )}\n            </div>\n            <span className=\"describeText\">被遮挡</span>\n            <input type=\"checkbox\" onClick={() => onCheck(id)} checked={checked} onChange={() => {}} />\n\n            <div className=\"ContentWrapper\">\n              <ImageButton\n                externalClassName={\"trash\"}\n                image={\"ico/trash.png\"}\n                imageAlt={\"remove_rect\"}\n                size={{ width: 30, height: 30 }}\n                onClick={() => onDelete(id)}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  updateHighlightedLabelId,\n  updateActiveLabelId,\n  findNextAvailableLabelIndex,\n};\n\nconst mapStateToProps = (state: AppState) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LabelInputField);\n","import React from \"react\";\nimport \"./EmptyLabelList.scss\";\nimport { AppState } from \"../../../../store\";\nimport { connect } from \"react-redux\";\nimport { EditorSelector } from \"../../../../store/selectors/EditorSelector\";\n\ninterface IProps {\n  firstLabelCreatedFlag: boolean;\n  labelBefore: string;\n  labelAfter: string;\n}\n\nconst EmptyLabelList: React.FC<IProps> = ({ firstLabelCreatedFlag, labelBefore, labelAfter }) => {\n  const before = (\n    <>\n      <img draggable={false} alt={\"lets_start\"} src={\"img/rocket.png\"} />\n      <p className=\"extraBold\">{labelBefore}</p>\n    </>\n  );\n\n  const after = (\n    <>\n      <img draggable={false} alt={\"no_labels\"} src={\"img/box-opened.png\"} />\n      <p className=\"extraBold\">{labelAfter}</p>\n    </>\n  );\n\n  return <div className=\"EmptyLabelList\">{!firstLabelCreatedFlag ? before : after}</div>;\n};\n\nconst mapDispatchToProps = {};\n\nconst mapStateToProps = (state: AppState) => ({\n  firstLabelCreatedFlag: EditorSelector.getFirstLabelCreatedFlag(),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EmptyLabelList);\n","import React from \"react\";\nimport { ISize } from \"../../../../interfaces/ISize\";\nimport Scrollbars from \"react-custom-scrollbars\";\nimport { ImageData, LabelRect } from \"../../../../store/editor/types\";\nimport \"./RectLabelsList.scss\";\nimport {\n  updateActiveLabelId,\n  updateActiveLabelNameIndex,\n  updateImageDataById,\n} from \"../../../../store/editor/actionCreators\";\nimport { AppState } from \"../../../../store\";\nimport { connect } from \"react-redux\";\nimport * as _ from \"lodash\";\nimport LabelInputField from \"../LabelInputField/LabelInputField\";\nimport EmptyLabelList from \"../EmptyLabelList/EmptyLabelList\";\nimport { EditorSelector } from \"../../../../store/selectors/EditorSelector\";\nimport produce from \"immer\";\n\ninterface IProps {\n  size: ISize;\n  imageData: ImageData;\n  updateImageDataById: (id: string, newImageData: ImageData) => any;\n  activeLabelId: string;\n  highlightedLabelId: string;\n  updateActiveLabelNameIndex: (activeLabelIndex: number) => any;\n  labelNames: string[];\n  updateActiveLabelId: (activeLabelId: string) => any;\n}\n\nconst RectLabelsList: React.FC<IProps> = ({\n  size,\n  imageData,\n  updateImageDataById,\n  labelNames,\n  updateActiveLabelNameIndex,\n  activeLabelId,\n  highlightedLabelId,\n  updateActiveLabelId,\n}) => {\n  const labelRects = EditorSelector.getActiveImageData().groupList[EditorSelector.getActiveGroupIndex()].labelRects;\n\n  const labelInputFieldHeight = 40;\n  const listStyle: React.CSSProperties = {\n    width: size.width,\n    height: size.height,\n  };\n  const listStyleContent: React.CSSProperties = {\n    width: size.width,\n    height: labelRects.length * labelInputFieldHeight,\n  };\n\n  const deleteRectLabelById = (labelRectId: string) => {\n    const newImageData = produce(imageData, draft => {\n      draft.groupList[imageData.activeGroupIndex].labelRects = labelRects.filter((currentLabel: LabelRect) => {\n        return currentLabel.id !== labelRectId;\n      });\n    });\n    updateImageDataById(imageData.id, newImageData);\n  };\n\n  const checkRectLabelById = (labelRectId: string) => {\n    const newImageData = produce(imageData, draft => {\n      draft.groupList[imageData.activeGroupIndex].labelRects = labelRects.map((currentLabel: LabelRect) => {\n        return currentLabel.id !== labelRectId ? currentLabel : { ...currentLabel, checked: !currentLabel.checked };\n      });\n    });\n    updateImageDataById(imageData.id, newImageData);\n  };\n\n  const updateRectLabel = (labelRectId: string, labelNameIndex: number) => {\n    const newImageData = produce(imageData, draft => {\n      draft.groupList[imageData.activeGroupIndex].labelRects = labelRects.map((labelRect: LabelRect) => {\n        if (labelRect.id === labelRectId) {\n          return {\n            ...labelRect,\n            labelIndex: labelNameIndex,\n          };\n        } else {\n          return labelRect;\n        }\n      });\n    });\n    updateImageDataById(imageData.id, newImageData);\n    updateActiveLabelNameIndex(labelNameIndex);\n  };\n\n  const onClickHandler = () => {\n    updateActiveLabelId(null);\n  };\n\n  const getChildren = () => {\n    return labelRects.map((labelRect: LabelRect, labelIndex: number) => {\n      return (\n        <LabelInputField\n          size={{\n            width: size.width,\n            height: labelInputFieldHeight,\n          }}\n          isActive={labelRect.id === activeLabelId}\n          index={labelIndex}\n          isHighlighted={labelRect.id === highlightedLabelId}\n          id={labelRect.id}\n          key={labelRect.id}\n          onDelete={deleteRectLabelById}\n          onCheck={checkRectLabelById}\n          value={labelRect.labelIndex !== null ? labelNames[labelRect.labelIndex] : null}\n          options={labelNames}\n          onSelectLabel={updateRectLabel}\n          checked={labelRect.checked}\n        />\n      );\n    });\n  };\n\n  return (\n    <div className=\"RectLabelsList\" style={listStyle} onClickCapture={onClickHandler}>\n      {labelRects.length === 0 ? (\n        <EmptyLabelList labelBefore={\"标记第一个矩形\"} labelAfter={\"这张图片还没有标注\"} />\n      ) : (\n        <Scrollbars>\n          <div className=\"RectLabelsListContent\" style={listStyleContent}>\n            {getChildren()}\n          </div>\n        </Scrollbars>\n      )}\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {\n  updateImageDataById,\n  updateActiveLabelNameIndex,\n  updateActiveLabelId,\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  activeLabelId: EditorSelector.getActiveLabelId(),\n  highlightedLabelId: EditorSelector.getHighlightedLabelId(),\n  labelNames: state.editor.labelNames,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RectLabelsList);\n","import React from 'react';\nimport { ISize } from '../../../../interfaces/ISize';\nimport Scrollbars from 'react-custom-scrollbars';\nimport { ImageData, LabelPoint } from '../../../../store/editor/types';\nimport './PointLabelsList.scss';\nimport {\n  updateActiveLabelId,\n  updateActiveLabelNameIndex,\n  updateImageDataById,\n  findNextAvailableLabelIndex,\n} from '../../../../store/editor/actionCreators';\nimport { AppState } from '../../../../store';\nimport { connect } from 'react-redux';\nimport * as _ from 'lodash';\nimport LabelInputField from '../LabelInputField/LabelInputField';\nimport EmptyLabelList from '../EmptyLabelList/EmptyLabelList';\nimport { EditorSelector } from '../../../../store/selectors/EditorSelector';\nimport produce from 'immer';\nimport { store as storeNF } from 'react-notifications-component';\n\ninterface IProps {\n  size: ISize;\n  imageData: ImageData;\n  updateImageDataById: (id: string, newImageData: ImageData) => any;\n  activeLabelId: string;\n  highlightedLabelId: string;\n  updateActiveLabelNameIndex: (activeLabelIndex: number) => any;\n  labelNames: string[];\n  updateActiveLabelId: (activeLabelId: string) => any;\n  findNextAvailableLabelIndex: () => any;\n}\n\nconst PointLabelsList: React.FC<IProps> = ({\n  size,\n  imageData,\n  updateImageDataById,\n  labelNames,\n  updateActiveLabelNameIndex,\n  activeLabelId,\n  highlightedLabelId,\n  updateActiveLabelId,\n  findNextAvailableLabelIndex,\n}) => {\n  const labelPoints = EditorSelector.getActiveImageData().groupList[EditorSelector.getActiveGroupIndex()].labelPoints;\n  const labelInputFieldHeight = 40;\n  const listStyle: React.CSSProperties = {\n    width: size.width,\n    height: size.height,\n  };\n  const listStyleContent: React.CSSProperties = {\n    width: size.width,\n    height: labelPoints.length * labelInputFieldHeight,\n  };\n\n  const deletePointLabelById = (labelPointId: string) => {\n    const newImageData = produce(imageData, draft => {\n      draft.groupList[imageData.activeGroupIndex].labelPoints = labelPoints.filter((currentLabel: LabelPoint) => {\n        return currentLabel.id !== labelPointId;\n      });\n    });\n    updateImageDataById(imageData.id, newImageData);\n    findNextAvailableLabelIndex();\n  };\n\n  const checkPointLabelById = (labelPointId: string) => {\n    const newImageData = produce(imageData, draft => {\n      draft.groupList[imageData.activeGroupIndex].labelPoints = labelPoints.map((currentLabel: LabelPoint) => {\n        return currentLabel.id !== labelPointId ? currentLabel : { ...currentLabel, checked: !currentLabel.checked };\n      });\n    });\n    updateImageDataById(imageData.id, newImageData);\n  };\n\n  const updatePointLabel = (labelPointId: string, labelNameIndex: number) => {\n    let alreadyFlag: boolean = false;\n    const newImageData = produce(imageData, draft => {\n      draft.groupList[imageData.activeGroupIndex].labelPoints = labelPoints.map((currentLabel: LabelPoint) => {\n        if (currentLabel.id === labelPointId) {\n          const alreadyHasIndex = draft.groupList[imageData.activeGroupIndex].labelPoints.some(\n            ele => ele.labelIndex === labelNameIndex\n          );\n          if (alreadyHasIndex) {\n            // console.log(\"labelNameIndex\", labelNameIndex);\n            storeNF.addNotification({\n              message: '已经标记过这个部位了',\n              type: 'warning',\n              insert: 'top',\n              container: 'top-center',\n              animationIn: ['animated', 'fadeIn'],\n              animationOut: ['animated', 'fadeOut'],\n              dismiss: {\n                duration: 1000,\n              },\n            });\n            alreadyFlag = true;\n            return currentLabel;\n          }\n          return {\n            ...currentLabel,\n            labelIndex: labelNameIndex,\n          };\n        }\n        return currentLabel;\n      });\n    });\n    updateImageDataById(imageData.id, newImageData);\n    !alreadyFlag && updateActiveLabelNameIndex(labelNameIndex);\n  };\n\n  const onClickHandler = () => {\n    updateActiveLabelId(null);\n  };\n\n  const getChildren = () => {\n    return labelPoints.map((labelPoint: LabelPoint, labelIndex: number) => {\n      return (\n        <LabelInputField\n          size={{\n            width: size.width,\n            height: labelInputFieldHeight,\n          }}\n          isActive={labelPoint.id === activeLabelId}\n          isHighlighted={labelPoint.id === highlightedLabelId}\n          id={labelPoint.id}\n          key={labelPoint.id}\n          onDelete={deletePointLabelById}\n          value={labelPoint.labelIndex !== null ? labelNames[labelPoint.labelIndex] : null}\n          options={labelNames}\n          onSelectLabel={updatePointLabel}\n          onCheck={checkPointLabelById}\n          checked={labelPoint.checked}\n          index={labelIndex}\n        />\n      );\n    });\n  };\n\n  return (\n    <div className=\"PointLabelsList\" style={listStyle} onClickCapture={onClickHandler}>\n      {labelPoints.length === 0 ? (\n        <EmptyLabelList labelBefore={'\b标记第一个点'} labelAfter={'这张图片还没有标注'} />\n      ) : (\n        <Scrollbars>\n          <div className=\"PointLabelsListContent\" style={listStyleContent}>\n            {getChildren()}\n          </div>\n        </Scrollbars>\n      )}\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {\n  updateImageDataById,\n  updateActiveLabelNameIndex,\n  updateActiveLabelId,\n  findNextAvailableLabelIndex,\n};\n\nconst mapStateToProps = (state: AppState) => {\n  return {\n    activeLabelId: EditorSelector.getActiveLabelId(),\n    highlightedLabelId: EditorSelector.getHighlightedLabelId(),\n    labelNames: state.editor.labelNames,\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PointLabelsList);\n","import React from \"react\";\nimport { ISize } from \"../../../../interfaces/ISize\";\nimport Scrollbars from \"react-custom-scrollbars\";\nimport { ImageData, LabelPolygon } from \"../../../../store/editor/types\";\nimport \"./PolygonLabelsList.scss\";\nimport {\n  updateActiveLabelId,\n  updateActiveLabelNameIndex,\n  updateImageDataById,\n} from \"../../../../store/editor/actionCreators\";\nimport { AppState } from \"../../../../store\";\nimport { connect } from \"react-redux\";\nimport * as _ from \"lodash\";\nimport LabelInputField from \"../LabelInputField/LabelInputField\";\nimport EmptyLabelList from \"../EmptyLabelList/EmptyLabelList\";\nimport { EditorSelector } from \"../../../../store/selectors/EditorSelector\";\nimport produce from \"immer\";\n\ninterface IProps {\n  size: ISize;\n  imageData: ImageData;\n  updateImageDataById: (id: string, newImageData: ImageData) => any;\n  activeLabelId: string;\n  highlightedLabelId: string;\n  updateActiveLabelNameIndex: (activeLabelIndex: number) => any;\n  labelNames: string[];\n  updateActiveLabelId: (activeLabelId: string) => any;\n}\n\nconst PolygonLabelsList: React.FC<IProps> = ({\n  size,\n  imageData,\n  updateImageDataById,\n  labelNames,\n  updateActiveLabelNameIndex,\n  activeLabelId,\n  highlightedLabelId,\n  updateActiveLabelId,\n}) => {\n  const labelPolygons = EditorSelector.getActiveImageData().groupList[EditorSelector.getActiveGroupIndex()]\n    .labelPolygons;\n  const labelInputFieldHeight = 40;\n  const listStyle: React.CSSProperties = {\n    width: size.width,\n    height: size.height,\n  };\n  const listStyleContent: React.CSSProperties = {\n    width: size.width,\n    height: labelPolygons.length * labelInputFieldHeight,\n  };\n\n  const deletePolygonLabelById = (labelPolygonId: string) => {\n    const newImageData = produce(imageData, draft => {\n      draft.groupList[imageData.activeGroupIndex].labelPolygons = labelPolygons.filter((currentLabel: LabelPolygon) => {\n        return currentLabel.id !== labelPolygonId;\n      });\n    });\n    updateImageDataById(imageData.id, newImageData);\n  };\n\n  const checkPolygonLabelById = (labelPolygonId: string) => {\n    const newImageData = produce(imageData, draft => {\n      draft.groupList[imageData.activeGroupIndex].labelPolygons = labelPolygons.map((currentLabel: LabelPolygon) => {\n        return currentLabel.id !== labelPolygonId ? currentLabel : { ...currentLabel, checked: !currentLabel.checked };\n      });\n    });\n    updateImageDataById(imageData.id, newImageData);\n  };\n\n  const updatePolygonLabel = (labelPolygonId: string, labelNameIndex: number) => {\n    const newImageData = produce(imageData, draft => {\n      draft.groupList[imageData.activeGroupIndex].labelPolygons = labelPolygons.map((currentLabel: LabelPolygon) => {\n        if (currentLabel.id === labelPolygonId) {\n          return {\n            ...currentLabel,\n            labelIndex: labelNameIndex,\n          };\n        } else {\n          return currentLabel;\n        }\n      });\n    });\n    updateImageDataById(imageData.id, newImageData);\n    updateActiveLabelNameIndex(labelNameIndex);\n  };\n\n  const onClickHandler = () => {\n    updateActiveLabelId(null);\n  };\n\n  const getChildren = () => {\n    return labelPolygons.map((labelPolygon: LabelPolygon, labelIndex: number) => {\n      return (\n        <LabelInputField\n          size={{\n            width: size.width,\n            height: labelInputFieldHeight,\n          }}\n          isActive={labelPolygon.id === activeLabelId}\n          isHighlighted={labelPolygon.id === highlightedLabelId}\n          id={labelPolygon.id}\n          index={labelIndex}\n          key={labelPolygon.id}\n          onDelete={deletePolygonLabelById}\n          value={labelPolygon.labelIndex !== null ? labelNames[labelPolygon.labelIndex] : null}\n          options={labelNames}\n          onSelectLabel={updatePolygonLabel}\n          onCheck={checkPolygonLabelById}\n          checked={labelPolygon.checked}\n        />\n      );\n    });\n  };\n\n  return (\n    <div className=\"PolygonLabelsList\" style={listStyle} onClickCapture={onClickHandler}>\n      {labelPolygons.length === 0 ? (\n        <EmptyLabelList labelBefore={\"标注第一个多边形\"} labelAfter={\"这张图片还没有标注\"} />\n      ) : (\n        <Scrollbars>\n          <div className=\"PolygonLabelsListContent\" style={listStyleContent}>\n            {getChildren()}\n          </div>\n        </Scrollbars>\n      )}\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {\n  updateImageDataById,\n  updateActiveLabelNameIndex,\n  updateActiveLabelId,\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  activeLabelId: EditorSelector.getActiveLabelId(),\n  highlightedLabelId: EditorSelector.getHighlightedLabelId(),\n  labelNames: state.editor.labelNames,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PolygonLabelsList);\n","import * as React from 'react';\nimport './TextButton.scss';\nimport classNames from 'classnames';\n\ninterface IProps {\n  key?: string;\n  label: any;\n  onClick?: () => any;\n  style?: React.CSSProperties;\n  isActive?: boolean;\n  isDisabled?: boolean;\n  externalClassName?: string;\n}\n\nexport const TextButton = (props: IProps) => {\n  const { key, label, onClick, style, isActive, isDisabled, externalClassName } = props;\n\n  const getClassName = () => {\n    return classNames('TextButton', externalClassName, {\n      active: isActive,\n      disabled: isDisabled,\n    });\n  };\n\n  const onClickHandler = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    event.stopPropagation();\n    !!onClick && onClick();\n  };\n\n  return (\n    <div className={getClassName()} onClick={onClickHandler} key={key} style={style}>\n      {label}\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./LabelsToolkit.scss\";\nimport { ImageData } from \"../../../../store/editor/types\";\nimport {\n  updateActiveLabelId,\n  updateActiveLabelType,\n  updateImageDataById,\n  updateGroupList,\n  updateActiveGroupIndex,\n  deleteGroupList,\n} from \"../../../../store/editor/actionCreators\";\nimport { AppState } from \"../../../../store\";\nimport { connect } from \"react-redux\";\nimport { LabelType } from \"../../../../data/enums/LabelType\";\nimport { ProjectType } from \"../../../../data/enums/ProjectType\";\nimport { ISize } from \"../../../../interfaces/ISize\";\nimport classNames from \"classnames\";\nimport * as _ from \"lodash\";\nimport { ILabelToolkit, LabelToolkitData } from \"../../../../data/info/LabelToolkitData\";\nimport { Settings } from \"../../../../settings/Settings\";\nimport RectLabelsList from \"../RectLabelsList/RectLabelsList\";\nimport PointLabelsList from \"../PointLabelsList/PointLabelsList\";\nimport PolygonLabelsList from \"../PolygonLabelsList/PolygonLabelsList\";\nimport { ContextManager } from \"../../../../logic/context/ContextManager\";\nimport { ContextType } from \"../../../../data/enums/ContextType\";\nimport Scrollbars from \"react-custom-scrollbars\";\nimport { GroupType } from \"../../../../store/editor/types\";\nimport { EditorSelector } from \"../../../../store/selectors/EditorSelector\";\nimport { TextButton } from \"../../../Common/TextButton/TextButton\";\n\ninterface IProps {\n  activeImageIndex: number;\n  activeLabelType: LabelType;\n  imagesData: ImageData[];\n  projectType: ProjectType;\n  groupList: GroupType[];\n  activeGroupIndex: number;\n  updateImageDataById: (id: string, newImageData: ImageData) => any;\n  updateActiveLabelType: (activeLabelType: LabelType) => any;\n  updateActiveLabelId: (highlightedLabelId: string) => any;\n  updateGroupList: (groupName: string) => any;\n  updateActiveGroupIndex: (groupIndex: number) => any;\n  deleteGroupList: (groupIndex: number) => any;\n}\n\ninterface IState {\n  size: ISize;\n  activeLabelType: LabelType;\n}\n\nclass LabelsToolkit extends React.Component<IProps, IState> {\n  private labelsToolkitRef: HTMLDivElement;\n  private readonly tabs: LabelType[];\n\n  constructor(props) {\n    super(props);\n\n    this.tabs = props.projectType === ProjectType.IMAGE_RECOGNITION ? [LabelType.NAME] : [LabelType.POINT];\n    // : [LabelType.RECTANGLE, LabelType.POINT, LabelType.POLYGON];\n\n    const activeTab: LabelType = props.activeLabelType ? props.activeLabelType : this.tabs[0];\n\n    this.state = {\n      size: null,\n      activeLabelType: activeTab,\n    };\n    props.updateActiveLabelType(activeTab);\n  }\n\n  public componentDidMount(): void {\n    this.updateToolkitSize();\n    window.addEventListener(\"resize\", this.updateToolkitSize);\n  }\n\n  public componentWillUnmount(): void {\n    window.removeEventListener(\"resize\", this.updateToolkitSize);\n  }\n\n  private updateToolkitSize = () => {\n    if (!this.labelsToolkitRef) return;\n\n    const listBoundingBox = this.labelsToolkitRef.getBoundingClientRect();\n    this.setState({\n      size: {\n        width: listBoundingBox.width,\n        height: listBoundingBox.height,\n      },\n    });\n  };\n\n  private headerClickHandler = (activeTab: LabelType) => {\n    this.setState({ activeLabelType: activeTab });\n    this.props.updateActiveLabelType(activeTab);\n    this.props.updateActiveLabelId(null);\n  };\n\n  private renderChildren = (currentGroupIndex: number) => {\n    const { activeLabelType, size } = this.state;\n    const { activeImageIndex, imagesData, activeGroupIndex } = this.props;\n    return this.tabs.reduce((children, labelType: LabelType, index: number) => {\n      const isActive: boolean = labelType === activeLabelType && activeGroupIndex === currentGroupIndex;\n      const tabData: ILabelToolkit = _.find(LabelToolkitData, { labelType });\n      // const activeTabContentHeight: number = size.height - this.tabs.length * Settings.TOOLKIT_TAB_HEIGHT_PX - 50 - 50;\n      const activeTabContentHeight = 300;\n      const getClassName = (baseClass: string) =>\n        classNames(baseClass, {\n          active: isActive,\n        });\n\n      const header = (\n        <div\n          key={\"Header_\" + index}\n          className={getClassName(\"Header\")}\n          onClick={() => this.headerClickHandler(labelType)}\n          style={{ height: Settings.TOOLKIT_TAB_HEIGHT_PX }}\n        >\n          <div className=\"Marker\" />\n          <div className=\"HeaderGroupWrapper\">\n            <img draggable={false} className=\"Ico\" src={tabData.imageSrc} alt={tabData.imageAlt} />\n            {tabData.headerText}\n          </div>\n          <div className=\"HeaderGroupWrapper\">\n            <img draggable={false} className=\"Arrow\" src={\"ico/down.png\"} alt={\"down_arrow\"} />\n          </div>\n        </div>\n      );\n\n      const content = (\n        <div\n          key={\"Content_\" + index}\n          className={getClassName(\"Content\")}\n          style={{ height: isActive ? activeTabContentHeight : 0 }}\n        >\n          {labelType === LabelType.RECTANGLE && (\n            <RectLabelsList\n              size={{\n                width: size.width - 20,\n                height: activeTabContentHeight - 20,\n              }}\n              imageData={imagesData[activeImageIndex]}\n            />\n          )}\n          {labelType === LabelType.POINT && (\n            <PointLabelsList\n              size={{\n                width: size.width - 20,\n                height: activeTabContentHeight - 20,\n              }}\n              imageData={imagesData[activeImageIndex]}\n            />\n          )}\n          {labelType === LabelType.POLYGON && (\n            <PolygonLabelsList\n              size={{\n                width: size.width - 20,\n                height: activeTabContentHeight - 20,\n              }}\n              imageData={imagesData[activeImageIndex]}\n            />\n          )}\n        </div>\n      );\n\n      children.push([header, content]);\n      return children;\n    }, []);\n  };\n\n  private buttonOnClickHandle = () => {\n    this.props.updateGroupList(`group-${this.props.groupList.length + 1}`);\n  };\n  private renderChildrenWrapper = () => {\n    const { groupList, activeGroupIndex } = this.props;\n    return groupList\n      .map((groupName, idx) => (\n        <div className=\"LabelsToolkitWrapper\" key={`LabelsToolkitWrapper_` + idx}>\n          <div\n            className={idx === activeGroupIndex ? \"active pDiv\" : \"pDiv\"}\n            onClick={() => {\n              this.props.updateActiveGroupIndex(idx);\n              this.headerClickHandler(this.state.activeLabelType);\n            }}\n          >\n            {`person-` + idx}\n            {idx !== activeGroupIndex ? (\n              <TextButton\n                label=\"删除\"\n                externalClassName=\"buttonClass\"\n                onClick={() => this.props.deleteGroupList(idx)}\n              ></TextButton>\n            ) : null}\n          </div>\n          {idx === activeGroupIndex && this.renderChildren(idx)}\n        </div>\n      ))\n      .concat(\n        <div className=\"addButton\" key=\"button\">\n          <button style={{ width: \"30%\" }} onClick={this.buttonOnClickHandle}>\n            添加 +{\" \"}\n          </button>\n        </div>\n      );\n  };\n  public render() {\n    return (\n      <div\n        className=\"LabelsToolkit\"\n        ref={ref => (this.labelsToolkitRef = ref)}\n        onClick={() => ContextManager.switchCtx(ContextType.RIGHT_NAVBAR)}\n      >\n        <Scrollbars>{this.state.size && this.renderChildrenWrapper()}</Scrollbars>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  updateImageDataById,\n  updateActiveLabelType,\n  updateActiveLabelId,\n  updateGroupList,\n  updateActiveGroupIndex,\n  deleteGroupList,\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  activeImageIndex: state.editor.activeImageIndex,\n  activeLabelType: EditorSelector.getActiveLabelType(),\n  imagesData: state.editor.imagesData,\n  projectType: state.editor.projectType,\n  groupList: EditorSelector.getActiveImageData().groupList,\n  activeGroupIndex: EditorSelector.getActiveGroupIndex(),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LabelsToolkit);\n","import React from 'react';\nimport classNames from 'classnames';\nimport './SideNavigationBar.scss';\nimport {Direction} from \"../../../data/enums/Direction\";\n\ninterface IProps {\n    direction: Direction\n    isOpen: boolean;\n    isWithContext?: boolean;\n    renderCompanion?: () => any;\n    renderContent?: () => any;\n}\n\nexport const SideNavigationBar: React.FC<IProps> = (props) => {\n    const {direction, isOpen, isWithContext, renderContent, renderCompanion} = props;\n\n    const getClassName = () => {\n        return classNames(\n            \"SideNavigationBar\",\n            {\n                \"left\": direction === Direction.LEFT,\n                \"right\": direction === Direction.RIGHT,\n                \"with-context\": isWithContext,\n                \"closed\": !isOpen\n            }\n        );\n    };\n\n    return (\n        <div className={getClassName()}>\n            <div className=\"CompanionBar\">\n                {renderCompanion && renderCompanion()}\n            </div>\n            {isOpen && <div className=\"NavigationBarContentWrapper\">\n                {renderContent && renderContent()}\n            </div>}\n        </div>\n    );\n};","import * as React from \"react\";\nimport classNames from \"classnames\";\nimport './VerticalEditorButton.scss';\n\ninterface IProps {\n    key?:string;\n    label:string;\n    onClick?:() => any;\n    style?:React.CSSProperties;\n    isActive?:boolean;\n    isDisabled?:boolean;\n    image?:string,\n    imageAlt?:string,\n}\n\nexport const VerticalEditorButton = (props:IProps) => {\n\n    const { key, label, onClick, style, isActive, isDisabled, image, imageAlt} = props;\n\n    const getClassName = () => {\n        return classNames(\n            \"VerticalEditorButton\",\n            {\n                \"active\": isActive,\n                \"disabled\": isDisabled\n            }\n        );\n    };\n\n    return(\n        <div\n            className={getClassName()}\n            onClick={!!onClick ? onClick : undefined}\n            key={key}\n            style={style}\n        >\n            {image && <img \n                draggable={false}\n                alt={imageAlt} \n                src={image}\n            />}\n            {label}\n        </div>\n    )\n};","import {CustomCursorStyle} from \"../data/enums/CustomCursorStyle\";\nimport classNames from \"classnames\";\n\nexport class EditorUtil {\n    public static getIndicator = (cursorStyle: CustomCursorStyle): string => {\n        switch (cursorStyle) {\n            case CustomCursorStyle.ADD:\n                return \"ico/plus.png\";\n            case CustomCursorStyle.RESIZE:\n                return \"ico/resize.png\";\n            case CustomCursorStyle.CLOSE:\n                return \"ico/close.png\";\n            case CustomCursorStyle.MOVE:\n                return \"ico/move.png\";\n            case CustomCursorStyle.CANCEL:\n                return \"ico/cancel.png\";\n            default:\n                return null;\n        }\n    };\n\n    public static getCursorStyle = (cursorStyle: CustomCursorStyle) => {\n        return classNames(\n            \"Cursor\", {\n                \"move\": cursorStyle === CustomCursorStyle.MOVE,\n                \"add\": cursorStyle === CustomCursorStyle.ADD,\n                \"resize\": cursorStyle === CustomCursorStyle.RESIZE,\n                \"close\": cursorStyle === CustomCursorStyle.CLOSE,\n                \"cancel\": cursorStyle === CustomCursorStyle.CANCEL,\n            }\n        );\n    };\n}","export enum AcceptedFileType {\n    IMAGE = 'image/jpeg, image/png',\n    TEXT = 'text/plain'\n}","import React from 'react';\nimport './Editor.scss';\nimport { ISize } from '../../../interfaces/ISize';\nimport { ImageData } from '../../../store/editor/types';\nimport { FileUtil } from '../../../utils/FileUtil';\nimport { AppState } from '../../../store';\nimport { connect } from 'react-redux';\nimport { updateImageDataById } from '../../../store/editor/actionCreators';\nimport { ImageRepository } from '../../../logic/imageRepository/ImageRepository';\nimport { LabelType } from '../../../data/enums/LabelType';\nimport { PopupWindowType } from '../../../data/enums/PopupWindowType';\nimport { CanvasUtil } from '../../../utils/CanvasUtil';\nimport { CustomCursorStyle } from '../../../data/enums/CustomCursorStyle';\nimport { ImageLoadManager } from '../../../logic/imageRepository/ImageLoadManager';\nimport { EventType } from '../../../data/enums/EventType';\nimport { EditorData } from '../../../data/EditorData';\nimport { EditorModel } from '../../../staticModels/EditorModel';\nimport { EditorActions } from '../../../logic/actions/EditorActions';\nimport { EditorUtil } from '../../../utils/EditorUtil';\nimport { ContextManager } from '../../../logic/context/ContextManager';\nimport { ContextType } from '../../../data/enums/ContextType';\nimport { loadDataFromLocalStorge } from '../../../store/editor/actionCreators';\n\nimport { EditorSelector } from '../../../store/selectors/EditorSelector';\nimport produce from 'immer';\n\ninterface IProps {\n  size: ISize;\n  imageData: ImageData;\n  activeLabelType: LabelType;\n  updateImageDataById: (id: string, newImageData: ImageData) => any;\n  activePopupType: PopupWindowType;\n  activeLabelId: string;\n  customCursorStyle: CustomCursorStyle;\n  loadDataFromLocalStorge: () => any;\n}\n\nclass Editor extends React.Component<IProps, {}> {\n  // =================================================================================================================\n  // LIFE CYCLE\n  // =================================================================================================================\n\n  public componentDidMount(): void {\n    this.mountEventListeners();\n\n    const { imageData, activeLabelType } = this.props;\n    ContextManager.switchCtx(ContextType.EDITOR);\n    EditorActions.mountRenderEngines(activeLabelType);\n    ImageLoadManager.addAndRun(this.loadImage(imageData));\n  }\n\n  public componentWillUnmount(): void {\n    this.unmountEventListeners();\n  }\n\n  public componentDidUpdate(prevProps: Readonly<IProps>, prevState: Readonly<{}>, snapshot?: any): void {\n    const { imageData, activeLabelType } = this.props;\n    prevProps.imageData.id !== imageData.id && ImageLoadManager.addAndRun(this.loadImage(imageData));\n    prevProps.activeLabelType !== activeLabelType && EditorActions.swapSupportRenderingEngine(activeLabelType);\n    this.updateModelAndRender();\n  }\n\n  // =================================================================================================================\n  // EVENT HANDLERS\n  // =================================================================================================================\n\n  private mountEventListeners() {\n    window.addEventListener(EventType.MOUSE_MOVE, this.update);\n    window.addEventListener(EventType.MOUSE_UP, this.update);\n    EditorModel.canvas.addEventListener(EventType.MOUSE_DOWN, this.update);\n  }\n\n  private unmountEventListeners() {\n    window.removeEventListener(EventType.MOUSE_MOVE, this.update);\n    window.removeEventListener(EventType.MOUSE_UP, this.update);\n    EditorModel.canvas.removeEventListener(EventType.MOUSE_DOWN, this.update);\n  }\n\n  // =================================================================================================================\n  // LOAD IMAGE\n  // =================================================================================================================\n\n  private loadImage = async (imageData: ImageData): Promise<any> => {\n    if (imageData.loadStatus) {\n      EditorActions.setActiveImage(ImageRepository.getById(imageData.id));\n      this.updateModelAndRender();\n    } else {\n      if (!EditorModel.isLoading) {\n        EditorActions.setLoadingStatus(true);\n        const saveLoadedImagePartial = (image: HTMLImageElement) => this.saveLoadedImage(image, imageData);\n        FileUtil.loadImage(imageData.fileData, saveLoadedImagePartial, this.handleLoadImageError);\n      }\n    }\n  };\n\n  private saveLoadedImage = (image: HTMLImageElement, imageData: ImageData) => {\n    const newImageData = produce(imageData, draft => {\n      draft.loadStatus = true;\n    });\n    this.props.updateImageDataById(imageData.id, newImageData);\n    ImageRepository.store(newImageData.id, image);\n    EditorActions.setActiveImage(image);\n    EditorActions.setLoadingStatus(false);\n    this.updateModelAndRender();\n  };\n\n  private handleLoadImageError = () => {\n    console.log('handleLoadImageError');\n  };\n\n  // =================================================================================================================\n  // HELPER METHODS\n  // =================================================================================================================\n\n  private updateModelAndRender = () => {\n    EditorActions.resizeCanvas(this.props.size);\n    EditorActions.calculateAllCharacteristics();\n    EditorActions.fullRender();\n  };\n\n  private update = (event: MouseEvent) => {\n    const editorData: EditorData = EditorActions.getEditorData(event);\n    EditorModel.mousePositionOnCanvas = CanvasUtil.getMousePositionOnCanvasFromEvent(event, EditorModel.canvas);\n    EditorModel.primaryRenderingEngine.update(editorData);\n    EditorModel.supportRenderingEngine && EditorModel.supportRenderingEngine.update(editorData);\n    !this.props.activePopupType && EditorActions.updateMousePositionIndicator(event);\n    EditorActions.fullRender();\n  };\n\n  public render() {\n    return (\n      <div className=\"Editor\">\n        <canvas\n          className=\"ImageCanvas\"\n          ref={ref => (EditorModel.canvas = ref)}\n          draggable={false}\n          onContextMenu={(event: React.MouseEvent<HTMLCanvasElement>) => event.preventDefault()}\n        />\n        <div\n          className=\"MousePositionIndicator\"\n          ref={ref => (EditorModel.mousePositionIndicator = ref)}\n          draggable={false}\n        />\n        <div\n          className={EditorUtil.getCursorStyle(this.props.customCursorStyle)}\n          ref={ref => (EditorModel.cursor = ref)}\n          draggable={false}\n        >\n          <img draggable={false} alt={'indicator'} src={EditorUtil.getIndicator(this.props.customCursorStyle)} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  updateImageDataById,\n  loadDataFromLocalStorge,\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  activeLabelType:\n    state.editor.imagesData[EditorSelector.getActiveImageIndex()].groupList[EditorSelector.getActiveGroupIndex()]\n      .activeLabelType || LabelType.POINT,\n  activePopupType: state.general.activePopupType,\n  activeLabelId:\n    state.editor.imagesData[EditorSelector.getActiveImageIndex()].groupList[EditorSelector.getActiveGroupIndex()]\n      .activeLabelId,\n  customCursorStyle: state.general.customCursorStyle,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Editor);\n","import React from \"react\";\nimport \"./BottomNavigationBar.scss\";\nimport { ImageData } from \"../../../store/editor/types\";\nimport { updateActiveImageIndex } from \"../../../store/editor/actionCreators\";\nimport { AppState } from \"../../../store\";\nimport { connect } from \"react-redux\";\nimport { ImageButton } from \"../../Common/ImageButton/ImageButton\";\nimport { ISize } from \"../../../interfaces/ISize\";\nimport { ContextType } from \"../../../data/enums/ContextType\";\nimport classNames from \"classnames\";\n\ninterface IProps {\n  size: ISize;\n  imageData: ImageData;\n  totalImageCount: number;\n  activeImageIndex: number;\n  activeContext: ContextType;\n  updateActiveImageIndex: (activeImageIndex: number) => any;\n}\n\nconst BottomNavigationBar: React.FC<IProps> = ({\n  size,\n  imageData,\n  totalImageCount,\n  activeImageIndex,\n  activeContext,\n  updateActiveImageIndex,\n}) => {\n  const minWidth: number = 400;\n  const viewPreviousImage = () => {\n    if (activeImageIndex > 0) {\n      updateActiveImageIndex(activeImageIndex - 1);\n    }\n  };\n\n  const viewNextImage = () => {\n    if (activeImageIndex < totalImageCount - 1) {\n      updateActiveImageIndex(activeImageIndex + 1);\n    }\n  };\n\n  const getImageCounter = () => {\n    return activeImageIndex + 1 + \" / \" + totalImageCount;\n  };\n\n  const getClassName = () => {\n    return classNames(\"BottomNavigationBar\", {\n      \"with-context\": activeContext === ContextType.EDITOR,\n    });\n  };\n\n  return (\n    <div className={getClassName()}>\n      <ImageButton\n        image={\"ico/left.png\"}\n        imageAlt={\"previous\"}\n        size={{ width: 25, height: 25 }}\n        onClick={viewPreviousImage}\n        isDisabled={activeImageIndex === 0}\n        externalClassName={\"left\"}\n      />\n      {size.width > minWidth ? (\n        <div className=\"CurrentImageName\"> {imageData.fileData.name} </div>\n      ) : (\n        <div className=\"CurrentImageCount\"> {getImageCounter()} </div>\n      )}\n      <ImageButton\n        image={\"ico/right.png\"}\n        imageAlt={\"next\"}\n        size={{ width: 25, height: 25 }}\n        onClick={viewNextImage}\n        isDisabled={activeImageIndex === totalImageCount - 1}\n        externalClassName={\"right\"}\n      />\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {\n  updateActiveImageIndex,\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  activeImageIndex: state.editor.activeImageIndex,\n  activeContext: state.general.activeContext,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BottomNavigationBar);\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Direction } from '../../../data/enums/Direction';\nimport { ISize } from '../../../interfaces/ISize';\nimport { Settings } from '../../../settings/Settings';\nimport { AppState } from '../../../store';\nimport { ImageData } from '../../../store/editor/types';\nimport ImagesList from '../SideNavigationBar/ImagesList/ImagesList';\nimport LabelsToolkit from '../SideNavigationBar/LabelsToolkit/LabelsToolkit';\nimport { SideNavigationBar } from '../SideNavigationBar/SideNavigationBar';\nimport { VerticalEditorButton } from '../VerticalEditorButton/VerticalEditorButton';\nimport './EditorContainer.scss';\nimport Editor from '../Editor/Editor';\nimport BottomNavigationBar from '../BottomNavigationBar/BottomNavigationBar';\nimport { ContextManager } from '../../../logic/context/ContextManager';\nimport { ContextType } from '../../../data/enums/ContextType';\nimport {\n  updateGroupList,\n  updateActiveGroupIndex,\n  updateActiveLabelNameIndex,\n  updateLabelIndexByInfo,\n  updateActiveImageIndex,\n} from '../../../store/editor/actionCreators';\nimport { LabelType } from '../../../data/enums/LabelType';\nimport { EditorModel } from '../../../staticModels/EditorModel';\nimport { RenderEngineUtil } from '../../../utils/RenderEngineUtil';\nimport { EditorActions } from '../../../logic/actions/EditorActions';\nimport { EditorSelector } from '../../../store/selectors/EditorSelector';\n// import {RenderEngineUtil} from '../'\n\ninterface IProps {\n  windowSize: ISize;\n  activeImageIndex: number;\n  imagesData: ImageData[];\n  activeContext: ContextType;\n  editor: any;\n  updateGroupList: (groupName: string) => any;\n  updateActiveGroupIndex: (groupIndex: number) => any;\n  updateActiveLabelNameIndex: (labelNameIndex: number) => any;\n  updateLabelIndexByInfo: (\n    imageIndex: number,\n    groupIndex: number,\n    labelPointIndex: number,\n    labelIndex: number,\n    checked: boolean\n  ) => any;\n  updateActiveImageIndex: (imageIndex: number) => any;\n}\n\nconst EditorContainer: React.FC<IProps> = ({\n  windowSize,\n  activeImageIndex,\n  imagesData,\n  activeContext,\n  editor,\n  updateGroupList,\n  updateActiveGroupIndex,\n  updateLabelIndexByInfo,\n}) => {\n  const [leftTabStatus, setLeftTabStatus] = useState(true);\n  const [rightTabStatus, setRightTabStatus] = useState(true);\n  const calculateEditorSize = (): ISize => {\n    if (windowSize) {\n      const leftTabWidth = leftTabStatus\n        ? Settings.SIDE_NAVIGATION_BAR_WIDTH_OPEN_PX\n        : Settings.SIDE_NAVIGATION_BAR_WIDTH_CLOSED_PX;\n      const rightTabWidth = rightTabStatus\n        ? Settings.SIDE_NAVIGATION_BAR_WIDTH_OPEN_PX\n        : Settings.SIDE_NAVIGATION_BAR_WIDTH_CLOSED_PX;\n      return {\n        width: windowSize.width - leftTabWidth - rightTabWidth,\n        height: windowSize.height - Settings.TOP_NAVIGATION_BAR_HEIGHT_PX - Settings.BOTTOM_NAVIGATION_BAR_HEIGHT_PX,\n      };\n    } else return null;\n  };\n\n  const leftSideBarButtonOnClick = () => {\n    if (!leftTabStatus) ContextManager.switchCtx(ContextType.LEFT_NAVBAR);\n    else if (leftTabStatus && activeContext === ContextType.LEFT_NAVBAR) ContextManager.restoreCtx();\n\n    setLeftTabStatus(!leftTabStatus);\n  };\n\n  const leftSideBarCompanionRender = () => {\n    return (\n      <>\n        <VerticalEditorButton\n          label=\"Images\"\n          image={'/ico/files.png'}\n          imageAlt={'images'}\n          onClick={leftSideBarButtonOnClick}\n          isActive={leftTabStatus}\n        />\n      </>\n    );\n  };\n\n  const leftSideBarRender = () => {\n    return <ImagesList />;\n  };\n\n  const rightSideBarButtonOnClick = () => {\n    if (!rightTabStatus) ContextManager.switchCtx(ContextType.RIGHT_NAVBAR);\n    else if (rightTabStatus && activeContext === ContextType.RIGHT_NAVBAR) ContextManager.restoreCtx();\n\n    setRightTabStatus(!rightTabStatus);\n  };\n\n  const rightSideBarCompanionRender = () => {\n    return (\n      <>\n        <VerticalEditorButton\n          label=\"Labels\"\n          image={'/ico/tags.png'}\n          imageAlt={'labels'}\n          onClick={rightSideBarButtonOnClick}\n          isActive={rightTabStatus}\n        />\n      </>\n    );\n  };\n\n  const rightSideBarRender = () => {\n    return <LabelsToolkit />;\n  };\n\n  useEffect(() => {\n    return;\n    // setTimeout(() => {\n    //   localStorage.setItem(\n    //     'offsetHeight',\n    //     (document.getElementsByClassName('TopNavigationBar')[0] as any).offsetHeight\n    //   );\n    //   localStorage.setItem(\n    //     'offsetWidth',\n    //     (document.getElementsByClassName('SideNavigationBar left')[0] as any).offsetWidth\n    //   );\n    //   const editorData = EditorActions.getEditorData();\n    //   const offsetWidth = localStorage.getItem('offsetWidth');\n    //   const offsetHeight = localStorage.getItem('offsetHeight');\n    //   // const newIndexs: number[] = [];\n    //   // [].slice\n    //   //   .call(document.getElementsByClassName('ImagePreview'))\n    //   //   .forEach(r => newIndexs.push(+r.getAttribute('data-index')));\n    //   // const showImageIndexs: number[] = (window as any).showImageIndexs || [];\n    //   // const showImagesData = imagesData.filter((itme, idx) => newIndexs.includes(idx));\n    //   imagesData.forEach((imageData, imageIndex) => {\n    //     console.log('activeImageIndex', imageIndex);\n    //     const localData: ImageData = JSON.parse(localStorage.getItem(imageData.fileData.name));\n    //     // updateActiveImageIndex(imageIndex);\n    //     const evt_click = new MouseEvent('click', {\n    //       bubbles: true,\n    //       view: window,\n    //     });\n    //     document.querySelectorAll('.VirtualListContent .ImagePreview')[imageIndex].dispatchEvent(evt_click);\n    //     if (localData) {\n    //       localData.groupList.forEach((item, groupIndex) => {\n    //         if (groupIndex !== 0) {\n    //           updateGroupList(`person-${groupIndex}`);\n    //           updateActiveGroupIndex(groupIndex);\n    //         }\n    //         item.labelPoints.forEach((labelPoint, labelPointIndex) => {\n    //           const point = RenderEngineUtil.transferPointFromImageToCanvas(labelPoint.point, editorData);\n    //           const evt_up = new MouseEvent('mouseup', {\n    //             bubbles: true,\n    //             view: window,\n    //             clientX: point.x + +offsetWidth,\n    //             clientY: point.y + +offsetHeight,\n    //           });\n    //           const evt_down = new MouseEvent('mousedown', {\n    //             bubbles: true,\n    //             view: window,\n    //             clientX: point.x + +offsetWidth,\n    //             clientY: point.y + +offsetHeight,\n    //           });\n    //           EditorModel.canvas.dispatchEvent(evt_up);\n    //           EditorModel.canvas.dispatchEvent(evt_down);\n    //           console.log(imageIndex, groupIndex, labelPointIndex, labelPoint.labelIndex);\n    //           updateLabelIndexByInfo(\n    //             imageIndex,\n    //             groupIndex,\n    //             labelPointIndex,\n    //             labelPoint.labelIndex,\n    //             labelPoint.checked\n    //           );\n    //         });\n    //       });\n    //     }\n    //   });\n    // }, 1000);\n  }, []);\n  return (\n    <div className=\"EditorContainer\">\n      <SideNavigationBar\n        direction={Direction.LEFT}\n        isOpen={leftTabStatus}\n        isWithContext={activeContext === ContextType.LEFT_NAVBAR}\n        renderCompanion={leftSideBarCompanionRender}\n        renderContent={leftSideBarRender}\n      />\n      <div className=\"EditorWrapper\" onMouseDown={() => ContextManager.switchCtx(ContextType.EDITOR)}>\n        <Editor size={calculateEditorSize()} imageData={imagesData[activeImageIndex]} />\n        <BottomNavigationBar\n          imageData={imagesData[activeImageIndex]}\n          size={calculateEditorSize()}\n          totalImageCount={imagesData.length}\n        />\n      </div>\n      <SideNavigationBar\n        direction={Direction.RIGHT}\n        isOpen={rightTabStatus}\n        isWithContext={activeContext === ContextType.RIGHT_NAVBAR}\n        renderCompanion={rightSideBarCompanionRender}\n        renderContent={rightSideBarRender}\n      />\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {\n  updateGroupList,\n  updateActiveGroupIndex,\n  updateActiveLabelNameIndex,\n  updateLabelIndexByInfo,\n  updateActiveImageIndex,\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  windowSize: state.general.windowSize,\n  activeImageIndex: state.editor.activeImageIndex,\n  imagesData: state.editor.imagesData,\n  activeContext: state.general.activeContext,\n  editor: state.editor,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EditorContainer);\n","import React from \"react\";\nimport \"./StateBar.scss\";\nimport { ImageData } from \"../../../store/editor/types\";\nimport { AppState } from \"../../../store\";\nimport { connect } from \"react-redux\";\nimport { LabelType } from \"../../../data/enums/LabelType\";\nimport { EditorSelector } from \"../../../store/selectors/EditorSelector\";\n\ninterface IProps {\n  imagesData: ImageData[];\n  activeLabelType: LabelType;\n}\n\nconst StateBar: React.FC<IProps> = ({ imagesData, activeLabelType }) => {\n  const pointLabeledImages = imagesData.reduce((currentCount: number, currentImage: ImageData) => {\n    return currentCount + (currentImage.groupList[currentImage.activeGroupIndex].labelPoints.length > 0 ? 1 : 0);\n  }, 0);\n\n  const rectLabeledImages = imagesData.reduce((currentCount: number, currentImage: ImageData) => {\n    return currentCount + (currentImage.groupList[currentImage.activeGroupIndex].labelRects.length > 0 ? 1 : 0);\n  }, 0);\n\n  const polygonLabeledImages = imagesData.reduce((currentCount: number, currentImage: ImageData) => {\n    return currentCount + (currentImage.groupList[currentImage.activeGroupIndex].labelPolygons.length > 0 ? 1 : 0);\n  }, 0);\n\n  const getProgress = () => {\n    switch (activeLabelType) {\n      case LabelType.POINT:\n        return (100 * pointLabeledImages) / imagesData.length;\n      case LabelType.RECTANGLE:\n        return (100 * rectLabeledImages) / imagesData.length;\n      case LabelType.POLYGON:\n        return (100 * polygonLabeledImages) / imagesData.length;\n      default:\n        return 0;\n    }\n  };\n\n  return (\n    <div className=\"StateBar\">\n      <div style={{ width: getProgress() + \"%\" }} className=\"done\" />\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {};\n\nconst mapStateToProps = (state: AppState) => ({\n  imagesData: state.editor.imagesData,\n  activeLabelType: EditorSelector.getActiveLabelType(),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(StateBar);\n","import React from 'react'\nimport classNames from 'classnames'\nimport './UnderlineTextButton.scss'\n\ninterface IProps {\n  under?: boolean\n  over?: boolean\n  active?: boolean\n  key?: string\n  label: string\n  onClick?: () => any\n  style?: React.CSSProperties\n}\n\nexport const UnderlineTextButton = (props: IProps) => {\n  const { under, over, active, key, label, onClick, style } = props;\n\n  const getClassName = () => {\n    return classNames('UnderlineTextButton', {\n      under: under,\n      over: over,\n      active: active,\n    })\n  };\n\n  return (\n    <div\n      className={getClassName()}\n      onClick={!!onClick ? onClick : undefined}\n      key={key}\n      style={style}\n    >\n      {label}\n    </div>\n  )\n};\n","import React from 'react';\nimport './TextInput.scss';\n\ninterface IProps {\n    key: string;\n    label?: string;\n    isPassword: boolean;\n    onChange?: (event: React.ChangeEvent<HTMLInputElement>) => any;\n    onFocus?: (event: React.FocusEvent<HTMLInputElement>) => any;\n    inputStyle?: React.CSSProperties;\n    labelStyle?: React.CSSProperties;\n    barStyle?: React.CSSProperties;\n    value?: string;\n}\n\nconst TextInput = (props: IProps) => {\n\n    const {\n        key,\n        label,\n        isPassword,\n        onChange,\n        onFocus,\n        inputStyle,\n        labelStyle,\n        barStyle,\n        value\n    } = props;\n\n    const getInputType = () => {\n        return isPassword ? \"password\" : \"text\";\n    };\n\n    return (\n        <div className=\"TextInput\">\n            <input\n                value={!!value ? value : undefined}\n                type={getInputType()}\n                id={key}\n                style={inputStyle}\n                onChange={onChange ? onChange : undefined}\n                onFocus={onFocus ? onFocus : undefined}\n            />\n            {!!label && <label\n                htmlFor={key}\n                style={labelStyle}\n            >\n                {label}\n            </label>}\n            <div\n                className=\"Bar\"\n                style={barStyle}\n            />\n        </div>\n    );\n};\n\nexport default TextInput;","import React from \"react\";\nimport \"./TopNavigationBar.scss\";\nimport StateBar from \"../StateBar/StateBar\";\nimport { UnderlineTextButton } from \"../../Common/UnderlineTextButton/UnderlineTextButton\";\nimport { PopupWindowType } from \"../../../data/enums/PopupWindowType\";\nimport { AppState } from \"../../../store\";\nimport { connect } from \"react-redux\";\nimport { updateActivePopupType } from \"../../../store/general/actionCreators\";\nimport TextInput from \"../../Common/TextInput/TextInput\";\nimport { updateProjectName } from \"../../../store/editor/actionCreators\";\nimport { ImageButton } from \"../../Common/ImageButton/ImageButton\";\nimport { Settings } from \"../../../settings/Settings\";\n\ninterface IProps {\n  updateActivePopupType: (activePopupType: PopupWindowType) => any;\n  updateProjectName: (projectName: string) => any;\n  projectName: string;\n}\n\nconst TopNavigationBar: React.FC<IProps> = ({ updateActivePopupType, updateProjectName, projectName }) => {\n  const onFocus = (event: React.FocusEvent<HTMLInputElement>) => {\n    event.target.setSelectionRange(0, event.target.value.length);\n  };\n\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.value.toLowerCase().replace(\" \", \"-\");\n    updateProjectName(value);\n  };\n\n  return (\n    <div className=\"TopNavigationBar\">\n      <StateBar />\n      <div className=\"TopNavigationBarWrapper\">\n        <div>\n          <div\n            className=\"Header\"\n            // onClick={() => updateActivePopupType(PopupWindowType.EXIT_PROJECT)}\n          >\n            {/* <img draggable={false} alt={\"make-sense\"} src={\"/make-sense-ico-transparent.png\"} />\n            Make Sense */}\n          </div>\n        </div>\n        <div className=\"NavigationBarGroupWrapper\">\n          <div className=\"ProjectName\">项目名称:</div>\n          <TextInput key={\"ProjectName\"} isPassword={false} value={projectName} onChange={onChange} onFocus={onFocus} />\n        </div>\n        <div className=\"NavigationBarGroupWrapper\">\n          <UnderlineTextButton\n            label={\"导入更多图片\"}\n            under={true}\n            onClick={() => updateActivePopupType(PopupWindowType.LOAD_IMAGES)}\n          />\n          <UnderlineTextButton\n            label={\"导出标注\"}\n            under={true}\n            onClick={() => updateActivePopupType(PopupWindowType.EXPORT_LABELS)}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {\n  updateActivePopupType,\n  updateProjectName,\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  projectName: state.editor.projectName,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TopNavigationBar);\n","import React from \"react\";\nimport \"./EditorView.scss\";\nimport EditorContainer from \"./EditorContainer/EditorContainer\";\nimport { PopupWindowType } from \"../../data/enums/PopupWindowType\";\nimport { AppState } from \"../../store\";\nimport { connect } from \"react-redux\";\nimport classNames from \"classnames\";\nimport TopNavigationBar from \"./TopNavigationBar/TopNavigationBar\";\n\ninterface IProps {\n  activePopupType: PopupWindowType;\n}\n\nconst EditorView: React.FC<IProps> = ({ activePopupType }) => {\n  const getClassName = () => {\n    return classNames(\"EditorView\", {\n      withPopup: !!activePopupType,\n    });\n  };\n\n  return (\n    <div className={getClassName()}>\n      <TopNavigationBar />\n      <EditorContainer />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  activePopupType: state.general.activePopupType,\n});\n\nexport default connect(mapStateToProps)(EditorView);\n","import {Settings} from \"../../settings/Settings\";\n\nexport interface ISocialMedia {\n    displayName:string;\n    imageSrc:string;\n    imageAlt:string;\n    href:string;\n    tooltipMessage:string;\n}\n\nexport const SocialMediaData: ISocialMedia[] = [\n    {\n        displayName: \"Github\",\n        imageSrc: \"/img/github-logo.png\",\n        imageAlt: \"GitHub Logo\",\n        href: Settings.GITHUB_URL,\n        tooltipMessage: \"Show me some love on GitHub\",\n    },\n    {\n        displayName: \"Medium\",\n        imageSrc: \"/img/medium-logo.png\",\n        imageAlt: \"Medium Logo\",\n        href: Settings.MEDIUM_URL,\n        tooltipMessage: \"Read my AI content on Medium\",\n    },\n    {\n        displayName: \"Patreon\",\n        imageSrc: \"/img/patreon-logo.png\",\n        imageAlt: \"Patreon Logo\",\n        href: Settings.PATREON_URL,\n        tooltipMessage: \"Support MakeSense on Patreon and help it grow\"\n    },\n];","export interface IEditorFeature {\n  displayText: string;\n  imageSrc: string;\n  imageAlt: string;\n}\n\nexport const EditorFeatureData: IEditorFeature[] = [\n  {\n    displayText: \"不需要额外安装，仅仅打开浏览器就可以开始工作\",\n    imageSrc: \"img/online.png\",\n    imageAlt: \"online\",\n  },\n  {\n    displayText: \"我们不存储你的图片\",\n    imageSrc: \"img/private.png\",\n    imageAlt: \"private\",\n  },\n  {\n    displayText: \"支持点、矩形、多边形标注\",\n    imageSrc: \"img/labels.png\",\n    imageAlt: \"labels\",\n  },\n  {\n    displayText: \"支持导出标注数据\",\n    imageSrc: \"img/file.png\",\n    imageAlt: \"file\",\n  },\n  {\n    displayText: \"支持裁剪和调整大小\",\n    imageSrc: \"img/crop.png\",\n    imageAlt: \"crop\",\n  },\n];\n","import React, { useEffect, useCallback, useRef } from 'react';\nimport './ImagesDropZone.scss';\nimport { useDropzone } from 'react-dropzone';\nimport uuidv1 from 'uuid/v1';\nimport { TextButton } from '../../Common/TextButton/TextButton';\nimport { ImageData } from '../../../store/editor/types';\nimport { connect } from 'react-redux';\nimport { addImageData, updateActiveImageIndex, updateProjectType } from '../../../store/editor/actionCreators';\nimport { AppState } from '../../../store';\nimport { ProjectType } from '../../../data/enums/ProjectType';\nimport { FileUtil } from '../../../utils/FileUtil';\nimport { PopupWindowType } from '../../../data/enums/PopupWindowType';\nimport { updateActivePopupType } from '../../../store/general/actionCreators';\nimport { AcceptedFileType } from '../../../data/enums/AcceptedFileType';\nimport _ from 'lodash';\nimport { store } from 'react-notifications-component';\n\ninterface IProps {\n  updateActiveImageIndex: (activeImageIndex: number) => any;\n  addImageData: (imageData: ImageData[]) => any;\n  updateProjectType: (projectType: ProjectType) => any;\n  updateActivePopupType: (activePopupType: PopupWindowType) => any;\n}\n\nconst ImagesDropZone: React.FC<IProps> = ({\n  updateActiveImageIndex,\n  addImageData,\n  updateProjectType,\n  updateActivePopupType,\n}) => {\n  let inputRef = useRef<HTMLInputElement>();\n  const onDrop = useCallback(acceptedFiles => {\n    acceptedFiles.forEach(file => {\n      const reader = new FileReader();\n      reader.onabort = () => console.log('file reading was aborted');\n      reader.onerror = () => console.log('file reading has failed');\n      reader.onload = () => {\n        var image = new Image();\n        image.src = reader.result as any;\n        image.onload = function(img) {\n          file.width = (this as any).width;\n          file.height = (this as any).height;\n        };\n      };\n      reader.readAsDataURL(file);\n    });\n  }, []);\n\n  const { acceptedFiles, getRootProps, getInputProps } = useDropzone({\n    accept: AcceptedFileType.IMAGE,\n    onDrop,\n  });\n  const onClickImport = () => {\n    inputRef.current.click();\n  };\n  const handleChange = (files: File[]) => {\n    [].slice.call(files).forEach(file => {\n      var reader = new FileReader();\n      reader.onloadend = function(evt) {\n        let jsonData = JSON.parse((evt.target as any).result);\n\n        for (let imageName in jsonData) {\n          let saveImageData = {\n            activeGroupIndex: 0,\n            fileData: {},\n            groupList: [],\n            id: uuidv1(),\n            loadStatus: false,\n          };\n          jsonData[imageName].people.forEach((groupData, groupIndex) => {\n            let pointList = _.chunk(groupData.pose_keypoints_2d, 3);\n            let labelPoints = [];\n            for (let i in pointList) {\n              if (pointList[i][2] === -1) {\n                continue;\n              }\n              labelPoints.push({\n                checked: pointList[i][2] === 1 ? true : false,\n                id: uuidv1(),\n                labelIndex: i,\n                point: {\n                  x: pointList[i][0],\n                  y: pointList[i][1],\n                },\n              });\n            }\n            let groupTmp = {\n              activeLabelId: uuidv1(),\n              activeLabelNameIndex: 0,\n              activeLabelType: 'POINT',\n              firstLabelCreatedFlag: true,\n              highlightedLabelId: null,\n              labelPolygons: [],\n              labelRects: [],\n              labelPoints,\n            };\n            saveImageData.groupList.push(groupTmp);\n          });\n          localStorage.setItem(imageName, JSON.stringify(saveImageData));\n        }\n        // startEditor(ProjectType.OBJECT_DETECTION);\n      };\n      reader.readAsText(file);\n    });\n    store.addNotification({\n      title: '导入成功!',\n      message: '可以继续导入或者开始标记',\n      type: 'success',\n      insert: 'top',\n      container: 'top-center',\n      animationIn: ['animated', 'fadeIn'],\n      animationOut: ['animated', 'fadeOut'],\n      dismiss: {\n        duration: 1000,\n        // onScreen: true,\n      },\n    });\n  };\n  const startEditor = (projectType: ProjectType) => {\n    if (acceptedFiles.length > 0) {\n      addImageData(acceptedFiles.map((fileData: File) => FileUtil.mapFileDataToImageData(fileData)));\n      updateActiveImageIndex(0);\n      updateProjectType(projectType);\n    }\n  };\n\n  const clearLocalStorge = () => {\n    localStorage.clear();\n    store.addNotification({\n      // title: '!',\n      message: '已清除所有缓存',\n      type: 'success',\n      insert: 'top',\n      container: 'top-center',\n      animationIn: ['animated', 'fadeIn'],\n      animationOut: ['animated', 'fadeOut'],\n      dismiss: {\n        duration: 1000,\n        // onScreen: true,\n      },\n    });\n  };\n  const getDropZoneContent = () => {\n    if (acceptedFiles.length === 0)\n      return (\n        <>\n          <input {...getInputProps()} />\n          <img draggable={false} alt={'upload'} src={'img/box-opened.png'} />\n          <p className=\"extraBold\">拖拽图片至此</p>\n          <p>或</p>\n          <p className=\"extraBold\">点击选取</p>\n        </>\n      );\n    else if (acceptedFiles.length === 1)\n      return (\n        <>\n          <img draggable={false} alt={'uploaded'} src={'img/box-closed.png'} />\n          <p className=\"extraBold\">已载入 1 张图片</p>\n        </>\n      );\n    else\n      return (\n        <>\n          <input {...getInputProps()} />\n          <img draggable={false} key={1} alt={'uploaded'} src={'img/box-closed.png'} />\n          <p key={2} className=\"extraBold\">\n            已载入 {acceptedFiles.length} 张图片\n          </p>\n        </>\n      );\n  };\n  return (\n    <div className=\"ImagesDropZone\">\n      <div {...getRootProps({ className: 'DropZone' })}>{getDropZoneContent()}</div>\n      <div className=\"DropZoneButtons\">\n        <TextButton\n          label={'导入标记'}\n          // isDisabled={!acceptedFiles.length}\n          onClick={() => onClickImport()}\n          style={{ marginRight: 10 }}\n        />\n        <TextButton\n          label={'开始标记'}\n          isDisabled={!acceptedFiles.length}\n          onClick={() => startEditor(ProjectType.OBJECT_DETECTION)}\n        />\n      </div>\n      <div className=\"DropZoneButtons\">\n        <TextButton label={'清除缓存'} style={{ marginTop: 10 }} onClick={() => clearLocalStorge()} />\n      </div>\n      <input\n        type=\"file\"\n        style={{ display: 'none' }}\n        ref={inputRef}\n        accept=\"application/json\"\n        onChange={(e: any) => handleChange(e.target.files)}\n        multiple\n      />\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {\n  updateActiveImageIndex,\n  addImageData,\n  updateProjectType,\n  updateActivePopupType,\n};\n\nconst mapStateToProps = (state: AppState) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ImagesDropZone);\n","export enum ExportFormatType {\n  YOLO = \"YOLO\",\n  COCO = \"COCO\",\n  CSV = \"CSV\",\n  VOC = \"VOC\",\n  VGG_JSON = \"VGG_JSON\",\n  JSON = \"JSON\",\n}\n","import React, { useState } from 'react';\nimport './MainView.scss';\nimport { TextButton } from '../Common/TextButton/TextButton';\nimport classNames from 'classnames';\nimport { ISize } from '../../interfaces/ISize';\nimport { ImageButton } from '../Common/ImageButton/ImageButton';\nimport { ISocialMedia, SocialMediaData } from '../../data/info/SocialMediaData';\nimport { EditorFeatureData, IEditorFeature } from '../../data/info/EditorFeatureData';\nimport { Tooltip } from '@material-ui/core';\nimport Fade from '@material-ui/core/Fade';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ImagesDropZone from './ImagesDropZone/ImagesDropZone';\nimport 'react-notifications-component/dist/theme.css';\n\nconst MainView: React.FC = () => {\n  const [projectInProgress, setProjectInProgress] = useState(false);\n  const [projectCanceled, setProjectCanceled] = useState(false);\n\n  const startProject = () => {\n    setProjectInProgress(true);\n  };\n  const jumpToRegular = () => {\n    window.location.href = 'https://uglyspoon.github.io/regular/';\n  };\n\n  const endProject = () => {\n    setProjectInProgress(false);\n    setProjectCanceled(true);\n  };\n\n  const getClassName = () => {\n    return classNames('MainView', {\n      InProgress: projectInProgress,\n      Canceled: !projectInProgress && projectCanceled,\n    });\n  };\n\n  const DarkTooltip = withStyles(theme => ({\n    tooltip: {\n      backgroundColor: '#171717',\n      color: '#ffffff',\n      boxShadow: theme.shadows[1],\n      fontSize: 11,\n      maxWidth: 120,\n    },\n  }))(Tooltip);\n\n  const getSocialMediaButtons = (size: ISize) => {\n    return SocialMediaData.map((data: ISocialMedia, index: number) => {\n      return (\n        <DarkTooltip\n          key={index}\n          disableFocusListener\n          title={data.tooltipMessage}\n          TransitionComponent={Fade}\n          TransitionProps={{ timeout: 600 }}\n          placement=\"left\"\n        >\n          <div>\n            <ImageButton size={size} image={data.imageSrc} imageAlt={data.imageAlt} href={data.href} />\n          </div>\n        </DarkTooltip>\n      );\n    });\n  };\n\n  const getEditorFeatureTiles = () => {\n    return EditorFeatureData.map((data: IEditorFeature) => {\n      return (\n        <div className=\"EditorFeaturesTiles\" key={data.displayText}>\n          <div className=\"EditorFeaturesTilesWrapper\">\n            <img draggable={false} alt={data.imageAlt} src={data.imageSrc} />\n            <div className=\"EditorFeatureLabel\">{data.displayText}</div>\n          </div>\n        </div>\n      );\n    });\n  };\n\n  return (\n    <div className={getClassName()}>\n      <div className=\"Slider\" id=\"lower\">\n        <div className=\"TriangleVertical\">\n          <div className=\"TriangleVerticalContent\" />\n        </div>\n      </div>\n\n      <div className=\"Slider\" id=\"upper\">\n        <div className=\"TriangleVertical\">\n          <div className=\"TriangleVerticalContent\" />\n        </div>\n      </div>\n\n      <div className=\"LeftColumn\">\n        <div className={'LogoWrapper'}>\n          {/* <img draggable={false} alt={\"main-logo\"} src={\"img/main-image-color.png\"} /> */}\n          {/* <div /> */}\n        </div>\n        <div className=\"EditorFeaturesWrapper\">{getEditorFeatureTiles()}</div>\n        <div className=\"TriangleVertical\">\n          <div className=\"TriangleVerticalContent\" />\n        </div>\n        {projectInProgress && <TextButton label={'返回'} onClick={endProject} />}\n      </div>\n      <div className=\"RightColumn\">\n        <div />\n        <ImagesDropZone />\n        {/* <div className=\"SocialMediaWrapper\">{getSocialMediaButtons({ width: 30, height: 30 })}</div> */}\n        <div className=\"SocialMediaWrapper\"></div>\n        <TextButton label={'常规标记'} onClick={jumpToRegular} />\n        {!projectInProgress && <TextButton label={'关节标记'} onClick={startProject} />}\n      </div>\n    </div>\n  );\n};\n\nexport default MainView;\n","import React, { useEffect, useState } from \"react\";\nimport \"./GenericYesNoPopup.scss\";\nimport { TextButton } from \"../../Common/TextButton/TextButton\";\nimport { ContextManager } from \"../../../logic/context/ContextManager\";\nimport { ContextType } from \"../../../data/enums/ContextType\";\n\ninterface IProps {\n  title: string;\n  renderContent: () => any;\n  acceptLabel: string;\n  onAccept: () => any;\n  skipAcceptButton?: boolean;\n  disableAcceptButton?: boolean;\n  rejectLabel: string;\n  onReject: () => any;\n  skipRejectButton?: boolean;\n  disableRejectButton?: boolean;\n}\n\nexport const GenericYesNoPopup: React.FC<IProps> = ({\n  title,\n  renderContent,\n  acceptLabel,\n  onAccept,\n  skipAcceptButton,\n  disableAcceptButton,\n  rejectLabel,\n  onReject,\n  skipRejectButton,\n  disableRejectButton,\n}) => {\n  const [status, setMountStatus] = useState(false);\n  useEffect(() => {\n    if (!status) {\n      ContextManager.switchCtx(ContextType.POPUP);\n      setMountStatus(true);\n    }\n  }, [status]);\n\n  return (\n    <div className=\"GenericYesNoPopup\">\n      <div className=\"Header\">{title}</div>\n      <div className=\"Content\">{renderContent()}</div>\n      <div className=\"Footer\">\n        {!skipRejectButton && (\n          <TextButton\n            label={!!rejectLabel ? rejectLabel : \"不, 谢谢\"}\n            onClick={onReject}\n            externalClassName={\"reject\"}\n            isDisabled={disableRejectButton}\n          />\n        )}\n        {!skipAcceptButton && (\n          <TextButton\n            label={!!acceptLabel ? acceptLabel : \"好的\"}\n            onClick={onAccept}\n            externalClassName={\"accept\"}\n            isDisabled={disableAcceptButton}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport \"./LoadLabelNamesPopup.scss\";\nimport { AppState } from \"../../../store\";\nimport { connect } from \"react-redux\";\nimport {\n  updateActiveLabelNameIndex,\n  updateLabelNamesList,\n} from \"../../../store/editor/actionCreators\";\nimport { GenericYesNoPopup } from \"../GenericYesNoPopup/GenericYesNoPopup\";\nimport { PopupWindowType } from \"../../../data/enums/PopupWindowType\";\nimport { updateActivePopupType } from \"../../../store/general/actionCreators\";\nimport { useDropzone } from \"react-dropzone\";\nimport { FileUtil } from \"../../../utils/FileUtil\";\nimport { AcceptedFileType } from \"../../../data/enums/AcceptedFileType\";\nimport { PopupActions } from \"../../../logic/actions/PopupActions\";\n\ninterface IProps {\n  updateActiveLabelNameIndex: (activeLabelIndex: number) => any;\n  updateLabelNamesList: (labelNames: string[]) => any;\n  updateActivePopupType: (activePopupType: PopupWindowType) => any;\n}\n\nconst LoadLabelNamesPopup: React.FC<IProps> = ({\n  updateActiveLabelNameIndex,\n  updateLabelNamesList,\n  updateActivePopupType,\n}) => {\n  const [labelsList, setLabelsList] = useState([]);\n  const [invalidFileLoadedStatus, setInvalidFileLoadedStatus] = useState(false);\n\n  const { acceptedFiles, getRootProps, getInputProps } = useDropzone({\n    accept: AcceptedFileType.TEXT,\n    multiple: false,\n    onDrop: acceptedFiles => {\n      if (acceptedFiles.length === 1) {\n        FileUtil.loadLabelsList(acceptedFiles[0], onSuccess, onFailure);\n      }\n    },\n  });\n\n  const onSuccess = (labelsList: string[]) => {\n    setLabelsList(labelsList);\n    setInvalidFileLoadedStatus(false);\n  };\n\n  const onFailure = () => {\n    setInvalidFileLoadedStatus(true);\n  };\n\n  const onAccept = () => {\n    if (labelsList.length > 0) {\n      updateActiveLabelNameIndex(0);\n      updateLabelNamesList(labelsList);\n      PopupActions.close();\n    }\n  };\n\n  const onReject = () => {\n    updateActivePopupType(PopupWindowType.INSERT_LABEL_NAMES);\n  };\n\n  const getDropZoneContent = () => {\n    if (invalidFileLoadedStatus)\n      return (\n        <>\n          <input {...getInputProps()} />\n          <img draggable={false} alt={\"upload\"} src={\"img/box-opened.png\"} />\n          <p className=\"extraBold\">导入文件未成功！</p>\n          <p className=\"extraBold\">请再试一次</p>\n        </>\n      );\n    else if (acceptedFiles.length === 0)\n      return (\n        <>\n          <input {...getInputProps()} />\n          <img draggable={false} alt={\"upload\"} src={\"img/box-opened.png\"} />\n          <p className=\"extraBold\">拖拽文件到这里</p>\n          <p>或</p>\n          <p className=\"extraBold\">点击此处选择导入</p>\n        </>\n      );\n    else if (labelsList.length === 1)\n      return (\n        <>\n          <img draggable={false} alt={\"uploaded\"} src={\"img/box-closed.png\"} />\n          <p className=\"extraBold\">已导入了一个标签</p>\n        </>\n      );\n    else\n      return (\n        <>\n          <img draggable={false} alt={\"uploaded\"} src={\"img/box-closed.png\"} />\n          <p className=\"extraBold\"> 已导入了{labelsList.length}个标签</p>\n        </>\n      );\n  };\n\n  const renderContent = () => {\n    return (\n      <div className=\"LoadLabelsPopupContent\">\n        <div className=\"Message\">\n          选择一个你准备好的.txt格式的文本文件，注意每个标签应该另起一行\n        </div>\n        <div {...getRootProps({ className: \"DropZone\" })}>{getDropZoneContent()}</div>\n      </div>\n    );\n  };\n\n  return (\n    <GenericYesNoPopup\n      title={\"导入标签列表文件\"}\n      renderContent={renderContent}\n      acceptLabel={\"开始\"}\n      onAccept={onAccept}\n      disableAcceptButton={labelsList.length === 0}\n      rejectLabel={\"返回\"}\n      onReject={onReject}\n    />\n  );\n};\n\nconst mapDispatchToProps = {\n  updateActiveLabelNameIndex,\n  updateLabelNamesList,\n  updateActivePopupType,\n};\n\nconst mapStateToProps = (state: AppState) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoadLabelNamesPopup);\n","export class XMLSanitizerUtil {\n    public static sanitize(input: string): string {\n        return input\n            .replace('<', '&lt;')\n            .replace('>', '&gt;')\n            .replace('&', '&amp;')\n            .replace(\"'\", '&#39;')\n            .replace(\"/\", '&#x2F;')\n    }\n}","import {EditorSelector} from \"../store/selectors/EditorSelector\";\nimport moment from 'moment';\n\nexport class ExporterUtil {\n    public static getExportFileName(): string {\n        const projectName: string = EditorSelector.getProjectName();\n        const date: string = moment().format('YYYYMMDDhhmmss');\n        return `labels_${projectName}_${date}`\n    }\n}","import { ExportFormatType } from \"../../data/enums/ExportFormatType\";\nimport { ImageData, LabelRect } from \"../../store/editor/types\";\nimport { ImageRepository } from \"../imageRepository/ImageRepository\";\nimport JSZip from \"jszip\";\nimport { saveAs } from \"file-saver\";\nimport { EditorSelector } from \"../../store/selectors/EditorSelector\";\nimport { XMLSanitizerUtil } from \"../../utils/XMLSanitizerUtil\";\nimport { ExporterUtil } from \"../../utils/ExporterUtil\";\n\nexport class RectLabelsExporter {\n  public static export(exportFormatType: ExportFormatType): void {\n    switch (exportFormatType) {\n      case ExportFormatType.YOLO:\n        RectLabelsExporter.exportAsYOLO();\n        break;\n      case ExportFormatType.VOC:\n        RectLabelsExporter.exportAsVOC();\n        break;\n      case ExportFormatType.CSV:\n        RectLabelsExporter.exportAsCSV();\n        break;\n      default:\n        return;\n    }\n  }\n\n  private static exportAsYOLO(): void {\n    let zip = new JSZip();\n    EditorSelector.getImagesData().forEach((imageData: ImageData) => {\n      const fileContent: string = RectLabelsExporter.wrapRectLabelsIntoYOLO(imageData);\n      if (fileContent) {\n        const fileName: string = imageData.fileData.name.replace(/\\.[^/.]+$/, \".txt\");\n        try {\n          zip.file(fileName, fileContent);\n        } catch (error) {\n          // TODO\n          throw new Error(error);\n        }\n      }\n    });\n\n    try {\n      zip.generateAsync({ type: \"blob\" }).then(function(content) {\n        saveAs(content, `${ExporterUtil.getExportFileName()}.zip`);\n      });\n    } catch (error) {\n      // TODO\n      throw new Error(error);\n    }\n  }\n\n  private static wrapRectLabelsIntoYOLO(imageData: ImageData): string {\n    if (imageData.groupList[imageData.activeGroupIndex].labelRects.length === 0 || !imageData.loadStatus) return null;\n\n    const image: HTMLImageElement = ImageRepository.getById(imageData.id);\n    const labelRectsString: string[] = imageData.groupList[imageData.activeGroupIndex].labelRects.map(\n      (labelRect: LabelRect) => {\n        const labelFields = [\n          labelRect.labelIndex + \"\",\n          ((labelRect.rect.x + labelRect.rect.width / 2) / image.width).toFixed(6) + \"\",\n          ((labelRect.rect.y + labelRect.rect.height / 2) / image.height).toFixed(6) + \"\",\n          (labelRect.rect.width / image.width).toFixed(6) + \"\",\n          (labelRect.rect.height / image.height).toFixed(6) + \"\",\n        ];\n        return labelFields.join(\" \");\n      }\n    );\n    return labelRectsString.join(\"\\n\");\n  }\n\n  private static exportAsVOC(): void {\n    let zip = new JSZip();\n    EditorSelector.getImagesData().forEach((imageData: ImageData) => {\n      const fileContent: string = RectLabelsExporter.wrapImageIntoVOC(imageData);\n      if (fileContent) {\n        const fileName: string = imageData.fileData.name.replace(/\\.[^/.]+$/, \".xml\");\n        try {\n          zip.file(fileName, fileContent);\n        } catch (error) {\n          // TODO\n          throw new Error(error);\n        }\n      }\n    });\n\n    try {\n      zip.generateAsync({ type: \"blob\" }).then(function(content) {\n        saveAs(content, `${ExporterUtil.getExportFileName()}.zip`);\n      });\n    } catch (error) {\n      // TODO\n      throw new Error(error);\n    }\n  }\n\n  private static wrapRectLabelsIntoVOC(imageData: ImageData): string {\n    if (imageData.groupList[imageData.activeGroupIndex].labelRects.length === 0 || !imageData.loadStatus) return null;\n\n    const labelNamesList: string[] = EditorSelector.getLabelNames();\n    const labelRectsString: string[] = imageData.groupList[imageData.activeGroupIndex].labelRects.map(\n      (labelRect: LabelRect) => {\n        const labelFields = [\n          `\\t<object>`,\n          `\\t\\t<name>${labelNamesList[labelRect.labelIndex]}</name>`,\n          `\\t\\t<pose>Unspecified</pose>`,\n          `\\t\\t<truncated>Unspecified</truncated>`,\n          `\\t\\t<difficult>Unspecified</difficult>`,\n          `\\t\\t<bndbox>`,\n          `\\t\\t\\t<xmin>${Math.round(labelRect.rect.x)}</xmin>`,\n          `\\t\\t\\t<ymin>${Math.round(labelRect.rect.y)}</ymin>`,\n          `\\t\\t\\t<xmax>${Math.round(labelRect.rect.x + labelRect.rect.width)}</xmax>`,\n          `\\t\\t\\t<ymax>${Math.round(labelRect.rect.y + labelRect.rect.height)}</ymax>`,\n          `\\t\\t</bndbox>`,\n          `\\t</object>`,\n        ];\n        return labelFields.join(\"\\n\");\n      }\n    );\n    return labelRectsString.join(\"\\n\");\n  }\n\n  private static wrapImageIntoVOC(imageData: ImageData): string {\n    const labels: string = RectLabelsExporter.wrapRectLabelsIntoVOC(imageData);\n    const projectName: string = XMLSanitizerUtil.sanitize(EditorSelector.getProjectName());\n\n    if (labels) {\n      const image: HTMLImageElement = ImageRepository.getById(imageData.id);\n      return [\n        `<annotation>`,\n        `\\t<folder>${projectName}</folder>`,\n        `\\t<filename>${imageData.fileData.name}</filename>`,\n        `\\t<path>/${projectName}/${imageData.fileData.name}</path>`,\n        `\\t<source>`,\n        `\\t\\t<database>Unspecified</database>`,\n        `\\t</source>`,\n        `\\t<size>`,\n        `\\t\\t<width>${image.width}</width>`,\n        `\\t\\t<height>${image.height}</height>`,\n        `\\t\\t<depth>3</depth>`,\n        `\\t</size>`,\n        labels,\n        `</annotation>`,\n      ].join(\"\\n\");\n    }\n    return null;\n  }\n\n  private static exportAsCSV(): void {\n    const content: string = EditorSelector.getImagesData()\n      .map((imageData: ImageData) => {\n        return RectLabelsExporter.wrapRectLabelsIntoCSV(imageData);\n      })\n      .filter((imageLabelData: string) => {\n        return !!imageLabelData;\n      })\n      .join(\"\\n\");\n\n    const blob = new Blob([content], { type: \"text/plain;charset=utf-8\" });\n    try {\n      saveAs(blob, `${ExporterUtil.getExportFileName()}.csv`);\n    } catch (error) {\n      // TODO\n      throw new Error(error);\n    }\n  }\n\n  private static wrapRectLabelsIntoCSV(imageData: ImageData): string {\n    if (imageData.groupList[imageData.activeGroupIndex].labelRects.length === 0 || !imageData.loadStatus) return null;\n\n    const image: HTMLImageElement = ImageRepository.getById(imageData.id);\n    const labelNamesList: string[] = EditorSelector.getLabelNames();\n    const labelRectsString: string[] = imageData.groupList[imageData.activeGroupIndex].labelRects.map(\n      (labelRect: LabelRect) => {\n        const labelFields = [\n          labelNamesList[labelRect.labelIndex],\n          Math.round(labelRect.rect.x) + \"\",\n          Math.round(labelRect.rect.y) + \"\",\n          Math.round(labelRect.rect.width) + \"\",\n          Math.round(labelRect.rect.height) + \"\",\n          imageData.fileData.name,\n          image.width + \"\",\n          image.height + \"\",\n        ];\n        return labelFields.join(\",\");\n      }\n    );\n    return labelRectsString.join(\"\\n\");\n  }\n}\n","import { IExportFormat } from \"../../interfaces/IExportFormat\";\nimport { ExportFormatType } from \"../enums/ExportFormatType\";\n\nexport const AllExportFormatData: IExportFormat[] = [\n  {\n    type: ExportFormatType.JSON,\n    label: \"JSON格式文件\",\n  },\n];\n","import { ExportFormatType } from \"../enums/ExportFormatType\";\nimport { IExportFormat } from \"../../interfaces/IExportFormat\";\n\nexport const PointExportFormatData: IExportFormat[] = [\n  {\n    type: ExportFormatType.CSV,\n    label: \"单一的CSV文件\",\n  },\n];\n","import { ExportFormatType } from \"../../data/enums/ExportFormatType\";\nimport { ImageData, LabelPoint } from \"../../store/editor/types\";\nimport { saveAs } from \"file-saver\";\nimport { ImageRepository } from \"../imageRepository/ImageRepository\";\nimport { EditorSelector } from \"../../store/selectors/EditorSelector\";\nimport { ExporterUtil } from \"../../utils/ExporterUtil\";\n\nexport class PointLabelsExporter {\n  public static export(exportFormatType: ExportFormatType): void {\n    switch (exportFormatType) {\n      case ExportFormatType.CSV:\n        PointLabelsExporter.exportAsCSV();\n        break;\n      default:\n        return;\n    }\n  }\n\n  private static exportAsCSV(): void {\n    const content: string = EditorSelector.getImagesData()\n      .map((imageData: ImageData) => {\n        return PointLabelsExporter.wrapRectLabelsIntoCSV(imageData);\n      })\n      .filter((imageLabelData: string) => {\n        return !!imageLabelData;\n      })\n      .join(\"\\n\");\n\n    const blob = new Blob([content], { type: \"text/plain;charset=utf-8\" });\n    try {\n      saveAs(blob, `${ExporterUtil.getExportFileName()}.csv`);\n    } catch (error) {\n      // TODO\n      throw new Error(error);\n    }\n  }\n\n  private static wrapRectLabelsIntoCSV(imageData: ImageData): string {\n    if (imageData.groupList[imageData.activeGroupIndex].labelPoints.length === 0 || !imageData.loadStatus) return null;\n\n    const image: HTMLImageElement = ImageRepository.getById(imageData.id);\n    const labelNamesList: string[] = EditorSelector.getLabelNames();\n    const labelRectsString: string[] = imageData.groupList[imageData.activeGroupIndex].labelPoints.map(\n      (labelPoint: LabelPoint) => {\n        const labelFields = [\n          labelNamesList[labelPoint.labelIndex],\n          Math.round(labelPoint.point.x) + \"\",\n          Math.round(labelPoint.point.y) + \"\",\n          imageData.fileData.name,\n          image.width + \"\",\n          image.height + \"\",\n        ];\n        return labelFields.join(\",\");\n      }\n    );\n    return labelRectsString.join(\"\\n\");\n  }\n}\n","import { ExportFormatType } from \"../../data/enums/ExportFormatType\";\nimport { IPoint } from \"../../interfaces/IPoint\";\nimport { VGGFileData, VGGObject, VGGRegionsData } from \"../../data/VGG/JSON\";\nimport { ImageData, LabelPolygon, GroupType, LabelPoint } from \"../../store/editor/types\";\nimport { EditorSelector } from \"../../store/selectors/EditorSelector\";\nimport { saveAs } from \"file-saver\";\nimport { ExporterUtil } from \"../../utils/ExporterUtil\";\n\nexport class AllLabelsExporter {\n  public static export(exportFormatType: ExportFormatType): void {\n    switch (exportFormatType) {\n      case ExportFormatType.JSON:\n        AllLabelsExporter.exportAsJson();\n        break;\n      default:\n        return;\n    }\n  }\n\n  private static exportAsJson(): void {\n    const imagesData: ImageData[] = EditorSelector.getImagesData();\n    const labelNames: string[] = EditorSelector.getLabelNames();\n    const content: string = JSON.stringify(AllLabelsExporter.mapImagesDataToVGGObject(imagesData, labelNames));\n    const blob = new Blob([content], { type: \"text/plain;charset=utf-8\" });\n    try {\n      saveAs(blob, `${ExporterUtil.getExportFileName()}.json`);\n    } catch (error) {\n      // TODO\n      throw new Error(error);\n    }\n  }\n\n  private static mapImagesDataToVGGObject(imagesData: ImageData[], labelNames: string[]): VGGObject {\n    return imagesData.reduce((data: VGGObject, image: ImageData) => {\n      const fileData: VGGFileData = AllLabelsExporter.mapImageDataToVGGFileData(image, labelNames);\n      if (!!fileData) {\n        data[image.fileData.name] = fileData;\n      }\n      return data;\n    }, {});\n  }\n\n  private static mapImageDataToVGGFileData(imageData: ImageData, labelNames: string[]): VGGFileData {\n    let regionsDataArray: VGGRegionsData[][] = AllLabelsExporter.mapImageDataToVGG(imageData, labelNames);\n    if (!regionsDataArray) return null;\n\n    const orderArray: string[] = labelNames;\n    const tempArray = [];\n    regionsDataArray.forEach(item => {\n      item = Object.values(item);\n      orderArray.forEach((ele, idx) => {\n        if (!item.some(r => r.label === ele)) {\n          item.push({\n            label: ele,\n            type: \"point\",\n            is_checked: null,\n            all_points: null,\n          });\n        }\n      });\n      const temp = item.sort((a, b) => {\n        return orderArray.indexOf(a.label as any) - orderArray.indexOf(b.label as any);\n      });\n      tempArray.push(temp);\n    });\n\n    const peopleDataArray = tempArray.map((personData, idx) => {\n      let result = [];\n      personData.forEach((item, idx) => {\n        if (item.all_points) {\n          result.push(item.all_points[0], item.all_points[1], item.is_checked);\n        } else {\n          result.push(-1, -1, -1);\n        }\n      });\n      return {\n        pose_keypoints_2d: result,\n      };\n    });\n    return {\n      // size: imageData.fileData.size,\n      label_name: labelNames,\n      width: (imageData.fileData as any).width,\n      height: (imageData.fileData as any).height,\n      // image_name: imageData.fileData.name,\n      people: peopleDataArray,\n    };\n  }\n\n  public static mapImageDataToVGG(imageData: ImageData, labelNames: string[]): VGGRegionsData[][] {\n    if (\n      !imageData.loadStatus ||\n      !imageData.groupList[imageData.activeGroupIndex].labelPoints ||\n      !imageData.groupList[imageData.activeGroupIndex].labelPoints.length ||\n      !labelNames ||\n      !labelNames.length\n    )\n      return null;\n\n    // const validPolygonLabelsArray: Array<LabelPolygon[]> = AllLabelsExporter.getValidPolygonLabelsArray(imageData);\n\n    // let polygonsData = [];\n    // if (validPolygonLabelsArray.length) {\n    //   polygonsData = validPolygonLabelsArray.map((validLabels: LabelPolygon[]) => {\n    //     return validLabels.reduce((data: VGGRegionsData, label: LabelPolygon, index: number) => {\n    //       data[`${index}`] = {\n    //         all_points: AllLabelsExporter.mapPolygonToVGG(label.vertices),\n    //         label: labelNames[label.labelIndex],\n    //         is_checked: label.checked ? \"1\" : \"0\",\n    //         type: \"polygon\",\n    //       };\n    //       return data;\n    //     }, {});\n    //   });\n    // }\n\n    const validPointLabelsArray: Array<LabelPoint[]> = AllLabelsExporter.getValidPointLabelsArray(imageData);\n    let pointsData = [];\n    if (validPointLabelsArray.length) {\n      pointsData = validPointLabelsArray.map((validLabels: LabelPoint[]) => {\n        return validLabels.reduce((data: VGGRegionsData, label: LabelPoint, index: number) => {\n          data[`${index}`] = {\n            all_points: [label.point.x, label.point.y],\n            label: labelNames[label.labelIndex],\n            is_checked: label.checked ? 1 : 0,\n            type: \"point\",\n          };\n          return data;\n        }, {});\n      });\n    }\n    return pointsData;\n  }\n\n  public static getValidPolygonLabelsArray(imageData: ImageData): LabelPolygon[][] {\n    return imageData.groupList.map((group: GroupType) => {\n      return group.labelPolygons.filter((label: LabelPolygon) => label.labelIndex !== null && !!label.vertices.length);\n    });\n  }\n\n  public static getValidPointLabelsArray(imageData: ImageData): LabelPoint[][] {\n    return imageData.groupList.map((group: GroupType) => {\n      return group.labelPoints.filter((label: LabelPoint) => label.labelIndex !== null && !!label.point);\n    });\n  }\n\n  public static getValidPolygonLabels(imageData: ImageData): LabelPolygon[] {\n    return imageData.groupList[imageData.activeGroupIndex].labelPolygons.filter(\n      (label: LabelPolygon) => label.labelIndex !== null && !!label.vertices.length\n    );\n  }\n\n  public static mapPolygonToVGG(path: IPoint[]): string[] {\n    if (!path || !path.length) return null;\n    const all_points: string[] = path\n      .map((point: IPoint) => `(${point.x}, ${point.y})`)\n      .concat(`(${path[0].x}, ${path[0].y})`);\n    return all_points;\n  }\n}\n","import { IExportFormat } from \"../../interfaces/IExportFormat\";\nimport { ExportFormatType } from \"../enums/ExportFormatType\";\n\nexport const PolygonExportFormatData: IExportFormat[] = [\n  {\n    type: ExportFormatType.VGG_JSON,\n    label: \"VGG JSON格式文件\",\n  },\n];\n","import { ExportFormatType } from \"../../data/enums/ExportFormatType\";\nimport { IPoint } from \"../../interfaces/IPoint\";\nimport { VGGFileData, VGGObject, VGGPolygon, VGGRegionsData } from \"../../data/VGG/IVGG\";\nimport { ImageData, LabelPolygon } from \"../../store/editor/types\";\nimport { EditorSelector } from \"../../store/selectors/EditorSelector\";\nimport { saveAs } from \"file-saver\";\nimport { ExporterUtil } from \"../../utils/ExporterUtil\";\n\nexport class PolygonLabelsExporter {\n  public static export(exportFormatType: ExportFormatType): void {\n    switch (exportFormatType) {\n      case ExportFormatType.VGG_JSON:\n        PolygonLabelsExporter.exportAsVGGJson();\n        break;\n      default:\n        return;\n    }\n  }\n\n  private static exportAsVGGJson(): void {\n    const imagesData: ImageData[] = EditorSelector.getImagesData();\n    const labelNames: string[] = EditorSelector.getLabelNames();\n    const content: string = JSON.stringify(PolygonLabelsExporter.mapImagesDataToVGGObject(imagesData, labelNames));\n    const blob = new Blob([content], { type: \"text/plain;charset=utf-8\" });\n    try {\n      saveAs(blob, `${ExporterUtil.getExportFileName()}.json`);\n    } catch (error) {\n      // TODO\n      throw new Error(error);\n    }\n  }\n\n  private static mapImagesDataToVGGObject(imagesData: ImageData[], labelNames: string[]): VGGObject {\n    return imagesData.reduce((data: VGGObject, image: ImageData) => {\n      const fileData: VGGFileData = PolygonLabelsExporter.mapImageDataToVGGFileData(image, labelNames);\n      if (!!fileData) {\n        data[image.fileData.name] = fileData;\n      }\n      return data;\n    }, {});\n  }\n\n  private static mapImageDataToVGGFileData(imageData: ImageData, labelNames: string[]): VGGFileData {\n    const regionsData: VGGRegionsData = PolygonLabelsExporter.mapImageDataToVGG(imageData, labelNames);\n    if (!regionsData) return null;\n    return {\n      fileref: \"\",\n      size: imageData.fileData.size,\n      filename: imageData.fileData.name,\n      base64_img_data: \"\",\n      file_attributes: {},\n      regions: regionsData,\n    };\n  }\n\n  public static mapImageDataToVGG(imageData: ImageData, labelNames: string[]): VGGRegionsData {\n    if (\n      !imageData.loadStatus ||\n      !imageData.groupList[imageData.activeGroupIndex].labelPolygons ||\n      !imageData.groupList[imageData.activeGroupIndex].labelPolygons.length ||\n      !labelNames ||\n      !labelNames.length\n    )\n      return null;\n\n    const validLabels: LabelPolygon[] = PolygonLabelsExporter.getValidPolygonLabels(imageData);\n\n    if (!validLabels.length) return null;\n\n    return validLabels.reduce((data: VGGRegionsData, label: LabelPolygon, index: number) => {\n      data[`${index}`] = {\n        shape_attributes: PolygonLabelsExporter.mapPolygonToVGG(label.vertices),\n        region_attributes: {\n          label: labelNames[label.labelIndex],\n        },\n      };\n      return data;\n    }, {});\n  }\n\n  public static getValidPolygonLabels(imageData: ImageData): LabelPolygon[] {\n    return imageData.groupList[imageData.activeGroupIndex].labelPolygons.filter(\n      (label: LabelPolygon) => label.labelIndex !== null && !!label.vertices.length\n    );\n  }\n\n  public static mapPolygonToVGG(path: IPoint[]): VGGPolygon {\n    if (!path || !path.length) return null;\n\n    const all_points_x: number[] = path.map((point: IPoint) => point.x).concat(path[0].x);\n    const all_points_y: number[] = path.map((point: IPoint) => point.y).concat(path[0].y);\n    return {\n      name: \"polygon\",\n      all_points_x,\n      all_points_y,\n    };\n  }\n}\n","import { ExportFormatType } from \"../enums/ExportFormatType\";\nimport { IExportFormat } from \"../../interfaces/IExportFormat\";\n\nexport const RectExportFormatData: IExportFormat[] = [\n  {\n    type: ExportFormatType.YOLO,\n    label: \"YOLO 格式的zip包\",\n  },\n  {\n    type: ExportFormatType.VOC,\n    label: \"XML 格式的zip包\",\n  },\n  {\n    type: ExportFormatType.CSV,\n    label: \"单一的CSV文件\",\n  },\n];\n","import React, { useState } from \"react\";\nimport \"./ExportLabelPopup.scss\";\nimport { GenericYesNoPopup } from \"../GenericYesNoPopup/GenericYesNoPopup\";\nimport { AppState } from \"../../../store\";\nimport { connect } from \"react-redux\";\nimport { ExportFormatType } from \"../../../data/enums/ExportFormatType\";\nimport { RectLabelsExporter } from \"../../../logic/export/RectLabelsExporter\";\nimport { LabelType } from \"../../../data/enums/LabelType\";\nimport { ImageButton } from \"../../Common/ImageButton/ImageButton\";\nimport { IExportFormat } from \"../../../interfaces/IExportFormat\";\nimport { AllExportFormatData } from \"../../../data/export/AllExportFormatData\";\nimport { PointExportFormatData } from \"../../../data/export/PointExportFormatData\";\nimport { PointLabelsExporter } from \"../../../logic/export/PointLabelsExport\";\nimport { AllLabelsExporter } from \"../../../logic/export/AllLabelsExport\";\nimport { PolygonExportFormatData } from \"../../../data/export/PolygonExportFormatData\";\nimport { PolygonLabelsExporter } from \"../../../logic/export/PolygonLabelsExporter\";\nimport { PopupActions } from \"../../../logic/actions/PopupActions\";\nimport { RectExportFormatData } from \"../../../data/export/RectExportFormatData\";\n\nconst ExportLabelPopup: React.FC = () => {\n  const [exportLabelType, setExportLabelType] = useState(LabelType.ALL);\n  const [exportFormatType, setExportFormatType] = useState(null);\n\n  const onAccept = () => {\n    if (!exportFormatType) return;\n    switch (exportLabelType) {\n      case LabelType.RECTANGLE:\n        RectLabelsExporter.export(exportFormatType);\n        break;\n      case LabelType.POINT:\n        PointLabelsExporter.export(exportFormatType);\n        break;\n      case LabelType.POLYGON:\n        PolygonLabelsExporter.export(exportFormatType);\n        break;\n      case LabelType.ALL:\n        AllLabelsExporter.export(exportFormatType);\n        break;\n    }\n    PopupActions.close();\n  };\n\n  const onReject = () => {\n    PopupActions.close();\n  };\n\n  const onSelect = (exportFormatType: ExportFormatType) => {\n    setExportFormatType(exportFormatType);\n  };\n\n  const getOptions = (exportFormatData: IExportFormat[]) => {\n    return exportFormatData.map((entry: IExportFormat) => {\n      return (\n        <div className=\"OptionsItem\" onClick={() => onSelect(entry.type)} key={entry.type}>\n          {entry.type === exportFormatType ? (\n            <img draggable={false} src={\"ico/checkbox-checked.png\"} alt={\"checked\"} />\n          ) : (\n            <img draggable={false} src={\"ico/checkbox-unchecked.png\"} alt={\"unchecked\"} />\n          )}\n          {entry.label}\n        </div>\n      );\n    });\n  };\n\n  const renderContent = () => {\n    return (\n      <div className=\"ExportLabelPopupContent\">\n        <div className=\"LeftContainer\">\n          <ImageButton\n            image={\"ico/all.png\"}\n            imageAlt={\"all\"}\n            size={{ width: 40, height: 40 }}\n            padding={20}\n            onClick={() => {\n              setExportLabelType(LabelType.ALL);\n              setExportFormatType(null);\n            }}\n            isActive={exportLabelType === LabelType.ALL}\n          />\n          {/* <ImageButton\n            image={\"ico/rectangle.png\"}\n            imageAlt={\"rectangle\"}\n            size={{ width: 40, height: 40 }}\n            padding={20}\n            onClick={() => {\n              setExportLabelType(LabelType.RECTANGLE);\n              setExportFormatType(null);\n            }}\n            isActive={exportLabelType === LabelType.RECTANGLE}\n          />\n          <ImageButton\n            image={\"ico/point.png\"}\n            imageAlt={\"point\"}\n            size={{ width: 40, height: 40 }}\n            padding={20}\n            onClick={() => {\n              setExportLabelType(LabelType.POINT);\n              setExportFormatType(null);\n            }}\n            isActive={exportLabelType === LabelType.POINT}\n          />\n          <ImageButton\n            image={\"ico/polygon.png\"}\n            imageAlt={\"polygon\"}\n            size={{ width: 40, height: 40 }}\n            padding={20}\n            onClick={() => {\n              setExportLabelType(LabelType.POLYGON);\n              setExportFormatType(null);\n            }}\n            isActive={exportLabelType === LabelType.POLYGON}\n          /> */}\n        </div>\n        <div className=\"RightContainer\">\n          <div className=\"Message\">选择标注类型和导出文件格式</div>\n          <div className=\"Options\">\n            {exportLabelType === LabelType.ALL && getOptions(AllExportFormatData)}\n            {exportLabelType === LabelType.RECTANGLE && getOptions(RectExportFormatData)}\n            {exportLabelType === LabelType.POINT && getOptions(PointExportFormatData)}\n            {exportLabelType === LabelType.POLYGON && getOptions(PolygonExportFormatData)}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <GenericYesNoPopup\n      title={\"导出标注\"}\n      renderContent={renderContent}\n      acceptLabel={\"导出\"}\n      onAccept={onAccept}\n      rejectLabel={\"取消\"}\n      onReject={onReject}\n    />\n  );\n};\n\nconst mapDispatchToProps = {};\n\nconst mapStateToProps = (state: AppState) => ({\n  imagesData: state.editor.imagesData,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ExportLabelPopup);\n","import React, { useState } from \"react\";\nimport \"./InsertLabelNamesPopup.scss\";\nimport { GenericYesNoPopup } from \"../GenericYesNoPopup/GenericYesNoPopup\";\nimport { PopupWindowType } from \"../../../data/enums/PopupWindowType\";\nimport { updateActiveLabelNameIndex, updateLabelNamesList } from \"../../../store/editor/actionCreators\";\nimport { updateActivePopupType } from \"../../../store/general/actionCreators\";\nimport { AppState } from \"../../../store\";\nimport { connect } from \"react-redux\";\nimport Scrollbars from \"react-custom-scrollbars\";\nimport TextInput from \"../../Common/TextInput/TextInput\";\nimport { ImageButton } from \"../../Common/ImageButton/ImageButton\";\nimport uuidv1 from \"uuid/v1\";\nimport { PopupActions } from \"../../../logic/actions/PopupActions\";\n\ninterface IProps {\n  updateActiveLabelNameIndex: (activeLabelIndex: number) => any;\n  updateLabelNamesList: (labelNames: string[]) => any;\n  updateActivePopupType: (activePopupType: PopupWindowType) => any;\n}\n\nconst InsertLabelNamesPopup: React.FC<IProps> = ({\n  updateActiveLabelNameIndex,\n  updateLabelNamesList,\n  updateActivePopupType,\n}) => {\n  const [labelNames, setLabelNames] = useState({});\n\n  const addHandle = () => {\n    const newLabelNames = { ...labelNames, [uuidv1()]: \"\" };\n    setLabelNames(newLabelNames);\n  };\n\n  const deleteHandle = (key: string) => {\n    const newLabelNames = { ...labelNames };\n    delete newLabelNames[key];\n    setLabelNames(newLabelNames);\n  };\n\n  const labelInputs = Object.keys(labelNames).map((key: string) => {\n    return (\n      <div className=\"LabelEntry\" key={key}>\n        <TextInput\n          key={key}\n          isPassword={false}\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => onChange(key, event.target.value)}\n          label={\"标注名称\"}\n        />\n        <ImageButton\n          image={\"ico/trash.png\"}\n          imageAlt={\"remove_label\"}\n          size={{ width: 30, height: 30 }}\n          onClick={() => deleteHandle(key)}\n        />\n      </div>\n    );\n  });\n\n  const onChange = (key: string, value: string) => {\n    const newLabelNames = { ...labelNames, [key]: value };\n    setLabelNames(newLabelNames);\n  };\n\n  const onAccept = () => {\n    const labelNamesList: string[] = extractLabelNamesList();\n    if (labelNamesList.length > 0) {\n      updateLabelNamesList(labelNamesList);\n      PopupActions.close();\n    }\n  };\n\n  const extractLabelNamesList = (): string[] => {\n    const labelNameList: string[] = Object.values(labelNames).filter(value => !!value) as string[];\n    // const defaultLabelList: string[] = [\n    //   \"头顶\",\n    //   \"左手心\",\n    //   \"右手心\",\n    //   \"左脚跟\",\n    //   \"左脚尖\",\n    //   \"右脚跟\",\n    //   \"右脚尖\",\n    // ];\n\n    // return defaultLabelList.concat(labelNameList);\n    return labelNameList;\n  };\n\n  const onReject = () => {\n    updateActivePopupType(PopupWindowType.LOAD_LABEL_NAMES);\n  };\n\n  const renderContent = () => {\n    return (\n      <div className=\"InsertLabelNamesPopup\">\n        <div className=\"LeftContainer\">\n          <ImageButton\n            image={\"ico/plus.png\"}\n            imageAlt={\"plus\"}\n            size={{ width: 40, height: 40 }}\n            padding={25}\n            onClick={addHandle}\n          />\n        </div>\n        <div className=\"RightContainer\">\n          <div className=\"Message\">在你开始之前，请创建一个即将用在你项目内的标签列表，点击左边的 + 号添加新标签</div>\n          <div className=\"LabelsContainer\">\n            {Object.keys(labelNames).length !== 0 ? (\n              <Scrollbars>\n                <div className=\"InsertLabelNamesPopupContent\">{labelInputs}</div>\n              </Scrollbars>\n            ) : (\n              <div className=\"EmptyList\" onClick={addHandle}>\n                <img draggable={false} alt={\"upload\"} src={\"img/type-writer.png\"} />\n                <p className=\"extraBold\">当前项目标签列表为空</p>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <GenericYesNoPopup\n      title={\"创建标签列表\"}\n      renderContent={renderContent}\n      acceptLabel={\"开始标注\"}\n      onAccept={onAccept}\n      disableAcceptButton={extractLabelNamesList().length === 0}\n      rejectLabel={\"从文件载入\"}\n      onReject={onReject}\n    />\n  );\n};\n\nconst mapDispatchToProps = {\n  updateActiveLabelNameIndex,\n  updateLabelNamesList,\n  updateActivePopupType,\n};\n\nconst mapStateToProps = (state: AppState) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(InsertLabelNamesPopup);\n","import React from \"react\";\nimport \"./ExitProjectPopup.scss\";\nimport { GenericYesNoPopup } from \"../GenericYesNoPopup/GenericYesNoPopup\";\nimport {\n  updateActiveImageIndex,\n  updateActiveLabelNameIndex,\n  updateFirstLabelCreatedFlag,\n  updateImageData,\n  updateLabelNamesList,\n  updateProjectType,\n} from \"../../../store/editor/actionCreators\";\nimport { AppState } from \"../../../store\";\nimport { connect } from \"react-redux\";\nimport { ProjectType } from \"../../../data/enums/ProjectType\";\nimport { ImageData } from \"../../../store/editor/types\";\nimport { PopupActions } from \"../../../logic/actions/PopupActions\";\n\ninterface IProps {\n  updateActiveImageIndex: (activeImageIndex: number) => any;\n  updateProjectType: (projectType: ProjectType) => any;\n  updateActiveLabelNameIndex: (activeLabelIndex: number) => any;\n  updateLabelNamesList: (labelNames: string[]) => any;\n  updateImageData: (imageData: ImageData[]) => any;\n  updateFirstLabelCreatedFlag: (firstLabelCreatedFlag: boolean) => any;\n}\n\nconst ExitProjectPopup: React.FC<IProps> = props => {\n  const {\n    updateActiveLabelNameIndex,\n    updateLabelNamesList,\n    updateProjectType,\n    updateActiveImageIndex,\n    updateImageData,\n    updateFirstLabelCreatedFlag,\n  } = props;\n\n  const renderContent = () => {\n    return (\n      <div className=\"ExitProjectPopupContent\">\n        <div className=\"Message\">\n          Are you sure you want to leave the editor? You will permanently lose all your progress.\n        </div>\n      </div>\n    );\n  };\n\n  const onAccept = () => {\n    updateActiveLabelNameIndex(null);\n    updateLabelNamesList([]);\n    updateProjectType(null);\n    updateActiveImageIndex(null);\n    updateImageData([]);\n    updateFirstLabelCreatedFlag(false);\n    PopupActions.close();\n  };\n\n  const onReject = () => {\n    PopupActions.close();\n  };\n\n  return (\n    <GenericYesNoPopup\n      title={\"Exit project\"}\n      renderContent={renderContent}\n      acceptLabel={\"Exit\"}\n      onAccept={onAccept}\n      rejectLabel={\"Back\"}\n      onReject={onReject}\n    />\n  );\n};\n\nconst mapDispatchToProps = {\n  updateActiveLabelNameIndex,\n  updateLabelNamesList,\n  updateProjectType,\n  updateActiveImageIndex,\n  updateImageData,\n  updateFirstLabelCreatedFlag,\n};\n\nconst mapStateToProps = (state: AppState) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ExitProjectPopup);\n","import React, { useCallback } from \"react\";\nimport \"./LoadMoreImagesPopup.scss\";\nimport { AppState } from \"../../../store\";\nimport { connect } from \"react-redux\";\nimport { addImageData } from \"../../../store/editor/actionCreators\";\nimport { GenericYesNoPopup } from \"../GenericYesNoPopup/GenericYesNoPopup\";\nimport { useDropzone } from \"react-dropzone\";\nimport { FileUtil } from \"../../../utils/FileUtil\";\nimport { ImageData } from \"../../../store/editor/types\";\nimport { AcceptedFileType } from \"../../../data/enums/AcceptedFileType\";\nimport { PopupActions } from \"../../../logic/actions/PopupActions\";\n\ninterface IProps {\n  addImageData: (imageData: ImageData[]) => any;\n}\n\nconst LoadMoreImagesPopup: React.FC<IProps> = ({ addImageData }) => {\n  const onDrop = useCallback(acceptedFiles => {\n    acceptedFiles.forEach(file => {\n      const reader = new FileReader();\n      reader.onabort = () => console.log(\"file reading was aborted\");\n      reader.onerror = () => console.log(\"file reading has failed\");\n      reader.onload = () => {\n        var image = new Image();\n        image.src = reader.result as any;\n        image.onload = function(img) {\n          file.width = (this as any).width;\n          file.height = (this as any).height;\n        };\n      };\n      reader.readAsDataURL(file);\n    });\n  }, []);\n\n  const { acceptedFiles, getRootProps, getInputProps } = useDropzone({\n    accept: AcceptedFileType.IMAGE,\n    onDrop,\n  });\n\n  const onAccept = () => {\n    if (acceptedFiles.length > 0) {\n      addImageData(acceptedFiles.map((fileData: File) => FileUtil.mapFileDataToImageData(fileData)));\n      PopupActions.close();\n    }\n  };\n\n  const onReject = () => {\n    PopupActions.close();\n  };\n\n  const getDropZoneContent = () => {\n    if (acceptedFiles.length === 0)\n      return (\n        <>\n          <input {...getInputProps()} />\n          <img draggable={false} alt={\"upload\"} src={\"img/box-opened.png\"} />\n          <p className=\"extraBold\">拖拽到这里</p>\n          <p>或</p>\n          <p className=\"extraBold\">点击导入</p>\n        </>\n      );\n    else if (acceptedFiles.length === 1)\n      return (\n        <>\n          <img draggable={false} alt={\"uploaded\"} src={\"img/box-closed.png\"} />\n          <p className=\"extraBold\">导入了 1 张新图片 </p>\n        </>\n      );\n    else\n      return (\n        <>\n          <img draggable={false} key={1} alt={\"uploaded\"} src={\"img/box-closed.png\"} />\n          <p key={2} className=\"extraBold\">\n            导入了 {acceptedFiles.length} 张新图片\n          </p>\n        </>\n      );\n  };\n\n  const renderContent = () => {\n    return (\n      <div className=\"LoadMoreImagesPopupContent\">\n        <div {...getRootProps({ className: \"DropZone\" })}>{getDropZoneContent()}</div>\n      </div>\n    );\n  };\n\n  return (\n    <GenericYesNoPopup\n      title={\"导入更多图片\"}\n      renderContent={renderContent}\n      acceptLabel={\"载入\"}\n      disableAcceptButton={acceptedFiles.length < 1}\n      onAccept={onAccept}\n      rejectLabel={\"取消\"}\n      onReject={onReject}\n    />\n  );\n};\n\nconst mapDispatchToProps = {\n  addImageData,\n};\n\nconst mapStateToProps = (state: AppState) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoadMoreImagesPopup);\n","import React from \"react\";\nimport \"./PopupView.scss\";\nimport { PopupWindowType } from \"../../data/enums/PopupWindowType\";\nimport { AppState } from \"../../store\";\nimport { connect } from \"react-redux\";\nimport LoadLabelsPopup from \"./LoadLabelNamesPopup/LoadLabelNamesPopup\";\nimport ExportLabelPopup from \"./ExportLabelsPopup/ExportLabelPopup\";\nimport InsertLabelNamesPopup from \"./InsertLabelNamesPopup/InsertLabelNamesPopup\";\nimport ExitProjectPopup from \"./ExitProjectPopup/ExitProjectPopup\";\nimport LoadMoreImagesPopup from \"./LoadMoreImagesPopup/LoadMoreImagesPopup\";\n\ninterface IProps {\n  activePopupType: PopupWindowType;\n}\n\nconst PopupView: React.FC<IProps> = ({ activePopupType }) => {\n  const selectPopup = () => {\n    switch (activePopupType) {\n      case PopupWindowType.LOAD_LABEL_NAMES:\n        return <LoadLabelsPopup />;\n      case PopupWindowType.EXPORT_LABELS:\n        return <ExportLabelPopup />;\n      case PopupWindowType.INSERT_LABEL_NAMES:\n        return <InsertLabelNamesPopup />;\n      case PopupWindowType.EXIT_PROJECT:\n        return <ExitProjectPopup />;\n      case PopupWindowType.LOAD_IMAGES:\n        return <LoadMoreImagesPopup />;\n      default:\n        return null;\n    }\n  };\n\n  return activePopupType && <div className=\"PopupView\">{selectPopup()}</div>;\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  activePopupType: state.general.activePopupType,\n});\n\nexport default connect(mapStateToProps)(PopupView);\n","import React, {useState} from 'react';\nimport './MobileMainView.scss';\nimport Scrollbars from 'react-custom-scrollbars';\nimport {ISize} from \"../../interfaces/ISize\";\nimport {AppState} from \"../../store\";\nimport {connect} from \"react-redux\";\nimport classNames from 'classnames'\nimport {EditorFeatureData, IEditorFeature} from \"../../data/info/EditorFeatureData\";\nimport {ISocialMedia, SocialMediaData} from \"../../data/info/SocialMediaData\";\nimport {ImageButton} from \"../Common/ImageButton/ImageButton\";\n\ninterface IProps {\n    size: ISize;\n}\n\nconst MobileMainView: React.FC<IProps> = ({size}) => {\n    const scrollPositionThreshold: number = 350;\n    const [scrollPosition, setScrollPosition] = useState(0);\n\n    const getClassName = () => {\n        return classNames('MobileTopNavigationBar', {\n            Hide: scrollPosition < scrollPositionThreshold,\n            Show: scrollPosition >= scrollPositionThreshold,\n        })\n    };\n\n    const onScroll = (value) => {\n        setScrollPosition(value.scrollTop);\n    };\n\n    const getEditorFeatureTiles = (features: IEditorFeature[]) => {\n        return features.map((data:IEditorFeature) => {\n            return <div\n                className=\"EditorFeaturesTiles\"\n                key={data.displayText}\n            >\n                <div\n                    className=\"EditorFeaturesTilesWrapper\"\n                >\n                    <img\n                        draggable={false}\n                        alt={data.imageAlt}\n                        src={data.imageSrc}\n                    />\n                    <div className=\"EditorFeatureLabel\">\n                        {data.displayText}\n                    </div>\n                </div>\n            </div>\n        });\n    };\n\n    const getSocialMediaButtons = (size:ISize) => {\n        return SocialMediaData.map((data:ISocialMedia, index: number) => {\n            return <ImageButton\n                key={index}\n                size={size}\n                image={data.imageSrc}\n                imageAlt={data.imageAlt}\n                href={data.href}\n            />\n        });\n    };\n\n    const topNavigationBar = <div className={getClassName()}>\n        <div className=\"NavigationBarGroupWrapper\">\n            <div className=\"Header\">\n                <img\n                    draggable={false}\n                    alt={\"make-sense\"}\n                    src={\"/make-sense-ico-transparent.png\"}\n                />\n                Make Sense\n            </div>\n        </div>\n        <div className=\"TriangleHorizontal Bottom\">\n            <div className=\"TriangleHorizontalContent\"/>\n        </div>\n    </div>;\n\n    const firstStage = <div className=\"FirstStage\">\n        <img\n            draggable={false}\n            alt={\"main-logo\"}\n            src={\"img/main-image-color.png\"}\n        />\n        <div className=\"TriangleHorizontal Bottom\">\n            <div className=\"TriangleHorizontalContent\"/>\n        </div>\n    </div>;\n\n    const secondStage = <div className=\"SecondStage\">\n        {getEditorFeatureTiles(EditorFeatureData.slice(0, 3))}\n    </div>;\n\n    const thirdStage = <div className=\"ThirdStage\">\n        {getEditorFeatureTiles(EditorFeatureData.slice(3, 6))}\n        <div className=\"TriangleHorizontal Top\">\n            <div className=\"TriangleHorizontalContent\"/>\n        </div>\n        <div className=\"TriangleHorizontal Bottom\">\n            <div className=\"TriangleHorizontalContent\"/>\n        </div>\n    </div>;\n\n    const fourthStage = <div className=\"FourthStage\">\n        <div className=\"Message\">\n            Due to the small size of the screen we do not support our editor on mobile devices. Check what you missed and visit us from a desktop.\n        </div>\n        <div className=\"SocialMediaWrapper\">\n            {getSocialMediaButtons({width: 40, height: 40})}\n        </div>\n    </div>;\n\n    return(<div className=\"MobileMainView\">\n        {topNavigationBar}\n        <Scrollbars\n            onScrollFrame={onScroll}\n        >\n            <div\n                className=\"MobileMainViewContent\"\n                style={{width: size.width}}\n            >\n                {firstStage}\n                {secondStage}\n                {thirdStage}\n                {fourthStage}\n            </div>\n        </Scrollbars>\n    </div>)\n};\n\nconst mapDispatchToProps = {};\n\nconst mapStateToProps = (state: AppState) => ({\n    size: state.general.windowSize\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(MobileMainView);","import React from 'react';\nimport './SizeItUpView.scss';\nimport {Settings} from \"../../settings/Settings\";\n\nexport const SizeItUpView: React.FC = () => {\n    return(<div className=\"SizeItUpView\">\n        <p className=\"extraBold\">Ops... This window is to tight for me!</p>\n        <img\n            draggable={false}\n            alt={\"small_window\"}\n            src={\"img/small_window.png\"}\n        />\n        <p className=\"extraBold\">Please... make it at least {Settings.EDITOR_MIN_WIDTH} x {Settings.EDITOR_MIN_HEIGHT} px.</p>\n    </div>)\n};","import React from 'react';\nimport './App.scss';\nimport EditorView from './views/EditorView/EditorView';\nimport MainView from './views/MainView/MainView';\nimport { ProjectType } from './data/enums/ProjectType';\nimport { AppState } from './store';\nimport { connect } from 'react-redux';\nimport PopupView from './views/PopupView/PopupView';\nimport MobileMainView from './views/MobileMainView/MobileMainView';\nimport { ISize } from './interfaces/ISize';\nimport { Settings } from './settings/Settings';\nimport { SizeItUpView } from './views/SizeItUpView/SizeItUpView';\nimport { PlatformModel } from './staticModels/PlatformModel';\nimport ReactNotification from 'react-notifications-component';\n\ninterface IProps {\n  projectType: ProjectType;\n  windowSize: ISize;\n}\n\nconst App: React.FC<IProps> = ({ projectType, windowSize }) => {\n  const selectRoute = () => {\n    if (!!PlatformModel.mobileDeviceData.manufacturer && !!PlatformModel.mobileDeviceData.os) return <MobileMainView />;\n    if (!projectType) return <MainView />;\n    else {\n      if (windowSize.height < Settings.EDITOR_MIN_HEIGHT || windowSize.width < Settings.EDITOR_MIN_WIDTH) {\n        return <SizeItUpView />;\n      } else {\n        return <EditorView />;\n      }\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {selectRoute()}\n      <PopupView />\n      <ReactNotification />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  projectType: state.editor.projectType,\n  windowSize: state.general.windowSize,\n});\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { EditorActionTypes, EditorState, ImageData } from './types';\nimport { Action } from '../Actions';\nimport produce from 'immer';\nimport { LabelType } from '../../data/enums/LabelType';\nimport { EditorActions } from '../../logic/actions/EditorActions';\nimport { EditorModel } from '../../staticModels/EditorModel';\n\nconst initialState: EditorState = {\n  activeImageIndex: 0,\n  projectName: 'my_project',\n  imagesData: [],\n  projectType: null,\n  labelNames: ['左手心', '右手心', '左脚跟', '左脚尖', '右脚跟', '右脚尖'],\n};\n\nexport function editorReducer(state = initialState, action: EditorActionTypes): EditorState {\n  const activeImageIndex = state.activeImageIndex;\n  const activeGroupIndex = state.imagesData[activeImageIndex]\n    ? state.imagesData[activeImageIndex].activeGroupIndex\n    : undefined;\n  const result = produce(state, draft => {\n    switch (action.type) {\n      case Action.UPDATE_PROJECT_TYPE:\n        draft.projectType = action.payload.projectType;\n        break;\n      case Action.UPDATE_PROJECT_NAME:\n        draft.projectName = action.payload.projectName;\n        break;\n      case Action.UPDATE_ACTIVE_IMAGE_INDEX:\n        draft.activeImageIndex = action.payload.activeImageIndex;\n        break;\n      case Action.UPDATE_ACTIVE_LABEL_NAME_INDEX:\n        draft.imagesData[activeImageIndex].groupList[activeGroupIndex].activeLabelNameIndex =\n          action.payload.activeLabelNameIndex;\n        break;\n      case Action.UPDATE_LABEL_INDEX_BY_INFO:\n        const { imageIndex, groupIndex, labelPointIndex, labelIndex, labelCheckd } = action.payload;\n        if (!draft.imagesData[imageIndex].groupList[groupIndex].labelPoints[labelPointIndex]) {\n          break;\n        }\n        draft.imagesData[imageIndex].groupList[groupIndex].labelPoints[labelPointIndex].labelIndex = labelIndex;\n        draft.imagesData[imageIndex].groupList[groupIndex].labelPoints[labelPointIndex].checked = labelCheckd;\n        break;\n      case Action.UPDATE_ACTIVE_LABEL_ID:\n        draft.imagesData[activeImageIndex].groupList[activeGroupIndex].activeLabelId = action.payload.activeLabelId;\n        break;\n      case Action.UPDATE_HIGHLIGHTED_LABEL_ID:\n        draft.imagesData[activeImageIndex].groupList[activeGroupIndex].highlightedLabelId =\n          action.payload.highlightedLabelId;\n        break;\n      case Action.UPDATE_ACTIVE_LABEL_TYPE:\n        draft.imagesData[activeImageIndex].groupList[activeGroupIndex].activeLabelType = action.payload.activeLabelType;\n        break;\n      case Action.UPDATE_IMAGE_DATA_BY_ID:\n        //filter TODO\n        draft.imagesData = state.imagesData.map((imageData: ImageData) =>\n          imageData.id === action.payload.id ? action.payload.newImageData : imageData\n        );\n        draft.imagesData.forEach((item, idx) => {\n          if (item.groupList.some(ele => !!ele.activeLabelId)) {\n            localStorage.setItem(item.fileData.name, JSON.stringify(item));\n          }\n        });\n        break;\n      case Action.ADD_IMAGES_DATA:\n        const addImagesData = action.payload.imageData;\n        draft.imagesData = draft.imagesData.concat(addImagesData);\n\n        break;\n      case Action.LOAD_DATA_FROM_LOCALSTORGE:\n        draft.imagesData.forEach((item, idx) => {\n          if (localStorage.getItem(item.fileData.name)) {\n            const newData = JSON.parse(localStorage.getItem(item.fileData.name));\n            newData.fileData = draft.imagesData[idx].fileData;\n            draft.imagesData[idx] = newData;\n            // console.log(JSON.parse(localStorage.getItem(item.fileData.name)));\n          }\n        });\n        break;\n      case Action.UPDATE_IMAGES_DATA:\n        draft.imagesData = action.payload.imageData;\n        break;\n      case Action.UPDATE_LABEL_NAMES_LIST:\n        draft.labelNames = action.payload.labelNames;\n        break;\n      case Action.UPDATE_FIRST_LABEL_CREATED_FLAG:\n        draft.imagesData[activeImageIndex].groupList[activeGroupIndex].firstLabelCreatedFlag =\n          action.payload.firstLabelCreatedFlag;\n        break;\n      case Action.UPDATE_GROUP_LIST:\n        draft.imagesData[activeImageIndex].groupList.push({\n          activeLabelNameIndex: 0,\n          activeLabelType: LabelType.POINT,\n          activeLabelId: null,\n          highlightedLabelId: null,\n          firstLabelCreatedFlag: false,\n          labelRects: [],\n          labelPoints: [],\n          labelPolygons: [],\n        });\n        break;\n      case Action.DELETE_GROUP_LIST:\n        const newGroupList = draft.imagesData[activeImageIndex].groupList.filter(\n          (_, idx) => idx !== action.payload.groupIndex\n        );\n        const activeGroup = draft.imagesData[activeImageIndex].groupList[activeGroupIndex];\n\n        const newActiveGroupIndex = newGroupList.findIndex(item => item === activeGroup);\n        draft.imagesData[activeImageIndex].activeGroupIndex = newActiveGroupIndex;\n        draft.imagesData[activeImageIndex].groupList = newGroupList;\n        break;\n      case Action.UPDATE_ACTIVE_GROUP_INDEX:\n        draft.imagesData[activeImageIndex].activeGroupIndex = action.payload.groupIndex;\n        break;\n      case Action.FIND_NEXT_AVAILABLE_LABEL_INDEX:\n        const allIndex = [...Array(draft.labelNames.length)].map((v, k) => k);\n        const existedLabelIndexs = draft.imagesData[activeImageIndex].groupList[activeGroupIndex].labelPoints.map(\n          ele => ele.labelIndex\n        );\n\n        const difference = existedLabelIndexs\n          .concat(allIndex)\n          .filter(v => !existedLabelIndexs.includes(v) || !allIndex.includes(v));\n        draft.imagesData[activeImageIndex].groupList[activeGroupIndex].activeLabelNameIndex = difference.length\n          ? difference[0]\n          : 0;\n        break;\n    }\n  });\n  return result;\n}\n","import {GeneralActionTypes, GeneralState} from \"./types\";\nimport {Action} from \"../Actions\";\nimport {CustomCursorStyle} from \"../../data/enums/CustomCursorStyle\";\n\nconst initialState: GeneralState = {\n    windowSize: null,\n    activePopupType: null,\n    customCursorStyle: CustomCursorStyle.DEFAULT,\n    activeContext: null\n};\n\nexport function generalReducer(\n    state = initialState,\n    action: GeneralActionTypes\n): GeneralState {\n    switch (action.type) {\n        case Action.UPDATE_WINDOW_SIZE: {\n            return {\n                ...state,\n                windowSize: action.payload.windowSize\n            }\n        }\n        case Action.UPDATE_ACTIVE_POPUP_TYPE: {\n            return {\n                ...state,\n                activePopupType: action.payload.activePopupType\n            }\n        }\n        case Action.UPDATE_CUSTOM_CURSOR_STYLE: {\n            return {\n                ...state,\n                customCursorStyle: action.payload.customCursorStyle\n            }\n        }\n        case Action.UPDATE_CONTEXT: {\n            return {\n                ...state,\n                activeContext: action.payload.activeContext\n            }\n        }\n        default:\n            return state;\n    }\n}","import { combineReducers } from \"redux\";\nimport { editorReducer } from \"./editor/reducer\";\nimport { generalReducer } from \"./general/reducer\";\n\nexport const rootReducer = combineReducers({\n  general: generalReducer,\n  editor: editorReducer,\n});\n\nexport type AppState = ReturnType<typeof rootReducer>;\n","import {MobileDeviceData} from \"../data/MobileDeviceData\";\nimport MobileDetect from 'mobile-detect'\n\nexport class PlatformUtil {\n    public static getMobileDeviceData(userAgent: string): MobileDeviceData {\n        const mobileDetect = new MobileDetect(userAgent);\n        return {\n            manufacturer: mobileDetect.mobile(),\n            browser: mobileDetect.userAgent(),\n            os: mobileDetect.os()\n        }\n    }\n\n    public static isMac(userAgent: string): boolean {\n        return !!userAgent.toLowerCase().match(\"mac\");\n    }\n\n    public static isSafari(userAgent: string): boolean {\n        return !!userAgent.toLowerCase().match(\"safari\");\n    }\n\n    public static isFirefox(userAgent: string): boolean {\n        return !!userAgent.toLowerCase().match(\"firefox\");\n    }\n}","import { updateWindowSize } from \"../../store/general/actionCreators\";\nimport { ContextManager } from \"../context/ContextManager\";\nimport { store } from \"../../index\";\nimport { PlatformUtil } from \"../../utils/PlatformUtil\";\nimport { PlatformModel } from \"../../staticModels/PlatformModel\";\n\nexport class AppInitializer {\n  public static inti(): void {\n    AppInitializer.handleResize();\n    AppInitializer.detectDeviceParams();\n    window.addEventListener(\"resize\", AppInitializer.handleResize);\n    ContextManager.init();\n  }\n\n  private static handleResize = () => {\n    store.dispatch(\n      updateWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      })\n    );\n  };\n\n  private static detectDeviceParams = () => {\n    const userAgent: string = window.navigator.userAgent;\n    PlatformModel.mobileDeviceData = PlatformUtil.getMobileDeviceData(userAgent);\n    PlatformModel.isMac = PlatformUtil.isMac(userAgent);\n    PlatformModel.isSafari = PlatformUtil.isSafari(userAgent);\n    PlatformModel.isFirefox = PlatformUtil.isFirefox(userAgent);\n  };\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './configureStore';\nimport { Provider } from 'react-redux';\nimport { AppInitializer } from './logic/initializer/AppInitializer';\n\nexport const store = configureStore();\nAppInitializer.inti();\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root') || document.createElement('div') // fix for testing purposes\n);\n\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from \"redux\";\nimport { rootReducer } from \"./store\";\nimport logger from \"redux-logger\";\n\nexport default function configureStore() {\n  return createStore(\n    rootReducer\n    // applyMiddleware(logger)\n    // @ts-ignore\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  );\n}\n"],"sourceRoot":""}