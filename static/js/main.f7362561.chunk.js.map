{"version":3,"sources":["data/enums/Direction.ts","data/enums/PopupWindowType.ts","settings/Settings.ts","data/enums/LabelType.ts","store/Actions.ts","store/editor/actionCreators.ts","utils/VirtualListUtil.ts","utils/NumberUtil.ts","utils/RectUtil.ts","views/Common/VirtualList/VirtualList.tsx","logic/imageRepository/ImageLoadManager.ts","logic/imageRepository/ImageRepository.ts","utils/FileUtil.ts","data/enums/ContextType.ts","views/EditorView/SideNavigationBar/ImagePreview/ImagePreview.tsx","store/general/actionCreators.ts","staticModels/EditorModel.ts","utils/UnitUtil.ts","data/enums/CustomCursorStyle.ts","utils/DrawUtil.ts","utils/PointUtil.ts","settings/RenderEngineConfig.ts","store/selectors/EditorSelector.ts","data/enums/EventType.ts","utils/MouseEventUtil.ts","logic/render/BaseRenderEngine.ts","utils/RenderEngineUtil.ts","logic/render/RectRenderEngine.ts","utils/CanvasUtil.ts","logic/render/PointRenderEngine.ts","utils/LineUtil.ts","logic/render/PolygonRenderEngine.ts","logic/render/PrimaryEditorRenderEngine.ts","logic/actions/EditorActions.ts","logic/context/BaseContext.ts","staticModels/PlatformModel.ts","logic/actions/ImageActions.ts","logic/context/EditorContext.ts","store/selectors/GeneralSelector.ts","logic/actions/PopupActions.ts","logic/context/PopupContext.ts","logic/context/ContextManager.ts","data/enums/ProjectType.ts","views/EditorView/SideNavigationBar/ImagesList/ImagesList.tsx","data/info/LabelToolkitData.ts","views/Common/ImageButton/ImageButton.tsx","views/EditorView/SideNavigationBar/LabelInputField/LabelInputField.tsx","views/EditorView/SideNavigationBar/EmptyLabelList/EmptyLabelList.tsx","views/EditorView/SideNavigationBar/RectLabelsList/RectLabelsList.tsx","views/EditorView/SideNavigationBar/PointLabelsList/PointLabelsList.tsx","views/EditorView/SideNavigationBar/PolygonLabelsList/PolygonLabelsList.tsx","views/EditorView/SideNavigationBar/LabelsToolkit/LabelsToolkit.tsx","views/EditorView/SideNavigationBar/SideNavigationBar.tsx","views/EditorView/VerticalEditorButton/VerticalEditorButton.tsx","utils/EditorUtil.ts","data/enums/AcceptedFileType.ts","views/EditorView/Editor/Editor.tsx","views/EditorView/BottomNavigationBar/BottomNavigationBar.tsx","views/EditorView/EditorContainer/EditorContainer.tsx","views/EditorView/StateBar/StateBar.tsx","views/Common/UnderlineTextButton/UnderlineTextButton.tsx","views/Common/TextInput/TextInput.tsx","views/EditorView/TopNavigationBar/TopNavigationBar.tsx","views/EditorView/EditorView.tsx","views/Common/TextButton/TextButton.tsx","data/info/SocialMediaData.ts","data/info/EditorFeatureData.ts","views/MainView/ImagesDropZone/ImagesDropZone.tsx","data/enums/ExportFormatType.ts","views/MainView/MainView.tsx","views/PopupView/GenericYesNoPopup/GenericYesNoPopup.tsx","views/PopupView/LoadLabelNamesPopup/LoadLabelNamesPopup.tsx","utils/XMLSanitizerUtil.ts","utils/ExporterUtil.ts","logic/export/RectLabelsExporter.ts","data/export/RectExportFormatData.ts","data/export/PointExportFormatData.ts","logic/export/PointLabelsExport.ts","data/export/PolygonExportFormatData.ts","logic/export/PolygonLabelsExporter.ts","views/PopupView/ExportLabelsPopup/ExportLabelPopup.tsx","views/PopupView/InsertLabelNamesPopup/InsertLabelNamesPopup.tsx","views/PopupView/ExitProjectPopup/ExitProjectPopup.tsx","views/PopupView/LoadMoreImagesPopup/LoadMoreImagesPopup.tsx","views/PopupView/PopupView.tsx","views/MobileMainView/MobileMainView.tsx","views/SizeItUpView/SizeItUpView.tsx","App.tsx","serviceWorker.ts","store/editor/reducer.ts","store/general/reducer.ts","store/index.ts","utils/PlatformUtil.ts","logic/initializer/AppInitializer.ts","index.tsx","configureStore.ts"],"names":["Direction","PopupWindowType","Settings","Object","classCallCheck","this","GITHUB_URL","MEDIUM_URL","PATREON_URL","TOP_NAVIGATION_BAR_HEIGHT_PX","BOTTOM_NAVIGATION_BAR_HEIGHT_PX","SIDE_NAVIGATION_BAR_WIDTH_CLOSED_PX","SIDE_NAVIGATION_BAR_WIDTH_OPEN_PX","TOOLKIT_TAB_HEIGHT_PX","EDITOR_MIN_WIDTH","EDITOR_MIN_HEIGHT","PRIMARY_COLOR","SECONDARY_COLOR","DARK_THEME_FIRST_COLOR","DARK_THEME_SECOND_COLOR","DARK_THEME_THIRD_COLOR","DARK_THEME_FORTH_COLOR","CANVAS_PADDING_WIDTH_PX","CROSS_HAIR_THICKNESS_PX","CROSS_HAIR_COLOR","RESIZE_HANDLE_DIMENSION_PX","RESIZE_HANDLE_HOVER_DIMENSION_PX","CLOSEABLE_POPUPS","LOAD_IMAGES","LabelType","Action","updateProjectType","projectType","type","UPDATE_PROJECT_TYPE","payload","updateActiveImageIndex","activeImageIndex","UPDATE_ACTIVE_IMAGE_INDEX","updateActiveLabelNameIndex","activeLabelNameIndex","UPDATE_ACTIVE_LABEL_NAME_INDEX","updateActiveLabelId","activeLabelId","UPDATE_ACTIVE_LABEL_ID","updateHighlightedLabelId","highlightedLabelId","UPDATE_HIGHLIGHTED_LABEL_ID","updateImageDataById","id","newImageData","UPDATE_IMAGE_DATA_BY_ID","addImageData","imageData","ADD_IMAGES_DATA","updateLabelNamesList","labelNames","UPDATE_LABEL_NAMES_LIST","updateFirstLabelCreatedFlag","firstLabelCreatedFlag","UPDATE_FIRST_LABEL_CREATED_FLAG","VirtualListUtil","createClass","key","value","listSize","childSize","childCount","columnCount","Math","floor","width","height","ceil","gridSize","sizeFromGrid","max","calculateGridSize","horizontalMargin","calculateContentSize","anchors","i","rowCount","anchor","x","y","push","NumberUtil","min","RectUtil","rect","r1","r2","point","centerPoint","size","_objectSpread","containerRect","ratio","getRatio","innerRectHeight","innerRectWidth","inputRect","rectAnchor","delta","RIGHT","BOTTOM_RIGHT","BOTTOM","TOP_RIGHT","TOP","TOP_LEFT","LEFT","BOTTOM_LEFT","scale","position","isPointInside","snapValueToRange","VirtualList","_React$Component","props","_this","possibleConstructorReturn","getPrototypeOf","call","contentSize","childAnchors","scrollbars","calculate","calculateAnchorPoints","getVirtualListStyle","getVirtualListContentStyle","onScrollStart","setState","isScrolling","onScrollStop","onScroll","values","viewportRect","scrollLeft","scrollTop","getChildren","_this$state","state","_this$props","overScanHeight","overScan","viewportRectWithOverScan","reduce","children","index","childRect","assign","isVisible","intersect","childStyle","left","top","concat","childRender","inherits","_this$props2","nextProps","nextState","nextContext","getValues","_this2","displayContent","react_default","a","createElement","className","style","lib_default","ref","onScrollFrame","autoHide","React","Component","ImageLoadManager","fx","queue","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","abrupt","sent","stop","setTimeout","runQueue","add","run","_runQueue","_callee2","_context2","isRunning","runTasks","apply","arguments","_runTasks","_callee3","_context3","length","shift","ImageRepository","uuid","image","repository","FileUtil","fileData","uuidv1","loadStatus","labelRects","labelPoints","labelPolygons","onSuccess","onFailure","Promise","resolve","reject","url","URL","createObjectURL","Image","src","onload","onerror","reader","FileReader","readAsText","onloadend","evt","contents","target","result","split","ContextType","ImagePreview","isLoading","loadImage","_ref","saveLoadedImagePartial","getById","saveLoadedImage","handleLoadImageError","_x","_x2","store","getStyle","imageRect","imageRatio","imagePosition","fitInsideRectWithRatio","getClassName","classNames","selected","isSelected","addAndRun","isChecked","onClick","undefined","draggable","alt","ImagePreview_objectSpread","dist","sizeUnit","color","loading","mapDispatchToProps","connect","updateActivePopupType","activePopupType","UPDATE_ACTIVE_POPUP_TYPE","updateCustomCursorStyle","customCursorStyle","UPDATE_CUSTOM_CURSOR_STYLE","EditorModel","canvas","mousePositionIndicator","cursor","primaryRenderingEngine","supportRenderingEngine","imageRectOnCanvas","imageScale","mousePositionOnCanvas","CustomCursorStyle","UnitUtil","angleDeg","PI","angleRad","DrawUtil","getContext","clearRect","startPoint","endPoint","thickness","ctx","save","strokeStyle","lineWidth","lineCap","beginPath","moveTo","lineTo","stroke","restore","fillStyle","fill","fillRect","globalCompositeOperation","anchorPoint","radius","startAngleRad","deg2rad","endAngleRad","arc","startAngleDeg","endAngleDeg","closePath","text","textSize","bold","align","textAlign","textBaseline","font","fillText","round","random","hex","alpha","r","parseInt","slice","g","b","PointUtil","p1","p2","factor","sqrt","pow","RenderEngineConfig","lineThickness","lineActiveColor","lineInactiveColor","anchorSize","anchorHoverSize","suggestedAnchorDetectionSize","activeAnchorColor","inactiveAnchorColor","EventType","EditorSelector","getState","editor","projectName","imagesData","getActiveImageIndex","getImagesData","getActiveLabelId","_","find","getActiveImageData","MouseEventUtil","event","MOUSE_DOWN","MOUSE_UP","MOUSE_MOVE","BaseRenderEngine","labelType","data","getEventType","mouseMoveHandler","mouseUpHandler","mouseDownHandler","RenderEngineUtil","activeImageRectOnCanvas","RenderEngineUtil_objectSpread","canvasSize","polygon","map","transferPointFromImageToCanvas","multiply","activeImageScale","transferPointFromCanvasToImage","subtract","translate","scaleRect","dispatch","DEFAULT","CANCEL","setValueBetweenPixels","topLeft","bottomRight","topLeftBetweenPixels","setPointBetweenPixels","bottomRightBetweenPixels","RectRenderEngine","_BaseRenderEngine","config","startCreateRectPoint","startResizeRectAnchor","isMouseOverImage","isMouseOverCanvas","rectUnderMouse","getRectUnderMouse","calculateRectRelativeToActiveImage","anchorUnderMouse","getAnchorUnderMouseByRect","startRectResize","getHighlightedLabelId","startRectCreation","mousePositionSnapped","snapPointToRect","equals","minX","minY","maxX","maxY","addRectLabel","activeLabelRect","getActiveRectLabel","startAnchorPosition","resizeRect","scaledRect","labelRect","RectRenderEngine_objectSpread","endRectTransformation","activeLabelIndex","getActiveLabelNameIndex","labelIndex","RECTANGLE","forEach","drawActiveRect","drawInactiveRect","drawCurrentlyCreatedRect","updateCursorStyle","mousePosition","activeRect","activeRectBetweenPixels","setRectBetweenPixels","drawRect","rectOnImage","transferRectFromCanvasToImage","renderRect","endAnchorPositionSnapped","isActive","_this3","rectBetweenPixels","lineColor","mapRectToAnchors","center","handleRect","getRectWithCenterAndSize","handleRectBetweenPixels","drawRectWithFill","getAnchorUnderMouse","MOVE","wrapDefaultCursorStyleInCancel","activeRectLabel","isMouseOverRectEdges","outerRectDelta","outerRect","expand","innerRectDelta","innerRect","rectAnchors","anchorRect","activatedAnchor","CanvasUtil","canvasRect","getBoundingClientRect","clientX","clientY","PointRenderEngine","transformInProgress","addPointLabel","labelPoint","POINT","getLabelPointUnderMouse","pointOnCanvas","pointBetweenPixels","pointOnImage","isInProgress","activeLabelPoint","getActivePointLabel","pointSnapped","PointRenderEngine_objectSpread","renderPoint","handleColor","getSize","LineUtil","l","p","start","end","abs","PolygonRenderEngine","activePath","resizeAnchorIndex","suggestedAnchorPositionOnCanvas","suggestedAnchorIndexInPolygon","POLYGON","isCreationInProgress","isMouseOverAnchor","addLabelAndFinishCreation","updateActivelyCreatedLabel","polygonUnderMouse","getPolygonUnderMouse","anchorIndex","vertices","indexUnderMouse","anchorOnCanvas","startExistingLabelResize","addSuggestedAnchorToPolygonLabel","isResizeInProgress","endExistingLabelResize","labelPolygon","pathOnCanvas","transferPolygonFromImageToCanvas","linesOnCanvas","mapPointsToLines","j","isMouseOverLine","getCenter","discardSuggestedPoint","drawExistingLabels","drawActivelyCreatedLabel","drawActivelyResizeLabel","drawSuggestedAnchor","CLOSE","ADD","standardizedPoints","path","lines","drawPolygonWithFill","hexToRGB","line","drawLine","mapPointsToAnchors","_this4","activeLabelPolygon","getActivePolygonLabel","snappedMousePosition","polygonOnCanvas","drawPolygon","_this5","_this6","suggestedAnchorRect","polygonOnImage","transferPolygonFromCanvasToImage","addPolygonLabel","finishLabelCreation","labelId","applyResizeToPolygonLabel","_this7","activeLabel","PolygonRenderEngine_objectSpread","_this8","newAnchorPositionOnImage","arr","newItem","toConsumableArray","mouse","hoverReach","getDistanceFromLine","points","_this9","PrimaryEditorRenderEngine","drawImage","EditorActions","activeLabelType","mountSupportRenderingEngine","clearCanvas","render","getEditorData","status","activeKeyCombo","ContextManager","getActiveCombo","canvasPaddingWidth","calculateImageRect","calculateImageScale","display","getMousePositionOnCanvasFromEvent","EditorActions_objectSpread","innerHTML","resizeCanvas","newCanvasSize","BaseContext","actions","PlatformModel","mobileDeviceData","isMac","isSafari","isFirefox","ImageActions","currentImageIndex","imageCount","EditorContext","_BaseContext","keyCombo","action","editorData","fullRender","cancelLabelCreation","getPreviousImage","getNextImage","GeneralSelector","general","activeContext","PopupActions","restoreCtx","PopupContext","popupType","getActivePopupType","includes","close","activeCombo","window","addEventListener","onDown","onUp","context","activeCtx","getActiveContext","contextHistory","updateCtx","UPDATE_CONTEXT","EDITOR","getActions","POPUP","pop","keyCode","getKeyCodeFromEvent","isInCombo","addToCombo","execute","removeFromCombo","hotKey","matchCombo","indexOf","splice","combo1","combo2","ProjectType","ImagesList","imagesListRef","updateListSize","listBoundingBox","onClickHandler","renderImagePreview","SideNavigationBar_ImagePreview_ImagePreview","removeEventListener","switchCtx","LEFT_NAVBAR","VirtualList_VirtualList","LabelToolkitData","NAME","headerText","imageSrc","imageAlt","ImageButton","padding","href","isDisabled","externalClassName","imagePadding","buttonStyle","ImageButton_objectSpread","imageStyle","maxWidth","maxHeight","react","active","disabled","stopPropagation","rel","LabelInputField","dropdownOptionHeight","dropdownOptionCount","dropdownMargin","dropdownLabel","dropdown","openDropdown","isOpen","closeDropdown","clientRect","dropDownRect","getDropdownStyle","options","innerHeight","bottom","getDropdownOptions","option","onSelectLabel","mouseEnterHandler","mouseLeaveHandler","animate","requestAnimationFrame","loaded","highlighted","isHighlighted","onDelete","onMouseEnter","onMouseLeave","ImageButton_ImageButton_ImageButton","labelBefore","labelAfter","before","Fragment","after","listStyle","listStyleContent","deleteRectLabelById","labelRectId","RectLabelsList_objectSpread","currentLabel","updateRectLabel","labelNameIndex","onClickCapture","SideNavigationBar_EmptyLabelList_EmptyLabelList","SideNavigationBar_LabelInputField_LabelInputField","deletePointLabelById","labelPointId","PointLabelsList_objectSpread","updatePointLabel","deletePolygonLabelById","labelPolygonId","PolygonLabelsList_objectSpread","updatePolygonLabel","LabelsToolkit","labelsToolkitRef","tabs","updateToolkitSize","headerClickHandler","activeTab","updateActiveLabelType","renderChildren","tabData","activeTabContentHeight","baseClass","header","content","SideNavigationBar_RectLabelsList_RectLabelsList","SideNavigationBar_PointLabelsList_PointLabelsList","SideNavigationBar_PolygonLabelsList_PolygonLabelsList","IMAGE_RECOGNITION","RIGHT_NAVBAR","UPDATE_ACTIVE_LABEL_TYPE","SideNavigationBar","direction","isWithContext","renderContent","renderCompanion","right","with-context","closed","VerticalEditorButton","label","EditorUtil","getIndicator","cursorStyle","RESIZE","getCursorStyle","move","resize","cancel","AcceptedFileType","Editor","setActiveImage","updateModelAndRender","setLoadingStatus","calculateAllCharacteristics","update","updateMousePositionIndicator","mountEventListeners","mountRenderEngines","unmountEventListeners","prevProps","prevState","snapshot","swapSupportRenderingEngine","onContextMenu","preventDefault","totalImageCount","name","windowSize","_useState","useState","_useState2","slicedToArray","leftTabStatus","setLeftTabStatus","_useState3","_useState4","rightTabStatus","setRightTabStatus","calculateEditorSize","leftTabWidth","rightTabWidth","leftSideBarButtonOnClick","rightSideBarButtonOnClick","SideNavigationBar_SideNavigationBar_SideNavigationBar","VerticalEditorButton_VerticalEditorButton_VerticalEditorButton","SideNavigationBar_ImagesList_ImagesList","onMouseDown","EditorView_Editor_Editor","EditorView_BottomNavigationBar_BottomNavigationBar","SideNavigationBar_LabelsToolkit_LabelsToolkit","pointLabeledImages","currentCount","currentImage","rectLabeledImages","polygonLabeledImages","getProgress","UnderlineTextButton","under","over","TextInput","isPassword","onChange","onFocus","inputStyle","labelStyle","barStyle","htmlFor","updateProjectName","UPDATE_PROJECT_NAME","EditorView_StateBar_StateBar","Common_TextInput_TextInput","toLowerCase","replace","setSelectionRange","UnderlineTextButton_UnderlineTextButton_UnderlineTextButton","EXPORT_LABELS","withPopup","EditorView_TopNavigationBar_TopNavigationBar","EditorView_EditorContainer_EditorContainer","TextButton","SocialMediaData","displayName","tooltipMessage","EditorFeatureData","displayText","ExportFormatType","_useDropzone","useDropzone","accept","IMAGE","acceptedFiles","getRootProps","getInputProps","TextButton_TextButton_TextButton","OBJECT_DETECTION","mapFileDataToImageData","INSERT_LABEL_NAMES","MainView","projectInProgress","setProjectInProgress","projectCanceled","setProjectCanceled","withStyles","theme","tooltip","backgroundColor","boxShadow","shadows","fontSize","Tooltip","InProgress","Canceled","MainView_ImagesDropZone_ImagesDropZone","GenericYesNoPopup","title","acceptLabel","onAccept","skipAcceptButton","disableAcceptButton","rejectLabel","onReject","skipRejectButton","disableRejectButton","setMountStatus","useEffect","labelsList","setLabelsList","invalidFileLoadedStatus","setInvalidFileLoadedStatus","TEXT","multiple","onDrop","loadLabelsList","GenericYesNoPopup_GenericYesNoPopup_GenericYesNoPopup","XMLSanitizerUtil","input","ExporterUtil","getProjectName","date","moment","format","RectLabelsExporter","exportFormatType","YOLO","exportAsYOLO","VOC","exportAsVOC","CSV","exportAsCSV","zip","JSZip","fileContent","wrapRectLabelsIntoYOLO","fileName","file","error","Error","generateAsync","then","saveAs","getExportFileName","toFixed","join","wrapImageIntoVOC","labelNamesList","getLabelNames","labels","wrapRectLabelsIntoVOC","sanitize","wrapRectLabelsIntoCSV","filter","imageLabelData","blob","Blob","RectExportFormatData","PointExportFormatData","PointLabelsExporter","PolygonExportFormatData","VGG_JSON","PolygonLabelsExporter","exportAsVGGJson","JSON","stringify","mapImagesDataToVGGObject","mapImageDataToVGGFileData","regionsData","mapImageDataToVGG","fileref","filename","base64_img_data","file_attributes","regions","validLabels","getValidPolygonLabels","shape_attributes","mapPolygonToVGG","region_attributes","all_points_x","all_points_y","exportLabelType","setExportLabelType","setExportFormatType","getOptions","exportFormatData","entry","export","setLabelNames","addHandle","newLabelNames","InsertLabelNamesPopup_objectSpread","defineProperty","labelInputs","keys","deleteHandle","extractLabelNamesList","LOAD_LABEL_NAMES","updateImageData","UPDATE_IMAGES_DATA","PopupView_LoadLabelNamesPopup_LoadLabelNamesPopup","PopupView_ExportLabelsPopup_ExportLabelPopup","PopupView_InsertLabelNamesPopup_InsertLabelNamesPopup","EXIT_PROJECT","PopupView_ExitProjectPopup_ExitProjectPopup","PopupView_LoadMoreImagesPopup_LoadMoreImagesPopup","selectPopup","scrollPosition","setScrollPosition","getEditorFeatureTiles","features","topNavigationBar","Hide","Show","firstStage","secondStage","thirdStage","fourthStage","getSocialMediaButtons","SizeItUpView","manufacturer","os","views_MobileMainView_MobileMainView","SizeItUpView_SizeItUpView_SizeItUpView","views_EditorView_EditorView","views_MainView_MainView","views_PopupView_PopupView","Boolean","location","hostname","match","initialState","rootReducer","combineReducers","UPDATE_WINDOW_SIZE","general_reducer_objectSpread","reducer_objectSpread","PlatformUtil","userAgent","mobileDetect","MobileDetect","mobile","browser","AppInitializer","handleResize","detectDeviceParams","init","innerWidth","navigator","getMobileDeviceData","__webpack_require__","d","__webpack_exports__","createStore","applyMiddleware","logger","inti","ReactDOM","es","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f7362561.chunk.js","sourcesContent":["export enum Direction {\n    TOP = \"TOP\",\n    BOTTOM = \"BOTTOM\",\n    LEFT = \"LEFT\",\n    RIGHT = \"RIGHT\",\n    TOP_RIGHT = \"TOP_RIGHT\",\n    TOP_LEFT = \"TOP_LEFT\",\n    BOTTOM_RIGHT = \"BOTTOM_RIGHT\",\n    BOTTOM_LEFT = \"BOTTOM_LEFT\",\n    CENTER = \"CENTER\"\n}","export enum PopupWindowType {\n    LOAD_LABEL_NAMES = \"LOAD_LABEL_NAMES\",\n    LOAD_IMAGES = \"LOAD_IMAGES\",\n    EXPORT_LABELS = \"EXPORT_LABELS\",\n    INSERT_LABEL_NAMES = 'INSERT_LABEL_NAMES',\n    EXIT_PROJECT = 'EXIT_PROJECT'\n}","import { PopupWindowType } from \"../data/enums/PopupWindowType\";\n\nexport class Settings {\n  public static readonly GITHUB_URL: string = \"https://github.com/SkalskiP\";\n  public static readonly MEDIUM_URL: string = \"https://medium.com/@piotr.skalski92\";\n  public static readonly PATREON_URL: string = \"https://www.patreon.com/make_sense\";\n\n  public static readonly TOP_NAVIGATION_BAR_HEIGHT_PX: number = 35;\n  public static readonly BOTTOM_NAVIGATION_BAR_HEIGHT_PX: number = 45 + 1;\n  public static readonly SIDE_NAVIGATION_BAR_WIDTH_CLOSED_PX: number = 20 + 1;\n  public static readonly SIDE_NAVIGATION_BAR_WIDTH_OPEN_PX: number =\n    Settings.SIDE_NAVIGATION_BAR_WIDTH_CLOSED_PX + 300 + 1;\n  public static readonly TOOLKIT_TAB_HEIGHT_PX: number = 40;\n\n  public static readonly EDITOR_MIN_WIDTH: number = 900;\n  public static readonly EDITOR_MIN_HEIGHT: number = 500;\n\n  public static readonly PRIMARY_COLOR: string = \"#2af598\";\n  public static readonly SECONDARY_COLOR: string = \"#009efd\";\n\n  public static readonly DARK_THEME_FIRST_COLOR: string = \"#171717\";\n  public static readonly DARK_THEME_SECOND_COLOR: string = \"#282828\";\n  public static readonly DARK_THEME_THIRD_COLOR: string = \"#4c4c4c\";\n  public static readonly DARK_THEME_FORTH_COLOR: string = \"#252f35\";\n\n  public static readonly CANVAS_PADDING_WIDTH_PX: number = 20;\n  public static readonly CROSS_HAIR_THICKNESS_PX: number = 1;\n  public static readonly CROSS_HAIR_COLOR: string = \"#fff\";\n\n  public static readonly RESIZE_HANDLE_DIMENSION_PX: number = 6;\n  public static readonly RESIZE_HANDLE_HOVER_DIMENSION_PX = 16;\n\n  public static readonly CLOSEABLE_POPUPS: PopupWindowType[] = [\n    PopupWindowType.LOAD_IMAGES,\n    PopupWindowType.LOAD_IMAGES,\n    PopupWindowType.LOAD_IMAGES,\n  ];\n}\n","export enum LabelType {\n    NAME = \"NAME\",\n    POINT = \"POINT\",\n    RECTANGLE = \"RECTANGLE\",\n    POLYGON = \"POLYGON\"\n}","export enum Action {\n    UPDATE_PROJECT_TYPE = '@@UPDATE_PROJECT_TYPE',\n    UPDATE_PROJECT_NAME = '@@UPDATE_PROJECT_NAME',\n    UPDATE_ACTIVE_IMAGE_INDEX = '@@UPDATE_ACTIVE_IMAGE_INDEX',\n    UPDATE_IMAGE_DATA_BY_ID = '@@UPDATE_IMAGE_DATA_BY_ID',\n    ADD_IMAGES_DATA = '@@ADD_IMAGES_DATA',\n    UPDATE_IMAGES_DATA = '@@UPDATE_IMAGES_DATA',\n    UPDATE_WINDOW_SIZE = '@@UPDATE_WINDOW_SIZE',\n    UPDATE_ACTIVE_POPUP_TYPE = '@@UPDATE_ACTIVE_POPUP_TYPE',\n    UPDATE_ACTIVE_LABEL_NAME_INDEX = '@@UPDATE_ACTIVE_LABEL_NAME_INDEX',\n    UPDATE_ACTIVE_LABEL_TYPE = '@@UPDATE_ACTIVE_LABEL_TYPE',\n    UPDATE_ACTIVE_LABEL_ID = '@@UPDATE_ACTIVE_LABEL_ID',\n    UPDATE_HIGHLIGHTED_LABEL_ID = '@@UPDATE_HIGHLIGHTED_LABEL_ID',\n    UPDATE_LABEL_NAMES_LIST = '@@UPDATE_LABEL_NAMES_LIST',\n    UPDATE_FIRST_LABEL_CREATED_FLAG = '@@UPDATE_FIRST_LABEL_CREATED_FLAG',\n    UPDATE_CUSTOM_CURSOR_STYLE = '@@UPDATE_CUSTOM_CURSOR_STYLE',\n    UPDATE_CONTEXT = '@@UPDATE_CONTEXT'\n}","import { ProjectType } from \"../../data/enums/ProjectType\";\nimport { EditorActionTypes, ImageData } from \"./types\";\nimport { Action } from \"../Actions\";\nimport { LabelType } from \"../../data/enums/LabelType\";\n\nexport function updateProjectType(projectType: ProjectType): EditorActionTypes {\n  return {\n    type: Action.UPDATE_PROJECT_TYPE,\n    payload: {\n      projectType,\n    },\n  };\n}\n\nexport function updateProjectName(projectName: string): EditorActionTypes {\n  return {\n    type: Action.UPDATE_PROJECT_NAME,\n    payload: {\n      projectName,\n    },\n  };\n}\n\nexport function updateActiveImageIndex(activeImageIndex: number): EditorActionTypes {\n  return {\n    type: Action.UPDATE_ACTIVE_IMAGE_INDEX,\n    payload: {\n      activeImageIndex,\n    },\n  };\n}\n\nexport function updateActiveLabelNameIndex(activeLabelNameIndex: number): EditorActionTypes {\n  return {\n    type: Action.UPDATE_ACTIVE_LABEL_NAME_INDEX,\n    payload: {\n      activeLabelNameIndex,\n    },\n  };\n}\n\nexport function updateActiveLabelId(activeLabelId: string): EditorActionTypes {\n  return {\n    type: Action.UPDATE_ACTIVE_LABEL_ID,\n    payload: {\n      activeLabelId,\n    },\n  };\n}\n\nexport function updateHighlightedLabelId(highlightedLabelId: string): EditorActionTypes {\n  return {\n    type: Action.UPDATE_HIGHLIGHTED_LABEL_ID,\n    payload: {\n      highlightedLabelId,\n    },\n  };\n}\n\nexport function updateActiveLabelType(activeLabelType: LabelType): EditorActionTypes {\n  return {\n    type: Action.UPDATE_ACTIVE_LABEL_TYPE,\n    payload: {\n      activeLabelType,\n    },\n  };\n}\n\nexport function updateImageDataById(id: string, newImageData: ImageData): EditorActionTypes {\n  return {\n    type: Action.UPDATE_IMAGE_DATA_BY_ID,\n    payload: {\n      id,\n      newImageData,\n    },\n  };\n}\n\nexport function addImageData(imageData: ImageData[]): EditorActionTypes {\n  return {\n    type: Action.ADD_IMAGES_DATA,\n    payload: {\n      imageData,\n    },\n  };\n}\n\nexport function updateImageData(imageData: ImageData[]): EditorActionTypes {\n  return {\n    type: Action.UPDATE_IMAGES_DATA,\n    payload: {\n      imageData,\n    },\n  };\n}\n\nexport function updateLabelNamesList(labelNames: string[]) {\n  return {\n    type: Action.UPDATE_LABEL_NAMES_LIST,\n    payload: {\n      labelNames,\n    },\n  };\n}\n\nexport function updateFirstLabelCreatedFlag(firstLabelCreatedFlag: boolean) {\n  return {\n    type: Action.UPDATE_FIRST_LABEL_CREATED_FLAG,\n    payload: {\n      firstLabelCreatedFlag,\n    },\n  };\n}\n","import {ISize} from \"../interfaces/ISize\";\nimport {IPoint} from \"../interfaces/IPoint\";\n\nexport class VirtualListUtil {\n    public static calculateGridSize(listSize: ISize, childSize: ISize, childCount: number): ISize {\n        const columnCount: number = Math.floor(listSize.width / childSize.width);\n        const rowCount: number = Math.ceil(childCount / columnCount);\n        return {width: columnCount, height: rowCount};\n    }\n\n    public static calculateContentSize(listSize: ISize, childSize: ISize, gridSize: ISize): ISize {\n        const sizeFromGrid:ISize = {\n            width: childSize.width * gridSize.width,\n            height: childSize.height * gridSize.height\n        };\n\n        return {\n            width: Math.max(listSize.width, sizeFromGrid.width),\n            height: sizeFromGrid.height\n        }\n    }\n\n    public static calculateAnchorPoints(listSize: ISize, childSize: ISize, childCount: number): IPoint[] {\n        const gridSize: ISize = VirtualListUtil.calculateGridSize(listSize, childSize, childCount);\n        const contentWrapperSize: ISize = VirtualListUtil.calculateContentSize(listSize, childSize, gridSize);\n        const horizontalMargin = (contentWrapperSize.width - gridSize.width * childSize.width) / (gridSize.width + 1);\n\n        let anchors = [];\n        for (let i = 0; i < childCount; i++) {\n            const rowCount: number = Math.floor(i / gridSize.width);\n            const columnCount: number = i % gridSize.width;\n\n            const anchor: IPoint = {\n                x: rowCount * horizontalMargin + columnCount * childSize.width,\n                y: rowCount * childSize.height\n            };\n            anchors.push(anchor);\n        }\n        return anchors;\n    }\n}","export class NumberUtil {\n    public static snapValueToRange(value: number, min: number, max: number): number {\n        if (value < min)\n            return min;\n        if (value > max)\n            return max;\n\n        return value;\n    }\n}","import {IRect} from \"../interfaces/IRect\";\nimport {IPoint} from \"../interfaces/IPoint\";\nimport {ISize} from \"../interfaces/ISize\";\nimport {RectAnchor} from \"../data/RectAnchor\";\nimport {NumberUtil} from \"./NumberUtil\";\nimport {Direction} from \"../data/enums/Direction\";\n\nexport class RectUtil {\n    public static getRatio(rect: IRect): number {\n        if (!rect) return null;\n\n        return rect.width/rect.height\n    }\n\n    public static intersect(r1: IRect, r2: IRect) {\n        if (!r1 || !r2) return null;\n        return !(\n            r2.x > r1.x + r1.width ||\n            r2.x + r2.width < r1.x ||\n            r2.y > r1.y + r1.height ||\n            r2.y + r2.height < r1.y\n        );\n    }\n\n    public static isPointInside(rect: IRect, point: IPoint): boolean {\n        if (!rect || !point) return null;\n        return (\n            rect.x < point.x &&\n            rect.x + rect.width > point.x &&\n            rect.y < point.y &&\n            rect.y + rect.height > point.y\n        )\n    }\n\n    public static getRectWithCenterAndSize(centerPoint: IPoint, size: ISize): IRect {\n        return {\n            x: centerPoint.x - 0.5 * size.width,\n            y: centerPoint.y - 0.5 * size.height,\n            ...size\n        }\n    }\n\n    public static fitInsideRectWithRatio(containerRect: IRect, ratio: number): IRect {\n        const containerRectRatio = RectUtil.getRatio(containerRect);\n        if (containerRectRatio < ratio) {\n            const innerRectHeight = containerRect.width / ratio;\n            return {\n                x: containerRect.x,\n                y: containerRect.y + (containerRect.height - innerRectHeight) / 2,\n                width: containerRect.width,\n                height: innerRectHeight\n            }\n        }\n        else {\n            const innerRectWidth = containerRect.height * ratio;\n            return {\n                x: containerRect.x + (containerRect.width - innerRectWidth) / 2,\n                y: containerRect.y,\n                width: innerRectWidth,\n                height: containerRect.height\n            }\n        }\n    }\n\n    public static resizeRect(inputRect: IRect, rectAnchor: Direction, delta): IRect {\n        const rect: IRect = {...inputRect};\n        switch (rectAnchor) {\n            case Direction.RIGHT:\n                rect.width += delta.x;\n                break;\n            case Direction.BOTTOM_RIGHT:\n                rect.width += delta.x;\n                rect.height += delta.y;\n                break;\n            case Direction.BOTTOM:\n                rect.height += delta.y;\n                break;\n            case Direction.TOP_RIGHT:\n                rect.width += delta.x;\n                rect.y += delta.y;\n                rect.height -= delta.y;\n                break;\n            case Direction.TOP:\n                rect.y += delta.y;\n                rect.height -= delta.y;\n                break;\n            case Direction.TOP_LEFT:\n                rect.x += delta.x;\n                rect.width -= delta.x;\n                rect.y += delta.y;\n                rect.height -= delta.y;\n                break;\n            case Direction.LEFT:\n                rect.x += delta.x;\n                rect.width -= delta.x;\n                break;\n            case Direction.BOTTOM_LEFT:\n                rect.x += delta.x;\n                rect.width -= delta.x;\n                rect.height += delta.y;\n                break;\n        }\n\n        if (rect.width < 0)  {\n            rect.x = rect.x + rect.width;\n            rect.width = - rect.width;\n        }\n\n        if (rect.height < 0)  {\n            rect.y = rect.y + rect.height;\n            rect.height = - rect.height;\n        }\n\n        return rect;\n    }\n\n    public static translate(rect: IRect, delta: IPoint): IRect {\n        return {\n            ...rect,\n            x: rect.x + delta.x,\n            y: rect.y + delta.y\n        }\n    }\n\n    public static expand(rect: IRect, delta: IPoint): IRect {\n        return {\n            x: rect.x - delta.x,\n            y: rect.y - delta.y,\n            width: rect.width + 2 * delta.x,\n            height: rect.height + 2 * delta.y\n        }\n    }\n\n    public static scaleRect(rect:IRect, scale: number): IRect {\n        return {\n            x: rect.x * scale,\n            y: rect.y * scale,\n            width: rect.width * scale,\n            height: rect.height * scale\n        }\n    }\n\n    public static mapRectToAnchors(rect: IRect): RectAnchor[] {\n        return [\n            {type: Direction.TOP_LEFT, position: {x: rect.x, y: rect.y}},\n            {type: Direction.TOP, position: {x: rect.x + 0.5 * rect.width, y: rect.y}},\n            {type: Direction.TOP_RIGHT, position: {x: rect.x + rect.width, y: rect.y}},\n            {type: Direction.LEFT, position: {x: rect.x, y: rect.y + 0.5 * rect.height}},\n            {type: Direction.RIGHT, position: {x: rect.x + rect.width, y: rect.y + 0.5 * rect.height}},\n            {type: Direction.BOTTOM_LEFT, position: {x: rect.x, y: rect.y + rect.height}},\n            {type: Direction.BOTTOM, position: {x: rect.x + 0.5 * rect.width, y: rect.y + rect.height}},\n            {type: Direction.BOTTOM_RIGHT, position: {x: rect.x + rect.width, y: rect.y + rect.height}}\n        ]\n    }\n\n    public static snapPointToRect(point: IPoint, rect: IRect): IPoint {\n        if (RectUtil.isPointInside(rect, point))\n            return point;\n\n        return {\n            x: NumberUtil.snapValueToRange(point.x, rect.x, rect.x + rect.width),\n            y: NumberUtil.snapValueToRange(point.y, rect.y, rect.y + rect.height)\n        }\n    }\n}","import React from 'react';\nimport {ISize} from \"../../../interfaces/ISize\";\nimport {IRect} from \"../../../interfaces/IRect\";\nimport Scrollbars from 'react-custom-scrollbars';\nimport {VirtualListUtil} from \"../../../utils/VirtualListUtil\";\nimport {IPoint} from \"../../../interfaces/IPoint\";\nimport {RectUtil} from \"../../../utils/RectUtil\";\n\ninterface IProps {\n    size: ISize;\n    childCount: number;\n    childSize: ISize;\n    childRender: (index: number, isScrolling: boolean, isVisible: boolean, style: React.CSSProperties) => any;\n    overScanHeight?: number;\n}\n\ninterface IState {\n    viewportRect: IRect;\n    isScrolling: boolean;\n}\n\nexport class VirtualList extends React.Component<IProps, IState> {\n    private gridSize: ISize;\n    private contentSize: ISize;\n    private childAnchors: IPoint[];\n    private scrollbars: Scrollbars;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewportRect: null,\n            isScrolling: false\n        };\n    }\n\n    public componentDidMount(): void {\n        const {size, childSize, childCount} = this.props;\n        this.calculate(size, childSize, childCount);\n        this.setState({\n            viewportRect: {\n                x: 0,\n                y: 0,\n                width: this.props.size.width,\n                height: this.props.size.height\n            }\n        });\n    }\n\n    public componentWillUpdate(nextProps: Readonly<IProps>, nextState: Readonly<IState>, nextContext: any): void {\n        const {size, childSize, childCount} = nextProps;\n        if (this.props.size.height !== size.height || this.props.size.width !== size.width ||\n            this.props.childCount !== childCount) {\n            this.calculate(size, childSize, childCount);\n            this.setState({\n                viewportRect: {\n                    x: this.scrollbars.getValues().scrollLeft,\n                    y: this.scrollbars.getValues().scrollTop,\n                    width: size.width,\n                    height: size.height\n                }\n            });\n        }\n    }\n\n    private calculate = (size: ISize, childSize: ISize, childCount: number) => {\n        this.gridSize = VirtualListUtil.calculateGridSize(size, childSize, childCount);\n        this.contentSize = VirtualListUtil.calculateContentSize(size, childSize, this.gridSize);\n        this.childAnchors = VirtualListUtil.calculateAnchorPoints(size, childSize, childCount);\n    };\n\n    private getVirtualListStyle = ():React.CSSProperties => {\n        return {\n            position: \"relative\",\n            width: this.props.size.width,\n            height: this.props.size.height,\n        }\n    };\n\n    private getVirtualListContentStyle = ():React.CSSProperties => {\n        return {\n            width: this.contentSize.width,\n            height: this.contentSize.height,\n        }\n    };\n\n    private onScrollStart = () => {\n        this.setState({isScrolling: true});\n    };\n\n    private onScrollStop = () => {\n        this.setState({isScrolling: false});\n    };\n\n    private onScroll = (values) => {\n        this.setState({\n            viewportRect: {\n                x: values.scrollLeft,\n                y: values.scrollTop,\n                width: this.props.size.width,\n                height: this.props.size.height\n            }\n        });\n    };\n\n    private getChildren = () => {\n        const {viewportRect, isScrolling} = this.state;\n        const {overScanHeight, childSize} = this.props;\n        const overScan: number = !!overScanHeight ? overScanHeight : 0;\n\n        const viewportRectWithOverScan:IRect = {\n            x: viewportRect.x,\n            y: viewportRect.y - overScan,\n            width: viewportRect.width,\n            height: viewportRect.height + 2 * overScan\n        };\n\n        return this.childAnchors.reduce((children, anchor: IPoint, index: number) => {\n            const childRect = Object.assign(anchor, childSize);\n            const isVisible = RectUtil.intersect(viewportRectWithOverScan, childRect);\n\n            if (isVisible) {\n                const childStyle: React.CSSProperties = {\n                    position: \"absolute\",\n                    left: anchor.x,\n                    top: anchor.y,\n                    width: childSize.width,\n                    height: childSize.height\n                };\n\n                return children.concat(this.props.childRender(index, isScrolling, isVisible, childStyle))\n            }\n            else {\n                return children;\n            }\n        }, [])\n    };\n\n    public render() {\n        const displayContent = !!this.props.size && !!this.props.childSize && !!this.gridSize;\n\n        return(\n            <div\n                className=\"VirtualList\"\n                style={this.getVirtualListStyle()}\n            >\n                <Scrollbars\n                    ref={ref => this.scrollbars = ref}\n                    onScrollFrame={this.onScroll}\n                    onScrollStart={this.onScrollStart}\n                    onScrollStop={this.onScrollStop}\n                    autoHide={true}\n                >\n                    {displayContent && <div\n                        className=\"VirtualListContent\"\n                        style={this.getVirtualListContentStyle()}\n                    >\n                        {this.getChildren()}\n                    </div>}\n                </Scrollbars>\n            </div>\n        )\n    }\n}","export class ImageLoadManager {\n\n\tprivate static queue: (() => Promise<any>)[] = [];\n\tprivate static isRunning: boolean = false;\n\n\tpublic static add(fx: Promise<any>) {\n\t\tImageLoadManager.queue.push(async () => await fx);\n\t}\n\n\tpublic static run() {\n\t\tsetTimeout(() => ImageLoadManager.runQueue(), 10);\n\t}\n\n\tpublic static addAndRun(fx: Promise<any>) {\n\t\tImageLoadManager.add(fx);\n\t\tImageLoadManager.run();\n\t}\n\n\tpublic static async runQueue() {\n\t\tif (!ImageLoadManager.isRunning) {\n\t\t\tImageLoadManager.isRunning = true;\n\t\t\tawait ImageLoadManager.runTasks();\n\t\t\tImageLoadManager.isRunning = false;\n\t\t}\n\t}\n\n\tprivate static async runTasks() {\n\t\twhile (ImageLoadManager.queue.length > 0) {\n\t\t\tconst fx = ImageLoadManager.queue.shift();\n\t\t\tawait fx();\n\t\t}\n\t}\n}","export type ImageMap = { [s: string]: HTMLImageElement; };\n\nexport class ImageRepository {\n    private static repository: ImageMap = {};\n\n    public static store(uuid: string, image: HTMLImageElement): string {\n        ImageRepository.repository[uuid] = image;\n        return uuid;\n    }\n\n    public static getById(uuid: string): HTMLImageElement {\n        return ImageRepository.repository[uuid];\n    }\n}","import uuidv1 from 'uuid/v1';\nimport {ImageData} from \"../store/editor/types\";\n\nexport class FileUtil {\n    public static mapFileDataToImageData(fileData: File): ImageData {\n        return {\n            id: uuidv1(),\n            fileData: fileData,\n            loadStatus: false,\n            labelRects: [],\n            labelPoints: [],\n            labelPolygons: []\n        }\n    }\n\n    public static loadImage(fileData: File, onSuccess: (image:HTMLImageElement) => any, onFailure: () => any): Promise<void> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst url = URL.createObjectURL(fileData);\n            const image = new Image();\n\t\t\timage.src = url;\n\t\t\timage.onload = () => {\n\t\t\t\tonSuccess(image);\n\t\t\t\tresolve();\n\t\t\t};\n\t\t\timage.onerror = () => {\n\t\t\t\tonFailure();\n\t\t\t\treject();\n\t\t\t};\n\t\t})\n\n    }\n\n    public static loadLabelsList(fileData: File, onSuccess: (labels:string[]) => any, onFailure: () => any) {\n        const reader = new FileReader();\n        reader.readAsText(fileData);\n        reader.onloadend = function (evt: any) {\n            const contents:string = evt.target.result;\n            onSuccess(contents.split(/[\\r\\n]/));\n        };\n        reader.onerror = () => onFailure();\n    }\n}","export enum ContextType {\n    EDITOR = \"EDITOR\",\n    LEFT_NAVBAR = \"LEFT_NAVBAR\",\n    RIGHT_NAVBAR = \"RIGHT_NAVBAR\",\n    POPUP = \"POPUP\",\n    DROPDOWN = \"DROPDOWN\"\n}","import classNames from \"classnames\";\nimport React from 'react';\nimport {connect} from \"react-redux\";\nimport {ClipLoader} from \"react-spinners\";\nimport {ImageLoadManager} from \"../../../../logic/imageRepository/ImageLoadManager\";\nimport {IRect} from \"../../../../interfaces/IRect\";\nimport {ISize} from \"../../../../interfaces/ISize\";\nimport {ImageRepository} from \"../../../../logic/imageRepository/ImageRepository\";\nimport {Settings} from \"../../../../settings/Settings\";\nimport {AppState} from \"../../../../store\";\nimport {updateImageDataById} from \"../../../../store/editor/actionCreators\";\nimport {ImageData} from \"../../../../store/editor/types\";\nimport {FileUtil} from \"../../../../utils/FileUtil\";\nimport {RectUtil} from \"../../../../utils/RectUtil\";\nimport './ImagePreview.scss';\n\ninterface IProps {\n    imageData: ImageData;\n    style: React.CSSProperties;\n    size: ISize;\n    isScrolling?: boolean;\n    isChecked?: boolean;\n    onClick?: () => any;\n    isSelected?: boolean;\n    updateImageDataById: (id: string, newImageData: ImageData) => any;\n}\n\ninterface IState {\n    image: HTMLImageElement;\n}\n\nclass ImagePreview extends React.Component<IProps, IState> {\n    private isLoading: boolean = false;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            image: null,\n        }\n    }\n\n    public componentDidMount(): void {\n        ImageLoadManager.addAndRun(this.loadImage(this.props.imageData, this.props.isScrolling));\n    }\n\n    public componentWillUpdate(nextProps: Readonly<IProps>, nextState: Readonly<IState>, nextContext: any): void {\n        if (this.props.imageData.id !== nextProps.imageData.id) {\n            if (nextProps.imageData.loadStatus) {\n                ImageLoadManager.addAndRun(this.loadImage(nextProps.imageData, nextProps.isScrolling));\n            }\n            else {\n                this.setState({image: null});\n            }\n        }\n\n        if (this.props.isScrolling && !nextProps.isScrolling) {\n            ImageLoadManager.addAndRun(this.loadImage(nextProps.imageData, false));\n        }\n    }\n\n    shouldComponentUpdate(nextProps: Readonly<IProps>, nextState: Readonly<IState>, nextContext: any): boolean {\n        return (\n            this.props.imageData.id !== nextProps.imageData.id ||\n            this.state.image !== nextState.image ||\n            this.props.isSelected !== nextProps.isSelected ||\n            this.props.isChecked !== nextProps.isChecked\n        )\n    }\n\n    private loadImage = async (imageData:ImageData, isScrolling:boolean) => {\n        if (imageData.loadStatus) {\n            const image = ImageRepository.getById(imageData.id);\n            if (this.state.image !== image) {\n                this.setState({image});\n            }\n        }\n        else if (!isScrolling || !this.isLoading) {\n            this.isLoading = true;\n            const saveLoadedImagePartial = (image: HTMLImageElement) => this.saveLoadedImage(image, imageData);\n            await FileUtil.loadImage(imageData.fileData, saveLoadedImagePartial, this.handleLoadImageError);\n        }\n    };\n\n    private saveLoadedImage = (image: HTMLImageElement, imageData: ImageData) => {\n        imageData.loadStatus = true;\n        this.props.updateImageDataById(imageData.id, imageData);\n        ImageRepository.store(imageData.id, image);\n        if (imageData.id === this.props.imageData.id) {\n            this.setState({image});\n            this.isLoading = false;\n        }\n    };\n\n    private getStyle = () => {\n        const { size } = this.props;\n\n        const containerRect: IRect = {\n            x: 0.15 * size.width,\n            y: 0.15 * size.height,\n            width: 0.7 * size.width,\n            height: 0.7 * size.height\n        };\n\n        const imageRect:IRect = {\n            x: 0,\n            y: 0,\n            width: this.state.image.width,\n            height: this.state.image.height\n        };\n\n        const imageRatio = RectUtil.getRatio(imageRect);\n        const imagePosition: IRect = RectUtil.fitInsideRectWithRatio(containerRect, imageRatio);\n\n        return {\n            width: imagePosition.width,\n            height: imagePosition.height,\n            left: imagePosition.x,\n            top: imagePosition.y\n        }\n    };\n\n    private handleLoadImageError = () => {};\n\n    private getClassName = () => {\n        return classNames(\n            \"ImagePreview\",\n            {\n                \"selected\": this.props.isSelected,\n            }\n        );\n    };\n\n    public render() {\n        const {\n            isChecked,\n            style,\n            onClick\n        } = this.props;\n\n        return(\n            <div\n                className={this.getClassName()}\n                style={style}\n                onClick={onClick ? onClick : undefined}\n            >\n                {(!!this.state.image) ?\n                    [\n                        <div\n                            className=\"Foreground\"\n                            key={\"Foreground\"}\n                            style={this.getStyle()}\n                        >\n                            <img\n                                className=\"Image\"\n                                draggable={false}\n                                src={this.state.image.src}\n                                alt={this.state.image.alt}\n                                style={{...this.getStyle(), left: 0, top: 0}}\n                            />\n                            {isChecked && <img\n                                className=\"CheckBox\"\n                                draggable={false}\n                                src={\"ico/checkbox-checked-color.png\"}\n                                alt={\"checkbox\"}\n                            />}\n                        </div>,\n                        <div\n                            className=\"Background\"\n                            key={\"Background\"}\n                            style={this.getStyle()}\n                        />\n                    ] :\n                    <ClipLoader\n                        sizeUnit={\"px\"}\n                        size={30}\n                        color={Settings.SECONDARY_COLOR}\n                        loading={true}\n                    />}\n            </div>)\n    }\n}\n\nconst mapDispatchToProps = {\n    updateImageDataById\n};\n\nconst mapStateToProps = (state: AppState) => ({});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ImagePreview);","import {ISize} from \"../../interfaces/ISize\";\nimport {GeneralActionTypes} from \"./types\";\nimport {Action} from \"../Actions\";\nimport {PopupWindowType} from \"../../data/enums/PopupWindowType\";\nimport {CustomCursorStyle} from \"../../data/enums/CustomCursorStyle\";\nimport {ContextType} from \"../../data/enums/ContextType\";\n\nexport function updateWindowSize(windowSize: ISize): GeneralActionTypes {\n    return {\n        type: Action.UPDATE_WINDOW_SIZE,\n        payload: {\n            windowSize,\n        },\n    };\n}\n\nexport function updateActivePopupType(activePopupType: PopupWindowType): GeneralActionTypes {\n    return {\n        type: Action.UPDATE_ACTIVE_POPUP_TYPE,\n        payload: {\n            activePopupType,\n        }\n    }\n}\n\nexport function updateCustomCursorStyle(customCursorStyle: CustomCursorStyle): GeneralActionTypes {\n    return {\n        type: Action.UPDATE_CUSTOM_CURSOR_STYLE,\n        payload: {\n            customCursorStyle,\n        }\n    }\n}\n\nexport function updateActiveContext(activeContext: ContextType): GeneralActionTypes {\n    return {\n        type: Action.UPDATE_CONTEXT,\n        payload: {\n            activeContext,\n        },\n    };\n}","import {PrimaryEditorRenderEngine} from \"../logic/render/PrimaryEditorRenderEngine\";\nimport {BaseRenderEngine} from \"../logic/render/BaseRenderEngine\";\nimport {IRect} from \"../interfaces/IRect\";\nimport {IPoint} from \"../interfaces/IPoint\";\n\nexport class EditorModel {\n    public static canvas: HTMLCanvasElement;\n    public static mousePositionIndicator: HTMLDivElement;\n    public static cursor: HTMLDivElement;\n    public static primaryRenderingEngine: PrimaryEditorRenderEngine;\n    public static supportRenderingEngine: BaseRenderEngine;\n    public static image: HTMLImageElement;\n    public static imageRectOnCanvas: IRect;\n    public static imageScale: number; // Image / Canvas\n    public static mousePositionOnCanvas: IPoint;\n    public static isLoading: boolean = false;\n}","export class UnitUtil {\n\n    public static deg2rad(angleDeg:number) {\n        return(angleDeg * Math.PI/180);\n    }\n\n    public static rad2deg(angleRad:number) {\n        return(angleRad * 180/Math.PI);\n    }\n}","export enum CustomCursorStyle {\n    DEFAULT = \"DEFAULT\",\n    MOVE = \"MOVE\",\n    RESIZE = \"RESIZE\",\n    ADD = \"ADD\",\n    CANCEL = \"CANCEL\",\n    CLOSE = \"CLOSE\"\n}","import { IPoint } from \"../interfaces/IPoint\";\nimport { IRect } from \"../interfaces/IRect\";\nimport { UnitUtil } from \"./UnitUtil\";\n\nexport class DrawUtil {\n  public static clearCanvas(canvas: HTMLCanvasElement): void {\n    let ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n  }\n\n  public static drawLine(\n    canvas: HTMLCanvasElement,\n    startPoint: IPoint,\n    endPoint: IPoint,\n    color: string = \"#111111\",\n    thickness: number = 1\n  ): void {\n    let ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = thickness;\n    ctx.lineCap = \"round\";\n    ctx.beginPath();\n    ctx.moveTo(startPoint.x, startPoint.y);\n    ctx.lineTo(endPoint.x + 1, endPoint.y + 1);\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  public static drawRect(\n    canvas: HTMLCanvasElement,\n    rect: IRect,\n    color: string = \"#fff\",\n    thickness: number = 1\n  ): void {\n    let ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = thickness;\n    ctx.beginPath();\n    ctx.rect(rect.x, rect.y, rect.width, rect.height);\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  public static drawRectWithFill(\n    canvas: HTMLCanvasElement,\n    rect: IRect,\n    color: string = \"#ADCC53\"\n  ): void {\n    let ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\n    ctx.save();\n    ctx.fillStyle = color;\n    ctx.beginPath();\n    ctx.rect(rect.x, rect.y, rect.width, rect.height);\n    ctx.fill();\n    ctx.restore();\n  }\n\n  public static shadeEverythingButRect(\n    canvas: HTMLCanvasElement,\n    rect: IRect,\n    color: string = \"rgba(0, 0, 0, 0.7)\"\n  ): void {\n    let ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\n    ctx.save();\n    ctx.fillStyle = color;\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    ctx.globalCompositeOperation = \"destination-out\";\n    ctx.fillRect(rect.x, rect.y, rect.width, rect.height);\n    ctx.restore();\n  }\n\n  public static drawCircleWithFill(\n    canvas: HTMLCanvasElement,\n    anchorPoint: IPoint,\n    radius: number,\n    color: string = \"#ffffff\"\n  ): void {\n    const ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\n    ctx.save();\n    const startAngleRad = UnitUtil.deg2rad(0);\n    const endAngleRad = UnitUtil.deg2rad(360);\n    ctx.fillStyle = color;\n    ctx.beginPath();\n    ctx.arc(anchorPoint.x, anchorPoint.y, radius, startAngleRad, endAngleRad, false);\n    ctx.fill();\n    ctx.restore();\n  }\n\n  public static drawCircle(\n    canvas: HTMLCanvasElement,\n    anchorPoint: IPoint,\n    radius: number,\n    startAngleDeg: number,\n    endAngleDeg: number,\n    thickness: number = 20,\n    color: string = \"#ffffff\"\n  ): void {\n    let ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\n    let startAngleRad = UnitUtil.deg2rad(startAngleDeg);\n    let endAngleRad = UnitUtil.deg2rad(endAngleDeg);\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = thickness;\n    ctx.beginPath();\n    ctx.arc(anchorPoint.x, anchorPoint.y, radius, startAngleRad, endAngleRad, false);\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  public static drawPolygon(\n    canvas: HTMLCanvasElement,\n    anchors: IPoint[],\n    color: string = \"#fff\",\n    thickness: number = 1\n  ): void {\n    let ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = thickness;\n    ctx.beginPath();\n    ctx.moveTo(anchors[0].x, anchors[0].y);\n    for (let i = 1; i < anchors.length; i++) {\n      ctx.lineTo(anchors[i].x, anchors[i].y);\n    }\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  public static drawPolygonWithFill(\n    canvas: HTMLCanvasElement,\n    anchors: IPoint[],\n    color: string = \"#fff\"\n  ): void {\n    let ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\n    ctx.save();\n    ctx.fillStyle = color;\n    ctx.beginPath();\n    ctx.moveTo(anchors[0].x, anchors[0].y);\n    for (let i = 1; i < anchors.length; i++) {\n      ctx.lineTo(anchors[i].x, anchors[i].y);\n    }\n    ctx.closePath();\n    ctx.fill();\n    ctx.restore();\n  }\n\n  public static drawText(\n    canvas: HTMLCanvasElement,\n    text: string,\n    textSize: number,\n    anchorPoint: IPoint,\n    color: string = \"#ffffff\",\n    bold: boolean = false,\n    align: string = \"center\"\n  ): void {\n    let ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\n    ctx.save();\n    ctx.fillStyle = color;\n    ctx.textAlign = align as CanvasTextAlign;\n    ctx.textBaseline = \"middle\";\n    ctx.font = (bold ? \"bold \" : \"\") + textSize + \"px Arial\";\n    ctx.fillText(text, anchorPoint.x, anchorPoint.y);\n    ctx.restore();\n  }\n\n  public static getRandomRGBColor(): string {\n    return (\n      \"rgb(\" +\n      Math.round(Math.random() * 255) +\n      \",\" +\n      Math.round(Math.random() * 255) +\n      \",\" +\n      Math.round(Math.random() * 255) +\n      \")\"\n    );\n  }\n\n  public static hexToRGB(hex: string, alpha: number): string {\n    const r = parseInt(hex.slice(1, 3), 16);\n    const g = parseInt(hex.slice(3, 5), 16);\n    const b = parseInt(hex.slice(5, 7), 16);\n\n    if (alpha) {\n      return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\n    } else {\n      return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\n    }\n  }\n}\n","import {IPoint} from \"../interfaces/IPoint\";\n\nexport class PointUtil {\n    public static equals(p1: IPoint, p2: IPoint): boolean {\n        return p1.x === p2.x && p1.y === p2.y;\n    }\n\n    public static add(p1: IPoint, p2: IPoint): IPoint {\n        return {\n            x: p1.x + p2.x,\n            y: p1.y + p2.y\n        }\n    }\n\n    public static subtract(p1: IPoint, p2: IPoint): IPoint {\n        return {\n            x: p1.x - p2.x,\n            y: p1.y - p2.y\n        }\n    }\n\n    public static multiply(p1: IPoint, factor: number) {\n        return {\n            x: p1.x * factor,\n            y: p1.y * factor\n        }\n    }\n\n    public static getEuclidianDistance(p1: IPoint, p2: IPoint): number {\n        return Math.sqrt(Math.pow((p1.x - p2.x), 2) + Math.pow((p1.y - p2.y), 2));\n    }\n}","import {ISize} from \"../interfaces/ISize\";\nimport {Settings} from \"./Settings\";\n\nexport class RenderEngineConfig {\n    public readonly lineThickness: number = 2;\n    public readonly lineActiveColor: string = Settings.PRIMARY_COLOR;\n    public readonly lineInactiveColor: string = \"#fff\";\n    public readonly anchorSize: ISize = {\n        width: Settings.RESIZE_HANDLE_DIMENSION_PX,\n        height: Settings.RESIZE_HANDLE_DIMENSION_PX\n    };\n    public readonly anchorHoverSize: ISize = {\n        width: Settings.RESIZE_HANDLE_HOVER_DIMENSION_PX,\n        height: Settings.RESIZE_HANDLE_HOVER_DIMENSION_PX\n    };\n    public readonly suggestedAnchorDetectionSize: ISize = {\n        width: 100,\n        height: 100\n    };\n    public readonly activeAnchorColor: string = Settings.SECONDARY_COLOR;\n    public readonly inactiveAnchorColor: string = Settings.DARK_THEME_SECOND_COLOR;\n}","import {store} from \"../..\";\nimport {ImageData, LabelPoint, LabelPolygon, LabelRect} from \"../editor/types\";\nimport _ from \"lodash\";\n\nexport class EditorSelector {\n    public static getProjectName(): string {\n        return store.getState().editor.projectName;\n    }\n\n    public static getLabelNames(): string[] {\n        return store.getState().editor.labelNames;\n    }\n\n    public static getActiveLabelNameIndex(): number {\n        return store.getState().editor.activeLabelNameIndex;\n    }\n\n    public static getImagesData(): ImageData[] {\n        return store.getState().editor.imagesData;\n    }\n\n    public static getActiveImageIndex(): number {\n        return store.getState().editor.activeImageIndex;\n    }\n\n    public static getActiveImageData(): ImageData | null {\n        const activeImageIndex: number | null = EditorSelector.getActiveImageIndex();\n\n        if (activeImageIndex === null)\n            return null;\n\n        const imagesData: ImageData[] = EditorSelector.getImagesData();\n        return imagesData[activeImageIndex];\n    }\n\n    public static getActiveLabelId(): string | null {\n        return store.getState().editor.activeLabelId;\n    }\n\n    public static getHighlightedLabelId(): string | null {\n        return store.getState().editor.highlightedLabelId;\n    }\n\n    public static getActiveRectLabel(): LabelRect | null {\n        const activeLabelId: string | null = EditorSelector.getActiveLabelId();\n\n        if (activeLabelId === null)\n            return null;\n\n        return _.find(EditorSelector.getActiveImageData().labelRects, {id: activeLabelId});\n    }\n\n    public static getActivePointLabel(): LabelPoint | null {\n        const activeLabelId: string | null = EditorSelector.getActiveLabelId();\n\n        if (activeLabelId === null)\n            return null;\n\n        return _.find(EditorSelector.getActiveImageData().labelPoints, {id: activeLabelId});\n    }\n\n    public static getActivePolygonLabel(): LabelPolygon | null {\n        const activeLabelId: string | null = EditorSelector.getActiveLabelId();\n\n        if (activeLabelId === null)\n            return null;\n\n        return _.find(EditorSelector.getActiveImageData().labelPolygons, {id: activeLabelId});\n    }\n}","export enum EventType {\n    MOUSE_UP = \"mouseup\",\n    MOUSE_DOWN = \"mousedown\",\n    MOUSE_MOVE = \"mousemove\",\n    KEY_DOWN = \"keydown\",\n    KEY_UP = \"keyup\"\n}","import {EventType} from \"../data/enums/EventType\";\n\nexport class MouseEventUtil {\n    public static getEventType(event: Event): EventType | null {\n        if (!event) return null;\n\n        switch (event.type) {\n            case EventType.MOUSE_DOWN:\n                return EventType.MOUSE_DOWN;\n            case EventType.MOUSE_UP:\n                return EventType.MOUSE_UP;\n            case EventType.MOUSE_MOVE:\n                return EventType.MOUSE_MOVE;\n            default:\n                return null;\n        }\n    }\n}","import {EditorData} from \"../../data/EditorData\";\nimport {MouseEventUtil} from \"../../utils/MouseEventUtil\";\nimport {EventType} from \"../../data/enums/EventType\";\nimport {LabelType} from \"../../data/enums/LabelType\";\n\nexport abstract class BaseRenderEngine {\n    protected readonly canvas: HTMLCanvasElement;\n    public labelType: LabelType;\n\n    protected constructor(canvas: HTMLCanvasElement) {\n        this.canvas = canvas;\n    }\n\n    public update(data: EditorData): void {\n        if (!!data.event) {\n            switch (MouseEventUtil.getEventType(data.event)) {\n                case EventType.MOUSE_MOVE:\n                    this.mouseMoveHandler(data);\n                    break;\n                case EventType.MOUSE_UP:\n                    this.mouseUpHandler(data);\n                    break;\n                case EventType.MOUSE_DOWN:\n                    this.mouseDownHandler(data);\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n\n    protected abstract mouseDownHandler(data: EditorData): void;\n    protected abstract mouseMoveHandler(data: EditorData): void;\n    protected abstract mouseUpHandler(data: EditorData): void;\n\n    abstract render(data: EditorData): void;\n\n    abstract isInProgress(): boolean;\n}","import {EditorData} from \"../data/EditorData\";\nimport {RectUtil} from \"./RectUtil\";\nimport {store} from \"../index\";\nimport {CustomCursorStyle} from \"../data/enums/CustomCursorStyle\";\nimport {updateCustomCursorStyle} from \"../store/general/actionCreators\";\nimport {IPoint} from \"../interfaces/IPoint\";\nimport {PointUtil} from \"./PointUtil\";\nimport {IRect} from \"../interfaces/IRect\";\n\nexport class RenderEngineUtil {\n\n    public static isMouseOverImage(data: EditorData): boolean {\n        return RectUtil.isPointInside(data.activeImageRectOnCanvas, data.mousePositionOnCanvas);\n    }\n\n    public static isMouseOverCanvas(data: EditorData): boolean {\n        return RectUtil.isPointInside({x: 0, y: 0, ...data.canvasSize}, data.mousePositionOnCanvas);\n    }\n\n    public static transferPolygonFromImageToCanvas(polygon: IPoint[], data: EditorData): IPoint[] {\n        return polygon.map((point: IPoint) => RenderEngineUtil.transferPointFromImageToCanvas(point, data));\n    }\n\n    public static transferPointFromImageToCanvas(point: IPoint, data: EditorData): IPoint {\n        return PointUtil.add(PointUtil.multiply(point, 1/data.activeImageScale), data.activeImageRectOnCanvas);\n    }\n\n    public static transferPolygonFromCanvasToImage(polygon: IPoint[], data: EditorData): IPoint[] {\n        return polygon.map((point: IPoint) => RenderEngineUtil.transferPointFromCanvasToImage(point, data));\n    }\n\n    public static transferPointFromCanvasToImage(point: IPoint, data: EditorData): IPoint {\n        return PointUtil.multiply(PointUtil.subtract(point, data.activeImageRectOnCanvas), data.activeImageScale);\n    }\n\n    public static transferRectFromCanvasToImage(rect: IRect, data: EditorData): IRect {\n        return RectUtil.translate(RectUtil.scaleRect(rect, 1/data.activeImageScale), data.activeImageRectOnCanvas);\n    }\n\n    public static wrapDefaultCursorStyleInCancel(data: EditorData) {\n        if (RectUtil.isPointInside(data.activeImageRectOnCanvas, data.mousePositionOnCanvas)) {\n            store.dispatch(updateCustomCursorStyle(CustomCursorStyle.DEFAULT));\n        } else {\n            store.dispatch(updateCustomCursorStyle(CustomCursorStyle.CANCEL));\n        }\n    }\n\n    public static setValueBetweenPixels(value: number): number {\n        return Math.floor(value) + 0.5;\n    }\n\n    public static setPointBetweenPixels(point: IPoint): IPoint {\n        return {\n            x: RenderEngineUtil.setValueBetweenPixels(point.x),\n            y: RenderEngineUtil.setValueBetweenPixels(point.y)\n        }\n    }\n\n    public static setRectBetweenPixels(rect: IRect): IRect {\n        const topLeft: IPoint = {\n            x: rect.x,\n            y: rect.y\n        };\n        const bottomRight: IPoint = {\n            x: rect.x + rect.width,\n            y: rect.y + rect.height\n        };\n        const topLeftBetweenPixels = RenderEngineUtil.setPointBetweenPixels(topLeft);\n        const bottomRightBetweenPixels = RenderEngineUtil.setPointBetweenPixels(bottomRight);\n        return {\n            x: topLeftBetweenPixels.x,\n            y: topLeftBetweenPixels.y,\n            width: bottomRightBetweenPixels.x - topLeftBetweenPixels.x,\n            height: bottomRightBetweenPixels.y - topLeftBetweenPixels.y\n        }\n    }\n}","import { IPoint } from \"../../interfaces/IPoint\";\nimport { IRect } from \"../../interfaces/IRect\";\nimport { RectUtil } from \"../../utils/RectUtil\";\nimport { DrawUtil } from \"../../utils/DrawUtil\";\nimport { store } from \"../..\";\nimport { ImageData, LabelRect } from \"../../store/editor/types\";\nimport uuidv1 from \"uuid/v1\";\nimport {\n  updateActiveLabelId,\n  updateFirstLabelCreatedFlag,\n  updateHighlightedLabelId,\n  updateImageDataById,\n} from \"../../store/editor/actionCreators\";\nimport { PointUtil } from \"../../utils/PointUtil\";\nimport { RectAnchor } from \"../../data/RectAnchor\";\nimport { RenderEngineConfig } from \"../../settings/RenderEngineConfig\";\nimport { updateCustomCursorStyle } from \"../../store/general/actionCreators\";\nimport { CustomCursorStyle } from \"../../data/enums/CustomCursorStyle\";\nimport { EditorSelector } from \"../../store/selectors/EditorSelector\";\nimport { EditorData } from \"../../data/EditorData\";\nimport { BaseRenderEngine } from \"./BaseRenderEngine\";\nimport { RenderEngineUtil } from \"../../utils/RenderEngineUtil\";\nimport { LabelType } from \"../../data/enums/LabelType\";\n\nexport class RectRenderEngine extends BaseRenderEngine {\n  private config: RenderEngineConfig = new RenderEngineConfig();\n\n  // =================================================================================================================\n  // STATE\n  // =================================================================================================================\n\n  private startCreateRectPoint: IPoint;\n  private startResizeRectAnchor: RectAnchor;\n\n  public constructor(canvas: HTMLCanvasElement) {\n    super(canvas);\n    this.labelType = LabelType.RECTANGLE;\n  }\n\n  // =================================================================================================================\n  // EVENT HANDLERS\n  // =================================================================================================================\n\n  public mouseDownHandler = (data: EditorData) => {\n    const isMouseOverImage: boolean = RenderEngineUtil.isMouseOverImage(data);\n    const isMouseOverCanvas: boolean = RenderEngineUtil.isMouseOverCanvas(data);\n    if (isMouseOverCanvas) {\n      const rectUnderMouse: LabelRect = this.getRectUnderMouse(\n        data.activeImageScale,\n        data.activeImageRectOnCanvas,\n        data.mousePositionOnCanvas\n      );\n      if (!!rectUnderMouse) {\n        const rect: IRect = this.calculateRectRelativeToActiveImage(\n          rectUnderMouse.rect,\n          data.activeImageScale\n        );\n        const anchorUnderMouse: RectAnchor = this.getAnchorUnderMouseByRect(\n          rect,\n          data.mousePositionOnCanvas,\n          data.activeImageRectOnCanvas\n        );\n        if (!!anchorUnderMouse) {\n          store.dispatch(updateActiveLabelId(rectUnderMouse.id));\n          this.startRectResize(anchorUnderMouse);\n        } else {\n          if (!!EditorSelector.getHighlightedLabelId())\n            store.dispatch(updateActiveLabelId(EditorSelector.getHighlightedLabelId()));\n          else this.startRectCreation(data.mousePositionOnCanvas);\n        }\n      } else if (isMouseOverImage) {\n        this.startRectCreation(data.mousePositionOnCanvas);\n      }\n    }\n  };\n\n  public mouseUpHandler = (data: EditorData) => {\n    if (!!data.activeImageRectOnCanvas) {\n      const mousePositionSnapped: IPoint = RectUtil.snapPointToRect(\n        data.mousePositionOnCanvas,\n        data.activeImageRectOnCanvas\n      );\n\n      if (\n        !!this.startCreateRectPoint &&\n        !PointUtil.equals(this.startCreateRectPoint, mousePositionSnapped)\n      ) {\n        const minX: number = Math.min(this.startCreateRectPoint.x, mousePositionSnapped.x);\n        const minY: number = Math.min(this.startCreateRectPoint.y, mousePositionSnapped.y);\n        const maxX: number = Math.max(this.startCreateRectPoint.x, mousePositionSnapped.x);\n        const maxY: number = Math.max(this.startCreateRectPoint.y, mousePositionSnapped.y);\n\n        const rect: IRect = {\n          x: (minX - data.activeImageRectOnCanvas.x) * data.activeImageScale,\n          y: (minY - data.activeImageRectOnCanvas.y) * data.activeImageScale,\n          width: (maxX - minX) * data.activeImageScale,\n          height: (maxY - minY) * data.activeImageScale,\n        };\n        this.addRectLabel(rect);\n      }\n\n      if (!!this.startResizeRectAnchor) {\n        const activeLabelRect: LabelRect = EditorSelector.getActiveRectLabel();\n        const rect: IRect = this.calculateRectRelativeToActiveImage(\n          activeLabelRect.rect,\n          data.activeImageScale\n        );\n        const startAnchorPosition: IPoint = PointUtil.add(\n          this.startResizeRectAnchor.position,\n          data.activeImageRectOnCanvas\n        );\n        const delta: IPoint = PointUtil.subtract(mousePositionSnapped, startAnchorPosition);\n        const resizeRect: IRect = RectUtil.resizeRect(rect, this.startResizeRectAnchor.type, delta);\n        const scaledRect: IRect = RectUtil.scaleRect(resizeRect, data.activeImageScale);\n\n        const imageData = EditorSelector.getActiveImageData();\n        imageData.labelRects = imageData.labelRects.map((labelRect: LabelRect) => {\n          if (labelRect.id === activeLabelRect.id) {\n            return {\n              ...labelRect,\n              rect: scaledRect,\n            };\n          }\n          return labelRect;\n        });\n        store.dispatch(updateImageDataById(imageData.id, imageData));\n      }\n    }\n    this.endRectTransformation();\n  };\n\n  public mouseMoveHandler = (data: EditorData) => {\n    if (!!data.activeImageRectOnCanvas && !!data.mousePositionOnCanvas) {\n      const isOverImage: boolean = RenderEngineUtil.isMouseOverImage(data);\n      if (isOverImage && !this.startResizeRectAnchor) {\n        const labelRect: LabelRect = this.getRectUnderMouse(\n          data.activeImageScale,\n          data.activeImageRectOnCanvas,\n          data.mousePositionOnCanvas\n        );\n        if (!!labelRect) {\n          if (EditorSelector.getHighlightedLabelId() !== labelRect.id) {\n            store.dispatch(updateHighlightedLabelId(labelRect.id));\n          }\n        } else {\n          if (EditorSelector.getHighlightedLabelId() !== null) {\n            store.dispatch(updateHighlightedLabelId(null));\n          }\n        }\n      }\n    }\n  };\n\n  // =================================================================================================================\n  // RENDERING\n  // =================================================================================================================\n\n  public render(data: EditorData) {\n    const activeLabelId: string = EditorSelector.getActiveLabelId();\n    const imageData: ImageData = EditorSelector.getActiveImageData();\n\n    if (imageData) {\n      imageData.labelRects.forEach((labelRect: LabelRect) => {\n        labelRect.id === activeLabelId\n          ? this.drawActiveRect(\n              labelRect,\n              data.mousePositionOnCanvas,\n              data.activeImageRectOnCanvas,\n              data.activeImageScale\n            )\n          : this.drawInactiveRect(labelRect, data);\n      });\n      this.drawCurrentlyCreatedRect(data.mousePositionOnCanvas, data.activeImageRectOnCanvas);\n      this.updateCursorStyle(data);\n    }\n  }\n\n  private drawCurrentlyCreatedRect(mousePosition: IPoint, imageRect: IRect) {\n    if (!!this.startCreateRectPoint) {\n      const mousePositionSnapped: IPoint = RectUtil.snapPointToRect(mousePosition, imageRect);\n      const activeRect: IRect = {\n        x: this.startCreateRectPoint.x,\n        y: this.startCreateRectPoint.y,\n        width: mousePositionSnapped.x - this.startCreateRectPoint.x,\n        height: mousePositionSnapped.y - this.startCreateRectPoint.y,\n      };\n      const activeRectBetweenPixels = RenderEngineUtil.setRectBetweenPixels(activeRect);\n      DrawUtil.drawRect(\n        this.canvas,\n        activeRectBetweenPixels,\n        this.config.lineActiveColor,\n        this.config.lineThickness\n      );\n    }\n  }\n\n  private drawInactiveRect(labelRect: LabelRect, data: EditorData) {\n    const rectOnImage: IRect = RenderEngineUtil.transferRectFromCanvasToImage(labelRect.rect, data);\n    const highlightedLabelId: string = EditorSelector.getHighlightedLabelId();\n    this.renderRect(rectOnImage, labelRect.id === highlightedLabelId);\n  }\n\n  private drawActiveRect(\n    labelRect: LabelRect,\n    mousePosition: IPoint,\n    imageRect: IRect,\n    scale: number\n  ) {\n    let rect: IRect = this.calculateRectRelativeToActiveImage(labelRect.rect, scale);\n    if (!!this.startResizeRectAnchor) {\n      const startAnchorPosition: IPoint = PointUtil.add(\n        this.startResizeRectAnchor.position,\n        imageRect\n      );\n      const endAnchorPositionSnapped: IPoint = RectUtil.snapPointToRect(mousePosition, imageRect);\n      const delta = PointUtil.subtract(endAnchorPositionSnapped, startAnchorPosition);\n      rect = RectUtil.resizeRect(rect, this.startResizeRectAnchor.type, delta);\n    }\n    const rectOnImage: IRect = RectUtil.translate(rect, imageRect);\n    this.renderRect(rectOnImage, true);\n  }\n\n  private renderRect(rectOnImage: IRect, isActive: boolean) {\n    const rectBetweenPixels = RenderEngineUtil.setRectBetweenPixels(rectOnImage);\n    const lineColor: string = isActive\n      ? this.config.lineActiveColor\n      : this.config.lineInactiveColor;\n    DrawUtil.drawRect(this.canvas, rectBetweenPixels, lineColor, this.config.lineThickness);\n    if (isActive) {\n      const handleCenters: IPoint[] = RectUtil.mapRectToAnchors(rectOnImage).map(\n        (rectAnchor: RectAnchor) => rectAnchor.position\n      );\n      handleCenters.forEach((center: IPoint) => {\n        const handleRect: IRect = RectUtil.getRectWithCenterAndSize(center, this.config.anchorSize);\n        const handleRectBetweenPixels: IRect = RenderEngineUtil.setRectBetweenPixels(handleRect);\n        DrawUtil.drawRectWithFill(\n          this.canvas,\n          handleRectBetweenPixels,\n          this.config.activeAnchorColor\n        );\n      });\n    }\n  }\n\n  private updateCursorStyle(data: EditorData) {\n    if (!!this.canvas && !!data.mousePositionOnCanvas) {\n      const rectAnchorUnderMouse: RectAnchor = this.getAnchorUnderMouse(\n        data.activeImageScale,\n        data.mousePositionOnCanvas,\n        data.activeImageRectOnCanvas\n      );\n      if (!!rectAnchorUnderMouse || !!this.startResizeRectAnchor) {\n        store.dispatch(updateCustomCursorStyle(CustomCursorStyle.MOVE));\n        return;\n      }\n      if (RenderEngineUtil.isMouseOverCanvas(data)) {\n        if (\n          !RectUtil.isPointInside(data.activeImageRectOnCanvas, data.mousePositionOnCanvas) &&\n          !!this.startCreateRectPoint\n        )\n          store.dispatch(updateCustomCursorStyle(CustomCursorStyle.MOVE));\n        else RenderEngineUtil.wrapDefaultCursorStyleInCancel(data);\n        this.canvas.style.cursor = \"none\";\n      } else {\n        this.canvas.style.cursor = \"default\";\n      }\n    }\n  }\n\n  // =================================================================================================================\n  // HELPERS\n  // =================================================================================================================\n\n  public isInProgress(): boolean {\n    return !!this.startCreateRectPoint || !!this.startResizeRectAnchor;\n  }\n\n  private calculateRectRelativeToActiveImage(rect: IRect, scale: number): IRect {\n    return RectUtil.scaleRect(rect, 1 / scale);\n  }\n\n  private addRectLabel = (rect: IRect) => {\n    const activeLabelIndex = EditorSelector.getActiveLabelNameIndex();\n    const imageData: ImageData = EditorSelector.getActiveImageData();\n    const labelRect: LabelRect = {\n      id: uuidv1(),\n      labelIndex: activeLabelIndex,\n      rect,\n    };\n    imageData.labelRects.push(labelRect);\n    store.dispatch(updateImageDataById(imageData.id, imageData));\n    store.dispatch(updateFirstLabelCreatedFlag(true));\n    store.dispatch(updateActiveLabelId(labelRect.id));\n  };\n\n  private getRectUnderMouse(scale: number, imageRect: IRect, mousePosition: IPoint): LabelRect {\n    const activeRectLabel: LabelRect = EditorSelector.getActiveRectLabel();\n    if (\n      !!activeRectLabel &&\n      this.isMouseOverRectEdges(activeRectLabel.rect, scale, imageRect, mousePosition)\n    ) {\n      return activeRectLabel;\n    }\n\n    const labelRects: LabelRect[] = EditorSelector.getActiveImageData().labelRects;\n    for (let i = 0; i < labelRects.length; i++) {\n      if (this.isMouseOverRectEdges(labelRects[i].rect, scale, imageRect, mousePosition)) {\n        return labelRects[i];\n      }\n    }\n    return null;\n  }\n\n  private isMouseOverRectEdges(\n    rect: IRect,\n    scale: number,\n    imageRect: IRect,\n    mousePosition: IPoint\n  ): boolean {\n    const rectOnImage: IRect = RectUtil.translate(\n      this.calculateRectRelativeToActiveImage(rect, scale),\n      imageRect\n    );\n\n    const outerRectDelta: IPoint = {\n      x: this.config.anchorHoverSize.width / 2,\n      y: this.config.anchorHoverSize.height / 2,\n    };\n    const outerRect: IRect = RectUtil.expand(rectOnImage, outerRectDelta);\n\n    const innerRectDelta: IPoint = {\n      x: -this.config.anchorHoverSize.width / 2,\n      y: -this.config.anchorHoverSize.height / 2,\n    };\n    const innerRect: IRect = RectUtil.expand(rectOnImage, innerRectDelta);\n\n    return (\n      RectUtil.isPointInside(outerRect, mousePosition) &&\n      !RectUtil.isPointInside(innerRect, mousePosition)\n    );\n  }\n\n  private getAnchorUnderMouseByRect(\n    rect: IRect,\n    mousePosition: IPoint,\n    imageRect: IRect\n  ): RectAnchor {\n    const rectAnchors: RectAnchor[] = RectUtil.mapRectToAnchors(rect);\n    for (let i = 0; i < rectAnchors.length; i++) {\n      const anchorRect: IRect = RectUtil.translate(\n        RectUtil.getRectWithCenterAndSize(rectAnchors[i].position, this.config.anchorHoverSize),\n        imageRect\n      );\n      if (!!mousePosition && RectUtil.isPointInside(anchorRect, mousePosition)) {\n        return rectAnchors[i];\n      }\n    }\n    return null;\n  }\n\n  private getAnchorUnderMouse(scale: number, mousePosition: IPoint, imageRect: IRect): RectAnchor {\n    const labelRects: LabelRect[] = EditorSelector.getActiveImageData().labelRects;\n    for (let i = 0; i < labelRects.length; i++) {\n      const rect: IRect = this.calculateRectRelativeToActiveImage(labelRects[i].rect, scale);\n      const rectAnchor = this.getAnchorUnderMouseByRect(rect, mousePosition, imageRect);\n      if (!!rectAnchor) return rectAnchor;\n    }\n    return null;\n  }\n\n  private startRectCreation(mousePosition: IPoint) {\n    this.startCreateRectPoint = mousePosition;\n    store.dispatch(updateActiveLabelId(null));\n  }\n\n  private startRectResize(activatedAnchor: RectAnchor) {\n    this.startResizeRectAnchor = activatedAnchor;\n  }\n\n  private endRectTransformation() {\n    this.startCreateRectPoint = null;\n    this.startResizeRectAnchor = null;\n  }\n}\n","import React from \"react\";\nimport {IPoint} from \"../interfaces/IPoint\";\nimport {IRect} from \"../interfaces/IRect\";\nimport {ISize} from \"../interfaces/ISize\";\n\nexport class CanvasUtil {\n    public static getMousePositionOnCanvasFromEvent(event: React.MouseEvent<HTMLCanvasElement, MouseEvent> | MouseEvent, canvas: HTMLCanvasElement): IPoint {\n        if (!!canvas && !!event) {\n            const canvasRect: ClientRect | DOMRect = canvas.getBoundingClientRect();\n            return {\n                x: event.clientX - canvasRect.left,\n                y: event.clientY - canvasRect.top\n            }\n        }\n        return null;\n    }\n\n    public static getClientRect(canvas: HTMLCanvasElement): IRect {\n        if (!!canvas) {\n            const canvasRect: ClientRect | DOMRect = canvas.getBoundingClientRect();\n            return {\n                x: canvasRect.left,\n                y: canvasRect.top,\n                width: canvasRect.width,\n                height: canvasRect.height\n            }\n        }\n        return null;\n    }\n\n    public static getSize(canvas: HTMLCanvasElement): ISize {\n        if (!!canvas) {\n            const canvasRect: ClientRect | DOMRect = canvas.getBoundingClientRect();\n            return {\n                width: canvasRect.width,\n                height: canvasRect.height\n            }\n        }\n        return null;\n    }\n}","import {IRect} from \"../../interfaces/IRect\";\nimport {RenderEngineConfig} from \"../../settings/RenderEngineConfig\";\nimport {IPoint} from \"../../interfaces/IPoint\";\nimport {CanvasUtil} from \"../../utils/CanvasUtil\";\nimport {store} from \"../../index\";\nimport {ImageData, LabelPoint} from \"../../store/editor/types\";\nimport uuidv1 from 'uuid/v1';\nimport {\n    updateActiveLabelId,\n    updateFirstLabelCreatedFlag,\n    updateHighlightedLabelId,\n    updateImageDataById\n} from \"../../store/editor/actionCreators\";\nimport {RectUtil} from \"../../utils/RectUtil\";\nimport {DrawUtil} from \"../../utils/DrawUtil\";\nimport {updateCustomCursorStyle} from \"../../store/general/actionCreators\";\nimport {CustomCursorStyle} from \"../../data/enums/CustomCursorStyle\";\nimport {EditorSelector} from \"../../store/selectors/EditorSelector\";\nimport {EditorData} from \"../../data/EditorData\";\nimport {BaseRenderEngine} from \"./BaseRenderEngine\";\nimport {RenderEngineUtil} from \"../../utils/RenderEngineUtil\";\nimport {LabelType} from \"../../data/enums/LabelType\";\n\nexport class PointRenderEngine extends BaseRenderEngine {\n    private config: RenderEngineConfig = new RenderEngineConfig();\n\n    // =================================================================================================================\n    // STATE\n    // =================================================================================================================\n\n    private transformInProgress: boolean = false;\n\n    public constructor(canvas: HTMLCanvasElement) {\n        super(canvas);\n        this.labelType = LabelType.POINT;\n    }\n\n    // =================================================================================================================\n    // EVENT HANDLERS\n    // =================================================================================================================\n\n    public mouseDownHandler(data: EditorData): void {\n        const isMouseOverImage: boolean = RenderEngineUtil.isMouseOverImage(data);\n        const isMouseOverCanvas: boolean = RenderEngineUtil.isMouseOverCanvas(data);\n\n        if (isMouseOverCanvas) {\n            const labelPoint: LabelPoint = this.getLabelPointUnderMouse(data.mousePositionOnCanvas, data);\n            if (!!labelPoint) {\n                const pointOnCanvas: IPoint = RenderEngineUtil.transferPointFromImageToCanvas(labelPoint.point, data);\n                const pointBetweenPixels = RenderEngineUtil.setPointBetweenPixels(pointOnCanvas);\n                const handleRect: IRect = RectUtil.getRectWithCenterAndSize(pointBetweenPixels, this.config.anchorHoverSize);\n                if (RectUtil.isPointInside(handleRect, data.mousePositionOnCanvas)) {\n                    store.dispatch(updateActiveLabelId(labelPoint.id));\n                    this.transformInProgress = true;\n                    return;\n                } else {\n                    store.dispatch(updateActiveLabelId(null));\n                    const pointOnImage: IPoint = RenderEngineUtil.transferPointFromCanvasToImage(data.mousePositionOnCanvas, data);\n                    this.addPointLabel(pointOnImage);\n                }\n            } else if (isMouseOverImage) {\n                const pointOnImage: IPoint = RenderEngineUtil.transferPointFromCanvasToImage(data.mousePositionOnCanvas, data);\n                this.addPointLabel(pointOnImage);\n            }\n        }\n    }\n\n    public mouseUpHandler(data: EditorData): void {\n        if (this.isInProgress()) {\n            const activeLabelPoint: LabelPoint = EditorSelector.getActivePointLabel();\n            const pointSnapped: IPoint = RectUtil.snapPointToRect(data.mousePositionOnCanvas, data.activeImageRectOnCanvas);\n            const pointOnImage: IPoint = RenderEngineUtil.transferPointFromCanvasToImage(pointSnapped, data);\n            const imageData = EditorSelector.getActiveImageData();\n\n            imageData.labelPoints = imageData.labelPoints.map((labelPoint: LabelPoint) => {\n                if (labelPoint.id === activeLabelPoint.id) {\n                    return {\n                        ...labelPoint,\n                        point: pointOnImage\n                    };\n                }\n                return labelPoint;\n            });\n            store.dispatch(updateImageDataById(imageData.id, imageData));\n        }\n        this.transformInProgress = false;\n    }\n\n    public mouseMoveHandler(data: EditorData): void {\n        const isOverImage: boolean = RenderEngineUtil.isMouseOverImage(data);\n        if (isOverImage) {\n            const labelPoint: LabelPoint = this.getLabelPointUnderMouse(data.mousePositionOnCanvas, data);\n            if (!!labelPoint) {\n                if (EditorSelector.getHighlightedLabelId() !== labelPoint.id) {\n                    store.dispatch(updateHighlightedLabelId(labelPoint.id))\n                }\n            } else {\n                if (EditorSelector.getHighlightedLabelId() !== null) {\n                    store.dispatch(updateHighlightedLabelId(null))\n                }\n            }\n        }\n    }\n\n    // =================================================================================================================\n    // RENDERING\n    // =================================================================================================================\n\n    public render(data: EditorData): void {\n        const activeLabelId: string = EditorSelector.getActiveLabelId();\n        const highlightedLabelId: string = EditorSelector.getHighlightedLabelId();\n        const imageData: ImageData = EditorSelector.getActiveImageData();\n        if (imageData) {\n            imageData.labelPoints.forEach((labelPoint: LabelPoint) => {\n                if (labelPoint.id === activeLabelId) {\n                    if (this.isInProgress()) {\n                        const pointSnapped: IPoint = RectUtil.snapPointToRect(data.mousePositionOnCanvas, data.activeImageRectOnCanvas);\n                        const pointBetweenPixels: IPoint = RenderEngineUtil.setPointBetweenPixels(pointSnapped);\n                        const handleRect: IRect = RectUtil.getRectWithCenterAndSize(pointBetweenPixels, this.config.anchorSize);\n                        DrawUtil.drawRectWithFill(this.canvas, handleRect, this.config.activeAnchorColor);\n                    } else {\n                        this.renderPoint(labelPoint, true, data);\n                    }\n                } else {\n                    this.renderPoint(labelPoint, labelPoint.id === activeLabelId || labelPoint.id === highlightedLabelId, data);\n                }\n            });\n        }\n        this.updateCursorStyle(data);\n    }\n\n    private renderPoint(labelPoint: LabelPoint, isActive: boolean, data: EditorData) {\n        const pointOnImage: IPoint = RenderEngineUtil.transferPointFromImageToCanvas(labelPoint.point, data);\n        const pointBetweenPixels = RenderEngineUtil.setPointBetweenPixels(pointOnImage);\n        const handleRect: IRect = RectUtil.getRectWithCenterAndSize(pointBetweenPixels, this.config.anchorSize);\n        const handleColor: string = isActive ? this.config.activeAnchorColor : this.config.inactiveAnchorColor;\n        DrawUtil.drawRectWithFill(this.canvas, handleRect, handleColor);\n    }\n\n    private updateCursorStyle(data: EditorData) {\n        if (!!this.canvas && !!data.mousePositionOnCanvas) {\n            const labelPoint: LabelPoint = this.getLabelPointUnderMouse(data.mousePositionOnCanvas, data);\n            if (!!labelPoint) {\n                const pointOnCanvas: IPoint = RenderEngineUtil.transferPointFromImageToCanvas(labelPoint.point, data);\n                const pointBetweenPixels = RenderEngineUtil.setPointBetweenPixels(pointOnCanvas);\n                const handleRect: IRect = RectUtil.getRectWithCenterAndSize(pointBetweenPixels, this.config.anchorHoverSize);\n                if (RectUtil.isPointInside(handleRect, data.mousePositionOnCanvas)) {\n                    store.dispatch(updateCustomCursorStyle(CustomCursorStyle.MOVE));\n                    return;\n                }\n            } else if (this.isInProgress()) {\n                store.dispatch(updateCustomCursorStyle(CustomCursorStyle.MOVE));\n                return;\n            }\n\n            if (RectUtil.isPointInside({x: 0, y: 0, ...CanvasUtil.getSize(this.canvas)}, data.mousePositionOnCanvas)) {\n                RenderEngineUtil.wrapDefaultCursorStyleInCancel(data);\n                this.canvas.style.cursor = \"none\";\n            } else {\n                this.canvas.style.cursor = \"default\";\n            }\n        }\n    }\n\n    // =================================================================================================================\n    // HELPERS\n    // =================================================================================================================\n\n    public isInProgress(): boolean {\n        return this.transformInProgress;\n    }\n\n    private getLabelPointUnderMouse(mousePosition: IPoint, data: EditorData): LabelPoint {\n        const labelPoints: LabelPoint[] = EditorSelector.getActiveImageData().labelPoints;\n        for (let i = 0; i < labelPoints.length; i++) {\n            const pointOnCanvas: IPoint = RenderEngineUtil.transferPointFromImageToCanvas(labelPoints[i].point, data);\n            const handleRect: IRect = RectUtil.getRectWithCenterAndSize(pointOnCanvas, this.config.anchorHoverSize);\n            if (RectUtil.isPointInside(handleRect, mousePosition)) {\n                return labelPoints[i];\n            }\n        }\n        return null;\n    }\n\n    private addPointLabel = (point: IPoint) => {\n        const activeLabelIndex = EditorSelector.getActiveLabelNameIndex();\n        const imageData: ImageData = EditorSelector.getActiveImageData();\n        const labelPoint: LabelPoint = {\n            id: uuidv1(),\n            labelIndex: activeLabelIndex,\n            point\n        };\n        imageData.labelPoints.push(labelPoint);\n        store.dispatch(updateImageDataById(imageData.id, imageData));\n        store.dispatch(updateFirstLabelCreatedFlag(true));\n        store.dispatch(updateActiveLabelId(labelPoint.id));\n    };\n}","import {ILine} from \"../interfaces/ILine\";\nimport {IPoint} from \"../interfaces/IPoint\";\n\nexport class LineUtil {\n    public static getDistanceFromLine(l: ILine, p: IPoint): number {\n        if (l.start.x !== l.end.x || l.start.y !== l.end.y) {\n            const nom: number = Math.abs((l.end.y - l.start.y) * p.x - (l.end.x - l.start.x) * p.y + l.end.x * l.start.y - l.end.y * l.start.x);\n            const denom: number = Math.sqrt(Math.pow(l.end.y - l.start.y, 2) + Math.pow(l.end.x - l.start.x, 2));\n            return nom / denom;\n        }\n        return null;\n    }\n\n    public static getCenter(l: ILine): IPoint {\n        return {\n            x: (l.start.x + l.end.x) / 2,\n            y: (l.start.y + l.end.y) / 2\n        }\n    }\n}","import {store} from \"../../index\";\nimport {RectUtil} from \"../../utils/RectUtil\";\nimport {updateCustomCursorStyle} from \"../../store/general/actionCreators\";\nimport {CustomCursorStyle} from \"../../data/enums/CustomCursorStyle\";\nimport {EditorData} from \"../../data/EditorData\";\nimport {BaseRenderEngine} from \"./BaseRenderEngine\";\nimport {RenderEngineConfig} from \"../../settings/RenderEngineConfig\";\nimport {IPoint} from \"../../interfaces/IPoint\";\nimport {ILine} from \"../../interfaces/ILine\";\nimport {DrawUtil} from \"../../utils/DrawUtil\";\nimport {IRect} from \"../../interfaces/IRect\";\nimport {ImageData, LabelPolygon} from \"../../store/editor/types\";\nimport {EditorSelector} from \"../../store/selectors/EditorSelector\";\nimport uuidv1 from 'uuid/v1';\nimport {\n    updateActiveLabelId,\n    updateFirstLabelCreatedFlag,\n    updateHighlightedLabelId,\n    updateImageDataById\n} from \"../../store/editor/actionCreators\";\nimport {LineUtil} from \"../../utils/LineUtil\";\nimport {MouseEventUtil} from \"../../utils/MouseEventUtil\";\nimport {EventType} from \"../../data/enums/EventType\";\nimport {RenderEngineUtil} from \"../../utils/RenderEngineUtil\";\nimport {LabelType} from \"../../data/enums/LabelType\";\n\nexport class PolygonRenderEngine extends BaseRenderEngine {\n    private config: RenderEngineConfig = new RenderEngineConfig();\n\n    // =================================================================================================================\n    // STATE\n    // =================================================================================================================\n\n    private activePath: IPoint[] = [];\n    private resizeAnchorIndex: number = null;\n    private suggestedAnchorPositionOnCanvas: IPoint = null;\n    private suggestedAnchorIndexInPolygon: number = null;\n\n    public constructor(canvas: HTMLCanvasElement) {\n        super(canvas);\n        this.labelType = LabelType.POLYGON;\n    }\n\n    // =================================================================================================================\n    // EVENT HANDLERS\n    // =================================================================================================================\n\n    public update(data: EditorData): void {\n        if (!!data.event) {\n            switch (MouseEventUtil.getEventType(data.event)) {\n                case EventType.MOUSE_MOVE:\n                    this.mouseMoveHandler(data);\n                    break;\n                case EventType.MOUSE_UP:\n                    this.mouseUpHandler(data);\n                    break;\n                case EventType.MOUSE_DOWN:\n                    this.mouseDownHandler(data);\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n\n    public mouseDownHandler(data: EditorData): void {\n        const isMouseOverCanvas: boolean = RenderEngineUtil.isMouseOverCanvas(data);\n        if (isMouseOverCanvas) {\n            if (this.isCreationInProgress()) {\n                const isMouseOverStartAnchor: boolean = this.isMouseOverAnchor(data.mousePositionOnCanvas, this.activePath[0]);\n                if (isMouseOverStartAnchor) {\n                    this.addLabelAndFinishCreation(data);\n                } else  {\n                    this.updateActivelyCreatedLabel(data);\n                }\n            } else {\n                const polygonUnderMouse: LabelPolygon = this.getPolygonUnderMouse(data);\n                if (!!polygonUnderMouse) {\n                    const anchorIndex: number = polygonUnderMouse.vertices.reduce(\n                        (indexUnderMouse: number, anchor: IPoint, index: number) => {\n                        if (indexUnderMouse === null) {\n                            const anchorOnCanvas: IPoint = RenderEngineUtil.transferPointFromImageToCanvas(anchor, data);\n                            if (this.isMouseOverAnchor(data.mousePositionOnCanvas, anchorOnCanvas)) {\n                                return index;\n                            }\n                        }\n                        return indexUnderMouse;\n                    }, null);\n\n                    if (anchorIndex !== null) {\n                        this.startExistingLabelResize(data, polygonUnderMouse.id, anchorIndex);\n                    } else {\n                        const isMouseOverNewAnchor: boolean = this.isMouseOverAnchor(data.mousePositionOnCanvas, this.suggestedAnchorPositionOnCanvas);\n                        if (isMouseOverNewAnchor) {\n                            store.dispatch(updateActiveLabelId(polygonUnderMouse.id));\n                            this.addSuggestedAnchorToPolygonLabel(data);\n                        } else {\n                            this.updateActivelyCreatedLabel(data);\n                        }\n                    }\n                } else {\n                    this.updateActivelyCreatedLabel(data);\n                }\n            }\n        }\n    }\n\n    public mouseUpHandler(data: EditorData): void {\n        if (this.isResizeInProgress())\n            this.endExistingLabelResize(data);\n    }\n\n    public mouseMoveHandler(data: EditorData): void {\n        if (!!data.activeImageRectOnCanvas && !!data.mousePositionOnCanvas) {\n            const isOverImage: boolean = RenderEngineUtil.isMouseOverImage(data);\n            if (isOverImage && !this.isCreationInProgress()) {\n                const labelPolygon: LabelPolygon = this.getPolygonUnderMouse(data);\n                if (!!labelPolygon && !this.isResizeInProgress()) {\n                    if (EditorSelector.getHighlightedLabelId() !== labelPolygon.id) {\n                        store.dispatch(updateHighlightedLabelId(labelPolygon.id))\n                    }\n                    const pathOnCanvas: IPoint[] = RenderEngineUtil.transferPolygonFromImageToCanvas(labelPolygon.vertices, data);\n                    const linesOnCanvas: ILine[] = this.mapPointsToLines(pathOnCanvas.concat(pathOnCanvas[0]));\n\n                    for (let j = 0; j < linesOnCanvas.length; j++) {\n                        if (this.isMouseOverLine(data.mousePositionOnCanvas, linesOnCanvas[j])) {\n                            this.suggestedAnchorPositionOnCanvas = LineUtil.getCenter(linesOnCanvas[j]);\n                            this.suggestedAnchorIndexInPolygon = j + 1;\n                            break;\n                        }\n                    }\n                } else {\n                    if (EditorSelector.getHighlightedLabelId() !== null) {\n                        store.dispatch(updateHighlightedLabelId(null));\n                        this.discardSuggestedPoint();\n                    }\n                }\n            }\n        }\n    }\n\n    // =================================================================================================================\n    // RENDERING\n    // =================================================================================================================\n\n    public render(data: EditorData): void {\n        const imageData: ImageData = EditorSelector.getActiveImageData();\n        if (imageData) {\n            this.drawExistingLabels(data);\n            this.drawActivelyCreatedLabel(data);\n            this.drawActivelyResizeLabel(data);\n            this.updateCursorStyle(data);\n            this.drawSuggestedAnchor(data);\n        }\n    }\n\n    private updateCursorStyle(data: EditorData) {\n        if (!!this.canvas && !!data.mousePositionOnCanvas) {\n            const isMouseOverCanvas: boolean = RenderEngineUtil.isMouseOverCanvas(data);\n            if (isMouseOverCanvas) {\n                if (this.isCreationInProgress()) {\n                    const isMouseOverStartAnchor: boolean = this.isMouseOverAnchor(data.mousePositionOnCanvas, this.activePath[0]);\n                    if (isMouseOverStartAnchor && this.activePath.length > 2)\n                        store.dispatch(updateCustomCursorStyle(CustomCursorStyle.CLOSE));\n                    else\n                        store.dispatch(updateCustomCursorStyle(CustomCursorStyle.DEFAULT));\n                } else {\n                    const anchorUnderMouse: IPoint = this.getAnchorUnderMouse(data);\n                    const isMouseOverNewAnchor: boolean = this.isMouseOverAnchor(data.mousePositionOnCanvas, this.suggestedAnchorPositionOnCanvas);\n                    if (!!isMouseOverNewAnchor) {\n                        store.dispatch(updateCustomCursorStyle(CustomCursorStyle.ADD));\n                    } else if (this.isResizeInProgress()) {\n                        store.dispatch(updateCustomCursorStyle(CustomCursorStyle.MOVE));\n                    } else if (!!anchorUnderMouse) {\n                        store.dispatch(updateCustomCursorStyle(CustomCursorStyle.MOVE));\n                    } else {\n                        RenderEngineUtil.wrapDefaultCursorStyleInCancel(data);\n                    }\n                }\n                this.canvas.style.cursor = \"none\";\n            } else {\n                this.canvas.style.cursor = \"default\";\n            }\n        }\n    }\n\n    private drawActivelyCreatedLabel(data: EditorData) {\n        const standardizedPoints: IPoint[] = this.activePath.map((point: IPoint) => RenderEngineUtil.setPointBetweenPixels(point));\n        const path = standardizedPoints.concat(data.mousePositionOnCanvas);\n        const lines: ILine[] = this.mapPointsToLines(path);\n\n        DrawUtil.drawPolygonWithFill(this.canvas, path, DrawUtil.hexToRGB(this.config.lineActiveColor, 0.2));\n        lines.forEach((line: ILine) => {\n            DrawUtil.drawLine(this.canvas, line.start, line.end, this.config.lineActiveColor, this.config.lineThickness);\n        });\n        this.mapPointsToAnchors(standardizedPoints).forEach((handleRect: IRect) => {\n            DrawUtil.drawRectWithFill(this.canvas, handleRect, this.config.activeAnchorColor);\n        })\n    }\n\n    private drawActivelyResizeLabel(data: EditorData) {\n        const activeLabelPolygon: LabelPolygon = EditorSelector.getActivePolygonLabel();\n        if (!!activeLabelPolygon && this.isResizeInProgress()) {\n            const snappedMousePosition: IPoint = RectUtil.snapPointToRect(data.mousePositionOnCanvas, data.activeImageRectOnCanvas);\n            const polygonOnCanvas: IPoint[] = activeLabelPolygon.vertices.map((point: IPoint, index: number) => {\n                return index === this.resizeAnchorIndex ? snappedMousePosition : RenderEngineUtil.transferPointFromImageToCanvas(point, data);\n            });\n            this.drawPolygon(polygonOnCanvas, true);\n        }\n    }\n\n    private drawExistingLabels(data: EditorData) {\n        const activeLabelId: string = EditorSelector.getActiveLabelId();\n        const highlightedLabelId: string = EditorSelector.getHighlightedLabelId();\n        const imageData: ImageData = EditorSelector.getActiveImageData();\n        imageData.labelPolygons.forEach((labelPolygon: LabelPolygon) => {\n            const isActive: boolean = labelPolygon.id === activeLabelId || labelPolygon.id === highlightedLabelId;\n            const pathOnCanvas: IPoint[] = RenderEngineUtil.transferPolygonFromImageToCanvas(labelPolygon.vertices, data);\n            if (!(labelPolygon.id === activeLabelId && this.isResizeInProgress())) {\n                this.drawPolygon(pathOnCanvas, isActive);\n            }\n        });\n    }\n\n    private drawPolygon(polygon: IPoint[], isActive: boolean) {\n        const color: string = isActive ? this.config.lineActiveColor : this.config.lineInactiveColor;\n        const standardizedPoints: IPoint[] = polygon.map((point: IPoint) => RenderEngineUtil.setPointBetweenPixels(point));\n        if (isActive) {\n            DrawUtil.drawPolygonWithFill(this.canvas, standardizedPoints, DrawUtil.hexToRGB(color, 0.2));\n        }\n        DrawUtil.drawPolygon(this.canvas, standardizedPoints, color, this.config.lineThickness);\n        if (isActive) {\n            this.mapPointsToAnchors(standardizedPoints).forEach((handleRect: IRect) => {\n                DrawUtil.drawRectWithFill(this.canvas, handleRect, this.config.activeAnchorColor);\n            })\n        }\n    }\n\n    private drawSuggestedAnchor(data: EditorData) {\n        if (this.suggestedAnchorPositionOnCanvas) {\n            const suggestedAnchorRect: IRect = RectUtil\n                .getRectWithCenterAndSize(this.suggestedAnchorPositionOnCanvas, this.config.suggestedAnchorDetectionSize);\n            const isMouseOverSuggestedAnchor: boolean = RectUtil.isPointInside(suggestedAnchorRect, data.mousePositionOnCanvas);\n\n            if (isMouseOverSuggestedAnchor) {\n                const handleRect = RectUtil.getRectWithCenterAndSize(this.suggestedAnchorPositionOnCanvas, this.config.anchorSize);\n                DrawUtil.drawRectWithFill(this.canvas, handleRect, this.config.lineInactiveColor);\n            }\n        }\n    }\n\n    // =================================================================================================================\n    // CREATION\n    // =================================================================================================================\n\n    private updateActivelyCreatedLabel(data: EditorData) {\n        if (this.isCreationInProgress()) {\n            const mousePositionSnapped: IPoint = RectUtil.snapPointToRect(data.mousePositionOnCanvas, data.activeImageRectOnCanvas);\n            this.activePath.push(mousePositionSnapped);\n        } else {\n            const isMouseOverImage: boolean = RectUtil.isPointInside(data.activeImageRectOnCanvas, data.mousePositionOnCanvas);\n            if (isMouseOverImage) {\n                this.activePath.push(data.mousePositionOnCanvas);\n                store.dispatch(updateActiveLabelId(null));\n            }\n        }\n    }\n\n    public cancelLabelCreation() {\n        this.activePath = [];\n    }\n\n    private finishLabelCreation() {\n        this.activePath = [];\n    }\n\n    public addLabelAndFinishCreation(data: EditorData) {\n        if (this.isCreationInProgress() && this.activePath.length > 2) {\n            const polygonOnImage: IPoint[] = RenderEngineUtil.transferPolygonFromCanvasToImage(this.activePath, data);\n            this.addPolygonLabel(polygonOnImage);\n            this.finishLabelCreation();\n        }\n    }\n\n    private addPolygonLabel(polygon: IPoint[]) {\n        const activeLabelIndex = EditorSelector.getActiveLabelNameIndex();\n        const imageData: ImageData = EditorSelector.getActiveImageData();\n        const labelPolygon: LabelPolygon = {\n            id: uuidv1(),\n            labelIndex: activeLabelIndex,\n            vertices: polygon\n        };\n        imageData.labelPolygons.push(labelPolygon);\n        store.dispatch(updateImageDataById(imageData.id, imageData));\n        store.dispatch(updateFirstLabelCreatedFlag(true));\n        store.dispatch(updateActiveLabelId(labelPolygon.id));\n    };\n\n    // =================================================================================================================\n    // TRANSFER\n    // =================================================================================================================\n\n    private startExistingLabelResize(data: EditorData, labelId: string, anchorIndex: number) {\n        store.dispatch(updateActiveLabelId(labelId));\n        this.resizeAnchorIndex = anchorIndex;\n    }\n\n    private endExistingLabelResize(data: EditorData) {\n        this.applyResizeToPolygonLabel(data);\n        this.resizeAnchorIndex = null;\n    }\n\n    private applyResizeToPolygonLabel(data: EditorData) {\n        const imageData: ImageData = EditorSelector.getActiveImageData();\n        const activeLabel: LabelPolygon = EditorSelector.getActivePolygonLabel();\n        imageData.labelPolygons = imageData.labelPolygons.map((polygon: LabelPolygon) => {\n            if (polygon.id !== activeLabel.id) {\n                return polygon\n            } else {\n                return {\n                    ...polygon,\n                    vertices: polygon.vertices.map((value: IPoint, index: number) => {\n                        if (index !== this.resizeAnchorIndex) {\n                            return value;\n                        } else {\n                            const snappedMousePosition: IPoint =\n                                RectUtil.snapPointToRect(data.mousePositionOnCanvas, data.activeImageRectOnCanvas);\n                            return RenderEngineUtil.transferPointFromCanvasToImage(snappedMousePosition, data);\n                        }\n                    })\n                }\n            }\n        });\n        store.dispatch(updateImageDataById(imageData.id, imageData));\n        store.dispatch(updateActiveLabelId(activeLabel.id));\n    }\n\n    private discardSuggestedPoint(): void {\n        this.suggestedAnchorIndexInPolygon = null;\n        this.suggestedAnchorPositionOnCanvas = null;\n    }\n\n    // =================================================================================================================\n    // UPDATE\n    // =================================================================================================================\n\n    private addSuggestedAnchorToPolygonLabel(data: EditorData) {\n        const imageData: ImageData = EditorSelector.getActiveImageData();\n        const activeLabel: LabelPolygon = EditorSelector.getActivePolygonLabel();\n        const newAnchorPositionOnImage: IPoint =\n            RenderEngineUtil.transferPointFromCanvasToImage(this.suggestedAnchorPositionOnCanvas, data);\n        const insert = (arr, index, newItem) => [...arr.slice(0, index), newItem, ...arr.slice(index)];\n\n        const newImageData: ImageData = {\n            ...imageData,\n            labelPolygons: imageData.labelPolygons.map((polygon: LabelPolygon) => {\n                if (polygon.id !== activeLabel.id) {\n                    return polygon\n                } else {\n                    return {\n                        ...polygon,\n                        vertices: insert(polygon.vertices, this.suggestedAnchorIndexInPolygon, newAnchorPositionOnImage)\n                    }\n                }\n            })\n        };\n\n        store.dispatch(updateImageDataById(newImageData.id, newImageData));\n        this.startExistingLabelResize(data, activeLabel.id, this.suggestedAnchorIndexInPolygon);\n        this.discardSuggestedPoint();\n    }\n\n    // =================================================================================================================\n    // VALIDATORS\n    // =================================================================================================================\n\n    public isInProgress(): boolean {\n        return this.isCreationInProgress() || this.isResizeInProgress();\n    }\n\n    private isCreationInProgress(): boolean {\n        return this.activePath !== null && this.activePath.length !== 0;\n    }\n\n    private isResizeInProgress(): boolean {\n        return this.resizeAnchorIndex !== null;\n    }\n\n    private isMouseOverAnchor(mouse: IPoint, anchor: IPoint): boolean {\n        if (!mouse || !anchor) return null;\n        return RectUtil.isPointInside(RectUtil.getRectWithCenterAndSize(anchor, this.config.anchorSize), mouse);\n    }\n\n    private isMouseOverLine(mouse: IPoint, l: ILine): boolean {\n        const hoverReach: number = this.config.anchorHoverSize.width / 2;\n        const minX: number = Math.min(l.start.x, l.end.x);\n        const maxX: number = Math.max(l.start.x, l.end.x);\n        const minY: number = Math.min(l.start.y, l.end.y);\n        const maxY: number = Math.max(l.start.y, l.end.y);\n\n        return (minX - hoverReach <= mouse.x && maxX + hoverReach >= mouse.x) &&\n            (minY - hoverReach <= mouse.y && maxY + hoverReach >= mouse.y) &&\n            LineUtil.getDistanceFromLine(l, mouse) < hoverReach;\n    }\n\n    // =================================================================================================================\n    // MAPPERS\n    // =================================================================================================================\n\n    private mapPointsToLines(points: IPoint[]): ILine[] {\n        const lines: ILine[] = [];\n        for (let i = 0; i < points.length - 1; i++) {\n            lines.push({start: points[i], end: points[i + 1]})\n        }\n        return lines;\n    }\n\n    private mapPointsToAnchors(points: IPoint[]): IRect[] {\n        return points.map((point: IPoint) => RectUtil.getRectWithCenterAndSize(point, this.config.anchorSize));\n    }\n\n    // =================================================================================================================\n    // GETTERS\n    // =================================================================================================================\n\n    private getPolygonUnderMouse(data: EditorData): LabelPolygon {\n        const labelPolygons: LabelPolygon[] = EditorSelector.getActiveImageData().labelPolygons;\n        for (let i = 0; i < labelPolygons.length; i++) {\n            const pathOnCanvas: IPoint[] = RenderEngineUtil.transferPolygonFromImageToCanvas(labelPolygons[i].vertices, data);\n            const linesOnCanvas: ILine[] = this.mapPointsToLines(pathOnCanvas.concat(pathOnCanvas[0]));\n\n            for (let j = 0; j < linesOnCanvas.length; j++) {\n                if (this.isMouseOverLine(data.mousePositionOnCanvas, linesOnCanvas[j]))\n                    return labelPolygons[i];\n            }\n            for (let j = 0; j < pathOnCanvas.length; j ++) {\n                if (this.isMouseOverAnchor(data.mousePositionOnCanvas, pathOnCanvas[j]))\n                    return labelPolygons[i];\n            }\n        }\n        return null;\n    }\n\n    private getAnchorUnderMouse(data: EditorData): IPoint {\n        const labelPolygons: LabelPolygon[] = EditorSelector.getActiveImageData().labelPolygons;\n        for (let i = 0; i < labelPolygons.length; i++) {\n            const pathOnCanvas: IPoint[] = RenderEngineUtil.transferPolygonFromImageToCanvas(labelPolygons[i].vertices, data);\n            for (let j = 0; j < pathOnCanvas.length; j ++) {\n                if (this.isMouseOverAnchor(data.mousePositionOnCanvas, pathOnCanvas[j]))\n                    return pathOnCanvas[j];\n            }\n        }\n        return null;\n    }\n}","import {IRect} from \"../../interfaces/IRect\";\nimport {BaseRenderEngine} from \"./BaseRenderEngine\";\nimport {EditorData} from \"../../data/EditorData\";\n\nexport class PrimaryEditorRenderEngine extends BaseRenderEngine {\n\n    public constructor(canvas: HTMLCanvasElement) {\n        super(canvas);\n    }\n\n    // =================================================================================================================\n    // EVENT HANDLERS\n    // =================================================================================================================\n\n    public mouseMoveHandler(data: EditorData): void {}\n    public mouseDownHandler(data: EditorData): void {}\n    public mouseUpHandler(data: EditorData): void {}\n\n    // =================================================================================================================\n    // RENDERING\n    // =================================================================================================================\n\n    public render(data: EditorData): void {}\n\n    public drawImage(image: HTMLImageElement, imageRect: IRect) {\n        if (!!image && !!this.canvas) {\n            const ctx = this.canvas.getContext(\"2d\");\n            ctx.drawImage(image, imageRect.x, imageRect.y, imageRect.width, imageRect.height);\n        }\n    }\n\n    isInProgress(): boolean {\n        return false;\n    }\n}","import {LabelType} from \"../../data/enums/LabelType\";\nimport {EditorModel} from \"../../staticModels/EditorModel\";\nimport {RectRenderEngine} from \"../render/RectRenderEngine\";\nimport {PointRenderEngine} from \"../render/PointRenderEngine\";\nimport {PolygonRenderEngine} from \"../render/PolygonRenderEngine\";\nimport {IRect} from \"../../interfaces/IRect\";\nimport {Settings} from \"../../settings/Settings\";\nimport {RectUtil} from \"../../utils/RectUtil\";\nimport {EditorData} from \"../../data/EditorData\";\nimport {CanvasUtil} from \"../../utils/CanvasUtil\";\nimport {ISize} from \"../../interfaces/ISize\";\nimport React from \"react\";\nimport {IPoint} from \"../../interfaces/IPoint\";\nimport {DrawUtil} from \"../../utils/DrawUtil\";\nimport {PrimaryEditorRenderEngine} from \"../render/PrimaryEditorRenderEngine\";\nimport {ContextManager} from \"../context/ContextManager\";\n\nexport class EditorActions {\n\n    // =================================================================================================================\n    // RENDER ENGINES\n    // =================================================================================================================\n\n    public static mountSupportRenderingEngine(activeLabelType: LabelType) {\n        switch (activeLabelType) {\n            case LabelType.RECTANGLE:\n                EditorModel.supportRenderingEngine = new RectRenderEngine(EditorModel.canvas);\n                break;\n            case LabelType.POINT:\n                EditorModel.supportRenderingEngine = new PointRenderEngine(EditorModel.canvas);\n                break;\n            case LabelType.POLYGON:\n                EditorModel.supportRenderingEngine = new PolygonRenderEngine(EditorModel.canvas);\n                break;\n            default:\n                EditorModel.supportRenderingEngine = null;\n                break;\n        }\n    };\n\n    public static swapSupportRenderingEngine(activeLabelType: LabelType) {\n        EditorActions.mountSupportRenderingEngine(activeLabelType);\n    };\n\n    public static mountRenderEngines(activeLabelType: LabelType) {\n        EditorModel.primaryRenderingEngine = new PrimaryEditorRenderEngine(EditorModel.canvas);\n        EditorActions.mountSupportRenderingEngine(activeLabelType);\n    }\n\n    // =================================================================================================================\n    // RENDER\n    // =================================================================================================================\n\n    public static fullRender() {\n        DrawUtil.clearCanvas(EditorModel.canvas);\n        EditorModel.primaryRenderingEngine.drawImage(EditorModel.image, EditorModel.imageRectOnCanvas);\n        EditorModel.primaryRenderingEngine.render(EditorActions.getEditorData());\n        EditorModel.supportRenderingEngine && EditorModel.supportRenderingEngine.render(EditorActions.getEditorData());\n    }\n\n    // =================================================================================================================\n    // SETTERS\n    // =================================================================================================================\n\n    public static setLoadingStatus(status: boolean) {\n        EditorModel.isLoading = status;\n    }\n\n    public static setActiveImage(image: HTMLImageElement) {\n        EditorModel.image = image;\n    }\n\n    // =================================================================================================================\n    // GETTERS\n    // =================================================================================================================\n\n    public static getEditorData(event?: Event): EditorData {\n        return {\n            mousePositionOnCanvas: EditorModel.mousePositionOnCanvas,\n            canvasSize: CanvasUtil.getSize(EditorModel.canvas),\n            activeImageScale: EditorModel.imageScale,\n            activeImageRectOnCanvas: EditorModel.imageRectOnCanvas,\n            activeKeyCombo: ContextManager.getActiveCombo(),\n            event: event\n        }\n    }\n\n    // =================================================================================================================\n    // CALCULATIONS\n    // =================================================================================================================\n\n    public static calculateImageRect(image: HTMLImageElement): IRect | null {\n        if (!!image) {\n            const canvasPaddingWidth: number = Settings.CANVAS_PADDING_WIDTH_PX;\n            const imageRect: IRect = { x: 0, y: 0, width: image.width, height: image.height};\n            const canvasRect: IRect = {\n                x: canvasPaddingWidth,\n                y: canvasPaddingWidth,\n                width: EditorModel.canvas.width - 2 * canvasPaddingWidth,\n                height: EditorModel.canvas.height - 2 * canvasPaddingWidth\n            };\n            return RectUtil.fitInsideRectWithRatio(canvasRect, RectUtil.getRatio(imageRect));\n        }\n        return null;\n    };\n\n    public static calculateImageScale(image: HTMLImageElement): number | null {\n        if (!image || !EditorModel.imageRectOnCanvas)\n            return null;\n\n        return image.width / EditorModel.imageRectOnCanvas.width;\n    }\n\n    // =================================================================================================================\n    // HELPERS\n    // =================================================================================================================\n\n    public static calculateAllCharacteristics() {\n        EditorModel.imageRectOnCanvas = EditorActions.calculateImageRect(EditorModel.image);\n        EditorModel.imageScale = EditorActions.calculateImageScale(EditorModel.image);\n    }\n\n    public static resizeCanvas = (newCanvasSize: ISize) => {\n        if (!!newCanvasSize && !!EditorModel.canvas) {\n            EditorModel.canvas.width = newCanvasSize.width;\n            EditorModel.canvas.height = newCanvasSize.height;\n        }\n    };\n\n    public static updateMousePositionIndicator(event: React.MouseEvent<HTMLCanvasElement, MouseEvent> | MouseEvent) {\n\n        if (!EditorModel.imageRectOnCanvas || !EditorModel.canvas) {\n            EditorModel.mousePositionIndicator.style.display = \"none\";\n            EditorModel.cursor.style.display = \"none\";\n            return;\n        }\n\n        const mousePositionOnCanvas: IPoint = CanvasUtil.getMousePositionOnCanvasFromEvent(event, EditorModel.canvas);\n        const canvasRect: IRect = {x: 0, y: 0, ...CanvasUtil.getSize(EditorModel.canvas)};\n        const isOverCanvas: boolean = RectUtil.isPointInside(canvasRect, mousePositionOnCanvas);\n\n        if (!isOverCanvas) {\n            EditorModel.mousePositionIndicator.style.display = \"none\";\n            EditorModel.cursor.style.display = \"none\";\n            return;\n        }\n\n        const isOverImage: boolean = RectUtil.isPointInside(EditorModel.imageRectOnCanvas, mousePositionOnCanvas);\n\n        if (isOverImage) {\n            const scale = EditorModel.imageScale;\n            const x: number = Math.round((mousePositionOnCanvas.x - EditorModel.imageRectOnCanvas.x) * scale);\n            const y: number = Math.round((mousePositionOnCanvas.y - EditorModel.imageRectOnCanvas.y) * scale);\n            const text: string = \"x: \" + x + \", y: \" + y;\n\n            EditorModel.mousePositionIndicator.innerHTML = text;\n            EditorModel.mousePositionIndicator.style.left = (mousePositionOnCanvas.x + 15) + \"px\";\n            EditorModel.mousePositionIndicator.style.top = (mousePositionOnCanvas.y + 15) + \"px\";\n            EditorModel.mousePositionIndicator.style.display = \"block\";\n        } else {\n            EditorModel.mousePositionIndicator.style.display = \"none\";\n        }\n\n        EditorModel.cursor.style.left = mousePositionOnCanvas.x + \"px\";\n        EditorModel.cursor.style.top = mousePositionOnCanvas.y + \"px\";\n        EditorModel.cursor.style.display = \"block\";\n    };\n}","import {HotKeyAction} from \"../../data/HotKeyAction\";\n\nexport class BaseContext {\n    public static actions: HotKeyAction[] = [];\n\n    public static getActions(): HotKeyAction[] {\n        return this.actions;\n    }\n}","import {MobileDeviceData} from \"../data/MobileDeviceData\";\n\nexport class PlatformModel {\n    public static mobileDeviceData: MobileDeviceData;\n    public static isMac: boolean;\n    public static isSafari: boolean;\n    public static isFirefox: boolean;\n}","import {EditorSelector} from \"../../store/selectors/EditorSelector\";\nimport {store} from \"../../index\";\nimport {updateActiveImageIndex} from \"../../store/editor/actionCreators\";\n\nexport class ImageActions {\n    public static getPreviousImage(): void {\n        const currentImageIndex: number = EditorSelector.getActiveImageIndex();\n        store.dispatch(updateActiveImageIndex(currentImageIndex - 1));\n    }\n\n    public static getNextImage(): void {\n        const currentImageIndex: number = EditorSelector.getActiveImageIndex();\n        store.dispatch(updateActiveImageIndex(currentImageIndex + 1));\n    }\n\n    public static getImageByIndex(index: number): void {\n        const imageCount: number = EditorSelector.getImagesData().length;\n\n        if (index < 0 || index > imageCount - 1)\n            return;\n        else\n            store.dispatch(updateActiveImageIndex(index));\n    }\n}","import {HotKeyAction} from \"../../data/HotKeyAction\";\nimport {EditorModel} from \"../../staticModels/EditorModel\";\nimport {LabelType} from \"../../data/enums/LabelType\";\nimport {EditorData} from \"../../data/EditorData\";\nimport {EditorActions} from \"../actions/EditorActions\";\nimport {PolygonRenderEngine} from \"../render/PolygonRenderEngine\";\nimport {BaseContext} from \"./BaseContext\";\nimport {PlatformModel} from \"../../staticModels/PlatformModel\";\nimport {ImageActions} from \"../actions/ImageActions\";\n\nexport class EditorContext extends BaseContext {\n    public static actions: HotKeyAction[] = [\n        {\n            keyCombo: [\"Enter\"],\n            action: (event: KeyboardEvent) => {\n                if (EditorModel.supportRenderingEngine && EditorModel.supportRenderingEngine.labelType === LabelType.POLYGON) {\n                    const editorData: EditorData = EditorActions.getEditorData();\n                    (EditorModel.supportRenderingEngine as PolygonRenderEngine).addLabelAndFinishCreation(editorData);\n                }\n                EditorActions.fullRender();\n            }\n        },\n        {\n            keyCombo: [\"Escape\"],\n            action: (event: KeyboardEvent) => {\n                if (EditorModel.supportRenderingEngine && EditorModel.supportRenderingEngine.labelType === LabelType.POLYGON)\n                    (EditorModel.supportRenderingEngine as PolygonRenderEngine).cancelLabelCreation();\n                EditorActions.fullRender();\n            }\n        },\n        {\n            keyCombo: PlatformModel.isMac ? [\"Meta\", \"ArrowLeft\"] : [\"Control\", \"ArrowLeft\"],\n            action: (event: KeyboardEvent) => {\n                ImageActions.getPreviousImage()\n            }\n        },\n        {\n            keyCombo: PlatformModel.isMac ? [\"Meta\", \"ArrowRight\"] : [\"Control\", \"ArrowRight\"],\n            action: (event: KeyboardEvent) => {\n                ImageActions.getNextImage();\n            }\n        }\n    ];\n}","import {store} from \"../..\";\nimport {PopupWindowType} from \"../../data/enums/PopupWindowType\";\nimport {ContextType} from \"../../data/enums/ContextType\";\n\nexport class GeneralSelector {\n    public static getActivePopupType(): PopupWindowType {\n        return store.getState().general.activePopupType;\n    }\n\n    public static getActiveContext(): ContextType {\n        return store.getState().general.activeContext;\n    }\n}","import {ContextManager} from \"../context/ContextManager\";\nimport {store} from \"../../index\";\nimport {updateActivePopupType} from \"../../store/general/actionCreators\";\n\nexport class PopupActions {\n    public static close() {\n        store.dispatch(updateActivePopupType(null));\n        ContextManager.restoreCtx();\n    }\n}","import {HotKeyAction} from \"../../data/HotKeyAction\";\nimport {PopupWindowType} from \"../../data/enums/PopupWindowType\";\nimport {GeneralSelector} from \"../../store/selectors/GeneralSelector\";\nimport {BaseContext} from \"./BaseContext\";\nimport {PopupActions} from \"../actions/PopupActions\";\nimport {Settings} from \"../../settings/Settings\";\n\nexport class PopupContext extends BaseContext {\n    public static actions: HotKeyAction[] = [\n        {\n            keyCombo: [\"Escape\"],\n            action: (event: KeyboardEvent) => {\n                const popupType: PopupWindowType = GeneralSelector.getActivePopupType();\n                const canBeClosed: boolean = Settings.CLOSEABLE_POPUPS.includes(popupType);\n                if (canBeClosed) {\n                    PopupActions.close();\n                }\n            }\n        }\n    ];\n}","import {ContextType} from \"../../data/enums/ContextType\";\nimport {HotKeyAction} from \"../../data/HotKeyAction\";\nimport {store} from \"../../index\";\nimport {updateActiveContext} from \"../../store/general/actionCreators\";\nimport * as _ from \"lodash\";\nimport {EditorContext} from \"./EditorContext\";\nimport {PopupContext} from \"./PopupContext\";\nimport {GeneralSelector} from \"../../store/selectors/GeneralSelector\";\n\nexport class ContextManager {\n    private static activeCombo: string[] = [];\n    private static actions: HotKeyAction[] = [];\n    private static contextHistory: ContextType[] = [];\n\n    public static getActiveCombo(): string[] {\n        return ContextManager.activeCombo;\n    }\n\n    public static init(): void {\n        window.addEventListener(\"keydown\", ContextManager.onDown);\n        window.addEventListener(\"keyup\", ContextManager.onUp);\n    }\n\n    public static switchCtx(context: ContextType): void {\n        const activeCtx: ContextType = GeneralSelector.getActiveContext();\n\n        if (activeCtx !== context) {\n            ContextManager.contextHistory.push(activeCtx);\n            ContextManager.updateCtx(context);\n        }\n    }\n\n    private static updateCtx(context: ContextType): void {\n        store.dispatch(updateActiveContext(context));\n        switch (context) {\n            case ContextType.EDITOR:\n                ContextManager.actions = EditorContext.getActions();\n                break;\n            case ContextType.POPUP:\n                ContextManager.actions = PopupContext.getActions();\n                break;\n            default:\n                ContextManager.actions = [];\n        }\n    }\n\n    public static restoreCtx(): void {\n        ContextManager.updateCtx(ContextManager.contextHistory.pop());\n    }\n\n    private static onDown(event: KeyboardEvent): void {\n        const keyCode: string = ContextManager.getKeyCodeFromEvent(event);\n        if (!ContextManager.isInCombo(keyCode)) {\n            ContextManager.addToCombo(keyCode);\n            ContextManager.execute(event);\n        }\n    }\n\n    private static onUp(event: KeyboardEvent): void {\n        const keyCode: string = ContextManager.getKeyCodeFromEvent(event);\n        ContextManager.removeFromCombo(keyCode);\n    }\n\n    private static execute(event: KeyboardEvent): void {\n        for (let i = 0; i < ContextManager.actions.length; i++) {\n            const hotKey: HotKeyAction = ContextManager.actions[i];\n            if (ContextManager.matchCombo(ContextManager.activeCombo, hotKey.keyCombo)) {\n                hotKey.action(event);\n            }\n        }\n    }\n\n    private static isInCombo(keyCode: string): boolean {\n        return ContextManager.activeCombo.indexOf(keyCode) >= 0;\n    }\n\n    private static addToCombo(keyCode: string): void {\n        ContextManager.activeCombo.push(keyCode);\n    }\n\n    private static removeFromCombo(keyCode: string): void {\n        const index: number = ContextManager.activeCombo.indexOf(keyCode);\n        if (index >= 0) {\n            ContextManager.activeCombo.splice(index, 1);\n        }\n    }\n\n    private static getKeyCodeFromEvent(event: KeyboardEvent): string {\n        return event.key;\n    }\n\n    private static matchCombo(combo1: string[], combo2: string[]): boolean {\n        return _.isEmpty(_.xor(combo1, combo2))\n    }\n}","export enum ProjectType {\n    IMAGE_RECOGNITION = \"IMAGE_RECOGNITION\",\n    OBJECT_DETECTION = \"OBJECT_DETECTION\"\n}","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {LabelType} from \"../../../../data/enums/LabelType\";\nimport {ISize} from \"../../../../interfaces/ISize\";\nimport {AppState} from \"../../../../store\";\nimport {updateActiveImageIndex, updateActiveLabelId} from \"../../../../store/editor/actionCreators\";\nimport {ImageData} from \"../../../../store/editor/types\";\nimport {VirtualList} from \"../../../Common/VirtualList/VirtualList\";\nimport ImagePreview from \"../ImagePreview/ImagePreview\";\nimport './ImagesList.scss';\nimport {ContextManager} from \"../../../../logic/context/ContextManager\";\nimport {ContextType} from \"../../../../data/enums/ContextType\";\n\ninterface IProps {\n    activeImageIndex: number;\n    imagesData: ImageData[];\n    updateActiveImageIndex: (activeImageIndex: number) => any;\n    updateActiveLabelId: (activeLabelId: string) => any;\n    activeLabelType: LabelType;\n}\n\ninterface IState {\n    size: ISize;\n}\n\nclass ImagesList extends React.Component<IProps, IState> {\n    private imagesListRef: HTMLDivElement;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            size: null,\n        }\n    }\n\n    public componentDidMount(): void {\n        this.updateListSize();\n        window.addEventListener(\"resize\", this.updateListSize);\n    }\n\n    public componentWillUnmount(): void {\n        window.removeEventListener(\"resize\", this.updateListSize);\n    }\n\n    private updateListSize = () => {\n        if (!this.imagesListRef)\n            return;\n\n        const listBoundingBox = this.imagesListRef.getBoundingClientRect();\n        this.setState({\n            size: {\n                width: listBoundingBox.width,\n                height: listBoundingBox.height\n            }\n        })\n    };\n\n    private onClickHandler = (index: number) => {\n        this.props.updateActiveImageIndex(index);\n        this.props.updateActiveLabelId(null);\n    };\n\n    private renderImagePreview = (index: number, isScrolling: boolean, isVisible: boolean, style: React.CSSProperties) => {\n        return <ImagePreview\n            key={index}\n            style={style}\n            size={{width: 150, height: 150}}\n            isScrolling={isScrolling}\n            isChecked={\n                (this.props.activeLabelType === LabelType.RECTANGLE && this.props.imagesData[index].labelRects.length > 0) ||\n                (this.props.activeLabelType === LabelType.POINT && this.props.imagesData[index].labelPoints.length > 0) ||\n                (this.props.activeLabelType === LabelType.POLYGON && this.props.imagesData[index].labelPolygons.length > 0)\n            }\n            imageData={this.props.imagesData[index]}\n            onClick={() => this.onClickHandler(index)}\n            isSelected={this.props.activeImageIndex === index}\n        />\n    };\n\n    public render() {\n        const { size } = this.state;\n        return(\n            <div\n                className=\"ImagesList\"\n                ref={ref => this.imagesListRef = ref}\n                onClick={() => ContextManager.switchCtx(ContextType.LEFT_NAVBAR)}\n            >\n                {!!size && <VirtualList\n                    size={size}\n                    childSize={{width: 150, height: 150}}\n                    childCount={this.props.imagesData.length}\n                    childRender={this.renderImagePreview}\n                    overScanHeight={200}\n                />}\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = {\n    updateActiveImageIndex,\n    updateActiveLabelId\n};\n\nconst mapStateToProps = (state: AppState) => ({\n    activeImageIndex: state.editor.activeImageIndex,\n    imagesData: state.editor.imagesData,\n    activeLabelType: state.editor.activeLabelType\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ImagesList);","import { LabelType } from \"../enums/LabelType\";\n\nexport interface ILabelToolkit {\n  labelType: LabelType;\n  headerText: string;\n  imageSrc: string;\n  imageAlt: string;\n}\n\nexport const LabelToolkitData: ILabelToolkit[] = [\n  {\n    labelType: LabelType.NAME,\n    headerText: \"图像识别\",\n    imageSrc: \"ico/object.png\",\n    imageAlt: \"object\",\n  },\n  {\n    labelType: LabelType.RECTANGLE,\n    headerText: \"矩形\",\n    imageSrc: \"ico/rectangle.png\",\n    imageAlt: \"rectangle\",\n  },\n  {\n    labelType: LabelType.POINT,\n    headerText: \"点\",\n    imageSrc: \"ico/point.png\",\n    imageAlt: \"point\",\n  },\n  {\n    labelType: LabelType.POLYGON,\n    headerText: \"多边形\",\n    imageSrc: \"ico/polygon.png\",\n    imageAlt: \"polygon\",\n  },\n];\n","import * as React from 'react';\nimport {ISize} from \"../../../interfaces/ISize\";\nimport './ImageButton.scss';\nimport classNames from \"classnames\";\n\ninterface Props {\n    size:ISize,\n    padding?:number;\n    image:string,\n    imageAlt:string,\n    href?:string\n    onClick?:() => any;\n    style?:React.CSSProperties\n    isActive?:boolean;\n    isDisabled?:boolean;\n    externalClassName?:string;\n}\n\nexport const ImageButton = (props:Props) => {\n    const {size, padding, image, imageAlt, href, onClick, style, isActive, isDisabled, externalClassName} = props;\n    const imagePadding:number = !!padding ? padding : 10;\n\n    const onClickHandler = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n        event.stopPropagation();\n        !!onClick && onClick();\n    };\n\n    const buttonStyle:React.CSSProperties = {\n        ...style,\n        width: size.width,\n        height: size.height\n    };\n\n    const imageStyle:React.CSSProperties = {\n        maxWidth: size.width - imagePadding,\n        maxHeight: size.height - imagePadding\n    };\n\n    const getClassName = () => {\n        return classNames(\n            \"ImageButton\",\n            externalClassName,\n            {\n                \"active\": isActive,\n                \"disabled\": isDisabled,\n            }\n        );\n    };\n    \n    return(\n        <div className={getClassName()} style={buttonStyle} onClick={onClickHandler}>\n            {!!href && <a href={href} style={imageStyle} target=\"_blank\" rel=\"noopener noreferrer\">\n                <img\n                    draggable={false}\n                    alt={imageAlt}\n                    src={image}\n                    style={imageStyle}\n                />\n            </a>}\n            {!href && <img\n                draggable={false}\n                alt={imageAlt}\n                src={image}\n                style={imageStyle}\n            />}\n        </div>\n    );\n};","import React from \"react\";\nimport { ISize } from \"../../../../interfaces/ISize\";\nimport \"./LabelInputField.scss\";\nimport classNames from \"classnames\";\nimport { ImageButton } from \"../../../Common/ImageButton/ImageButton\";\nimport { IRect } from \"../../../../interfaces/IRect\";\nimport { IPoint } from \"../../../../interfaces/IPoint\";\nimport { RectUtil } from \"../../../../utils/RectUtil\";\nimport { AppState } from \"../../../../store\";\nimport { connect } from \"react-redux\";\nimport {\n  updateActiveLabelId,\n  updateHighlightedLabelId,\n} from \"../../../../store/editor/actionCreators\";\nimport Scrollbars from \"react-custom-scrollbars\";\n\ninterface IProps {\n  size: ISize;\n  isActive: boolean;\n  isHighlighted: boolean;\n  id: string;\n  value: string;\n  options: string[];\n  onDelete: (id: string) => any;\n  onSelectLabel: (labelRectId: string, labelNameIndex: number) => any;\n  updateHighlightedLabelId: (highlightedLabelId: string) => any;\n  updateActiveLabelId: (highlightedLabelId: string) => any;\n}\n\ninterface IState {\n  animate: boolean;\n  isOpen: boolean;\n}\n\nclass LabelInputField extends React.Component<IProps, IState> {\n  private dropdownOptionHeight: number = 30;\n  private dropdownOptionCount: number = 6;\n  private dropdownMargin: number = 4;\n  private dropdownLabel: HTMLDivElement;\n  private dropdown: HTMLDivElement;\n\n  public constructor(props) {\n    super(props);\n    this.state = {\n      animate: false,\n      isOpen: false,\n    };\n  }\n\n  public componentDidMount(): void {\n    requestAnimationFrame(() => {\n      this.setState({ animate: true });\n    });\n  }\n\n  private getClassName() {\n    return classNames(\"LabelInputField\", {\n      loaded: this.state.animate,\n      active: this.props.isActive,\n      highlighted: this.props.isHighlighted,\n    });\n  }\n\n  private openDropdown = () => {\n    this.setState({ isOpen: true });\n    window.addEventListener(\"mousedown\", this.closeDropdown);\n  };\n\n  private closeDropdown = (event: MouseEvent) => {\n    const mousePosition: IPoint = { x: event.clientX, y: event.clientY };\n    const clientRect = this.dropdown.getBoundingClientRect();\n    const dropDownRect: IRect = {\n      x: clientRect.left,\n      y: clientRect.top,\n      width: clientRect.width,\n      height: clientRect.height,\n    };\n\n    if (!RectUtil.isPointInside(dropDownRect, mousePosition)) {\n      this.setState({ isOpen: false });\n      window.removeEventListener(\"mousedown\", this.closeDropdown);\n    }\n  };\n\n  private getDropdownStyle = (): React.CSSProperties => {\n    const clientRect = this.dropdownLabel.getBoundingClientRect();\n    const height: number =\n      Math.min(this.props.options.length, this.dropdownOptionCount) * this.dropdownOptionHeight;\n    const style = {\n      width: clientRect.width,\n      height: height,\n      left: clientRect.left,\n    };\n\n    if ((window.innerHeight * 2) / 3 < clientRect.top)\n      return Object.assign(style, { top: clientRect.top - this.dropdownMargin - height });\n    else return Object.assign(style, { top: clientRect.bottom + this.dropdownMargin });\n  };\n\n  private getDropdownOptions = () => {\n    const onClick = (index: number, event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n      this.setState({ isOpen: false });\n      window.removeEventListener(\"mousedown\", this.closeDropdown);\n      this.props.onSelectLabel(this.props.id, index);\n      this.props.updateHighlightedLabelId(null);\n      this.props.updateActiveLabelId(this.props.id);\n      event.stopPropagation();\n    };\n\n    return this.props.options.map((option: string, index: number) => {\n      return (\n        <div\n          className=\"DropdownOption\"\n          key={option}\n          style={{ height: this.dropdownOptionHeight }}\n          onClick={event => onClick(index, event)}\n        >\n          {option}\n        </div>\n      );\n    });\n  };\n\n  private mouseEnterHandler = () => {\n    this.props.updateHighlightedLabelId(this.props.id);\n  };\n\n  private mouseLeaveHandler = () => {\n    this.props.updateHighlightedLabelId(null);\n  };\n\n  private onClickHandler = () => {\n    this.props.updateActiveLabelId(this.props.id);\n  };\n\n  public render() {\n    const { size, id, value, onDelete } = this.props;\n\n    return (\n      <div\n        className={this.getClassName()}\n        style={{\n          width: size.width,\n          height: size.height,\n        }}\n        key={id}\n        onMouseEnter={this.mouseEnterHandler}\n        onMouseLeave={this.mouseLeaveHandler}\n        onClick={this.onClickHandler}\n      >\n        <div\n          className=\"LabelInputFieldWrapper\"\n          style={{\n            width: size.width,\n            height: size.height,\n          }}\n        >\n          <div className=\"Marker\" />\n          <div className=\"Content\">\n            <div className=\"ContentWrapper\">\n              <div\n                className=\"DropdownLabel\"\n                ref={ref => (this.dropdownLabel = ref)}\n                onClick={this.openDropdown}\n              >\n                {value ? value : \"选择一个标签\"}\n              </div>\n              {this.state.isOpen && (\n                <div\n                  className=\"Dropdown\"\n                  style={this.getDropdownStyle()}\n                  ref={ref => (this.dropdown = ref)}\n                >\n                  <Scrollbars>\n                    <div>{this.getDropdownOptions()}</div>\n                  </Scrollbars>\n                </div>\n              )}\n            </div>\n            <input type=\"checkbox\" />\n            <div className=\"ContentWrapper\">\n              <ImageButton\n                externalClassName={\"trash\"}\n                image={\"ico/trash.png\"}\n                imageAlt={\"remove_rect\"}\n                size={{ width: 30, height: 30 }}\n                onClick={() => onDelete(id)}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  updateHighlightedLabelId,\n  updateActiveLabelId,\n};\n\nconst mapStateToProps = (state: AppState) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LabelInputField);\n","import React from 'react';\nimport './EmptyLabelList.scss';\nimport {AppState} from \"../../../../store\";\nimport {connect} from \"react-redux\";\n\ninterface IProps {\n    firstLabelCreatedFlag: boolean;\n    labelBefore: string;\n    labelAfter: string;\n}\n\nconst EmptyLabelList: React.FC<IProps> = ({firstLabelCreatedFlag, labelBefore, labelAfter}) => {\n    const before = <>\n        <img\n            draggable={false}\n            alt={\"lets_start\"}\n            src={\"img/rocket.png\"}\n        />\n        <p className=\"extraBold\">{labelBefore}</p>\n    </>;\n\n    const after = <>\n        <img\n            draggable={false}\n            alt={\"no_labels\"}\n            src={\"img/box-opened.png\"}\n        />\n        <p className=\"extraBold\">{labelAfter}</p>\n    </>;\n\n    return(<div className=\"EmptyLabelList\">\n        {!firstLabelCreatedFlag ? before : after}\n    </div>)\n};\n\nconst mapDispatchToProps = {};\n\nconst mapStateToProps = (state: AppState) => ({\n    firstLabelCreatedFlag: state.editor.firstLabelCreatedFlag\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EmptyLabelList);","import React from \"react\";\nimport { ISize } from \"../../../../interfaces/ISize\";\nimport Scrollbars from \"react-custom-scrollbars\";\nimport { ImageData, LabelRect } from \"../../../../store/editor/types\";\nimport \"./RectLabelsList.scss\";\nimport {\n  updateActiveLabelId,\n  updateActiveLabelNameIndex,\n  updateImageDataById,\n} from \"../../../../store/editor/actionCreators\";\nimport { AppState } from \"../../../../store\";\nimport { connect } from \"react-redux\";\nimport * as _ from \"lodash\";\nimport LabelInputField from \"../LabelInputField/LabelInputField\";\nimport EmptyLabelList from \"../EmptyLabelList/EmptyLabelList\";\n\ninterface IProps {\n  size: ISize;\n  imageData: ImageData;\n  updateImageDataById: (id: string, newImageData: ImageData) => any;\n  activeLabelIndex: number;\n  activeLabelId: string;\n  highlightedLabelId: string;\n  updateActiveLabelNameIndex: (activeLabelIndex: number) => any;\n  labelNames: string[];\n  updateActiveLabelId: (activeLabelId: string) => any;\n}\n\nconst RectLabelsList: React.FC<IProps> = ({\n  size,\n  imageData,\n  updateImageDataById,\n  labelNames,\n  updateActiveLabelNameIndex,\n  activeLabelId,\n  highlightedLabelId,\n  updateActiveLabelId,\n}) => {\n  const labelInputFieldHeight = 40;\n  const listStyle: React.CSSProperties = {\n    width: size.width,\n    height: size.height,\n  };\n  const listStyleContent: React.CSSProperties = {\n    width: size.width,\n    height: imageData.labelRects.length * labelInputFieldHeight,\n  };\n\n  const deleteRectLabelById = (labelRectId: string) => {\n    const newImageData = {\n      ...imageData,\n      labelRects: _.filter(imageData.labelRects, (currentLabel: LabelRect) => {\n        return currentLabel.id !== labelRectId;\n      }),\n    };\n    updateImageDataById(imageData.id, newImageData);\n  };\n\n  const updateRectLabel = (labelRectId: string, labelNameIndex: number) => {\n    const newImageData = {\n      ...imageData,\n      labelRects: imageData.labelRects.map((labelRect: LabelRect) => {\n        if (labelRect.id === labelRectId) {\n          return {\n            ...labelRect,\n            labelIndex: labelNameIndex,\n          };\n        } else {\n          return labelRect;\n        }\n      }),\n    };\n    updateImageDataById(imageData.id, newImageData);\n    updateActiveLabelNameIndex(labelNameIndex);\n  };\n\n  const onClickHandler = () => {\n    updateActiveLabelId(null);\n  };\n\n  const getChildren = () => {\n    return imageData.labelRects.map((labelRect: LabelRect) => {\n      return (\n        <LabelInputField\n          size={{\n            width: size.width,\n            height: labelInputFieldHeight,\n          }}\n          isActive={labelRect.id === activeLabelId}\n          isHighlighted={labelRect.id === highlightedLabelId}\n          id={labelRect.id}\n          key={labelRect.id}\n          onDelete={deleteRectLabelById}\n          value={labelRect.labelIndex !== null ? labelNames[labelRect.labelIndex] : null}\n          options={labelNames}\n          onSelectLabel={updateRectLabel}\n        />\n      );\n    });\n  };\n\n  return (\n    <div className=\"RectLabelsList\" style={listStyle} onClickCapture={onClickHandler}>\n      {imageData.labelRects.length === 0 ? (\n        <EmptyLabelList labelBefore={\"创建第一个矩形\"} labelAfter={\"还没有任何的矩形标记\"} />\n      ) : (\n        <Scrollbars>\n          <div className=\"RectLabelsListContent\" style={listStyleContent}>\n            {getChildren()}\n          </div>\n        </Scrollbars>\n      )}\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {\n  updateImageDataById,\n  updateActiveLabelNameIndex,\n  updateActiveLabelId,\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  activeLabelIndex: state.editor.activeLabelNameIndex,\n  activeLabelId: state.editor.activeLabelId,\n  highlightedLabelId: state.editor.highlightedLabelId,\n  labelNames: state.editor.labelNames,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RectLabelsList);\n","import React from \"react\";\nimport { ISize } from \"../../../../interfaces/ISize\";\nimport Scrollbars from \"react-custom-scrollbars\";\nimport { ImageData, LabelPoint } from \"../../../../store/editor/types\";\nimport \"./PointLabelsList.scss\";\nimport {\n  updateActiveLabelId,\n  updateActiveLabelNameIndex,\n  updateImageDataById,\n} from \"../../../../store/editor/actionCreators\";\nimport { AppState } from \"../../../../store\";\nimport { connect } from \"react-redux\";\nimport * as _ from \"lodash\";\nimport LabelInputField from \"../LabelInputField/LabelInputField\";\nimport EmptyLabelList from \"../EmptyLabelList/EmptyLabelList\";\n\ninterface IProps {\n  size: ISize;\n  imageData: ImageData;\n  updateImageDataById: (id: string, newImageData: ImageData) => any;\n  activeLabelIndex: number;\n  activeLabelId: string;\n  highlightedLabelId: string;\n  updateActiveLabelNameIndex: (activeLabelIndex: number) => any;\n  labelNames: string[];\n  updateActiveLabelId: (activeLabelId: string) => any;\n}\n\nconst PointLabelsList: React.FC<IProps> = ({\n  size,\n  imageData,\n  updateImageDataById,\n  labelNames,\n  updateActiveLabelNameIndex,\n  activeLabelId,\n  highlightedLabelId,\n  updateActiveLabelId,\n}) => {\n  const labelInputFieldHeight = 40;\n  const listStyle: React.CSSProperties = {\n    width: size.width,\n    height: size.height,\n  };\n  const listStyleContent: React.CSSProperties = {\n    width: size.width,\n    height: imageData.labelPoints.length * labelInputFieldHeight,\n  };\n\n  const deletePointLabelById = (labelPointId: string) => {\n    const newImageData = {\n      ...imageData,\n      labelPoints: _.filter(imageData.labelPoints, (currentLabel: LabelPoint) => {\n        return currentLabel.id !== labelPointId;\n      }),\n    };\n    updateImageDataById(imageData.id, newImageData);\n  };\n\n  const updatePointLabel = (labelPointId: string, labelNameIndex: number) => {\n    const newImageData = {\n      ...imageData,\n      labelPoints: imageData.labelPoints.map((labelPoint: LabelPoint) => {\n        if (labelPoint.id === labelPointId) {\n          return {\n            ...labelPoint,\n            labelIndex: labelNameIndex,\n          };\n        }\n        return labelPoint;\n      }),\n    };\n    updateImageDataById(imageData.id, newImageData);\n    updateActiveLabelNameIndex(labelNameIndex);\n  };\n\n  const onClickHandler = () => {\n    updateActiveLabelId(null);\n  };\n\n  const getChildren = () => {\n    return imageData.labelPoints.map((labelPoint: LabelPoint) => {\n      return (\n        <LabelInputField\n          size={{\n            width: size.width,\n            height: labelInputFieldHeight,\n          }}\n          isActive={labelPoint.id === activeLabelId}\n          isHighlighted={labelPoint.id === highlightedLabelId}\n          id={labelPoint.id}\n          key={labelPoint.id}\n          onDelete={deletePointLabelById}\n          value={labelPoint.labelIndex !== null ? labelNames[labelPoint.labelIndex] : null}\n          options={labelNames}\n          onSelectLabel={updatePointLabel}\n        />\n      );\n    });\n  };\n\n  return (\n    <div className=\"PointLabelsList\" style={listStyle} onClickCapture={onClickHandler}>\n      {imageData.labelPoints.length === 0 ? (\n        <EmptyLabelList labelBefore={\"标记第一个点\"} labelAfter={\"这张图片还没有点标记\"} />\n      ) : (\n        <Scrollbars>\n          <div className=\"PointLabelsListContent\" style={listStyleContent}>\n            {getChildren()}\n          </div>\n        </Scrollbars>\n      )}\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {\n  updateImageDataById,\n  updateActiveLabelNameIndex,\n  updateActiveLabelId,\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  activeLabelIndex: state.editor.activeLabelNameIndex,\n  activeLabelId: state.editor.activeLabelId,\n  highlightedLabelId: state.editor.highlightedLabelId,\n  labelNames: state.editor.labelNames,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PointLabelsList);\n","import React from \"react\";\nimport { ISize } from \"../../../../interfaces/ISize\";\nimport Scrollbars from \"react-custom-scrollbars\";\nimport { ImageData, LabelPolygon } from \"../../../../store/editor/types\";\nimport \"./PolygonLabelsList.scss\";\nimport {\n  updateActiveLabelId,\n  updateActiveLabelNameIndex,\n  updateImageDataById,\n} from \"../../../../store/editor/actionCreators\";\nimport { AppState } from \"../../../../store\";\nimport { connect } from \"react-redux\";\nimport * as _ from \"lodash\";\nimport LabelInputField from \"../LabelInputField/LabelInputField\";\nimport EmptyLabelList from \"../EmptyLabelList/EmptyLabelList\";\n\ninterface IProps {\n  size: ISize;\n  imageData: ImageData;\n  updateImageDataById: (id: string, newImageData: ImageData) => any;\n  activeLabelIndex: number;\n  activeLabelId: string;\n  highlightedLabelId: string;\n  updateActiveLabelNameIndex: (activeLabelIndex: number) => any;\n  labelNames: string[];\n  updateActiveLabelId: (activeLabelId: string) => any;\n}\n\nconst PolygonLabelsList: React.FC<IProps> = ({\n  size,\n  imageData,\n  updateImageDataById,\n  labelNames,\n  updateActiveLabelNameIndex,\n  activeLabelId,\n  highlightedLabelId,\n  updateActiveLabelId,\n}) => {\n  const labelInputFieldHeight = 40;\n  const listStyle: React.CSSProperties = {\n    width: size.width,\n    height: size.height,\n  };\n  const listStyleContent: React.CSSProperties = {\n    width: size.width,\n    height: imageData.labelPolygons.length * labelInputFieldHeight,\n  };\n\n  const deletePolygonLabelById = (labelPolygonId: string) => {\n    const newImageData = {\n      ...imageData,\n      labelPolygons: _.filter(imageData.labelPolygons, (currentLabel: LabelPolygon) => {\n        return currentLabel.id !== labelPolygonId;\n      }),\n    };\n    updateImageDataById(imageData.id, newImageData);\n  };\n\n  const updatePolygonLabel = (labelPolygonId: string, labelNameIndex: number) => {\n    const newImageData = {\n      ...imageData,\n      labelPolygons: imageData.labelPolygons.map((currentLabel: LabelPolygon) => {\n        if (currentLabel.id === labelPolygonId) {\n          return {\n            ...currentLabel,\n            labelIndex: labelNameIndex,\n          };\n        }\n        return currentLabel;\n      }),\n    };\n    updateImageDataById(imageData.id, newImageData);\n    updateActiveLabelNameIndex(labelNameIndex);\n  };\n\n  const onClickHandler = () => {\n    updateActiveLabelId(null);\n  };\n\n  const getChildren = () => {\n    return imageData.labelPolygons.map((labelPolygon: LabelPolygon) => {\n      return (\n        <LabelInputField\n          size={{\n            width: size.width,\n            height: labelInputFieldHeight,\n          }}\n          isActive={labelPolygon.id === activeLabelId}\n          isHighlighted={labelPolygon.id === highlightedLabelId}\n          id={labelPolygon.id}\n          key={labelPolygon.id}\n          onDelete={deletePolygonLabelById}\n          value={labelPolygon.labelIndex !== null ? labelNames[labelPolygon.labelIndex] : null}\n          options={labelNames}\n          onSelectLabel={updatePolygonLabel}\n        />\n      );\n    });\n  };\n\n  return (\n    <div className=\"PolygonLabelsList\" style={listStyle} onClickCapture={onClickHandler}>\n      {imageData.labelPolygons.length === 0 ? (\n        <EmptyLabelList labelBefore={\"标记第一个多边形\"} labelAfter={\"这张图片还没有多边形标记\"} />\n      ) : (\n        <Scrollbars>\n          <div className=\"PolygonLabelsListContent\" style={listStyleContent}>\n            {getChildren()}\n          </div>\n        </Scrollbars>\n      )}\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {\n  updateImageDataById,\n  updateActiveLabelNameIndex,\n  updateActiveLabelId,\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  activeLabelIndex: state.editor.activeLabelNameIndex,\n  activeLabelId: state.editor.activeLabelId,\n  highlightedLabelId: state.editor.highlightedLabelId,\n  labelNames: state.editor.labelNames,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PolygonLabelsList);\n","import React from \"react\";\nimport './LabelsToolkit.scss';\nimport {ImageData} from \"../../../../store/editor/types\";\nimport {updateActiveLabelId, updateActiveLabelType, updateImageDataById} from \"../../../../store/editor/actionCreators\";\nimport {AppState} from \"../../../../store\";\nimport {connect} from \"react-redux\";\nimport {LabelType} from \"../../../../data/enums/LabelType\";\nimport {ProjectType} from \"../../../../data/enums/ProjectType\";\nimport {ISize} from \"../../../../interfaces/ISize\";\nimport classNames from \"classnames\";\nimport * as _ from \"lodash\";\nimport {ILabelToolkit, LabelToolkitData} from \"../../../../data/info/LabelToolkitData\";\nimport {Settings} from \"../../../../settings/Settings\";\nimport RectLabelsList from \"../RectLabelsList/RectLabelsList\";\nimport PointLabelsList from \"../PointLabelsList/PointLabelsList\";\nimport PolygonLabelsList from \"../PolygonLabelsList/PolygonLabelsList\";\nimport {ContextManager} from \"../../../../logic/context/ContextManager\";\nimport {ContextType} from \"../../../../data/enums/ContextType\";\n\ninterface IProps {\n    activeImageIndex:number,\n    activeLabelType: LabelType;\n    imagesData: ImageData[];\n    projectType: ProjectType;\n    updateImageDataById: (id: string, newImageData: ImageData) => any;\n    updateActiveLabelType: (activeLabelType: LabelType) => any;\n    updateActiveLabelId: (highlightedLabelId: string) => any;\n}\n\ninterface IState {\n    size: ISize;\n    activeLabelType: LabelType;\n}\n\nclass LabelsToolkit extends React.Component<IProps, IState> {\n    private labelsToolkitRef: HTMLDivElement;\n    private readonly tabs: LabelType[];\n\n    constructor(props) {\n        super(props);\n\n        this.tabs = props.projectType === ProjectType.IMAGE_RECOGNITION ?\n            [\n                LabelType.NAME\n            ] :\n            [\n                LabelType.RECTANGLE,\n                LabelType.POINT,\n                LabelType.POLYGON\n            ];\n\n        const activeTab: LabelType = props.activeLabelType ? props.activeLabelType : this.tabs[0];\n\n        this.state = {\n            size: null,\n            activeLabelType: activeTab,\n        };\n        props.updateActiveLabelType(activeTab);\n    }\n\n    public componentDidMount(): void {\n        this.updateToolkitSize();\n        window.addEventListener(\"resize\", this.updateToolkitSize);\n    }\n\n    public componentWillUnmount(): void {\n        window.removeEventListener(\"resize\", this.updateToolkitSize);\n    }\n\n    private updateToolkitSize = () => {\n        if (!this.labelsToolkitRef)\n            return;\n\n        const listBoundingBox = this.labelsToolkitRef.getBoundingClientRect();\n        this.setState({\n            size: {\n                width: listBoundingBox.width,\n                height: listBoundingBox.height\n            }\n        })\n    };\n\n    private headerClickHandler = (activeTab: LabelType) => {\n        this.setState({activeLabelType: activeTab});\n        this.props.updateActiveLabelType(activeTab);\n        this.props.updateActiveLabelId(null);\n    };\n\n    private renderChildren = () => {\n        const {activeLabelType, size} = this.state;\n        const {activeImageIndex, imagesData} = this.props;\n        return this.tabs.reduce((children, labelType: LabelType, index: number) => {\n            const isActive: boolean = labelType === activeLabelType;\n            const tabData: ILabelToolkit = _.find(LabelToolkitData, {labelType});\n            const activeTabContentHeight: number = size.height - this.tabs.length * Settings.TOOLKIT_TAB_HEIGHT_PX;\n            const getClassName = (baseClass: string) => classNames(\n                baseClass,\n                {\n                    \"active\": isActive,\n                }\n            );\n\n            const header =\n                <div\n                    key={\"Header_\" + index}\n                    className={getClassName(\"Header\")}\n                    onClick={() => this.headerClickHandler(labelType)}\n                    style={{height: Settings.TOOLKIT_TAB_HEIGHT_PX}}\n                >\n                    <div className=\"Marker\"/>\n                    <div className=\"HeaderGroupWrapper\">\n                        <img\n                            draggable={false}\n                            className=\"Ico\"\n                            src={tabData.imageSrc}\n                            alt={tabData.imageAlt}\n                        />\n                        {tabData.headerText}\n                    </div>\n                    <div className=\"HeaderGroupWrapper\">\n                        <img\n                            draggable={false}\n                            className=\"Arrow\"\n                            src={\"ico/down.png\"}\n                            alt={\"down_arrow\"}\n                        />\n                    </div>\n                </div>;\n\n            const content =\n                <div\n                    key={\"Content_\" + index}\n                    className={getClassName(\"Content\")}\n                    style={{height: isActive ? activeTabContentHeight : 0}}\n                >\n                    {labelType === LabelType.RECTANGLE && <RectLabelsList\n                        size={{\n                            width: size.width - 20,\n                            height: activeTabContentHeight - 20\n                        }}\n                        imageData={imagesData[activeImageIndex]}\n                    />}\n                    {labelType === LabelType.POINT && <PointLabelsList\n                        size={{\n                            width: size.width - 20,\n                            height: activeTabContentHeight - 20\n                        }}\n                        imageData={imagesData[activeImageIndex]}\n                    />}\n                    {labelType === LabelType.POLYGON && <PolygonLabelsList\n                        size={{\n                            width: size.width - 20,\n                            height: activeTabContentHeight - 20\n                        }}\n                        imageData={imagesData[activeImageIndex]}\n                    />}\n                </div>;\n\n            children.push([header, content]);\n            return children;\n        }, [])\n    };\n\n    public render() {\n        return(\n            <div\n                className=\"LabelsToolkit\"\n                ref={ref => this.labelsToolkitRef = ref}\n                onClick={() => ContextManager.switchCtx(ContextType.RIGHT_NAVBAR)}\n            >\n                {this.state.size && this.renderChildren()}\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = {\n    updateImageDataById,\n    updateActiveLabelType,\n    updateActiveLabelId\n};\n\nconst mapStateToProps = (state: AppState) => ({\n    activeImageIndex: state.editor.activeImageIndex,\n    activeLabelType: state.editor.activeLabelType,\n    imagesData: state.editor.imagesData,\n    projectType: state.editor.projectType,\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(LabelsToolkit);","import React from 'react';\nimport classNames from 'classnames';\nimport './SideNavigationBar.scss';\nimport {Direction} from \"../../../data/enums/Direction\";\n\ninterface IProps {\n    direction: Direction\n    isOpen: boolean;\n    isWithContext?: boolean;\n    renderCompanion?: () => any;\n    renderContent?: () => any;\n}\n\nexport const SideNavigationBar: React.FC<IProps> = (props) => {\n    const {direction, isOpen, isWithContext, renderContent, renderCompanion} = props;\n\n    const getClassName = () => {\n        return classNames(\n            \"SideNavigationBar\",\n            {\n                \"left\": direction === Direction.LEFT,\n                \"right\": direction === Direction.RIGHT,\n                \"with-context\": isWithContext,\n                \"closed\": !isOpen\n            }\n        );\n    };\n\n    return (\n        <div className={getClassName()}>\n            <div className=\"CompanionBar\">\n                {renderCompanion && renderCompanion()}\n            </div>\n            {isOpen && <div className=\"NavigationBarContentWrapper\">\n                {renderContent && renderContent()}\n            </div>}\n        </div>\n    );\n};","import * as React from \"react\";\nimport classNames from \"classnames\";\nimport './VerticalEditorButton.scss';\n\ninterface IProps {\n    key?:string;\n    label:string;\n    onClick?:() => any;\n    style?:React.CSSProperties;\n    isActive?:boolean;\n    isDisabled?:boolean;\n    image?:string,\n    imageAlt?:string,\n}\n\nexport const VerticalEditorButton = (props:IProps) => {\n\n    const { key, label, onClick, style, isActive, isDisabled, image, imageAlt} = props;\n\n    const getClassName = () => {\n        return classNames(\n            \"VerticalEditorButton\",\n            {\n                \"active\": isActive,\n                \"disabled\": isDisabled\n            }\n        );\n    };\n\n    return(\n        <div\n            className={getClassName()}\n            onClick={!!onClick ? onClick : undefined}\n            key={key}\n            style={style}\n        >\n            {image && <img \n                draggable={false}\n                alt={imageAlt} \n                src={image}\n            />}\n            {label}\n        </div>\n    )\n};","import {CustomCursorStyle} from \"../data/enums/CustomCursorStyle\";\nimport classNames from \"classnames\";\n\nexport class EditorUtil {\n    public static getIndicator = (cursorStyle: CustomCursorStyle): string => {\n        switch (cursorStyle) {\n            case CustomCursorStyle.ADD:\n                return \"ico/plus.png\";\n            case CustomCursorStyle.RESIZE:\n                return \"ico/resize.png\";\n            case CustomCursorStyle.CLOSE:\n                return \"ico/close.png\";\n            case CustomCursorStyle.MOVE:\n                return \"ico/move.png\";\n            case CustomCursorStyle.CANCEL:\n                return \"ico/cancel.png\";\n            default:\n                return null;\n        }\n    };\n\n    public static getCursorStyle = (cursorStyle: CustomCursorStyle) => {\n        return classNames(\n            \"Cursor\", {\n                \"move\": cursorStyle === CustomCursorStyle.MOVE,\n                \"add\": cursorStyle === CustomCursorStyle.ADD,\n                \"resize\": cursorStyle === CustomCursorStyle.RESIZE,\n                \"close\": cursorStyle === CustomCursorStyle.CLOSE,\n                \"cancel\": cursorStyle === CustomCursorStyle.CANCEL,\n            }\n        );\n    };\n}","export enum AcceptedFileType {\n    IMAGE = 'image/jpeg, image/png',\n    TEXT = 'text/plain'\n}","import React from 'react';\nimport './Editor.scss';\nimport {ISize} from \"../../../interfaces/ISize\";\nimport {ImageData} from \"../../../store/editor/types\";\nimport {FileUtil} from \"../../../utils/FileUtil\";\nimport {AppState} from \"../../../store\";\nimport {connect} from \"react-redux\";\nimport {updateImageDataById} from \"../../../store/editor/actionCreators\";\nimport {ImageRepository} from \"../../../logic/imageRepository/ImageRepository\";\nimport {LabelType} from \"../../../data/enums/LabelType\";\nimport {PopupWindowType} from \"../../../data/enums/PopupWindowType\";\nimport {CanvasUtil} from \"../../../utils/CanvasUtil\";\nimport {CustomCursorStyle} from \"../../../data/enums/CustomCursorStyle\";\nimport {ImageLoadManager} from \"../../../logic/imageRepository/ImageLoadManager\";\nimport {EventType} from \"../../../data/enums/EventType\";\nimport {EditorData} from \"../../../data/EditorData\";\nimport {EditorModel} from \"../../../staticModels/EditorModel\";\nimport {EditorActions} from \"../../../logic/actions/EditorActions\";\nimport {EditorUtil} from \"../../../utils/EditorUtil\";\nimport {ContextManager} from \"../../../logic/context/ContextManager\";\nimport {ContextType} from \"../../../data/enums/ContextType\";\n\ninterface IProps {\n    size: ISize;\n    imageData: ImageData;\n    activeLabelType: LabelType;\n    updateImageDataById: (id: string, newImageData: ImageData) => any;\n    activePopupType: PopupWindowType;\n    activeLabelId: string;\n    customCursorStyle: CustomCursorStyle;\n}\n\nclass Editor extends React.Component<IProps, {}> {\n\n    // =================================================================================================================\n    // LIFE CYCLE\n    // =================================================================================================================\n\n    public componentDidMount(): void {\n        this.mountEventListeners();\n\n        const {imageData, activeLabelType} = this.props;\n\n        ContextManager.switchCtx(ContextType.EDITOR);\n        EditorActions.mountRenderEngines(activeLabelType);\n        ImageLoadManager.addAndRun(this.loadImage(imageData));\n    }\n\n    public componentWillUnmount(): void {\n        this.unmountEventListeners();\n    }\n\n    public componentDidUpdate(prevProps: Readonly<IProps>, prevState: Readonly<{}>, snapshot?: any): void {\n        const {imageData, activeLabelType} = this.props;\n\n        prevProps.imageData.id !== imageData.id && ImageLoadManager.addAndRun(this.loadImage(imageData));\n        prevProps.activeLabelType !== activeLabelType && EditorActions.swapSupportRenderingEngine(activeLabelType);\n\n        this.updateModelAndRender()\n    }\n\n    // =================================================================================================================\n    // EVENT HANDLERS\n    // =================================================================================================================\n\n    private mountEventListeners() {\n        window.addEventListener(EventType.MOUSE_MOVE, this.update);\n        window.addEventListener(EventType.MOUSE_UP, this.update);\n        EditorModel.canvas.addEventListener(EventType.MOUSE_DOWN, this.update);\n    }\n\n    private unmountEventListeners() {\n        window.removeEventListener(EventType.MOUSE_MOVE, this.update);\n        window.removeEventListener(EventType.MOUSE_UP, this.update);\n        EditorModel.canvas.removeEventListener(EventType.MOUSE_DOWN, this.update);\n    }\n\n    // =================================================================================================================\n    // LOAD IMAGE\n    // =================================================================================================================\n\n    private loadImage = async (imageData: ImageData): Promise<any> => {\n        if (imageData.loadStatus) {\n            EditorActions.setActiveImage(ImageRepository.getById(imageData.id));\n            this.updateModelAndRender()\n        }\n        else {\n            if (!EditorModel.isLoading) {\n                EditorActions.setLoadingStatus(true);\n                const saveLoadedImagePartial = (image: HTMLImageElement) => this.saveLoadedImage(image, imageData);\n                FileUtil.loadImage(imageData.fileData, saveLoadedImagePartial, this.handleLoadImageError);\n            }\n        }\n    };\n\n    private saveLoadedImage = (image: HTMLImageElement, imageData: ImageData) => {\n        imageData.loadStatus = true;\n        this.props.updateImageDataById(imageData.id, imageData);\n        ImageRepository.store(imageData.id, image);\n        EditorActions.setActiveImage(image);\n        EditorActions.setLoadingStatus(false);\n        this.updateModelAndRender()\n    };\n\n    private handleLoadImageError = () => {};\n\n    // =================================================================================================================\n    // HELPER METHODS\n    // =================================================================================================================\n\n    private updateModelAndRender = () => {\n        EditorActions.resizeCanvas(this.props.size);\n        EditorActions.calculateAllCharacteristics();\n        EditorActions.fullRender();\n    };\n\n    private update = (event: MouseEvent) => {\n        const editorData: EditorData = EditorActions.getEditorData(event);\n        EditorModel.mousePositionOnCanvas = CanvasUtil.getMousePositionOnCanvasFromEvent(event, EditorModel.canvas);\n        EditorModel.primaryRenderingEngine.update(editorData);\n        EditorModel.supportRenderingEngine && EditorModel.supportRenderingEngine.update(editorData);\n        !this.props.activePopupType && EditorActions.updateMousePositionIndicator(event);\n        EditorActions.fullRender();\n    };\n\n    public render() {\n        return (\n            <div className=\"Editor\">\n                <canvas\n                    className=\"ImageCanvas\"\n                    ref={ref => EditorModel.canvas = ref}\n                    draggable={false}\n                    onContextMenu={(event: React.MouseEvent<HTMLCanvasElement>) => event.preventDefault()}\n                />\n                <div\n                    className=\"MousePositionIndicator\"\n                    ref={ref => EditorModel.mousePositionIndicator = ref}\n                    draggable={false}\n                />\n                <div\n                    className={EditorUtil.getCursorStyle(this.props.customCursorStyle)}\n                    ref={ref => EditorModel.cursor = ref}\n                    draggable={false}\n                >\n                    <img\n                        draggable={false}\n                        alt={\"indicator\"}\n                        src={EditorUtil.getIndicator(this.props.customCursorStyle)}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = {\n    updateImageDataById\n};\n\nconst mapStateToProps = (state: AppState) => ({\n    activeLabelType: state.editor.activeLabelType,\n    activePopupType: state.general.activePopupType,\n    activeLabelId: state.editor.activeLabelId,\n    customCursorStyle: state.general.customCursorStyle\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Editor);","import React from 'react';\nimport './BottomNavigationBar.scss';\nimport {ImageData} from \"../../../store/editor/types\";\nimport {updateActiveImageIndex} from \"../../../store/editor/actionCreators\";\nimport {AppState} from \"../../../store\";\nimport {connect} from \"react-redux\";\nimport {ImageButton} from \"../../Common/ImageButton/ImageButton\";\nimport {ISize} from \"../../../interfaces/ISize\";\nimport {ContextType} from \"../../../data/enums/ContextType\";\nimport classNames from \"classnames\";\n\ninterface IProps {\n    size: ISize;\n    imageData: ImageData;\n    totalImageCount: number;\n    activeImageIndex: number;\n    activeContext: ContextType;\n    updateActiveImageIndex: (activeImageIndex: number) => any;\n}\n\nconst BottomNavigationBar: React.FC<IProps> = ({size, imageData, totalImageCount, activeImageIndex, activeContext, updateActiveImageIndex}) => {\n    const minWidth:number = 400;\n    const viewPreviousImage = () => {\n        if (activeImageIndex > 0) {\n            updateActiveImageIndex(activeImageIndex - 1)\n        }\n    };\n\n    const viewNextImage = () => {\n        if (activeImageIndex < totalImageCount - 1) {\n            updateActiveImageIndex(activeImageIndex + 1)\n        }\n    };\n\n    const getImageCounter = () => {\n        return (activeImageIndex + 1) + \" / \" + totalImageCount;\n    };\n\n    const getClassName = () => {\n        return classNames(\n            \"BottomNavigationBar\",\n            {\n                \"with-context\": activeContext === ContextType.EDITOR\n            }\n        );\n    };\n\n    return (\n        <div className={getClassName()}>\n            <ImageButton\n                image={\"ico/left.png\"}\n                imageAlt={\"previous\"}\n                size={{width: 25, height: 25}}\n                onClick={viewPreviousImage}\n                isDisabled={activeImageIndex === 0}\n                externalClassName={\"left\"}\n            />\n            {size.width > minWidth ?\n                <div className=\"CurrentImageName\"> {imageData.fileData.name} </div> :\n                <div className=\"CurrentImageCount\"> {getImageCounter()} </div>\n            }\n            <ImageButton\n                image={\"ico/right.png\"}\n                imageAlt={\"next\"}\n                size={{width: 25, height: 25}}\n                onClick={viewNextImage}\n                isDisabled={activeImageIndex === totalImageCount - 1}\n                externalClassName={\"right\"}\n            />\n        </div>\n    );\n};\n\nconst mapDispatchToProps = {\n    updateActiveImageIndex\n};\n\nconst mapStateToProps = (state: AppState) => ({\n    activeImageIndex: state.editor.activeImageIndex,\n    activeContext: state.general.activeContext\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(BottomNavigationBar);\n","import React, {useState} from 'react';\nimport {connect} from \"react-redux\";\nimport {Direction} from \"../../../data/enums/Direction\";\nimport {ISize} from \"../../../interfaces/ISize\";\nimport {Settings} from \"../../../settings/Settings\";\nimport {AppState} from \"../../../store\";\nimport {ImageData} from \"../../../store/editor/types\";\nimport ImagesList from \"../SideNavigationBar/ImagesList/ImagesList\";\nimport LabelsToolkit from \"../SideNavigationBar/LabelsToolkit/LabelsToolkit\";\nimport {SideNavigationBar} from \"../SideNavigationBar/SideNavigationBar\";\nimport {VerticalEditorButton} from \"../VerticalEditorButton/VerticalEditorButton\";\nimport './EditorContainer.scss';\nimport Editor from \"../Editor/Editor\";\nimport BottomNavigationBar from \"../BottomNavigationBar/BottomNavigationBar\";\nimport {ContextManager} from \"../../../logic/context/ContextManager\";\nimport {ContextType} from \"../../../data/enums/ContextType\";\n\ninterface IProps {\n    windowSize: ISize;\n    activeImageIndex: number;\n    imagesData: ImageData[];\n    activeContext: ContextType;\n}\n\nconst EditorContainer: React.FC<IProps> = ({windowSize, activeImageIndex, imagesData, activeContext}) => {\n    const [leftTabStatus, setLeftTabStatus] = useState(true);\n    const [rightTabStatus, setRightTabStatus] = useState(true);\n\n    const calculateEditorSize = (): ISize => {\n        if (windowSize) {\n            const leftTabWidth = leftTabStatus ? Settings.SIDE_NAVIGATION_BAR_WIDTH_OPEN_PX : Settings.SIDE_NAVIGATION_BAR_WIDTH_CLOSED_PX;\n            const rightTabWidth = rightTabStatus ? Settings.SIDE_NAVIGATION_BAR_WIDTH_OPEN_PX : Settings.SIDE_NAVIGATION_BAR_WIDTH_CLOSED_PX;\n            return {\n                width: windowSize.width - leftTabWidth - rightTabWidth,\n                height: windowSize.height - Settings.TOP_NAVIGATION_BAR_HEIGHT_PX - Settings.BOTTOM_NAVIGATION_BAR_HEIGHT_PX,\n            }\n        }\n        else\n            return null;\n    };\n\n    const leftSideBarButtonOnClick = () => {\n        if (!leftTabStatus)\n            ContextManager.switchCtx(ContextType.LEFT_NAVBAR);\n        else if (leftTabStatus && activeContext === ContextType.LEFT_NAVBAR)\n            ContextManager.restoreCtx();\n\n        setLeftTabStatus(!leftTabStatus);\n    };\n\n    const leftSideBarCompanionRender = () => {\n        return <>\n            <VerticalEditorButton\n                label=\"Images\"\n                image={\"/ico/files.png\"}\n                imageAlt={\"images\"}\n                onClick={leftSideBarButtonOnClick}\n                isActive={leftTabStatus}\n            />\n        </>\n    };\n\n    const leftSideBarRender = () => {\n        return <ImagesList/>\n    };\n\n    const rightSideBarButtonOnClick = () => {\n        if (!rightTabStatus)\n            ContextManager.switchCtx(ContextType.RIGHT_NAVBAR);\n        else if (rightTabStatus && activeContext === ContextType.RIGHT_NAVBAR)\n            ContextManager.restoreCtx();\n\n        setRightTabStatus(!rightTabStatus);\n    };\n\n    const rightSideBarCompanionRender = () => {\n        return <>\n            <VerticalEditorButton\n                label=\"Labels\"\n                image={\"/ico/tags.png\"}\n                imageAlt={\"labels\"}\n                onClick={rightSideBarButtonOnClick}\n                isActive={rightTabStatus}\n            />\n        </>\n    };\n\n    const rightSideBarRender = () => {\n        return <LabelsToolkit/>\n    };\n\n    return (\n        <div className=\"EditorContainer\">\n            <SideNavigationBar\n                direction={Direction.LEFT}\n                isOpen={leftTabStatus}\n                isWithContext={activeContext === ContextType.LEFT_NAVBAR}\n                renderCompanion={leftSideBarCompanionRender}\n                renderContent={leftSideBarRender}\n            />\n            <div className=\"EditorWrapper\"\n                onMouseDown={() => ContextManager.switchCtx(ContextType.EDITOR)}\n            >\n                <Editor\n                    size={calculateEditorSize()}\n                    imageData={imagesData[activeImageIndex]}\n                />\n                <BottomNavigationBar\n                    imageData={imagesData[activeImageIndex]}\n                    size={calculateEditorSize()}\n                    totalImageCount={imagesData.length}\n                />\n            </div>\n            <SideNavigationBar\n                direction={Direction.RIGHT}\n                isOpen={rightTabStatus}\n                isWithContext={activeContext === ContextType.RIGHT_NAVBAR}\n                renderCompanion={rightSideBarCompanionRender}\n                renderContent={rightSideBarRender}\n            />\n        </div>\n    );\n};\n\nconst mapStateToProps = (state: AppState) => ({\n    windowSize: state.general.windowSize,\n    activeImageIndex: state.editor.activeImageIndex,\n    imagesData: state.editor.imagesData,\n    activeContext: state.general.activeContext\n});\n\nexport default connect(\n    mapStateToProps\n)(EditorContainer);","import React from 'react';\nimport './StateBar.scss';\nimport {ImageData} from \"../../../store/editor/types\";\nimport {AppState} from \"../../../store\";\nimport {connect} from \"react-redux\";\nimport {LabelType} from \"../../../data/enums/LabelType\";\n\ninterface IProps {\n    imagesData: ImageData[];\n    activeLabelType: LabelType;\n}\n\nconst StateBar: React.FC<IProps> = ({imagesData, activeLabelType}) => {\n\n    const pointLabeledImages = imagesData.reduce((currentCount: number, currentImage: ImageData) => {\n        return currentCount + (currentImage.labelPoints.length > 0 ? 1 : 0);\n    }, 0);\n\n    const rectLabeledImages = imagesData.reduce((currentCount: number, currentImage: ImageData) => {\n        return currentCount + (currentImage.labelRects.length > 0 ? 1 : 0);\n    }, 0);\n\n    const polygonLabeledImages = imagesData.reduce((currentCount: number, currentImage: ImageData) => {\n        return currentCount + (currentImage.labelPolygons.length > 0 ? 1 : 0);\n    }, 0);\n\n    const getProgress = () => {\n        switch (activeLabelType) {\n            case LabelType.POINT:\n                return (100 * pointLabeledImages) / imagesData.length;\n            case LabelType.RECTANGLE:\n                return (100 * rectLabeledImages) / imagesData.length;\n            case LabelType.POLYGON:\n                return (100 * polygonLabeledImages) / imagesData.length;\n            default:\n                return 0;\n        }\n    };\n\n    return (\n        <div className=\"StateBar\">\n            <div\n                style={{width: getProgress() + \"%\"}}\n                className=\"done\"\n            />\n        </div>\n    );\n};\n\nconst mapDispatchToProps = {};\n\nconst mapStateToProps = (state: AppState) => ({\n    imagesData: state.editor.imagesData,\n    activeLabelType: state.editor.activeLabelType\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(StateBar);","import React from 'react'\nimport classNames from 'classnames'\nimport './UnderlineTextButton.scss'\n\ninterface IProps {\n  under?: boolean\n  over?: boolean\n  active?: boolean\n  key?: string\n  label: string\n  onClick?: () => any\n  style?: React.CSSProperties\n}\n\nexport const UnderlineTextButton = (props: IProps) => {\n  const { under, over, active, key, label, onClick, style } = props;\n\n  const getClassName = () => {\n    return classNames('UnderlineTextButton', {\n      under: under,\n      over: over,\n      active: active,\n    })\n  };\n\n  return (\n    <div\n      className={getClassName()}\n      onClick={!!onClick ? onClick : undefined}\n      key={key}\n      style={style}\n    >\n      {label}\n    </div>\n  )\n};\n","import React from 'react';\nimport './TextInput.scss';\n\ninterface IProps {\n    key: string;\n    label?: string;\n    isPassword: boolean;\n    onChange?: (event: React.ChangeEvent<HTMLInputElement>) => any;\n    onFocus?: (event: React.FocusEvent<HTMLInputElement>) => any;\n    inputStyle?: React.CSSProperties;\n    labelStyle?: React.CSSProperties;\n    barStyle?: React.CSSProperties;\n    value?: string;\n}\n\nconst TextInput = (props: IProps) => {\n\n    const {\n        key,\n        label,\n        isPassword,\n        onChange,\n        onFocus,\n        inputStyle,\n        labelStyle,\n        barStyle,\n        value\n    } = props;\n\n    const getInputType = () => {\n        return isPassword ? \"password\" : \"text\";\n    };\n\n    return (\n        <div className=\"TextInput\">\n            <input\n                value={!!value ? value : undefined}\n                type={getInputType()}\n                id={key}\n                style={inputStyle}\n                onChange={onChange ? onChange : undefined}\n                onFocus={onFocus ? onFocus : undefined}\n            />\n            {!!label && <label\n                htmlFor={key}\n                style={labelStyle}\n            >\n                {label}\n            </label>}\n            <div\n                className=\"Bar\"\n                style={barStyle}\n            />\n        </div>\n    );\n};\n\nexport default TextInput;","import React from \"react\";\nimport \"./TopNavigationBar.scss\";\nimport StateBar from \"../StateBar/StateBar\";\nimport { UnderlineTextButton } from \"../../Common/UnderlineTextButton/UnderlineTextButton\";\nimport { PopupWindowType } from \"../../../data/enums/PopupWindowType\";\nimport { AppState } from \"../../../store\";\nimport { connect } from \"react-redux\";\nimport { updateActivePopupType } from \"../../../store/general/actionCreators\";\nimport TextInput from \"../../Common/TextInput/TextInput\";\nimport { updateProjectName } from \"../../../store/editor/actionCreators\";\nimport { ImageButton } from \"../../Common/ImageButton/ImageButton\";\nimport { Settings } from \"../../../settings/Settings\";\n\ninterface IProps {\n  updateActivePopupType: (activePopupType: PopupWindowType) => any;\n  updateProjectName: (projectName: string) => any;\n  projectName: string;\n}\n\nconst TopNavigationBar: React.FC<IProps> = ({\n  updateActivePopupType,\n  updateProjectName,\n  projectName,\n}) => {\n  const onFocus = (event: React.FocusEvent<HTMLInputElement>) => {\n    event.target.setSelectionRange(0, event.target.value.length);\n  };\n\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.value.toLowerCase().replace(\" \", \"-\");\n    updateProjectName(value);\n  };\n\n  return (\n    <div className=\"TopNavigationBar\">\n      <StateBar />\n      <div className=\"TopNavigationBarWrapper\">\n        <div>\n          <div\n            className=\"Header\"\n            // onClick={() => updateActivePopupType(PopupWindowType.EXIT_PROJECT)}\n          >\n            <img draggable={false} alt={\"make-sense\"} src={\"/make-sense-ico-transparent.png\"} />\n            Make Sense\n          </div>\n        </div>\n        <div className=\"NavigationBarGroupWrapper\">\n          <div className=\"ProjectName\">项目名称:</div>\n          <TextInput\n            key={\"ProjectName\"}\n            isPassword={false}\n            value={projectName}\n            onChange={onChange}\n            onFocus={onFocus}\n          />\n        </div>\n        <div className=\"NavigationBarGroupWrapper\">\n          <UnderlineTextButton\n            label={\"导入更多图片\"}\n            under={true}\n            onClick={() => updateActivePopupType(PopupWindowType.LOAD_IMAGES)}\n          />\n          <UnderlineTextButton\n            label={\"导出标注\"}\n            under={true}\n            onClick={() => updateActivePopupType(PopupWindowType.EXPORT_LABELS)}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {\n  updateActivePopupType,\n  updateProjectName,\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  projectName: state.editor.projectName,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TopNavigationBar);\n","import React from 'react';\nimport './EditorView.scss';\nimport EditorContainer from \"./EditorContainer/EditorContainer\";\nimport {PopupWindowType} from \"../../data/enums/PopupWindowType\";\nimport {AppState} from \"../../store\";\nimport {connect} from \"react-redux\";\nimport classNames from \"classnames\";\nimport TopNavigationBar from \"./TopNavigationBar/TopNavigationBar\";\n\ninterface IProps {\n    activePopupType: PopupWindowType;\n}\n\nconst EditorView: React.FC<IProps> = ({activePopupType}) => {\n\n    const getClassName = () => {\n        return classNames(\n            \"EditorView\",\n            {\n                \"withPopup\": !!activePopupType\n            }\n        );\n    };\n\n    return (\n        <div className={getClassName()}>\n            <TopNavigationBar/>\n            <EditorContainer/>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state: AppState) => ({\n    activePopupType: state.general.activePopupType\n});\n\nexport default connect(\n    mapStateToProps\n)(EditorView);","import * as React from 'react';\nimport './TextButton.scss';\nimport classNames from \"classnames\";\n\ninterface IProps {\n    key?:string;\n    label:string;\n    onClick?:() => any;\n    style?:React.CSSProperties;\n    isActive?:boolean;\n    isDisabled?:boolean;\n    externalClassName?:string;\n}\n\nexport const TextButton = (props:IProps) => {\n    const { key, label, onClick, style, isActive, isDisabled, externalClassName} = props;\n\n    const getClassName = () => {\n        return classNames(\n            \"TextButton\",\n            externalClassName,\n            {\n                \"active\": isActive,\n                \"disabled\": isDisabled\n            }\n        );\n    };\n\n    const onClickHandler = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n        event.stopPropagation();\n        !!onClick && onClick();\n    };\n\n    return(\n        <div\n            className={getClassName()}\n            onClick={onClickHandler}\n            key={key}\n            style={style}\n        >\n            {label}\n        </div>\n    )\n};","import {Settings} from \"../../settings/Settings\";\n\nexport interface ISocialMedia {\n    displayName:string;\n    imageSrc:string;\n    imageAlt:string;\n    href:string;\n    tooltipMessage:string;\n}\n\nexport const SocialMediaData: ISocialMedia[] = [\n    {\n        displayName: \"Github\",\n        imageSrc: \"/img/github-logo.png\",\n        imageAlt: \"GitHub Logo\",\n        href: Settings.GITHUB_URL,\n        tooltipMessage: \"Show me some love on GitHub\",\n    },\n    {\n        displayName: \"Medium\",\n        imageSrc: \"/img/medium-logo.png\",\n        imageAlt: \"Medium Logo\",\n        href: Settings.MEDIUM_URL,\n        tooltipMessage: \"Read my AI content on Medium\",\n    },\n    {\n        displayName: \"Patreon\",\n        imageSrc: \"/img/patreon-logo.png\",\n        imageAlt: \"Patreon Logo\",\n        href: Settings.PATREON_URL,\n        tooltipMessage: \"Support MakeSense on Patreon and help it grow\"\n    },\n];","export interface IEditorFeature {\n  displayText: string;\n  imageSrc: string;\n  imageAlt: string;\n}\n\nexport const EditorFeatureData: IEditorFeature[] = [\n  {\n    displayText: \"开源并且在GPLv3协议许可下免费使用\",\n    imageSrc: \"img/open-source.png\",\n    imageAlt: \"open-source\",\n  },\n  {\n    displayText: \"不需要额外安装，仅仅打开浏览器就可以开始工作\",\n    imageSrc: \"img/online.png\",\n    imageAlt: \"online\",\n  },\n  {\n    displayText: \"我们不存储你的图片\",\n    imageSrc: \"img/private.png\",\n    imageAlt: \"private\",\n  },\n  {\n    displayText: \"支持点、矩形、多边形标注\",\n    imageSrc: \"img/labels.png\",\n    imageAlt: \"labels\",\n  },\n  {\n    displayText: \"支持导出标注数据\",\n    imageSrc: \"img/file.png\",\n    imageAlt: \"file\",\n  },\n  {\n    displayText: \"支持裁剪和调整大小\",\n    imageSrc: \"img/crop.png\",\n    imageAlt: \"crop\",\n  },\n];\n","import React from \"react\";\nimport \"./ImagesDropZone.scss\";\nimport { useDropzone } from \"react-dropzone\";\nimport { TextButton } from \"../../Common/TextButton/TextButton\";\nimport { ImageData } from \"../../../store/editor/types\";\nimport { connect } from \"react-redux\";\nimport {\n  addImageData,\n  updateActiveImageIndex,\n  updateProjectType,\n} from \"../../../store/editor/actionCreators\";\nimport { AppState } from \"../../../store\";\nimport { ProjectType } from \"../../../data/enums/ProjectType\";\nimport { FileUtil } from \"../../../utils/FileUtil\";\nimport { PopupWindowType } from \"../../../data/enums/PopupWindowType\";\nimport { updateActivePopupType } from \"../../../store/general/actionCreators\";\nimport { AcceptedFileType } from \"../../../data/enums/AcceptedFileType\";\n\ninterface IProps {\n  updateActiveImageIndex: (activeImageIndex: number) => any;\n  addImageData: (imageData: ImageData[]) => any;\n  updateProjectType: (projectType: ProjectType) => any;\n  updateActivePopupType: (activePopupType: PopupWindowType) => any;\n}\n\nconst ImagesDropZone: React.FC<IProps> = ({\n  updateActiveImageIndex,\n  addImageData,\n  updateProjectType,\n  updateActivePopupType,\n}) => {\n  const { acceptedFiles, getRootProps, getInputProps } = useDropzone({\n    accept: AcceptedFileType.IMAGE,\n  });\n\n  const startEditor = (projectType: ProjectType) => {\n    if (acceptedFiles.length > 0) {\n      updateProjectType(projectType);\n      updateActiveImageIndex(0);\n      addImageData(\n        acceptedFiles.map((fileData: File) => FileUtil.mapFileDataToImageData(fileData))\n      );\n      updateActivePopupType(PopupWindowType.INSERT_LABEL_NAMES);\n    }\n  };\n\n  const getDropZoneContent = () => {\n    if (acceptedFiles.length === 0)\n      return (\n        <>\n          <input {...getInputProps()} />\n          <img draggable={false} alt={\"upload\"} src={\"img/box-opened.png\"} />\n          <p className=\"extraBold\">拖拽图片至此</p>\n          <p>或</p>\n          <p className=\"extraBold\">点击选取</p>\n        </>\n      );\n    else if (acceptedFiles.length === 1)\n      return (\n        <>\n          <img draggable={false} alt={\"uploaded\"} src={\"img/box-closed.png\"} />\n          <p className=\"extraBold\">已载入 1 张图片</p>\n        </>\n      );\n    else\n      return (\n        <>\n          <input {...getInputProps()} />\n          <img draggable={false} key={1} alt={\"uploaded\"} src={\"img/box-closed.png\"} />\n          <p key={2} className=\"extraBold\">\n            已载入 {acceptedFiles.length} 张图片\n          </p>\n        </>\n      );\n  };\n\n  return (\n    <div className=\"ImagesDropZone\">\n      <div {...getRootProps({ className: \"DropZone\" })}>{getDropZoneContent()}</div>\n      <div className=\"DropZoneButtons\">\n        {/* <TextButton label={\"Image recognition\"} isDisabled={true} onClick={() => {}} /> */}\n        <TextButton\n          label={\"开始标记\"}\n          isDisabled={!acceptedFiles.length}\n          onClick={() => startEditor(ProjectType.OBJECT_DETECTION)}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {\n  updateActiveImageIndex,\n  addImageData,\n  updateProjectType,\n  updateActivePopupType,\n};\n\nconst mapStateToProps = (state: AppState) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ImagesDropZone);\n","export enum ExportFormatType {\n    YOLO = \"YOLO\",\n    COCO = \"COCO\",\n    CSV = \"CSV\",\n    VOC = \"VOC\",\n    VGG_JSON = \"VGG_JSON\"\n}","import React, { useState } from \"react\";\nimport \"./MainView.scss\";\nimport { TextButton } from \"../Common/TextButton/TextButton\";\nimport classNames from \"classnames\";\nimport { ISize } from \"../../interfaces/ISize\";\nimport { ImageButton } from \"../Common/ImageButton/ImageButton\";\nimport { ISocialMedia, SocialMediaData } from \"../../data/info/SocialMediaData\";\nimport { EditorFeatureData, IEditorFeature } from \"../../data/info/EditorFeatureData\";\nimport { Tooltip } from \"@material-ui/core\";\nimport Fade from \"@material-ui/core/Fade\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport ImagesDropZone from \"./ImagesDropZone/ImagesDropZone\";\n\nconst MainView: React.FC = () => {\n  const [projectInProgress, setProjectInProgress] = useState(true);\n  const [projectCanceled, setProjectCanceled] = useState(false);\n\n  const startProject = () => {\n    setProjectInProgress(true);\n  };\n\n  const endProject = () => {\n    setProjectInProgress(false);\n    setProjectCanceled(true);\n  };\n\n  const getClassName = () => {\n    return classNames(\"MainView\", {\n      InProgress: projectInProgress,\n      Canceled: !projectInProgress && projectCanceled,\n    });\n  };\n\n  const DarkTooltip = withStyles(theme => ({\n    tooltip: {\n      backgroundColor: \"#171717\",\n      color: \"#ffffff\",\n      boxShadow: theme.shadows[1],\n      fontSize: 11,\n      maxWidth: 120,\n    },\n  }))(Tooltip);\n\n  const getSocialMediaButtons = (size: ISize) => {\n    return SocialMediaData.map((data: ISocialMedia, index: number) => {\n      return (\n        <DarkTooltip\n          key={index}\n          disableFocusListener\n          title={data.tooltipMessage}\n          TransitionComponent={Fade}\n          TransitionProps={{ timeout: 600 }}\n          placement=\"left\"\n        >\n          <div>\n            <ImageButton\n              size={size}\n              image={data.imageSrc}\n              imageAlt={data.imageAlt}\n              href={data.href}\n            />\n          </div>\n        </DarkTooltip>\n      );\n    });\n  };\n\n  const getEditorFeatureTiles = () => {\n    return EditorFeatureData.map((data: IEditorFeature) => {\n      return (\n        <div className=\"EditorFeaturesTiles\" key={data.displayText}>\n          <div className=\"EditorFeaturesTilesWrapper\">\n            <img draggable={false} alt={data.imageAlt} src={data.imageSrc} />\n            <div className=\"EditorFeatureLabel\">{data.displayText}</div>\n          </div>\n        </div>\n      );\n    });\n  };\n\n  return (\n    <div className={getClassName()}>\n      <div className=\"Slider\" id=\"lower\">\n        <div className=\"TriangleVertical\">\n          <div className=\"TriangleVerticalContent\" />\n        </div>\n      </div>\n\n      <div className=\"Slider\" id=\"upper\">\n        <div className=\"TriangleVertical\">\n          <div className=\"TriangleVerticalContent\" />\n        </div>\n      </div>\n\n      <div className=\"LeftColumn\">\n        <div className={\"LogoWrapper\"}>\n          <img draggable={false} alt={\"main-logo\"} src={\"img/main-image-color.png\"} />\n        </div>\n        <div className=\"EditorFeaturesWrapper\">{getEditorFeatureTiles()}</div>\n        <div className=\"TriangleVertical\">\n          <div className=\"TriangleVerticalContent\" />\n        </div>\n        {projectInProgress && <TextButton label={\"返回\"} onClick={endProject} />}\n      </div>\n      <div className=\"RightColumn\">\n        <div />\n        <ImagesDropZone />\n        {/* <div className=\"SocialMediaWrapper\">{getSocialMediaButtons({ width: 30, height: 30 })}</div> */}\n        <div className=\"SocialMediaWrapper\"></div>\n        {!projectInProgress && <TextButton label={\"开始\"} onClick={startProject} />}\n      </div>\n    </div>\n  );\n};\n\nexport default MainView;\n","import React, { useEffect, useState } from \"react\";\nimport \"./GenericYesNoPopup.scss\";\nimport { TextButton } from \"../../Common/TextButton/TextButton\";\nimport { ContextManager } from \"../../../logic/context/ContextManager\";\nimport { ContextType } from \"../../../data/enums/ContextType\";\n\ninterface IProps {\n  title: string;\n  renderContent: () => any;\n  acceptLabel: string;\n  onAccept: () => any;\n  skipAcceptButton?: boolean;\n  disableAcceptButton?: boolean;\n  rejectLabel: string;\n  onReject: () => any;\n  skipRejectButton?: boolean;\n  disableRejectButton?: boolean;\n}\n\nexport const GenericYesNoPopup: React.FC<IProps> = ({\n  title,\n  renderContent,\n  acceptLabel,\n  onAccept,\n  skipAcceptButton,\n  disableAcceptButton,\n  rejectLabel,\n  onReject,\n  skipRejectButton,\n  disableRejectButton,\n}) => {\n  const [status, setMountStatus] = useState(false);\n  useEffect(() => {\n    if (!status) {\n      ContextManager.switchCtx(ContextType.POPUP);\n      setMountStatus(true);\n    }\n  }, [status]);\n\n  return (\n    <div className=\"GenericYesNoPopup\">\n      <div className=\"Header\">{title}</div>\n      <div className=\"Content\">{renderContent()}</div>\n      <div className=\"Footer\">\n        {!skipRejectButton && (\n          <TextButton\n            label={!!rejectLabel ? rejectLabel : \"NO, THANKS\"}\n            onClick={onReject}\n            externalClassName={\"reject\"}\n            isDisabled={disableRejectButton}\n          />\n        )}\n        {!skipAcceptButton && (\n          <TextButton\n            label={!!acceptLabel ? acceptLabel : \"YES\"}\n            onClick={onAccept}\n            externalClassName={\"accept\"}\n            isDisabled={disableAcceptButton}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport \"./LoadLabelNamesPopup.scss\";\nimport { AppState } from \"../../../store\";\nimport { connect } from \"react-redux\";\nimport {\n  updateActiveLabelNameIndex,\n  updateLabelNamesList,\n} from \"../../../store/editor/actionCreators\";\nimport { GenericYesNoPopup } from \"../GenericYesNoPopup/GenericYesNoPopup\";\nimport { PopupWindowType } from \"../../../data/enums/PopupWindowType\";\nimport { updateActivePopupType } from \"../../../store/general/actionCreators\";\nimport { useDropzone } from \"react-dropzone\";\nimport { FileUtil } from \"../../../utils/FileUtil\";\nimport { AcceptedFileType } from \"../../../data/enums/AcceptedFileType\";\nimport { PopupActions } from \"../../../logic/actions/PopupActions\";\n\ninterface IProps {\n  updateActiveLabelNameIndex: (activeLabelIndex: number) => any;\n  updateLabelNamesList: (labelNames: string[]) => any;\n  updateActivePopupType: (activePopupType: PopupWindowType) => any;\n}\n\nconst LoadLabelNamesPopup: React.FC<IProps> = ({\n  updateActiveLabelNameIndex,\n  updateLabelNamesList,\n  updateActivePopupType,\n}) => {\n  const [labelsList, setLabelsList] = useState([]);\n  const [invalidFileLoadedStatus, setInvalidFileLoadedStatus] = useState(false);\n\n  const { acceptedFiles, getRootProps, getInputProps } = useDropzone({\n    accept: AcceptedFileType.TEXT,\n    multiple: false,\n    onDrop: acceptedFiles => {\n      if (acceptedFiles.length === 1) {\n        FileUtil.loadLabelsList(acceptedFiles[0], onSuccess, onFailure);\n      }\n    },\n  });\n\n  const onSuccess = (labelsList: string[]) => {\n    setLabelsList(labelsList);\n    setInvalidFileLoadedStatus(false);\n  };\n\n  const onFailure = () => {\n    setInvalidFileLoadedStatus(true);\n  };\n\n  const onAccept = () => {\n    if (labelsList.length > 0) {\n      updateActiveLabelNameIndex(0);\n      updateLabelNamesList(labelsList);\n      PopupActions.close();\n    }\n  };\n\n  const onReject = () => {\n    updateActivePopupType(PopupWindowType.INSERT_LABEL_NAMES);\n  };\n\n  const getDropZoneContent = () => {\n    if (invalidFileLoadedStatus)\n      return (\n        <>\n          <input {...getInputProps()} />\n          <img draggable={false} alt={\"upload\"} src={\"img/box-opened.png\"} />\n          <p className=\"extraBold\">导入文件未成功！</p>\n          <p className=\"extraBold\">请再试一次</p>\n        </>\n      );\n    else if (acceptedFiles.length === 0)\n      return (\n        <>\n          <input {...getInputProps()} />\n          <img draggable={false} alt={\"upload\"} src={\"img/box-opened.png\"} />\n          <p className=\"extraBold\">拖拽文件到这里</p>\n          <p>或</p>\n          <p className=\"extraBold\">点击此处选择导入</p>\n        </>\n      );\n    else if (labelsList.length === 1)\n      return (\n        <>\n          <img draggable={false} alt={\"uploaded\"} src={\"img/box-closed.png\"} />\n          <p className=\"extraBold\">已导入了一个标签</p>\n        </>\n      );\n    else\n      return (\n        <>\n          <img draggable={false} alt={\"uploaded\"} src={\"img/box-closed.png\"} />\n          <p className=\"extraBold\"> 已导入了{labelsList.length}个标签</p>\n        </>\n      );\n  };\n\n  const renderContent = () => {\n    return (\n      <div className=\"LoadLabelsPopupContent\">\n        <div className=\"Message\">\n          选择一个你准备好的.txt格式的文本文件，注意每个标签应该另起一行\n        </div>\n        <div {...getRootProps({ className: \"DropZone\" })}>{getDropZoneContent()}</div>\n      </div>\n    );\n  };\n\n  return (\n    <GenericYesNoPopup\n      title={\"导入标签列表文件\"}\n      renderContent={renderContent}\n      acceptLabel={\"开始\"}\n      onAccept={onAccept}\n      disableAcceptButton={labelsList.length === 0}\n      rejectLabel={\"返回\"}\n      onReject={onReject}\n    />\n  );\n};\n\nconst mapDispatchToProps = {\n  updateActiveLabelNameIndex,\n  updateLabelNamesList,\n  updateActivePopupType,\n};\n\nconst mapStateToProps = (state: AppState) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoadLabelNamesPopup);\n","export class XMLSanitizerUtil {\n    public static sanitize(input: string): string {\n        return input\n            .replace('<', '&lt;')\n            .replace('>', '&gt;')\n            .replace('&', '&amp;')\n            .replace(\"'\", '&#39;')\n            .replace(\"/\", '&#x2F;')\n    }\n}","import {EditorSelector} from \"../store/selectors/EditorSelector\";\nimport moment from 'moment';\n\nexport class ExporterUtil {\n    public static getExportFileName(): string {\n        const projectName: string = EditorSelector.getProjectName();\n        const date: string = moment().format('YYYYMMDDhhmmss');\n        return `labels_${projectName}_${date}`\n    }\n}","import {ExportFormatType} from \"../../data/enums/ExportFormatType\";\nimport {ImageData, LabelRect} from \"../../store/editor/types\";\nimport {ImageRepository} from \"../imageRepository/ImageRepository\";\nimport JSZip from 'jszip';\nimport { saveAs } from 'file-saver';\nimport {EditorSelector} from \"../../store/selectors/EditorSelector\";\nimport {XMLSanitizerUtil} from \"../../utils/XMLSanitizerUtil\";\nimport {ExporterUtil} from \"../../utils/ExporterUtil\";\n\nexport class RectLabelsExporter {\n    public static export(exportFormatType: ExportFormatType): void {\n        switch (exportFormatType) {\n            case ExportFormatType.YOLO:\n                RectLabelsExporter.exportAsYOLO();\n                break;\n            case ExportFormatType.VOC:\n                RectLabelsExporter.exportAsVOC();\n                break;\n            case ExportFormatType.CSV:\n                RectLabelsExporter.exportAsCSV();\n                break;\n            default:\n                return;\n        }\n    }\n\n    private static exportAsYOLO(): void {\n        let zip = new JSZip();\n        EditorSelector.getImagesData()\n            .forEach((imageData: ImageData) => {\n                const fileContent: string = RectLabelsExporter.wrapRectLabelsIntoYOLO(imageData);\n                if (fileContent) {\n                    const fileName : string = imageData.fileData.name.replace(/\\.[^/.]+$/, \".txt\");\n                    try {\n                        zip.file(fileName, fileContent);\n                    } catch (error) {\n                        // TODO\n                        throw new Error(error);\n                    }\n                }\n            });\n\n        try {\n            zip.generateAsync({type:\"blob\"})\n                .then(function(content) {\n                    saveAs(content, `${ExporterUtil.getExportFileName()}.zip`);\n                });\n        } catch (error) {\n            // TODO\n            throw new Error(error);\n        }\n\n    }\n\n    private static wrapRectLabelsIntoYOLO(imageData: ImageData): string {\n        if (imageData.labelRects.length === 0 || !imageData.loadStatus)\n            return null;\n\n        const image: HTMLImageElement = ImageRepository.getById(imageData.id);\n        const labelRectsString: string[] = imageData.labelRects.map((labelRect: LabelRect) => {\n            const labelFields = [\n                labelRect.labelIndex + \"\",\n                ((labelRect.rect.x + labelRect.rect.width / 2) / image.width).toFixed(6) + \"\",\n                ((labelRect.rect.y + labelRect.rect.height / 2) / image.height).toFixed(6) + \"\",\n                (labelRect.rect.width / image.width).toFixed(6) + \"\",\n                (labelRect.rect.height / image.height).toFixed(6) + \"\"\n            ];\n            return labelFields.join(\" \")\n        });\n        return labelRectsString.join(\"\\n\");\n    }\n\n    private static exportAsVOC(): void {\n        let zip = new JSZip();\n        EditorSelector.getImagesData().forEach((imageData: ImageData) => {\n                const fileContent: string = RectLabelsExporter.wrapImageIntoVOC(imageData);\n                if (fileContent) {\n                    const fileName : string = imageData.fileData.name.replace(/\\.[^/.]+$/, \".xml\");\n                    try {\n                        zip.file(fileName, fileContent);\n                    } catch (error) {\n                        // TODO\n                        throw new Error(error);\n                    }\n                }\n            });\n\n        try {\n            zip.generateAsync({type:\"blob\"})\n                .then(function(content) {\n                    saveAs(content, `${ExporterUtil.getExportFileName()}.zip`);\n                });\n        } catch (error) {\n            // TODO\n            throw new Error(error);\n        }\n    }\n\n    private static wrapRectLabelsIntoVOC(imageData: ImageData): string {\n        if (imageData.labelRects.length === 0 || !imageData.loadStatus)\n            return null;\n\n        const labelNamesList: string[] = EditorSelector.getLabelNames();\n        const labelRectsString: string[] = imageData.labelRects.map((labelRect: LabelRect) => {\n            const labelFields = [\n                `\\t<object>`,\n                `\\t\\t<name>${labelNamesList[labelRect.labelIndex]}</name>`,\n                `\\t\\t<pose>Unspecified</pose>`,\n                `\\t\\t<truncated>Unspecified</truncated>`,\n                `\\t\\t<difficult>Unspecified</difficult>`,\n                `\\t\\t<bndbox>`,\n                `\\t\\t\\t<xmin>${Math.round(labelRect.rect.x)}</xmin>`,\n                `\\t\\t\\t<ymin>${Math.round(labelRect.rect.y)}</ymin>`,\n                `\\t\\t\\t<xmax>${Math.round(labelRect.rect.x + labelRect.rect.width)}</xmax>`,\n                `\\t\\t\\t<ymax>${Math.round(labelRect.rect.y + labelRect.rect.height)}</ymax>`,\n                `\\t\\t</bndbox>`,\n                `\\t</object>`\n            ];\n            return labelFields.join(\"\\n\")\n        });\n        return labelRectsString.join(\"\\n\");\n    }\n\n    private static wrapImageIntoVOC(imageData: ImageData): string {\n        const labels: string = RectLabelsExporter.wrapRectLabelsIntoVOC(imageData);\n        const projectName: string = XMLSanitizerUtil.sanitize(EditorSelector.getProjectName());\n\n        if (labels) {\n            const image: HTMLImageElement = ImageRepository.getById(imageData.id);\n            return [\n                `<annotation>`,\n                `\\t<folder>${projectName}</folder>`,\n                `\\t<filename>${imageData.fileData.name}</filename>`,\n                `\\t<path>/${projectName}/${imageData.fileData.name}</path>`,\n                `\\t<source>`,\n                `\\t\\t<database>Unspecified</database>`,\n                `\\t</source>`,\n                `\\t<size>`,\n                `\\t\\t<width>${image.width}</width>`,\n                `\\t\\t<height>${image.height}</height>`,\n                `\\t\\t<depth>3</depth>`,\n                `\\t</size>`,\n                labels,\n                `</annotation>`\n            ].join(\"\\n\");\n        }\n        return null;\n    }\n\n\n    private static exportAsCSV(): void {\n        const content: string = EditorSelector.getImagesData()\n            .map((imageData: ImageData) => {\n                return RectLabelsExporter.wrapRectLabelsIntoCSV(imageData)})\n            .filter((imageLabelData: string) => {\n                return !!imageLabelData})\n            .join(\"\\n\");\n\n        const blob = new Blob([content], {type: \"text/plain;charset=utf-8\"});\n        try {\n            saveAs(blob, `${ExporterUtil.getExportFileName()}.csv`);\n        } catch (error) {\n            // TODO\n            throw new Error(error);\n        }\n    }\n\n    private static wrapRectLabelsIntoCSV(imageData: ImageData): string {\n        if (imageData.labelRects.length === 0 || !imageData.loadStatus)\n            return null;\n\n        const image: HTMLImageElement = ImageRepository.getById(imageData.id);\n        const labelNamesList: string[] = EditorSelector.getLabelNames();\n        const labelRectsString: string[] = imageData.labelRects.map((labelRect: LabelRect) => {\n            const labelFields = [\n                labelNamesList[labelRect.labelIndex],\n                Math.round(labelRect.rect.x) + \"\",\n                Math.round(labelRect.rect.y) + \"\",\n                Math.round(labelRect.rect.width) + \"\",\n                Math.round(labelRect.rect.height) + \"\",\n                imageData.fileData.name,\n                image.width + \"\",\n                image.height + \"\"\n            ];\n            return labelFields.join(\",\")\n        });\n        return labelRectsString.join(\"\\n\");\n    }\n}","import { ExportFormatType } from \"../enums/ExportFormatType\";\nimport { IExportFormat } from \"../../interfaces/IExportFormat\";\n\nexport const RectExportFormatData: IExportFormat[] = [\n  {\n    type: ExportFormatType.YOLO,\n    label: \"YOLO 格式的zip包\",\n  },\n  {\n    type: ExportFormatType.VOC,\n    label: \"XML 格式的zip包\",\n  },\n  {\n    type: ExportFormatType.CSV,\n    label: \"单一的CSV文件\",\n  },\n];\n","import { ExportFormatType } from \"../enums/ExportFormatType\";\nimport { IExportFormat } from \"../../interfaces/IExportFormat\";\n\nexport const PointExportFormatData: IExportFormat[] = [\n  {\n    type: ExportFormatType.CSV,\n    label: \"单一的CSV文件\",\n  },\n];\n","import {ExportFormatType} from \"../../data/enums/ExportFormatType\";\nimport {ImageData, LabelPoint} from \"../../store/editor/types\";\nimport {saveAs} from \"file-saver\";\nimport {ImageRepository} from \"../imageRepository/ImageRepository\";\nimport {EditorSelector} from \"../../store/selectors/EditorSelector\";\nimport {ExporterUtil} from \"../../utils/ExporterUtil\";\n\nexport class PointLabelsExporter {\n    public static export(exportFormatType: ExportFormatType): void {\n        switch (exportFormatType) {\n            case ExportFormatType.CSV:\n                PointLabelsExporter.exportAsCSV();\n                break;\n            default:\n                return;\n        }\n    }\n\n    private static exportAsCSV(): void {\n        const content: string = EditorSelector.getImagesData()\n            .map((imageData: ImageData) => {\n                return PointLabelsExporter.wrapRectLabelsIntoCSV(imageData)})\n            .filter((imageLabelData: string) => {\n                return !!imageLabelData})\n            .join(\"\\n\");\n\n        const blob = new Blob([content], {type: \"text/plain;charset=utf-8\"});\n        try {\n            saveAs(blob, `${ExporterUtil.getExportFileName()}.csv`);\n        } catch (error) {\n            // TODO\n            throw new Error(error);\n        }\n    }\n\n    private static wrapRectLabelsIntoCSV(imageData: ImageData): string {\n        if (imageData.labelPoints.length === 0 || !imageData.loadStatus)\n            return null;\n\n        const image: HTMLImageElement = ImageRepository.getById(imageData.id);\n        const labelNamesList: string[] = EditorSelector.getLabelNames();\n        const labelRectsString: string[] = imageData.labelPoints.map((labelPoint: LabelPoint) => {\n            const labelFields = [\n                labelNamesList[labelPoint.labelIndex],\n                Math.round(labelPoint.point.x) + \"\",\n                Math.round(labelPoint.point.y) + \"\",\n                imageData.fileData.name,\n                image.width + \"\",\n                image.height + \"\"\n            ];\n            return labelFields.join(\",\")\n        });\n        return labelRectsString.join(\"\\n\");\n    }\n}","import { IExportFormat } from \"../../interfaces/IExportFormat\";\nimport { ExportFormatType } from \"../enums/ExportFormatType\";\n\nexport const PolygonExportFormatData: IExportFormat[] = [\n  {\n    type: ExportFormatType.VGG_JSON,\n    label: \"VGG JSON格式文件\",\n  },\n];\n","import { ExportFormatType } from \"../../data/enums/ExportFormatType\";\nimport { IPoint } from \"../../interfaces/IPoint\";\nimport { VGGFileData, VGGObject, VGGPolygon, VGGRegionsData } from \"../../data/VGG/IVGG\";\nimport { ImageData, LabelPolygon } from \"../../store/editor/types\";\nimport { EditorSelector } from \"../../store/selectors/EditorSelector\";\nimport { saveAs } from \"file-saver\";\nimport { ExporterUtil } from \"../../utils/ExporterUtil\";\n\nexport class PolygonLabelsExporter {\n  public static export(exportFormatType: ExportFormatType): void {\n    switch (exportFormatType) {\n      case ExportFormatType.VGG_JSON:\n        PolygonLabelsExporter.exportAsVGGJson();\n        break;\n      default:\n        return;\n    }\n  }\n\n  private static exportAsVGGJson(): void {\n    const imagesData: ImageData[] = EditorSelector.getImagesData();\n    const labelNames: string[] = EditorSelector.getLabelNames();\n    const content: string = JSON.stringify(\n      PolygonLabelsExporter.mapImagesDataToVGGObject(imagesData, labelNames)\n    );\n    const blob = new Blob([content], { type: \"text/plain;charset=utf-8\" });\n    try {\n      saveAs(blob, `${ExporterUtil.getExportFileName()}.json`);\n    } catch (error) {\n      // TODO\n      throw new Error(error);\n    }\n  }\n\n  private static mapImagesDataToVGGObject(\n    imagesData: ImageData[],\n    labelNames: string[]\n  ): VGGObject {\n    return imagesData.reduce((data: VGGObject, image: ImageData) => {\n      const fileData: VGGFileData = PolygonLabelsExporter.mapImageDataToVGGFileData(\n        image,\n        labelNames\n      );\n      if (!!fileData) {\n        data[image.fileData.name] = fileData;\n      }\n      return data;\n    }, {});\n  }\n\n  private static mapImageDataToVGGFileData(\n    imageData: ImageData,\n    labelNames: string[]\n  ): VGGFileData {\n    const regionsData: VGGRegionsData = PolygonLabelsExporter.mapImageDataToVGG(\n      imageData,\n      labelNames\n    );\n    if (!regionsData) return null;\n    return {\n      fileref: \"\",\n      size: imageData.fileData.size,\n      filename: imageData.fileData.name,\n      base64_img_data: \"\",\n      file_attributes: {},\n      regions: regionsData,\n    };\n  }\n\n  public static mapImageDataToVGG(imageData: ImageData, labelNames: string[]): VGGRegionsData {\n    if (\n      !imageData.loadStatus ||\n      !imageData.labelPolygons ||\n      !imageData.labelPolygons.length ||\n      !labelNames ||\n      !labelNames.length\n    )\n      return null;\n\n    const validLabels: LabelPolygon[] = PolygonLabelsExporter.getValidPolygonLabels(imageData);\n\n    if (!validLabels.length) return null;\n\n    return validLabels.reduce((data: VGGRegionsData, label: LabelPolygon, index: number) => {\n      data[`${index}`] = {\n        shape_attributes: PolygonLabelsExporter.mapPolygonToVGG(label.vertices),\n        region_attributes: {\n          label: labelNames[label.labelIndex],\n        },\n      };\n      return data;\n    }, {});\n  }\n\n  public static getValidPolygonLabels(imageData: ImageData): LabelPolygon[] {\n    return imageData.labelPolygons.filter(\n      (label: LabelPolygon) => label.labelIndex !== null && !!label.vertices.length\n    );\n  }\n\n  public static mapPolygonToVGG(path: IPoint[]): VGGPolygon {\n    if (!path || !path.length) return null;\n\n    const all_points_x: number[] = path.map((point: IPoint) => point.x).concat(path[0].x);\n    const all_points_y: number[] = path.map((point: IPoint) => point.y).concat(path[0].y);\n    return {\n      name: \"polygon\",\n      all_points_x,\n      all_points_y,\n    };\n  }\n}\n","import React, { useState } from \"react\";\nimport \"./ExportLabelPopup.scss\";\nimport { GenericYesNoPopup } from \"../GenericYesNoPopup/GenericYesNoPopup\";\nimport { AppState } from \"../../../store\";\nimport { connect } from \"react-redux\";\nimport { ExportFormatType } from \"../../../data/enums/ExportFormatType\";\nimport { RectLabelsExporter } from \"../../../logic/export/RectLabelsExporter\";\nimport { LabelType } from \"../../../data/enums/LabelType\";\nimport { ImageButton } from \"../../Common/ImageButton/ImageButton\";\nimport { IExportFormat } from \"../../../interfaces/IExportFormat\";\nimport { RectExportFormatData } from \"../../../data/export/RectExportFormatData\";\nimport { PointExportFormatData } from \"../../../data/export/PointExportFormatData\";\nimport { PointLabelsExporter } from \"../../../logic/export/PointLabelsExport\";\nimport { PolygonExportFormatData } from \"../../../data/export/PolygonExportFormatData\";\nimport { PolygonLabelsExporter } from \"../../../logic/export/PolygonLabelsExporter\";\nimport { PopupActions } from \"../../../logic/actions/PopupActions\";\n\nconst ExportLabelPopup: React.FC = () => {\n  const [exportLabelType, setExportLabelType] = useState(LabelType.RECTANGLE);\n  const [exportFormatType, setExportFormatType] = useState(null);\n\n  const onAccept = () => {\n    if (!exportFormatType) return;\n    switch (exportLabelType) {\n      case LabelType.RECTANGLE:\n        RectLabelsExporter.export(exportFormatType);\n        break;\n      case LabelType.POINT:\n        PointLabelsExporter.export(exportFormatType);\n        break;\n      case LabelType.POLYGON:\n        PolygonLabelsExporter.export(exportFormatType);\n        break;\n    }\n    PopupActions.close();\n  };\n\n  const onReject = () => {\n    PopupActions.close();\n  };\n\n  const onSelect = (exportFormatType: ExportFormatType) => {\n    setExportFormatType(exportFormatType);\n  };\n\n  const getOptions = (exportFormatData: IExportFormat[]) => {\n    return exportFormatData.map((entry: IExportFormat) => {\n      return (\n        <div className=\"OptionsItem\" onClick={() => onSelect(entry.type)} key={entry.type}>\n          {entry.type === exportFormatType ? (\n            <img draggable={false} src={\"ico/checkbox-checked.png\"} alt={\"checked\"} />\n          ) : (\n            <img draggable={false} src={\"ico/checkbox-unchecked.png\"} alt={\"unchecked\"} />\n          )}\n          {entry.label}\n        </div>\n      );\n    });\n  };\n\n  const renderContent = () => {\n    return (\n      <div className=\"ExportLabelPopupContent\">\n        <div className=\"LeftContainer\">\n          <ImageButton\n            image={\"ico/rectangle.png\"}\n            imageAlt={\"rectangle\"}\n            size={{ width: 40, height: 40 }}\n            padding={20}\n            onClick={() => {\n              setExportLabelType(LabelType.RECTANGLE);\n              setExportFormatType(null);\n            }}\n            isActive={exportLabelType === LabelType.RECTANGLE}\n          />\n          <ImageButton\n            image={\"ico/point.png\"}\n            imageAlt={\"point\"}\n            size={{ width: 40, height: 40 }}\n            padding={20}\n            onClick={() => {\n              setExportLabelType(LabelType.POINT);\n              setExportFormatType(null);\n            }}\n            isActive={exportLabelType === LabelType.POINT}\n          />\n          <ImageButton\n            image={\"ico/polygon.png\"}\n            imageAlt={\"polygon\"}\n            size={{ width: 40, height: 40 }}\n            padding={20}\n            onClick={() => {\n              setExportLabelType(LabelType.POLYGON);\n              setExportFormatType(null);\n            }}\n            isActive={exportLabelType === LabelType.POLYGON}\n          />\n        </div>\n        <div className=\"RightContainer\">\n          <div className=\"Message\">选择标注类型和导出文件格式</div>\n          <div className=\"Options\">\n            {exportLabelType === LabelType.RECTANGLE && getOptions(RectExportFormatData)}\n            {exportLabelType === LabelType.POINT && getOptions(PointExportFormatData)}\n            {exportLabelType === LabelType.POLYGON && getOptions(PolygonExportFormatData)}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <GenericYesNoPopup\n      title={\"导出标注\"}\n      renderContent={renderContent}\n      acceptLabel={\"导出\"}\n      onAccept={onAccept}\n      rejectLabel={\"取消\"}\n      onReject={onReject}\n    />\n  );\n};\n\nconst mapDispatchToProps = {};\n\nconst mapStateToProps = (state: AppState) => ({\n  imagesData: state.editor.imagesData,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ExportLabelPopup);\n","import React, { useState } from \"react\";\nimport \"./InsertLabelNamesPopup.scss\";\nimport { GenericYesNoPopup } from \"../GenericYesNoPopup/GenericYesNoPopup\";\nimport { PopupWindowType } from \"../../../data/enums/PopupWindowType\";\nimport {\n  updateActiveLabelNameIndex,\n  updateLabelNamesList,\n} from \"../../../store/editor/actionCreators\";\nimport { updateActivePopupType } from \"../../../store/general/actionCreators\";\nimport { AppState } from \"../../../store\";\nimport { connect } from \"react-redux\";\nimport Scrollbars from \"react-custom-scrollbars\";\nimport TextInput from \"../../Common/TextInput/TextInput\";\nimport { ImageButton } from \"../../Common/ImageButton/ImageButton\";\nimport uuidv1 from \"uuid/v1\";\nimport { PopupActions } from \"../../../logic/actions/PopupActions\";\n\ninterface IProps {\n  updateActiveLabelNameIndex: (activeLabelIndex: number) => any;\n  updateLabelNamesList: (labelNames: string[]) => any;\n  updateActivePopupType: (activePopupType: PopupWindowType) => any;\n}\n\nconst InsertLabelNamesPopup: React.FC<IProps> = ({\n  updateActiveLabelNameIndex,\n  updateLabelNamesList,\n  updateActivePopupType,\n}) => {\n  const [labelNames, setLabelNames] = useState({});\n\n  const addHandle = () => {\n    const newLabelNames = { ...labelNames, [uuidv1()]: \"\" };\n    setLabelNames(newLabelNames);\n  };\n\n  const deleteHandle = (key: string) => {\n    const newLabelNames = { ...labelNames };\n    delete newLabelNames[key];\n    setLabelNames(newLabelNames);\n  };\n\n  const labelInputs = Object.keys(labelNames).map((key: string) => {\n    return (\n      <div className=\"LabelEntry\" key={key}>\n        <TextInput\n          key={key}\n          isPassword={false}\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n            onChange(key, event.target.value)\n          }\n          label={\"标注名称\"}\n        />\n        <ImageButton\n          image={\"ico/trash.png\"}\n          imageAlt={\"remove_label\"}\n          size={{ width: 30, height: 30 }}\n          onClick={() => deleteHandle(key)}\n        />\n      </div>\n    );\n  });\n\n  const onChange = (key: string, value: string) => {\n    const newLabelNames = { ...labelNames, [key]: value };\n    setLabelNames(newLabelNames);\n  };\n\n  const onAccept = () => {\n    const labelNamesList: string[] = extractLabelNamesList();\n    if (labelNamesList.length > 0) {\n      updateLabelNamesList(labelNamesList);\n      PopupActions.close();\n    }\n  };\n\n  const extractLabelNamesList = (): string[] => {\n    return Object.values(labelNames).filter(value => !!value) as string[];\n  };\n\n  const onReject = () => {\n    updateActivePopupType(PopupWindowType.LOAD_LABEL_NAMES);\n  };\n\n  const renderContent = () => {\n    return (\n      <div className=\"InsertLabelNamesPopup\">\n        <div className=\"LeftContainer\">\n          <ImageButton\n            image={\"ico/plus.png\"}\n            imageAlt={\"plus\"}\n            size={{ width: 40, height: 40 }}\n            padding={25}\n            onClick={addHandle}\n          />\n        </div>\n        <div className=\"RightContainer\">\n          <div className=\"Message\">\n            在你开始之前，请创建一个即将用在你项目内的标签列表，点击左边的 + 号添加新标签\n          </div>\n          <div className=\"LabelsContainer\">\n            {Object.keys(labelNames).length !== 0 ? (\n              <Scrollbars>\n                <div className=\"InsertLabelNamesPopupContent\">{labelInputs}</div>\n              </Scrollbars>\n            ) : (\n              <div className=\"EmptyList\" onClick={addHandle}>\n                <img draggable={false} alt={\"upload\"} src={\"img/type-writer.png\"} />\n                <p className=\"extraBold\">当前项目标签列表为空</p>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <GenericYesNoPopup\n      title={\"创建标签列表\"}\n      renderContent={renderContent}\n      acceptLabel={\"开始标注\"}\n      onAccept={onAccept}\n      disableAcceptButton={extractLabelNamesList().length === 0}\n      rejectLabel={\"从文件载入\"}\n      onReject={onReject}\n    />\n  );\n};\n\nconst mapDispatchToProps = {\n  updateActiveLabelNameIndex,\n  updateLabelNamesList,\n  updateActivePopupType,\n};\n\nconst mapStateToProps = (state: AppState) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(InsertLabelNamesPopup);\n","import React from 'react'\nimport './ExitProjectPopup.scss'\nimport {GenericYesNoPopup} from \"../GenericYesNoPopup/GenericYesNoPopup\";\nimport {\n    updateActiveImageIndex,\n    updateActiveLabelNameIndex,\n    updateFirstLabelCreatedFlag,\n    updateImageData,\n    updateLabelNamesList,\n    updateProjectType\n} from \"../../../store/editor/actionCreators\";\nimport {AppState} from \"../../../store\";\nimport {connect} from \"react-redux\";\nimport {ProjectType} from \"../../../data/enums/ProjectType\";\nimport {ImageData} from \"../../../store/editor/types\";\nimport {PopupActions} from \"../../../logic/actions/PopupActions\";\n\ninterface IProps {\n    updateActiveImageIndex: (activeImageIndex: number) => any;\n    updateProjectType: (projectType: ProjectType) => any;\n    updateActiveLabelNameIndex: (activeLabelIndex: number) => any;\n    updateLabelNamesList: (labelNames: string[]) => any;\n    updateImageData: (imageData: ImageData[]) => any;\n    updateFirstLabelCreatedFlag: (firstLabelCreatedFlag: boolean) => any;\n}\n\nconst ExitProjectPopup: React.FC<IProps> = (props) => {\n    const {\n        updateActiveLabelNameIndex,\n        updateLabelNamesList,\n        updateProjectType,\n        updateActiveImageIndex,\n        updateImageData,\n        updateFirstLabelCreatedFlag\n    } = props;\n\n    const renderContent = () => {\n        return(\n            <div className=\"ExitProjectPopupContent\">\n                <div className=\"Message\">\n                    Are you sure you want to leave the editor? You will permanently lose all your progress.\n                </div>\n            </div>\n        )\n    };\n\n    const onAccept = () => {\n        updateActiveLabelNameIndex(null);\n        updateLabelNamesList([]);\n        updateProjectType(null);\n        updateActiveImageIndex(null);\n        updateImageData([]);\n        updateFirstLabelCreatedFlag(false);\n        PopupActions.close();\n    };\n\n    const onReject = () => {\n        PopupActions.close();\n    };\n\n    return(\n        <GenericYesNoPopup\n            title={\"Exit project\"}\n            renderContent={renderContent}\n            acceptLabel={\"Exit\"}\n            onAccept={onAccept}\n            rejectLabel={\"Back\"}\n            onReject={onReject}\n        />)\n};\n\nconst mapDispatchToProps = {\n    updateActiveLabelNameIndex,\n    updateLabelNamesList,\n    updateProjectType,\n    updateActiveImageIndex,\n    updateImageData,\n    updateFirstLabelCreatedFlag\n};\n\nconst mapStateToProps = (state: AppState) => ({});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ExitProjectPopup);","import React from \"react\";\nimport \"./LoadMoreImagesPopup.scss\";\nimport { AppState } from \"../../../store\";\nimport { connect } from \"react-redux\";\nimport { addImageData } from \"../../../store/editor/actionCreators\";\nimport { GenericYesNoPopup } from \"../GenericYesNoPopup/GenericYesNoPopup\";\nimport { useDropzone } from \"react-dropzone\";\nimport { FileUtil } from \"../../../utils/FileUtil\";\nimport { ImageData } from \"../../../store/editor/types\";\nimport { AcceptedFileType } from \"../../../data/enums/AcceptedFileType\";\nimport { PopupActions } from \"../../../logic/actions/PopupActions\";\n\ninterface IProps {\n  addImageData: (imageData: ImageData[]) => any;\n}\n\nconst LoadMoreImagesPopup: React.FC<IProps> = ({ addImageData }) => {\n  const { acceptedFiles, getRootProps, getInputProps } = useDropzone({\n    accept: AcceptedFileType.IMAGE,\n  });\n\n  const onAccept = () => {\n    if (acceptedFiles.length > 0) {\n      addImageData(\n        acceptedFiles.map((fileData: File) => FileUtil.mapFileDataToImageData(fileData))\n      );\n      PopupActions.close();\n    }\n  };\n\n  const onReject = () => {\n    PopupActions.close();\n  };\n\n  const getDropZoneContent = () => {\n    if (acceptedFiles.length === 0)\n      return (\n        <>\n          <input {...getInputProps()} />\n          <img draggable={false} alt={\"upload\"} src={\"img/box-opened.png\"} />\n          <p className=\"extraBold\">拖拽到这里</p>\n          <p>或</p>\n          <p className=\"extraBold\">点击导入</p>\n        </>\n      );\n    else if (acceptedFiles.length === 1)\n      return (\n        <>\n          <img draggable={false} alt={\"uploaded\"} src={\"img/box-closed.png\"} />\n          <p className=\"extraBold\">导入了 1 张新图片 </p>\n        </>\n      );\n    else\n      return (\n        <>\n          <img draggable={false} key={1} alt={\"uploaded\"} src={\"img/box-closed.png\"} />\n          <p key={2} className=\"extraBold\">\n            导入了 {acceptedFiles.length} 张新图片\n          </p>\n        </>\n      );\n  };\n\n  const renderContent = () => {\n    return (\n      <div className=\"LoadMoreImagesPopupContent\">\n        <div {...getRootProps({ className: \"DropZone\" })}>{getDropZoneContent()}</div>\n      </div>\n    );\n  };\n\n  return (\n    <GenericYesNoPopup\n      title={\"导入更多图片\"}\n      renderContent={renderContent}\n      acceptLabel={\"载入\"}\n      disableAcceptButton={acceptedFiles.length < 1}\n      onAccept={onAccept}\n      rejectLabel={\"取消\"}\n      onReject={onReject}\n    />\n  );\n};\n\nconst mapDispatchToProps = {\n  addImageData,\n};\n\nconst mapStateToProps = (state: AppState) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoadMoreImagesPopup);\n","import React from \"react\";\nimport \"./PopupView.scss\";\nimport { PopupWindowType } from \"../../data/enums/PopupWindowType\";\nimport { AppState } from \"../../store\";\nimport { connect } from \"react-redux\";\nimport LoadLabelsPopup from \"./LoadLabelNamesPopup/LoadLabelNamesPopup\";\nimport ExportLabelPopup from \"./ExportLabelsPopup/ExportLabelPopup\";\nimport InsertLabelNamesPopup from \"./InsertLabelNamesPopup/InsertLabelNamesPopup\";\nimport ExitProjectPopup from \"./ExitProjectPopup/ExitProjectPopup\";\nimport LoadMoreImagesPopup from \"./LoadMoreImagesPopup/LoadMoreImagesPopup\";\n\ninterface IProps {\n  activePopupType: PopupWindowType;\n}\n\nconst PopupView: React.FC<IProps> = ({ activePopupType }) => {\n  const selectPopup = () => {\n    switch (activePopupType) {\n      case PopupWindowType.LOAD_LABEL_NAMES:\n        return <LoadLabelsPopup />;\n      case PopupWindowType.EXPORT_LABELS:\n        return <ExportLabelPopup />;\n      case PopupWindowType.INSERT_LABEL_NAMES:\n        return <InsertLabelNamesPopup />;\n      case PopupWindowType.EXIT_PROJECT:\n        return <ExitProjectPopup />;\n      case PopupWindowType.LOAD_IMAGES:\n        return <LoadMoreImagesPopup />;\n      default:\n        return null;\n    }\n  };\n\n  return activePopupType && <div className=\"PopupView\">{selectPopup()}</div>;\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  activePopupType: state.general.activePopupType,\n});\n\nexport default connect(mapStateToProps)(PopupView);\n","import React, {useState} from 'react';\nimport './MobileMainView.scss';\nimport Scrollbars from 'react-custom-scrollbars';\nimport {ISize} from \"../../interfaces/ISize\";\nimport {AppState} from \"../../store\";\nimport {connect} from \"react-redux\";\nimport classNames from 'classnames'\nimport {EditorFeatureData, IEditorFeature} from \"../../data/info/EditorFeatureData\";\nimport {ISocialMedia, SocialMediaData} from \"../../data/info/SocialMediaData\";\nimport {ImageButton} from \"../Common/ImageButton/ImageButton\";\n\ninterface IProps {\n    size: ISize;\n}\n\nconst MobileMainView: React.FC<IProps> = ({size}) => {\n    const scrollPositionThreshold: number = 350;\n    const [scrollPosition, setScrollPosition] = useState(0);\n\n    const getClassName = () => {\n        return classNames('MobileTopNavigationBar', {\n            Hide: scrollPosition < scrollPositionThreshold,\n            Show: scrollPosition >= scrollPositionThreshold,\n        })\n    };\n\n    const onScroll = (value) => {\n        setScrollPosition(value.scrollTop);\n    };\n\n    const getEditorFeatureTiles = (features: IEditorFeature[]) => {\n        return features.map((data:IEditorFeature) => {\n            return <div\n                className=\"EditorFeaturesTiles\"\n                key={data.displayText}\n            >\n                <div\n                    className=\"EditorFeaturesTilesWrapper\"\n                >\n                    <img\n                        draggable={false}\n                        alt={data.imageAlt}\n                        src={data.imageSrc}\n                    />\n                    <div className=\"EditorFeatureLabel\">\n                        {data.displayText}\n                    </div>\n                </div>\n            </div>\n        });\n    };\n\n    const getSocialMediaButtons = (size:ISize) => {\n        return SocialMediaData.map((data:ISocialMedia, index: number) => {\n            return <ImageButton\n                key={index}\n                size={size}\n                image={data.imageSrc}\n                imageAlt={data.imageAlt}\n                href={data.href}\n            />\n        });\n    };\n\n    const topNavigationBar = <div className={getClassName()}>\n        <div className=\"NavigationBarGroupWrapper\">\n            <div className=\"Header\">\n                <img\n                    draggable={false}\n                    alt={\"make-sense\"}\n                    src={\"/make-sense-ico-transparent.png\"}\n                />\n                Make Sense\n            </div>\n        </div>\n        <div className=\"TriangleHorizontal Bottom\">\n            <div className=\"TriangleHorizontalContent\"/>\n        </div>\n    </div>;\n\n    const firstStage = <div className=\"FirstStage\">\n        <img\n            draggable={false}\n            alt={\"main-logo\"}\n            src={\"img/main-image-color.png\"}\n        />\n        <div className=\"TriangleHorizontal Bottom\">\n            <div className=\"TriangleHorizontalContent\"/>\n        </div>\n    </div>;\n\n    const secondStage = <div className=\"SecondStage\">\n        {getEditorFeatureTiles(EditorFeatureData.slice(0, 3))}\n    </div>;\n\n    const thirdStage = <div className=\"ThirdStage\">\n        {getEditorFeatureTiles(EditorFeatureData.slice(3, 6))}\n        <div className=\"TriangleHorizontal Top\">\n            <div className=\"TriangleHorizontalContent\"/>\n        </div>\n        <div className=\"TriangleHorizontal Bottom\">\n            <div className=\"TriangleHorizontalContent\"/>\n        </div>\n    </div>;\n\n    const fourthStage = <div className=\"FourthStage\">\n        <div className=\"Message\">\n            Due to the small size of the screen we do not support our editor on mobile devices. Check what you missed and visit us from a desktop.\n        </div>\n        <div className=\"SocialMediaWrapper\">\n            {getSocialMediaButtons({width: 40, height: 40})}\n        </div>\n    </div>;\n\n    return(<div className=\"MobileMainView\">\n        {topNavigationBar}\n        <Scrollbars\n            onScrollFrame={onScroll}\n        >\n            <div\n                className=\"MobileMainViewContent\"\n                style={{width: size.width}}\n            >\n                {firstStage}\n                {secondStage}\n                {thirdStage}\n                {fourthStage}\n            </div>\n        </Scrollbars>\n    </div>)\n};\n\nconst mapDispatchToProps = {};\n\nconst mapStateToProps = (state: AppState) => ({\n    size: state.general.windowSize\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(MobileMainView);","import React from 'react';\nimport './SizeItUpView.scss';\nimport {Settings} from \"../../settings/Settings\";\n\nexport const SizeItUpView: React.FC = () => {\n    return(<div className=\"SizeItUpView\">\n        <p className=\"extraBold\">Ops... This window is to tight for me!</p>\n        <img\n            draggable={false}\n            alt={\"small_window\"}\n            src={\"img/small_window.png\"}\n        />\n        <p className=\"extraBold\">Please... make it at least {Settings.EDITOR_MIN_WIDTH} x {Settings.EDITOR_MIN_HEIGHT} px.</p>\n    </div>)\n};","import React from \"react\";\nimport \"./App.scss\";\nimport EditorView from \"./views/EditorView/EditorView\";\nimport MainView from \"./views/MainView/MainView\";\nimport { ProjectType } from \"./data/enums/ProjectType\";\nimport { AppState } from \"./store\";\nimport { connect } from \"react-redux\";\nimport PopupView from \"./views/PopupView/PopupView\";\nimport MobileMainView from \"./views/MobileMainView/MobileMainView\";\nimport { ISize } from \"./interfaces/ISize\";\nimport { Settings } from \"./settings/Settings\";\nimport { SizeItUpView } from \"./views/SizeItUpView/SizeItUpView\";\nimport { PlatformModel } from \"./staticModels/PlatformModel\";\n\ninterface IProps {\n  projectType: ProjectType;\n  windowSize: ISize;\n}\n\nconst App: React.FC<IProps> = ({ projectType, windowSize }) => {\n  const selectRoute = () => {\n    if (!!PlatformModel.mobileDeviceData.manufacturer && !!PlatformModel.mobileDeviceData.os)\n      return <MobileMainView />;\n    if (!projectType) return <MainView />;\n    else {\n      if (\n        windowSize.height < Settings.EDITOR_MIN_HEIGHT ||\n        windowSize.width < Settings.EDITOR_MIN_WIDTH\n      ) {\n        return <SizeItUpView />;\n      } else {\n        return <EditorView />;\n      }\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {selectRoute()}\n      <PopupView />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  projectType: state.editor.projectType,\n  windowSize: state.general.windowSize,\n});\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { EditorActionTypes, EditorState, ImageData } from \"./types\";\nimport { Action } from \"../Actions\";\n\nconst initialState: EditorState = {\n  activeImageIndex: null,\n  activeLabelNameIndex: null,\n  activeLabelType: null,\n  activeLabelId: null,\n  highlightedLabelId: null,\n  projectType: null,\n  projectName: \"my-project-name\",\n  imagesData: [],\n  labelNames: [],\n  firstLabelCreatedFlag: false,\n};\n\nexport function editorReducer(state = initialState, action: EditorActionTypes): EditorState {\n  switch (action.type) {\n    case Action.UPDATE_PROJECT_TYPE: {\n      return {\n        ...state,\n        projectType: action.payload.projectType,\n      };\n    }\n    case Action.UPDATE_PROJECT_NAME: {\n      return {\n        ...state,\n        projectName: action.payload.projectName,\n      };\n    }\n    case Action.UPDATE_ACTIVE_IMAGE_INDEX: {\n      return {\n        ...state,\n        activeImageIndex: action.payload.activeImageIndex,\n      };\n    }\n    case Action.UPDATE_ACTIVE_LABEL_NAME_INDEX: {\n      return {\n        ...state,\n        activeLabelNameIndex: action.payload.activeLabelNameIndex,\n      };\n    }\n    case Action.UPDATE_ACTIVE_LABEL_ID: {\n      return {\n        ...state,\n        activeLabelId: action.payload.activeLabelId,\n      };\n    }\n    case Action.UPDATE_HIGHLIGHTED_LABEL_ID: {\n      return {\n        ...state,\n        highlightedLabelId: action.payload.highlightedLabelId,\n      };\n    }\n    case Action.UPDATE_ACTIVE_LABEL_TYPE: {\n      return {\n        ...state,\n        activeLabelType: action.payload.activeLabelType,\n      };\n    }\n    case Action.UPDATE_IMAGE_DATA_BY_ID: {\n      return {\n        ...state,\n        imagesData: state.imagesData.map((imageData: ImageData) =>\n          imageData.id === action.payload.id ? action.payload.newImageData : imageData\n        ),\n      };\n    }\n    case Action.ADD_IMAGES_DATA: {\n      return {\n        ...state,\n        imagesData: state.imagesData.concat(action.payload.imageData),\n      };\n    }\n    case Action.UPDATE_IMAGES_DATA: {\n      return {\n        ...state,\n        imagesData: action.payload.imageData,\n      };\n    }\n    case Action.UPDATE_LABEL_NAMES_LIST: {\n      return {\n        ...state,\n        labelNames: action.payload.labelNames,\n      };\n    }\n    case Action.UPDATE_FIRST_LABEL_CREATED_FLAG: {\n      return {\n        ...state,\n        firstLabelCreatedFlag: action.payload.firstLabelCreatedFlag,\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import {GeneralActionTypes, GeneralState} from \"./types\";\nimport {Action} from \"../Actions\";\nimport {CustomCursorStyle} from \"../../data/enums/CustomCursorStyle\";\n\nconst initialState: GeneralState = {\n    windowSize: null,\n    activePopupType: null,\n    customCursorStyle: CustomCursorStyle.DEFAULT,\n    activeContext: null\n};\n\nexport function generalReducer(\n    state = initialState,\n    action: GeneralActionTypes\n): GeneralState {\n    switch (action.type) {\n        case Action.UPDATE_WINDOW_SIZE: {\n            return {\n                ...state,\n                windowSize: action.payload.windowSize\n            }\n        }\n        case Action.UPDATE_ACTIVE_POPUP_TYPE: {\n            return {\n                ...state,\n                activePopupType: action.payload.activePopupType\n            }\n        }\n        case Action.UPDATE_CUSTOM_CURSOR_STYLE: {\n            return {\n                ...state,\n                customCursorStyle: action.payload.customCursorStyle\n            }\n        }\n        case Action.UPDATE_CONTEXT: {\n            return {\n                ...state,\n                activeContext: action.payload.activeContext\n            }\n        }\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport {editorReducer} from \"./editor/reducer\";\nimport {generalReducer} from \"./general/reducer\";\n\nexport const rootReducer = combineReducers({\n    general: generalReducer,\n    editor: editorReducer\n});\n\nexport type AppState = ReturnType<typeof rootReducer>;","import {MobileDeviceData} from \"../data/MobileDeviceData\";\nimport MobileDetect from 'mobile-detect'\n\nexport class PlatformUtil {\n    public static getMobileDeviceData(userAgent: string): MobileDeviceData {\n        const mobileDetect = new MobileDetect(userAgent);\n        return {\n            manufacturer: mobileDetect.mobile(),\n            browser: mobileDetect.userAgent(),\n            os: mobileDetect.os()\n        }\n    }\n\n    public static isMac(userAgent: string): boolean {\n        return !!userAgent.toLowerCase().match(\"mac\");\n    }\n\n    public static isSafari(userAgent: string): boolean {\n        return !!userAgent.toLowerCase().match(\"safari\");\n    }\n\n    public static isFirefox(userAgent: string): boolean {\n        return !!userAgent.toLowerCase().match(\"firefox\");\n    }\n}","import {updateWindowSize} from \"../../store/general/actionCreators\";\nimport {ContextManager} from \"../context/ContextManager\";\nimport {store} from \"../../index\";\nimport {PlatformUtil} from \"../../utils/PlatformUtil\";\nimport {PlatformModel} from \"../../staticModels/PlatformModel\";\n\nexport class AppInitializer {\n    public static inti():void {\n        AppInitializer.handleResize();\n        AppInitializer.detectDeviceParams();\n        window.addEventListener(\"resize\", AppInitializer.handleResize);\n        ContextManager.init();\n    }\n\n    private static handleResize = () => {\n        store.dispatch(updateWindowSize({\n            width: window.innerWidth,\n            height: window.innerHeight\n        }));\n    };\n\n    private static detectDeviceParams = () => {\n        const userAgent: string = window.navigator.userAgent;\n        PlatformModel.mobileDeviceData = PlatformUtil.getMobileDeviceData(userAgent);\n        PlatformModel.isMac = PlatformUtil.isMac(userAgent);\n        PlatformModel.isSafari = PlatformUtil.isSafari(userAgent);\n        PlatformModel.isFirefox = PlatformUtil.isFirefox(userAgent);\n    };\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport configureStore from \"./configureStore\";\nimport { Provider } from \"react-redux\";\nimport { AppInitializer } from \"./logic/initializer/AppInitializer\";\n\nexport const store = configureStore();\nAppInitializer.inti();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\") || document.createElement(\"div\") // fix for testing purposes\n);\n\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from \"redux\";\nimport { rootReducer } from \"./store\";\nimport logger from \"redux-logger\";\n\nexport default function configureStore() {\n  return createStore(\n    rootReducer,\n    applyMiddleware(logger)\n    // @ts-ignore\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  );\n}\n"],"sourceRoot":""}