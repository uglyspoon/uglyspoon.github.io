{"version":3,"sources":["views/PopupView/LoginPopup/dir.svg","data/enums/Direction.ts","data/enums/PopupWindowType.ts","settings/Settings.ts","store/Actions.ts","store/editor/actionCreators.ts","utils/VirtualListUtil.ts","utils/NumberUtil.ts","utils/RectUtil.ts","data/enums/LabelType.ts","utils/HttpUtils.ts","views/Common/VirtualList/VirtualList.tsx","logic/imageRepository/ImageLoadManager.ts","logic/imageRepository/ImageRepository.ts","utils/FileUtil.ts","data/enums/ContextType.ts","views/EditorView/SideNavigationBar/ImagePreview/ImagePreview.tsx","store/general/actionCreators.ts","staticModels/EditorModel.ts","utils/UnitUtil.ts","data/enums/CustomCursorStyle.ts","utils/DrawUtil.ts","utils/PointUtil.ts","settings/RenderEngineConfig.ts","store/selectors/EditorSelector.ts","data/enums/EventType.ts","utils/MouseEventUtil.ts","logic/render/BaseRenderEngine.ts","utils/RenderEngineUtil.ts","logic/render/RectRenderEngine.ts","utils/CanvasUtil.ts","logic/render/PointRenderEngine.ts","utils/LineUtil.ts","logic/render/PolygonRenderEngine.ts","logic/render/PrimaryEditorRenderEngine.ts","logic/actions/EditorActions.ts","logic/context/BaseContext.ts","staticModels/PlatformModel.ts","logic/actions/ImageActions.ts","logic/context/EditorContext.ts","store/selectors/GeneralSelector.ts","logic/actions/PopupActions.ts","logic/context/PopupContext.ts","logic/context/ContextManager.ts","data/enums/ProjectType.ts","views/EditorView/SideNavigationBar/ImagesList/ImagesList.tsx","data/info/LabelToolkitData.ts","views/Common/ImageButton/ImageButton.tsx","views/EditorView/SideNavigationBar/LabelInputField/LabelInputField.tsx","views/EditorView/SideNavigationBar/EmptyLabelList/EmptyLabelList.tsx","views/EditorView/SideNavigationBar/RectLabelsList/RectLabelsList.tsx","views/EditorView/SideNavigationBar/PointLabelsList/PointLabelsList.tsx","views/EditorView/SideNavigationBar/PolygonLabelsList/PolygonLabelsList.tsx","views/Common/TextButton/TextButton.tsx","views/EditorView/SideNavigationBar/LabelsToolkit/LabelsToolkit.tsx","views/EditorView/SideNavigationBar/SideNavigationBar.tsx","views/EditorView/VerticalEditorButton/VerticalEditorButton.tsx","utils/EditorUtil.ts","data/enums/AcceptedFileType.ts","views/EditorView/Editor/Editor.tsx","views/EditorView/BottomNavigationBar/BottomNavigationBar.tsx","views/EditorView/EditorContainer/EditorContainer.tsx","views/EditorView/StateBar/StateBar.tsx","views/Common/UnderlineTextButton/UnderlineTextButton.tsx","views/Common/TextInput/TextInput.tsx","views/EditorView/TopNavigationBar/TopNavigationBar.tsx","views/EditorView/EditorView.tsx","data/info/SocialMediaData.ts","data/info/EditorFeatureData.ts","views/PopupView/GenericYesNoPopup/GenericYesNoPopup.tsx","views/PopupView/LoginPopup/LoginPopup.tsx","views/MainView/MainView.tsx","views/PopupView/LoadLabelNamesPopup/LoadLabelNamesPopup.tsx","data/enums/ExportFormatType.ts","utils/XMLSanitizerUtil.ts","utils/ExporterUtil.ts","logic/export/RectLabelsExporter.ts","data/export/AllExportFormatData.ts","data/export/PointExportFormatData.ts","logic/export/PointLabelsExport.ts","logic/export/AllLabelsExport.ts","data/export/PolygonExportFormatData.ts","logic/export/PolygonLabelsExporter.ts","data/export/RectExportFormatData.ts","views/PopupView/ExportLabelsPopup/ExportLabelPopup.tsx","views/PopupView/InsertLabelNamesPopup/InsertLabelNamesPopup.tsx","views/PopupView/ExitProjectPopup/ExitProjectPopup.tsx","views/PopupView/LoadMoreImagesPopup/LoadMoreImagesPopup.tsx","views/PopupView/PopupView.tsx","views/MobileMainView/MobileMainView.tsx","views/SizeItUpView/SizeItUpView.tsx","App.tsx","serviceWorker.ts","store/editor/reducer.ts","store/general/reducer.ts","store/index.ts","utils/PlatformUtil.ts","logic/initializer/AppInitializer.ts","index.tsx","configureStore.ts"],"names":["module","exports","__webpack_require__","p","Direction","PopupWindowType","Settings","Object","classCallCheck","this","GITHUB_URL","MEDIUM_URL","PATREON_URL","TOP_NAVIGATION_BAR_HEIGHT_PX","BOTTOM_NAVIGATION_BAR_HEIGHT_PX","SIDE_NAVIGATION_BAR_WIDTH_CLOSED_PX","SIDE_NAVIGATION_BAR_WIDTH_OPEN_PX","TOOLKIT_TAB_HEIGHT_PX","EDITOR_MIN_WIDTH","EDITOR_MIN_HEIGHT","PRIMARY_COLOR","SECONDARY_COLOR","DARK_THEME_FIRST_COLOR","DARK_THEME_SECOND_COLOR","DARK_THEME_THIRD_COLOR","DARK_THEME_FORTH_COLOR","CANVAS_PADDING_WIDTH_PX","CROSS_HAIR_THICKNESS_PX","CROSS_HAIR_COLOR","RESIZE_HANDLE_DIMENSION_PX","RESIZE_HANDLE_HOVER_DIMENSION_PX","CLOSEABLE_POPUPS","LOAD_IMAGES","Action","updateProjectType","projectType","type","UPDATE_PROJECT_TYPE","payload","updateActiveImageIndex","activeImageIndex","UPDATE_ACTIVE_IMAGE_INDEX","updateActiveLabelNameIndex","activeLabelNameIndex","UPDATE_ACTIVE_LABEL_NAME_INDEX","updateLabelIndexByInfo","imageIndex","groupIndex","labelPointIndex","labelIndex","labelCheckd","UPDATE_LABEL_INDEX_BY_INFO","updateActiveLabelId","activeLabelId","UPDATE_ACTIVE_LABEL_ID","updateHighlightedLabelId","highlightedLabelId","UPDATE_HIGHLIGHTED_LABEL_ID","updateActiveLabelType","activeLabelType","UPDATE_ACTIVE_LABEL_TYPE","updateImageDataById","id","newImageData","UPDATE_IMAGE_DATA_BY_ID","addImageData","imageData","inital","ADD_IMAGES_DATA","updateImageData","UPDATE_IMAGES_DATA","updateLabelNamesList","labelNames","UPDATE_LABEL_NAMES_LIST","updateFirstLabelCreatedFlag","firstLabelCreatedFlag","UPDATE_FIRST_LABEL_CREATED_FLAG","updateGroupList","groupName","UPDATE_GROUP_LIST","updateActiveGroupIndex","UPDATE_ACTIVE_GROUP_INDEX","findNextAvailableLabelIndex","FIND_NEXT_AVAILABLE_LABEL_INDEX","VirtualListUtil","createClass","key","value","listSize","childSize","childCount","columnCount","Math","floor","width","height","ceil","gridSize","sizeFromGrid","max","calculateGridSize","horizontalMargin","calculateContentSize","anchors","i","rowCount","anchor","x","y","push","NumberUtil","min","LabelType","RectUtil","rect","r1","r2","point","centerPoint","size","_objectSpread","containerRect","ratio","getRatio","innerRectHeight","innerRectWidth","inputRect","rectAnchor","delta","RIGHT","BOTTOM_RIGHT","BOTTOM","TOP_RIGHT","TOP","TOP_LEFT","LEFT","BOTTOM_LEFT","scale","position","isPointInside","snapValueToRange","HOST","cookies","Cookies","makeRequest","method","url","Promise","resolve","reject","xhr","XMLHttpRequest","open","responseType","onload","status","response","statusText","onerror","send","postData","data","fetch","body","JSON","stringify","cache","mode","headers","Authorization","get","content-type","then","json","getData","VirtualList","props","_this","possibleConstructorReturn","getPrototypeOf","call","contentSize","childAnchors","scrollbars","calculate","calculateAnchorPoints","getVirtualListStyle","getVirtualListContentStyle","onScrollStart","setState","isScrolling","onScrollStop","onScroll","values","top","state","isCompleted","loading","store","addNotification","title","message","insert","container","animationIn","animationOut","dismiss","duration","dir","pageNo","pageSize","resJson","set","rows","length","importImagesDataFromHttp","viewportRect","scrollLeft","scrollTop","urlAry","that","assertThisInitialized","imagesData","number","forEach","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","idx","blob","file","reader","wrap","_context","prev","next","sent","File","FileReader","onabort","console","log","image","Image","src","result","img","groupListData","parse","POINT","labelRects","labelPoints","labelPolygons","tempImageData","activeGroupIndex","fileData","groupList","uuidv1","loadStatus","sort","b","name","readAsDataURL","stop","_x","_x2","apply","arguments","getChildren","_this$state","_this$props","overScanHeight","overScan","viewportRectWithOverScan","reduce","children","index","childRect","assign","isVisible","intersect","childStyle","left","concat","childRender","_this$props2","nextProps","nextState","nextContext","getValues","_this2","displayContent","react_default","createElement","className","style","lib_default","ref","onScrollFrame","autoHide","React","Component","mapDispatchToProps","connect","ImageLoadManager","fx","queue","abrupt","setTimeout","runQueue","add","run","_runQueue","_callee2","_context2","isRunning","runTasks","_runTasks","_callee3","_context3","shift","ImageRepository","uuid","repository","FileUtil","localStorage","getItem","newfileData","onSuccess","onFailure","URL","createObjectURL","readAsText","onloadend","evt","contents","target","split","ContextType","ImagePreview","isLoading","loadImage","saveLoadedImagePartial","getById","saveLoadedImage","handleLoadImageError","ImagePreview_objectSpread","getStyle","imageRect","imageRatio","imagePosition","fitInsideRectWithRatio","getClassName","classNames","selected","isSelected","addAndRun","isChecked","onClick","undefined","data-index","draggable","alt","react_spinners_dist","sizeUnit","color","updateActivePopupType","activePopupType","UPDATE_ACTIVE_POPUP_TYPE","updateCustomCursorStyle","customCursorStyle","UPDATE_CUSTOM_CURSOR_STYLE","EditorModel","canvas","mousePositionIndicator","cursor","primaryRenderingEngine","supportRenderingEngine","imageRectOnCanvas","imageScale","mousePositionOnCanvas","CustomCursorStyle","UnitUtil","angleDeg","PI","angleRad","DrawUtil","getContext","clearRect","startPoint","endPoint","thickness","ctx","save","strokeStyle","lineWidth","lineCap","beginPath","moveTo","lineTo","stroke","restore","fillStyle","fill","fillRect","globalCompositeOperation","anchorPoint","radius","startAngleRad","deg2rad","endAngleRad","arc","startAngleDeg","endAngleDeg","closePath","text","textSize","bold","align","textAlign","textBaseline","font","fillText","round","random","hex","alpha","r","parseInt","slice","g","PointUtil","p1","p2","factor","sqrt","pow","RenderEngineConfig","lineThickness","lineActiveColor","lineInactiveColor","anchorSize","anchorHoverSize","suggestedAnchorDetectionSize","activeAnchorColor","inactiveAnchorColor","EventType","EditorSelector","getState","editor","projectName","getActiveImageIndex","getActiveGroupIndex","getImagesData","getActiveLabelId","_","find","getActiveImageData","map","ele","MouseEventUtil","event","MOUSE_DOWN","MOUSE_UP","MOUSE_MOVE","BaseRenderEngine","labelType","getEventType","mouseMoveHandler","mouseUpHandler","mouseDownHandler","RenderEngineUtil","activeImageRectOnCanvas","RenderEngineUtil_objectSpread","canvasSize","polygon","transferPointFromImageToCanvas","multiply","activeImageScale","transferPointFromCanvasToImage","subtract","translate","scaleRect","dispatch","DEFAULT","CANCEL","setValueBetweenPixels","topLeft","bottomRight","topLeftBetweenPixels","setPointBetweenPixels","bottomRightBetweenPixels","RectRenderEngine","_BaseRenderEngine","config","startCreateRectPoint","startResizeRectAnchor","isMouseOverImage","isMouseOverCanvas","rectUnderMouse","getRectUnderMouse","calculateRectRelativeToActiveImage","anchorUnderMouse","getAnchorUnderMouseByRect","startRectResize","getHighlightedLabelId","startRectCreation","mousePositionSnapped","snapPointToRect","equals","minX","minY","maxX","maxY","addRectLabel","activeLabelRect","getActiveRectLabel","startAnchorPosition","resizeRect","scaledRect","produce","draft","labelRect","RectRenderEngine_objectSpread","endRectTransformation","activeLabelIndex","getActiveLabelNameIndex","checked","RECTANGLE","inherits","drawActiveRect","drawInactiveRect","drawCurrentlyCreatedRect","updateCursorStyle","mousePosition","activeRect","activeRectBetweenPixels","setRectBetweenPixels","drawRect","rectOnImage","transferRectFromCanvasToImage","renderRect","endAnchorPositionSnapped","isActive","_this3","rectBetweenPixels","lineColor","mapRectToAnchors","center","handleRect","getRectWithCenterAndSize","handleRectBetweenPixels","drawRectWithFill","getAnchorUnderMouse","MOVE","wrapDefaultCursorStyleInCancel","activeRectLabel","isMouseOverRectEdges","outerRectDelta","outerRect","expand","innerRectDelta","innerRect","rectAnchors","anchorRect","activatedAnchor","CanvasUtil","canvasRect","getBoundingClientRect","clientX","clientY","PointRenderEngine","transformInProgress","addPointLabel","existedLabelIndexs","getAllPointLabelIndex","labelsLength","getLabelNameLength","labelPoint","storeNF","getLabelPointUnderMouse","pointOnCanvas","pointBetweenPixels","pointOnImage","isInProgress","activeLabelPoint","getActivePointLabel","pointSnapped","PointRenderEngine_objectSpread","renderPoint","handleColor","getSize","LineUtil","l","start","end","abs","PolygonRenderEngine","activePath","resizeAnchorIndex","suggestedAnchorPositionOnCanvas","suggestedAnchorIndexInPolygon","POLYGON","isCreationInProgress","isMouseOverAnchor","addLabelAndFinishCreation","updateActivelyCreatedLabel","polygonUnderMouse","getPolygonUnderMouse","anchorIndex","vertices","indexUnderMouse","anchorOnCanvas","startExistingLabelResize","addSuggestedAnchorToPolygonLabel","isResizeInProgress","endExistingLabelResize","labelPolygon","pathOnCanvas","transferPolygonFromImageToCanvas","linesOnCanvas","mapPointsToLines","j","isMouseOverLine","getCenter","discardSuggestedPoint","drawExistingLabels","drawActivelyCreatedLabel","drawActivelyResizeLabel","drawSuggestedAnchor","CLOSE","ADD","standardizedPoints","path","lines","drawPolygonWithFill","hexToRGB","line","drawLine","mapPointsToAnchors","_this4","activeLabelPolygon","getActivePolygonLabel","snappedMousePosition","polygonOnCanvas","drawPolygon","_this5","_this6","suggestedAnchorRect","polygonOnImage","transferPolygonFromCanvasToImage","addPolygonLabel","finishLabelCreation","labelId","applyResizeToPolygonLabel","_this7","activeLabel","PolygonRenderEngine_objectSpread","_this8","newAnchorPositionOnImage","arr","newItem","toConsumableArray","mouse","hoverReach","getDistanceFromLine","points","_this9","PrimaryEditorRenderEngine","drawImage","EditorActions","mountSupportRenderingEngine","clearCanvas","render","getEditorData","activeKeyCombo","ContextManager","getActiveCombo","canvasPaddingWidth","calculateImageRect","calculateImageScale","display","getMousePositionOnCanvasFromEvent","EditorActions_objectSpread","innerHTML","resizeCanvas","newCanvasSize","BaseContext","actions","PlatformModel","mobileDeviceData","isMac","isSafari","isFirefox","ImageActions","currentImageIndex","imageCount","EditorContext","_BaseContext","keyCombo","action","editorData","fullRender","cancelLabelCreation","getPreviousImage","getNextImage","GeneralSelector","general","activeContext","PopupActions","restoreCtx","PopupContext","popupType","getActivePopupType","includes","close","activeCombo","window","addEventListener","onDown","onUp","context","activeCtx","getActiveContext","contextHistory","updateCtx","UPDATE_CONTEXT","EDITOR","getActions","POPUP","pop","keyCode","getKeyCodeFromEvent","isInCombo","addToCombo","execute","removeFromCombo","hotKey","matchCombo","indexOf","splice","combo1","combo2","ProjectType","ImagesList","imagesListRef","updateListSize","listBoundingBox","onClickHandler","renderImagePreview","SideNavigationBar_ImagePreview_ImagePreview","some","item","removeEventListener","switchCtx","LEFT_NAVBAR","Common_VirtualList_VirtualList","LabelToolkitData","NAME","headerText","imageSrc","imageAlt","ImageButton","padding","href","isDisabled","externalClassName","imagePadding","buttonStyle","ImageButton_objectSpread","imageStyle","maxWidth","maxHeight","react","active","disabled","stopPropagation","rel","LabelInputField","dropdownOptionHeight","dropdownOptionCount","dropdownMargin","dropdownLabel","dropdown","openDropdown","isOpen","closeDropdown","clientRect","dropDownRect","getDropdownStyle","options","innerHeight","bottom","getDropdownOptions","option","onSelectLabel","mouseEnterHandler","mouseLeaveHandler","animate","requestAnimationFrame","loaded","highlighted","isHighlighted","onDelete","onCheck","onMouseEnter","onMouseLeave","onChange","ImageButton_ImageButton_ImageButton","getFirstLabelCreatedFlag","labelBefore","labelAfter","before","Fragment","after","listStyle","listStyleContent","deleteRectLabelById","labelRectId","filter","currentLabel","checkRectLabelById","RectLabelsList_objectSpread","updateRectLabel","labelNameIndex","onClickCapture","SideNavigationBar_EmptyLabelList_EmptyLabelList","SideNavigationBar_LabelInputField_LabelInputField","deletePointLabelById","labelPointId","checkPointLabelById","PointLabelsList_objectSpread","updatePointLabel","alreadyFlag","deletePolygonLabelById","labelPolygonId","checkPolygonLabelById","PolygonLabelsList_objectSpread","updatePolygonLabel","TextButton","label","LabelsToolkit","labelsToolkitRef","tabs","updateToolkitSize","headerClickHandler","activeTab","renderChildren","currentGroupIndex","tabData","baseClass","header","content","SideNavigationBar_RectLabelsList_RectLabelsList","activeTabContentHeight","SideNavigationBar_PointLabelsList_PointLabelsList","SideNavigationBar_PolygonLabelsList_PolygonLabelsList","buttonOnClickHandle","renderChildrenWrapper","TextButton_TextButton_TextButton","deleteGroupList","IMAGE_RECOGNITION","RIGHT_NAVBAR","DELETE_GROUP_LIST","getActiveLabelType","SideNavigationBar","direction","isWithContext","renderContent","renderCompanion","right","with-context","closed","VerticalEditorButton","EditorUtil","getIndicator","cursorStyle","RESIZE","getCursorStyle","move","resize","cancel","AcceptedFileType","Editor","setActiveImage","updateModelAndRender","setLoadingStatus","calculateAllCharacteristics","update","updateMousePositionIndicator","mountEventListeners","mountRenderEngines","unmountEventListeners","prevProps","prevState","snapshot","swapSupportRenderingEngine","onContextMenu","preventDefault","loadDataFromLocalStorge","LOAD_DATA_FROM_LOCALSTORGE","totalImageCount","windowSize","_useState","useState","_useState2","slicedToArray","leftTabStatus","setLeftTabStatus","_useState3","_useState4","rightTabStatus","setRightTabStatus","calculateEditorSize","leftTabWidth","rightTabWidth","leftSideBarButtonOnClick","rightSideBarButtonOnClick","useEffect","SideNavigationBar_SideNavigationBar_SideNavigationBar","VerticalEditorButton_VerticalEditorButton_VerticalEditorButton","SideNavigationBar_ImagesList_ImagesList","onMouseDown","EditorView_Editor_Editor","EditorView_BottomNavigationBar_BottomNavigationBar","SideNavigationBar_LabelsToolkit_LabelsToolkit","pointLabeledImages","currentCount","currentImage","rectLabeledImages","polygonLabeledImages","getProgress","UnderlineTextButton","under","over","TextInput","isPassword","onFocus","inputStyle","labelStyle","barStyle","htmlFor","updateProjectName","UPDATE_PROJECT_NAME","EditorView_StateBar_StateBar","Common_TextInput_TextInput","toLowerCase","replace","setSelectionRange","UnderlineTextButton_UnderlineTextButton_UnderlineTextButton","EXPORT_LABELS","withPopup","EditorView_TopNavigationBar_TopNavigationBar","EditorView_EditorContainer_EditorContainer","SocialMediaData","displayName","tooltipMessage","EditorFeatureData","displayText","GenericYesNoPopup","acceptLabel","onAccept","skipAcceptButton","disableAcceptButton","rejectLabel","onReject","skipRejectButton","disableRejectButton","onClickUpload","isUpload","isLogin","onClickBack","setMountStatus","_useModal","useModal","openModal","closeModal","Modal","_useCookies","useCookies","_useCookies2","setCookie","removeCookie","username","setUsername","password","setPassword","_useState5","_useState6","setIsLogin","_useState7","_useState8","setIsUpload","_useState9","_useState10","dirList","setDirList","_useState11","_useState12","picListDir","setPiclistDir","_useState13","_useState14","picList","setPicList","_useState15","_useState16","selectDirName","setSelectDirName","_useState17","_useState18","isLoaded","setIsLoaded","_useState19","userId","_useState20","dirInfo","setDirInfo","_useState21","_useState22","isEditingId","setIsEditingId","_useState23","_useState24","dirName","setDirName","_useState25","_useState26","isUploading","setIsUploading","inputRef","useRef","onChangeUsername","val","onChangePassword","getInitDir","token","lists","acc","cur","list","handleChange","files","formdata","FormData","append","onChangeDirName","e","onSelectDir","GenericYesNoPopup_GenericYesNoPopup_GenericYesNoPopup","lib","fontSize","require","onOpenModal","current","click","accept","multiple","hidden","OBJECT_DETECTION","INSERT_LABEL_NAMES","res","location","reload","flexWrap","justifyContent","react_loading_default","MainView","projectInProgress","setProjectInProgress","projectCanceled","setProjectCanceled","withStyles","theme","tooltip","backgroundColor","boxShadow","shadows","Tooltip","InProgress","Canceled","LoginPopup_LoginPopup","ExportFormatType","labelsList","setLabelsList","invalidFileLoadedStatus","setInvalidFileLoadedStatus","_useDropzone","useDropzone","TEXT","onDrop","acceptedFiles","loadLabelsList","getRootProps","getInputProps","XMLSanitizerUtil","input","ExporterUtil","getProjectName","date","moment","format","RectLabelsExporter","exportFormatType","YOLO","exportAsYOLO","VOC","exportAsVOC","CSV","exportAsCSV","zip","JSZip","fileContent","wrapRectLabelsIntoYOLO","fileName","error","Error","generateAsync","saveAs","getExportFileName","toFixed","join","wrapImageIntoVOC","labelNamesList","getLabelNames","labels","wrapRectLabelsIntoVOC","sanitize","wrapRectLabelsIntoCSV","imageLabelData","Blob","AllExportFormatData","PointExportFormatData","PointLabelsExporter","AllLabelsExporter","exportAsJson","mapImagesDataToVGGObject","mapImageDataToVGGFileData","regionsDataArray","mapImageDataToVGG","orderArray","tempArray","is_checked","all_points","temp","peopleDataArray","personData","pose_keypoints_2d","label_name","people","validPointLabelsArray","getValidPointLabelsArray","pointsData","validLabels","group","PolygonExportFormatData","VGG_JSON","PolygonLabelsExporter","exportAsVGGJson","regionsData","fileref","filename","base64_img_data","file_attributes","regions","getValidPolygonLabels","shape_attributes","mapPolygonToVGG","region_attributes","all_points_x","all_points_y","RectExportFormatData","ALL","exportLabelType","setExportLabelType","setExportFormatType","getOptions","exportFormatData","entry","export","setLabelNames","addHandle","newLabelNames","InsertLabelNamesPopup_objectSpread","defineProperty","labelInputs","keys","deleteHandle","extractLabelNamesList","LOAD_LABEL_NAMES","useCallback","IMAGE","mapFileDataToImageData","PopupView_LoadLabelNamesPopup_LoadLabelNamesPopup","PopupView_ExportLabelsPopup_ExportLabelPopup","PopupView_InsertLabelNamesPopup_InsertLabelNamesPopup","EXIT_PROJECT","PopupView_ExitProjectPopup_ExitProjectPopup","PopupView_LoadMoreImagesPopup_LoadMoreImagesPopup","selectPopup","scrollPosition","setScrollPosition","getEditorFeatureTiles","features","topNavigationBar","Hide","Show","firstStage","secondStage","thirdStage","fourthStage","getSocialMediaButtons","SizeItUpView","manufacturer","os","views_MobileMainView_MobileMainView","SizeItUpView_SizeItUpView_SizeItUpView","views_EditorView_EditorView","views_MainView_MainView","views_PopupView_PopupView","dist_default","Boolean","hostname","match","initialState","rootReducer","combineReducers","UPDATE_WINDOW_SIZE","reducer_objectSpread","_action$payload","addImagesData","newData","newGroupList","activeGroup","newActiveGroupIndex","findIndex","allIndex","Array","v","k","difference","PlatformUtil","userAgent","mobileDetect","MobileDetect","mobile","browser","AppInitializer","handleResize","detectDeviceParams","init","innerWidth","navigator","getMobileDeviceData","d","__webpack_exports__","createStore","inti","ReactDOM","es","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5a62228d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dir.867ab584.svg\";","export enum Direction {\n    TOP = \"TOP\",\n    BOTTOM = \"BOTTOM\",\n    LEFT = \"LEFT\",\n    RIGHT = \"RIGHT\",\n    TOP_RIGHT = \"TOP_RIGHT\",\n    TOP_LEFT = \"TOP_LEFT\",\n    BOTTOM_RIGHT = \"BOTTOM_RIGHT\",\n    BOTTOM_LEFT = \"BOTTOM_LEFT\",\n    CENTER = \"CENTER\"\n}","export enum PopupWindowType {\n    LOAD_LABEL_NAMES = \"LOAD_LABEL_NAMES\",\n    LOAD_IMAGES = \"LOAD_IMAGES\",\n    EXPORT_LABELS = \"EXPORT_LABELS\",\n    INSERT_LABEL_NAMES = 'INSERT_LABEL_NAMES',\n    EXIT_PROJECT = 'EXIT_PROJECT'\n}","import { PopupWindowType } from \"../data/enums/PopupWindowType\";\n\nexport class Settings {\n  public static readonly GITHUB_URL: string = \"https://github.com/SkalskiP\";\n  public static readonly MEDIUM_URL: string = \"https://medium.com/@piotr.skalski92\";\n  public static readonly PATREON_URL: string = \"https://www.patreon.com/make_sense\";\n\n  public static readonly TOP_NAVIGATION_BAR_HEIGHT_PX: number = 35;\n  public static readonly BOTTOM_NAVIGATION_BAR_HEIGHT_PX: number = 45 + 1;\n  public static readonly SIDE_NAVIGATION_BAR_WIDTH_CLOSED_PX: number = 20 + 1;\n  public static readonly SIDE_NAVIGATION_BAR_WIDTH_OPEN_PX: number =\n    Settings.SIDE_NAVIGATION_BAR_WIDTH_CLOSED_PX + 300 + 1;\n  public static readonly TOOLKIT_TAB_HEIGHT_PX: number = 40;\n\n  public static readonly EDITOR_MIN_WIDTH: number = 900;\n  public static readonly EDITOR_MIN_HEIGHT: number = 500;\n\n  public static readonly PRIMARY_COLOR: string = \"#2af598\";\n  public static readonly SECONDARY_COLOR: string = \"#009efd\";\n\n  public static readonly DARK_THEME_FIRST_COLOR: string = \"#171717\";\n  public static readonly DARK_THEME_SECOND_COLOR: string = \"#C9FF2F\";\n  public static readonly DARK_THEME_THIRD_COLOR: string = \"#4c4c4c\";\n  public static readonly DARK_THEME_FORTH_COLOR: string = \"#252f35\";\n\n  public static readonly CANVAS_PADDING_WIDTH_PX: number = 20;\n  public static readonly CROSS_HAIR_THICKNESS_PX: number = 1;\n  public static readonly CROSS_HAIR_COLOR: string = \"#fff\";\n\n  public static readonly RESIZE_HANDLE_DIMENSION_PX: number = 6;\n  public static readonly RESIZE_HANDLE_HOVER_DIMENSION_PX = 16;\n\n  public static readonly CLOSEABLE_POPUPS: PopupWindowType[] = [\n    PopupWindowType.LOAD_IMAGES,\n    PopupWindowType.LOAD_IMAGES,\n    PopupWindowType.LOAD_IMAGES,\n  ];\n}\n","export enum Action {\n  UPDATE_PROJECT_TYPE = '@@UPDATE_PROJECT_TYPE',\n  UPDATE_PROJECT_NAME = '@@UPDATE_PROJECT_NAME',\n  UPDATE_ACTIVE_IMAGE_INDEX = '@@UPDATE_ACTIVE_IMAGE_INDEX',\n  UPDATE_IMAGE_DATA_BY_ID = '@@UPDATE_IMAGE_DATA_BY_ID',\n  UPDATE_GROUP_DATA_BY_INDEX = '@@UPDATE_GROUP_DATA_BY_INDEX',\n  ADD_IMAGES_DATA = '@@ADD_IMAGES_DATA',\n  UPDATE_IMAGES_DATA = '@@UPDATE_IMAGES_DATA',\n  UPDATE_WINDOW_SIZE = '@@UPDATE_WINDOW_SIZE',\n  UPDATE_ACTIVE_POPUP_TYPE = '@@UPDATE_ACTIVE_POPUP_TYPE',\n  UPDATE_ACTIVE_LABEL_NAME_INDEX = '@@UPDATE_ACTIVE_LABEL_NAME_INDEX',\n  UPDATE_ACTIVE_LABEL_TYPE = '@@UPDATE_ACTIVE_LABEL_TYPE',\n  UPDATE_ACTIVE_LABEL_ID = '@@UPDATE_ACTIVE_LABEL_ID',\n  UPDATE_HIGHLIGHTED_LABEL_ID = '@@UPDATE_HIGHLIGHTED_LABEL_ID',\n  UPDATE_LABEL_NAMES_LIST = '@@UPDATE_LABEL_NAMES_LIST',\n  UPDATE_FIRST_LABEL_CREATED_FLAG = '@@UPDATE_FIRST_LABEL_CREATED_FLAG',\n  UPDATE_CUSTOM_CURSOR_STYLE = '@@UPDATE_CUSTOM_CURSOR_STYLE',\n  UPDATE_CONTEXT = '@@UPDATE_CONTEXT',\n  UPDATE_GROUP_LIST = '@@UPDATE_GROUP_LIST',\n  UPDATE_ACTIVE_GROUP_INDEX = '@@UPDATE_ACTIVE_GROUP_INDEX',\n  FIND_NEXT_AVAILABLE_LABEL_INDEX = '@@FIND_NEXT_AVAILABLE_LABEL_INDEX',\n  DELETE_GROUP_LIST = '@@DELETE_GROUP_LIST',\n  LOAD_DATA_FROM_LOCALSTORGE = '@@LOAD_DATA_FROM_LOCALSTORGE',\n  UPDATE_LABEL_INDEX_BY_INFO = '@@UPDATE_LABEL_INDEX_BY_INFO',\n  UPDATE_DIR_INFO = \"UPDATE_DIR_INFO\"\n}\n","import { ProjectType } from '../../data/enums/ProjectType';\nimport { EditorActionTypes, ImageData } from './types';\nimport { Action } from '../Actions';\nimport { LabelType } from '../../data/enums/LabelType';\n\n\n\nexport function updateProjectType(projectType: ProjectType): EditorActionTypes {\n  return {\n    type: Action.UPDATE_PROJECT_TYPE,\n    payload: {\n      projectType,\n    },\n  };\n}\n\nexport function updateProjectName(projectName: string): EditorActionTypes {\n  return {\n    type: Action.UPDATE_PROJECT_NAME,\n    payload: {\n      projectName,\n    },\n  };\n}\n\nexport function updateActiveImageIndex(activeImageIndex: number): EditorActionTypes {\n  return {\n    type: Action.UPDATE_ACTIVE_IMAGE_INDEX,\n    payload: {\n      activeImageIndex,\n    },\n  };\n}\n\nexport function updateActiveLabelNameIndex(activeLabelNameIndex: number): EditorActionTypes {\n  return {\n    type: Action.UPDATE_ACTIVE_LABEL_NAME_INDEX,\n    payload: {\n      activeLabelNameIndex,\n    },\n  };\n}\n\nexport function updateLabelIndexByInfo(\n  imageIndex: number,\n  groupIndex: number,\n  labelPointIndex: number,\n  labelIndex: number,\n  labelCheckd: boolean\n): EditorActionTypes {\n  return {\n    type: Action.UPDATE_LABEL_INDEX_BY_INFO,\n    payload: {\n      imageIndex,\n      groupIndex,\n      labelPointIndex,\n      labelIndex,\n      labelCheckd,\n    },\n  };\n}\n\nexport function updateActiveLabelId(activeLabelId: string): EditorActionTypes {\n  return {\n    type: Action.UPDATE_ACTIVE_LABEL_ID,\n    payload: {\n      activeLabelId,\n    },\n  };\n}\n\nexport function updateHighlightedLabelId(highlightedLabelId: string): EditorActionTypes {\n  return {\n    type: Action.UPDATE_HIGHLIGHTED_LABEL_ID,\n    payload: {\n      highlightedLabelId,\n    },\n  };\n}\n\nexport function updateActiveLabelType(activeLabelType: LabelType): EditorActionTypes {\n  return {\n    type: Action.UPDATE_ACTIVE_LABEL_TYPE,\n    payload: {\n      activeLabelType,\n    },\n  };\n}\n\nexport function updateImageDataById(id: string, newImageData: ImageData): EditorActionTypes {\n  return {\n    type: Action.UPDATE_IMAGE_DATA_BY_ID,\n    payload: {\n      id,\n      newImageData,\n    },\n  };\n}\n\nexport function addImageData(imageData: ImageData[], inital?: boolean): EditorActionTypes {\n\n  return {\n    type: Action.ADD_IMAGES_DATA,\n    payload: {\n      imageData,\n      inital\n    },\n  };\n}\n\nexport function updateImageData(imageData: ImageData[]): EditorActionTypes {\n  return {\n    type: Action.UPDATE_IMAGES_DATA,\n    payload: {\n      imageData,\n    },\n  };\n}\n\nexport function updateLabelNamesList(labelNames: string[]) {\n  return {\n    type: Action.UPDATE_LABEL_NAMES_LIST,\n    payload: {\n      labelNames,\n    },\n  };\n}\n\nexport function updateFirstLabelCreatedFlag(firstLabelCreatedFlag: boolean) {\n  return {\n    type: Action.UPDATE_FIRST_LABEL_CREATED_FLAG,\n    payload: {\n      firstLabelCreatedFlag,\n    },\n  };\n}\n\nexport function updateGroupList(groupName: string) {\n  return {\n    type: Action.UPDATE_GROUP_LIST,\n    payload: {\n      groupName,\n    },\n  };\n}\nexport function updateActiveGroupIndex(groupIndex: number) {\n  return {\n    type: Action.UPDATE_ACTIVE_GROUP_INDEX,\n    payload: {\n      groupIndex,\n    },\n  };\n}\nexport function findNextAvailableLabelIndex() {\n  return {\n    type: Action.FIND_NEXT_AVAILABLE_LABEL_INDEX,\n  };\n}\n\nexport function deleteGroupList(groupIndex: number) {\n  return {\n    type: Action.DELETE_GROUP_LIST,\n    payload: {\n      groupIndex,\n    },\n  };\n}\n\nexport function loadDataFromLocalStorge() {\n  return {\n    type: Action.LOAD_DATA_FROM_LOCALSTORGE,\n  };\n}\n","import {ISize} from \"../interfaces/ISize\";\nimport {IPoint} from \"../interfaces/IPoint\";\n\nexport class VirtualListUtil {\n    public static calculateGridSize(listSize: ISize, childSize: ISize, childCount: number): ISize {\n        const columnCount: number = Math.floor(listSize.width / childSize.width);\n        const rowCount: number = Math.ceil(childCount / columnCount);\n        return {width: columnCount, height: rowCount};\n    }\n\n    public static calculateContentSize(listSize: ISize, childSize: ISize, gridSize: ISize): ISize {\n        const sizeFromGrid:ISize = {\n            width: childSize.width * gridSize.width,\n            height: childSize.height * gridSize.height\n        };\n\n        return {\n            width: Math.max(listSize.width, sizeFromGrid.width),\n            height: sizeFromGrid.height\n        }\n    }\n\n    public static calculateAnchorPoints(listSize: ISize, childSize: ISize, childCount: number): IPoint[] {\n        const gridSize: ISize = VirtualListUtil.calculateGridSize(listSize, childSize, childCount);\n        const contentWrapperSize: ISize = VirtualListUtil.calculateContentSize(listSize, childSize, gridSize);\n        const horizontalMargin = (contentWrapperSize.width - gridSize.width * childSize.width) / (gridSize.width + 1);\n\n        let anchors = [];\n        for (let i = 0; i < childCount; i++) {\n            const rowCount: number = Math.floor(i / gridSize.width);\n            const columnCount: number = i % gridSize.width;\n\n            const anchor: IPoint = {\n                x: rowCount * horizontalMargin + columnCount * childSize.width,\n                y: rowCount * childSize.height\n            };\n            anchors.push(anchor);\n        }\n        return anchors;\n    }\n}","export class NumberUtil {\n    public static snapValueToRange(value: number, min: number, max: number): number {\n        if (value < min)\n            return min;\n        if (value > max)\n            return max;\n\n        return value;\n    }\n}","import {IRect} from \"../interfaces/IRect\";\nimport {IPoint} from \"../interfaces/IPoint\";\nimport {ISize} from \"../interfaces/ISize\";\nimport {RectAnchor} from \"../data/RectAnchor\";\nimport {NumberUtil} from \"./NumberUtil\";\nimport {Direction} from \"../data/enums/Direction\";\n\nexport class RectUtil {\n    public static getRatio(rect: IRect): number {\n        if (!rect) return null;\n\n        return rect.width/rect.height\n    }\n\n    public static intersect(r1: IRect, r2: IRect) {\n        if (!r1 || !r2) return null;\n        return !(\n            r2.x > r1.x + r1.width ||\n            r2.x + r2.width < r1.x ||\n            r2.y > r1.y + r1.height ||\n            r2.y + r2.height < r1.y\n        );\n    }\n\n    public static isPointInside(rect: IRect, point: IPoint): boolean {\n        if (!rect || !point) return null;\n        return (\n            rect.x < point.x &&\n            rect.x + rect.width > point.x &&\n            rect.y < point.y &&\n            rect.y + rect.height > point.y\n        )\n    }\n\n    public static getRectWithCenterAndSize(centerPoint: IPoint, size: ISize): IRect {\n        return {\n            x: centerPoint.x - 0.5 * size.width,\n            y: centerPoint.y - 0.5 * size.height,\n            ...size\n        }\n    }\n\n    public static fitInsideRectWithRatio(containerRect: IRect, ratio: number): IRect {\n        const containerRectRatio = RectUtil.getRatio(containerRect);\n        if (containerRectRatio < ratio) {\n            const innerRectHeight = containerRect.width / ratio;\n            return {\n                x: containerRect.x,\n                y: containerRect.y + (containerRect.height - innerRectHeight) / 2,\n                width: containerRect.width,\n                height: innerRectHeight\n            }\n        }\n        else {\n            const innerRectWidth = containerRect.height * ratio;\n            return {\n                x: containerRect.x + (containerRect.width - innerRectWidth) / 2,\n                y: containerRect.y,\n                width: innerRectWidth,\n                height: containerRect.height\n            }\n        }\n    }\n\n    public static resizeRect(inputRect: IRect, rectAnchor: Direction, delta): IRect {\n        const rect: IRect = {...inputRect};\n        switch (rectAnchor) {\n            case Direction.RIGHT:\n                rect.width += delta.x;\n                break;\n            case Direction.BOTTOM_RIGHT:\n                rect.width += delta.x;\n                rect.height += delta.y;\n                break;\n            case Direction.BOTTOM:\n                rect.height += delta.y;\n                break;\n            case Direction.TOP_RIGHT:\n                rect.width += delta.x;\n                rect.y += delta.y;\n                rect.height -= delta.y;\n                break;\n            case Direction.TOP:\n                rect.y += delta.y;\n                rect.height -= delta.y;\n                break;\n            case Direction.TOP_LEFT:\n                rect.x += delta.x;\n                rect.width -= delta.x;\n                rect.y += delta.y;\n                rect.height -= delta.y;\n                break;\n            case Direction.LEFT:\n                rect.x += delta.x;\n                rect.width -= delta.x;\n                break;\n            case Direction.BOTTOM_LEFT:\n                rect.x += delta.x;\n                rect.width -= delta.x;\n                rect.height += delta.y;\n                break;\n        }\n\n        if (rect.width < 0)  {\n            rect.x = rect.x + rect.width;\n            rect.width = - rect.width;\n        }\n\n        if (rect.height < 0)  {\n            rect.y = rect.y + rect.height;\n            rect.height = - rect.height;\n        }\n\n        return rect;\n    }\n\n    public static translate(rect: IRect, delta: IPoint): IRect {\n        return {\n            ...rect,\n            x: rect.x + delta.x,\n            y: rect.y + delta.y\n        }\n    }\n\n    public static expand(rect: IRect, delta: IPoint): IRect {\n        return {\n            x: rect.x - delta.x,\n            y: rect.y - delta.y,\n            width: rect.width + 2 * delta.x,\n            height: rect.height + 2 * delta.y\n        }\n    }\n\n    public static scaleRect(rect:IRect, scale: number): IRect {\n        return {\n            x: rect.x * scale,\n            y: rect.y * scale,\n            width: rect.width * scale,\n            height: rect.height * scale\n        }\n    }\n\n    public static mapRectToAnchors(rect: IRect): RectAnchor[] {\n        return [\n            {type: Direction.TOP_LEFT, position: {x: rect.x, y: rect.y}},\n            {type: Direction.TOP, position: {x: rect.x + 0.5 * rect.width, y: rect.y}},\n            {type: Direction.TOP_RIGHT, position: {x: rect.x + rect.width, y: rect.y}},\n            {type: Direction.LEFT, position: {x: rect.x, y: rect.y + 0.5 * rect.height}},\n            {type: Direction.RIGHT, position: {x: rect.x + rect.width, y: rect.y + 0.5 * rect.height}},\n            {type: Direction.BOTTOM_LEFT, position: {x: rect.x, y: rect.y + rect.height}},\n            {type: Direction.BOTTOM, position: {x: rect.x + 0.5 * rect.width, y: rect.y + rect.height}},\n            {type: Direction.BOTTOM_RIGHT, position: {x: rect.x + rect.width, y: rect.y + rect.height}}\n        ]\n    }\n\n    public static snapPointToRect(point: IPoint, rect: IRect): IPoint {\n        if (RectUtil.isPointInside(rect, point))\n            return point;\n\n        return {\n            x: NumberUtil.snapValueToRange(point.x, rect.x, rect.x + rect.width),\n            y: NumberUtil.snapValueToRange(point.y, rect.y, rect.y + rect.height)\n        }\n    }\n}","export enum LabelType {\n  NAME = \"NAME\",\n  POINT = \"POINT\",\n  RECTANGLE = \"RECTANGLE\",\n  POLYGON = \"POLYGON\",\n  ALL = \"ALL\",\n}\n","import { Cookies } from 'react-cookie';\n\nconst HOST = 'http://47.99.138.248';\n\nconst cookies = new Cookies();\nexport function makeRequest(method: string, url: string) {\n  return new Promise(function (resolve, reject) {\n    let xhr = new XMLHttpRequest();\n    xhr.open(method, url);\n    xhr.responseType = 'blob';\n    xhr.onload = function () {\n      if (this.status >= 200 && this.status < 300) {\n        resolve(xhr.response);\n      } else {\n        reject({\n          status: this.status,\n          statusText: xhr.statusText,\n        });\n      }\n    };\n    xhr.onerror = function () {\n      reject({\n        status: this.status,\n        statusText: xhr.statusText,\n      });\n    };\n    xhr.send();\n  });\n}\n\nexport function postData(url: string, data: object): Promise<any> {\n  // Default options are marked with *\n  return fetch(HOST + url, {\n    body: JSON.stringify(data), // must match 'Content-Type' header\n    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n    mode: 'cors',\n    // credentials: 'same-origin', // include, same-origin, *omit\n    headers: {\n      Authorization: cookies.get('token'),\n      'content-type': 'application/json',\n    },\n    method: 'POST', // *GET, POST, PUT, DELETE, etc.\n  }).then(response => response.json()); // parses response to JSON\n}\n\nexport function postFile(url: string, data: object): Promise<any> {\n  // Default options are marked with *\n  return fetch(HOST + url, {\n    body: data as any, // must match 'Content-Type' header\n    headers: {\n      Authorization: cookies.get('token'),\n    },\n    method: 'POST', // *GET, POST, PUT, DELETE, etc.\n  }).then(response => response.json()); // parses response to JSON\n}\n\nexport function getData(url: string): Promise<any> {\n  // Default options are marked with *\n  return fetch(HOST + url, {\n    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n    mode: 'cors',\n    // credentials: 'same-origin', // include, same-origin, *omit\n    headers: {\n      'content-type': 'application/json',\n      Authorization: cookies.get('token'),\n    },\n    method: 'GET', // *GET, POST, PUT, DELETE, etc.\n  }).then(response => response.json()); // parses response to JSON\n}\n","import React from 'react';\nimport { ISize } from '../../../interfaces/ISize';\nimport { IRect } from '../../../interfaces/IRect';\nimport Scrollbars from 'react-custom-scrollbars';\nimport { VirtualListUtil } from '../../../utils/VirtualListUtil';\nimport { IPoint } from '../../../interfaces/IPoint';\nimport { RectUtil } from '../../../utils/RectUtil';\nimport _ from 'lodash';\nimport { EditorActions } from '../../../logic/actions/EditorActions';\nimport { EditorSelector } from '../../../store/selectors/EditorSelector';\nimport { ImageData } from '../../../store/editor/types';\nimport { store } from 'react-notifications-component';\nimport uuidv1 from 'uuid/v1';\nimport { LabelType } from '../../../data/enums/LabelType';\nimport { RenderEngineUtil } from '../../../utils/RenderEngineUtil';\nimport { EditorModel } from '../../../staticModels/EditorModel';\nimport { postData, makeRequest } from '../../../utils/HttpUtils';\nimport { useCookies, Cookies } from 'react-cookie';\nimport { connect } from 'react-redux';\nimport {\n  addImageData\n} from '../../../store/editor/actionCreators';\ninterface IProps {\n  size: ISize;\n  childCount: number;\n  childSize: ISize;\n  childRender: (index: number, isScrolling: boolean, isVisible: boolean, style: React.CSSProperties) => any;\n  overScanHeight?: number;\n  addImageData: (imageData: ImageData[]) => any;\n}\n\ninterface IState {\n  viewportRect: IRect;\n  isScrolling: boolean;\n  loading: boolean;\n  isCompleted: boolean;\n}\n\n// const [cookies , setCookie, removeCookie] = useCookies(['token']);\nconst cookies = new Cookies()\n\n\nclass VirtualList extends React.Component<IProps, IState> {\n  private gridSize: ISize;\n  private contentSize: ISize;\n  private childAnchors: IPoint[];\n  private scrollbars: Scrollbars;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      viewportRect: null,\n      isScrolling: false,\n      loading: false,\n      isCompleted: false,\n    };\n  }\n\n  public componentDidMount(): void {\n    const { size, childSize, childCount } = this.props;\n    this.calculate(size, childSize, childCount);\n    this.setState({\n      viewportRect: {\n        x: 0,\n        y: 0,\n        width: this.props.size.width,\n        height: this.props.size.height,\n      },\n    });\n  }\n\n  public componentWillUpdate(nextProps: Readonly<IProps>, nextState: Readonly<IState>, nextContext: any): void {\n    const { size, childSize, childCount } = nextProps;\n    if (\n      this.props.size.height !== size.height ||\n      this.props.size.width !== size.width ||\n      this.props.childCount !== childCount\n    ) {\n      this.calculate(size, childSize, childCount);\n      this.setState({\n        viewportRect: {\n          x: this.scrollbars.getValues().scrollLeft,\n          y: this.scrollbars.getValues().scrollTop,\n          width: size.width,\n          height: size.height,\n        },\n      });\n    }\n  }\n\n  private calculate = (size: ISize, childSize: ISize, childCount: number) => {\n    this.gridSize = VirtualListUtil.calculateGridSize(size, childSize, childCount);\n    this.contentSize = VirtualListUtil.calculateContentSize(size, childSize, this.gridSize);\n    this.childAnchors = VirtualListUtil.calculateAnchorPoints(size, childSize, childCount);\n  };\n\n  private getVirtualListStyle = (): React.CSSProperties => {\n    return {\n      position: 'relative',\n      width: this.props.size.width,\n      height: this.props.size.height,\n    };\n  };\n\n  private getVirtualListContentStyle = (): React.CSSProperties => {\n    return {\n      width: this.contentSize.width,\n      height: this.contentSize.height,\n    };\n  };\n\n  private onScrollStart = () => {\n    this.setState({ isScrolling: true });\n  };\n\n  private onScrollStop = () => {\n    this.setState({ isScrolling: false });\n    // this.onUpdate();\n  };\n\n  private onScroll = values => {\n    if (values.top === 1 && !this.state.isCompleted) {\n      if (this.state.loading) {\n        store.addNotification({\n          title: '操作频率太快啦～请稍候',\n          message: '图片正在加载中.....',\n          type: 'warning',\n          insert: 'top',\n          container: 'top-center',\n          animationIn: ['animated', 'fadeIn'],\n          animationOut: ['animated', 'fadeOut'],\n          dismiss: {\n            duration: 1000,\n            // onScreen: true,\n          },\n        });\n        return\n      }\n      this.setState({\n        loading: true\n      })\n      postData('/mark/sign/picList', {\n        dir: cookies.get('dirName'), // 文件夹名称\n        pageNo: +cookies.get('pageNo') + 1, // 分页参数\n        pageSize: +cookies.get('pageSize'), // 分页参数\n      }).then(resJson => {\n        if (resJson.status === 200) {\n          cookies.set('pageNo', +cookies.get('pageNo') + 1)\n          if (resJson.data.rows.length < +cookies.get('pageSize')) {\n            this.setState({\n              isCompleted: true\n            })\n          } else {\n            this.importImagesDataFromHttp(resJson.data.rows);\n          }\n\n        }\n      });\n    }\n    this.setState({\n      viewportRect: {\n        x: values.scrollLeft,\n        y: values.scrollTop,\n        width: this.props.size.width,\n        height: this.props.size.height,\n      },\n    });\n  };\n\n  private importImagesDataFromHttp = (urlAry: any[]) => {\n    const that = this\n    let imagesData = [];\n    let number = 0;\n    urlAry.forEach(async (data, idx) => {\n      let blob = await makeRequest('get', data.url);\n      var file = new File([blob as any], data.id);\n      const reader = new FileReader();\n      reader.onabort = () => console.log('file reading was aborted');\n      reader.onerror = () => console.log('file reading has failed');\n      reader.onload = () => {\n        var image = new Image();\n        image.src = reader.result as any;\n        image.onload = function (img) {\n          (file as any).width = (this as any).width;\n          (file as any).height = (this as any).height;\n          const groupListData = data.point\n            ? JSON.parse(data.point)\n            : [\n              {\n                activeLabelNameIndex: 0,\n                activeLabelType: LabelType.POINT,\n                activeLabelId: null,\n                highlightedLabelId: null,\n                firstLabelCreatedFlag: false,\n                labelRects: [],\n                labelPoints: [],\n                labelPolygons: [],\n              },\n            ];\n          var tempImageData = {\n            activeGroupIndex: 0,\n            fileData: file,\n            groupList: groupListData,\n            id: uuidv1(),\n            loadStatus: false,\n          };\n          imagesData.push(tempImageData);\n          number++;\n          if (number === urlAry.length) {\n            imagesData.sort(function (a, b) {\n              return +a.fileData.name - +b.fileData.name;\n            });\n            that.props.addImageData(imagesData);\n            // setIsLoaded(true);\n            that.setState({\n              loading: false\n            })\n          }\n        };\n      };\n      reader.readAsDataURL(file);\n    });\n  };\n  private getChildren = () => {\n    const { viewportRect, isScrolling } = this.state;\n    const { overScanHeight, childSize } = this.props;\n    const overScan: number = !!overScanHeight ? overScanHeight : 0;\n\n    const viewportRectWithOverScan: IRect = {\n      x: viewportRect.x,\n      y: viewportRect.y - overScan,\n      width: viewportRect.width,\n      height: viewportRect.height + 2 * overScan,\n    };\n    // let showImageIndexs: number[] = [];\n    const result = this.childAnchors.reduce((children, anchor: IPoint, index: number) => {\n      const childRect = Object.assign(anchor, childSize);\n      const isVisible = RectUtil.intersect(viewportRectWithOverScan, childRect);\n\n      if (isVisible) {\n        const childStyle: React.CSSProperties = {\n          position: 'absolute',\n          left: anchor.x,\n          top: anchor.y,\n          width: childSize.width,\n          height: childSize.height,\n        };\n        // showImageIndexs.push(index);\n        return children.concat(this.props.childRender(index, isScrolling, isVisible, childStyle));\n      } else {\n        return children;\n      }\n    }, []);\n\n    return result;\n  };\n\n  public render() {\n    const displayContent = !!this.props.size && !!this.props.childSize && !!this.gridSize;\n\n    return (\n      <div className=\"VirtualList\" style={this.getVirtualListStyle()}>\n        <Scrollbars\n          ref={ref => (this.scrollbars = ref)}\n          onScrollFrame={this.onScroll}\n          onScrollStart={this.onScrollStart}\n          onScrollStop={this.onScrollStop}\n          autoHide={true}\n        //   onUpdate={this.onUpdate}\n        >\n          {displayContent && (\n            <div className=\"VirtualListContent\" style={this.getVirtualListContentStyle()}>\n              {this.getChildren()}\n            </div>\n          )}\n        </Scrollbars>\n      </div>\n    );\n  }\n}\n\n\nconst mapDispatchToProps = {\n  addImageData\n};\n\nexport default connect(\n  () => { },\n  mapDispatchToProps\n)(VirtualList);","export class ImageLoadManager {\n  private static queue: (() => Promise<any>)[] = [];\n  private static isRunning: boolean = false;\n\n  public static add(fx: Promise<any>) {\n    ImageLoadManager.queue.push(async () => await fx);\n  }\n\n  public static run() {\n    setTimeout(() => ImageLoadManager.runQueue(), 10);\n  }\n\n  public static addAndRun(fx: Promise<any>) {\n    ImageLoadManager.add(fx);\n    ImageLoadManager.run();\n  }\n\n  public static async runQueue() {\n    if (!ImageLoadManager.isRunning) {\n      ImageLoadManager.isRunning = true;\n      await ImageLoadManager.runTasks();\n      ImageLoadManager.isRunning = false;\n    }\n  }\n\n  private static async runTasks() {\n    while (ImageLoadManager.queue.length > 0) {\n      const fx = ImageLoadManager.queue.shift();\n      await fx();\n    }\n  }\n}\n","export type ImageMap = { [s: string]: HTMLImageElement; };\n\nexport class ImageRepository {\n    private static repository: ImageMap = {};\n\n    public static store(uuid: string, image: HTMLImageElement): string {\n        ImageRepository.repository[uuid] = image;\n        return uuid;\n    }\n\n    public static getById(uuid: string): HTMLImageElement {\n        return ImageRepository.repository[uuid];\n    }\n}","import uuidv1 from 'uuid/v1';\nimport { ImageData } from '../store/editor/types';\n\nexport class FileUtil {\n  public static mapFileDataToImageData(fileData: File): ImageData {\n    if (JSON.parse(localStorage.getItem(fileData.name))) {\n      var newfileData = JSON.parse(localStorage.getItem(fileData.name));\n      newfileData.fileData = fileData;\n      newfileData.loadStatus = false;\n      // newfileData.groupList.forEach((item, idx) => {\n      //   item.firstLabelCreatedFlag = false;\n      //   // newfileData.groupList[idx].labelPoints = [];\n      // });\n      // console.log(newfileData);\n      return newfileData;\n    }\n    return {\n      id: uuidv1(),\n      fileData: fileData,\n      loadStatus: false,\n      activeGroupIndex: 0,\n      groupList: [\n        {\n          labelRects: [],\n          labelPoints: [],\n          labelPolygons: [],\n          activeLabelNameIndex: 0,\n          activeLabelType: null,\n          activeLabelId: null,\n          highlightedLabelId: null,\n          firstLabelCreatedFlag: false,\n        },\n      ],\n    };\n  }\n\n  public static loadImage(\n    fileData: File,\n    onSuccess: (image: HTMLImageElement) => any,\n    onFailure: () => any\n  ): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const url = URL.createObjectURL(fileData);\n      const image = new Image();\n      image.src = url;\n      image.onload = () => {\n        onSuccess(image);\n        resolve();\n      };\n      image.onerror = () => {\n        onFailure();\n        reject();\n      };\n    });\n  }\n\n  public static loadLabelsList(fileData: File, onSuccess: (labels: string[]) => any, onFailure: () => any) {\n    const reader = new FileReader();\n    reader.readAsText(fileData);\n    reader.onloadend = function(evt: any) {\n      const contents: string = evt.target.result;\n      onSuccess(contents.split(/[\\r\\n]/));\n    };\n    reader.onerror = () => onFailure();\n  }\n}\n","export enum ContextType {\n    EDITOR = \"EDITOR\",\n    LEFT_NAVBAR = \"LEFT_NAVBAR\",\n    RIGHT_NAVBAR = \"RIGHT_NAVBAR\",\n    POPUP = \"POPUP\",\n    DROPDOWN = \"DROPDOWN\"\n}","import classNames from 'classnames';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { ClipLoader } from 'react-spinners';\nimport { ImageLoadManager } from '../../../../logic/imageRepository/ImageLoadManager';\nimport { IRect } from '../../../../interfaces/IRect';\nimport { ISize } from '../../../../interfaces/ISize';\nimport { ImageRepository } from '../../../../logic/imageRepository/ImageRepository';\nimport { Settings } from '../../../../settings/Settings';\nimport { AppState } from '../../../../store';\nimport { updateImageDataById } from '../../../../store/editor/actionCreators';\nimport { ImageData } from '../../../../store/editor/types';\nimport { FileUtil } from '../../../../utils/FileUtil';\nimport { RectUtil } from '../../../../utils/RectUtil';\nimport './ImagePreview.scss';\n\ninterface IProps {\n  imageData: ImageData;\n  style: React.CSSProperties;\n  size: ISize;\n  index: number;\n  isScrolling?: boolean;\n  isChecked?: boolean;\n  onClick?: () => any;\n  isSelected?: boolean;\n  updateImageDataById: (id: string, newImageData: ImageData) => any;\n}\n\ninterface IState {\n  image: HTMLImageElement;\n}\n\nclass ImagePreview extends React.Component<IProps, IState> {\n  private isLoading: boolean = false;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      image: null,\n    };\n  }\n\n  public componentDidMount(): void {\n    ImageLoadManager.addAndRun(this.loadImage(this.props.imageData, this.props.isScrolling));\n  }\n\n  public componentWillUpdate(nextProps: Readonly<IProps>, nextState: Readonly<IState>, nextContext: any): void {\n    if (this.props.imageData.id !== nextProps.imageData.id) {\n      if (nextProps.imageData.loadStatus) {\n        ImageLoadManager.addAndRun(this.loadImage(nextProps.imageData, nextProps.isScrolling));\n      } else {\n        this.setState({ image: null });\n      }\n    }\n\n    if (this.props.isScrolling && !nextProps.isScrolling) {\n      ImageLoadManager.addAndRun(this.loadImage(nextProps.imageData, false));\n    }\n  }\n\n  shouldComponentUpdate(nextProps: Readonly<IProps>, nextState: Readonly<IState>, nextContext: any): boolean {\n    return (\n      this.props.imageData.id !== nextProps.imageData.id ||\n      this.state.image !== nextState.image ||\n      this.props.isSelected !== nextProps.isSelected ||\n      this.props.isChecked !== nextProps.isChecked\n    );\n  }\n\n  private loadImage = async (imageData: ImageData, isScrolling: boolean) => {\n    if (imageData.loadStatus) {\n      const image = ImageRepository.getById(imageData.id);\n      if (this.state.image !== image) {\n        this.setState({ image });\n      }\n    } else if (!isScrolling || !this.isLoading) {\n      this.isLoading = true;\n      const saveLoadedImagePartial = (image: HTMLImageElement) => this.saveLoadedImage(image, imageData);\n      await FileUtil.loadImage(imageData.fileData, saveLoadedImagePartial, this.handleLoadImageError);\n    }\n  };\n\n  private saveLoadedImage = (image: HTMLImageElement, imageData: ImageData) => {\n    this.props.updateImageDataById(imageData.id, { ...imageData, loadStatus: true });\n    ImageRepository.store(imageData.id, image);\n    if (imageData.id === this.props.imageData.id) {\n      this.setState({ image });\n      this.isLoading = false;\n    }\n  };\n\n  private getStyle = () => {\n    const { size } = this.props;\n\n    const containerRect: IRect = {\n      x: 0.15 * size.width,\n      y: 0.15 * size.height,\n      width: 0.7 * size.width,\n      height: 0.7 * size.height,\n    };\n\n    const imageRect: IRect = {\n      x: 0,\n      y: 0,\n      width: this.state.image.width,\n      height: this.state.image.height,\n    };\n\n    const imageRatio = RectUtil.getRatio(imageRect);\n    const imagePosition: IRect = RectUtil.fitInsideRectWithRatio(containerRect, imageRatio);\n\n    return {\n      width: imagePosition.width,\n      height: imagePosition.height,\n      left: imagePosition.x,\n      top: imagePosition.y,\n    };\n  };\n\n  private handleLoadImageError = () => {};\n\n  private getClassName = () => {\n    return classNames('ImagePreview', {\n      selected: this.props.isSelected,\n    });\n  };\n\n  public render() {\n    const { isChecked, style, onClick, index } = this.props;\n    return (\n      <div className={this.getClassName()} style={style} onClick={onClick ? onClick : undefined} data-index={index}>\n        {!!this.state.image ? (\n          [\n            <div className=\"Foreground\" key={'Foreground'} style={this.getStyle()}>\n              <img\n                className=\"Image\"\n                draggable={false}\n                src={this.state.image.src}\n                alt={this.state.image.alt}\n                style={{ ...this.getStyle(), left: 0, top: 0 }}\n              />\n              {isChecked && (\n                <img className=\"CheckBox\" draggable={false} src={'ico/checkbox-checked-color.png'} alt={'checkbox'} />\n              )}\n            </div>,\n            <div className=\"Background\" key={'Background'} style={this.getStyle()} />,\n          ]\n        ) : (\n          <ClipLoader sizeUnit={'px'} size={30} color={Settings.SECONDARY_COLOR} loading={true} />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  updateImageDataById,\n};\n\nconst mapStateToProps = (state: AppState) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ImagePreview);\n","import {ISize} from \"../../interfaces/ISize\";\nimport {GeneralActionTypes} from \"./types\";\nimport {Action} from \"../Actions\";\nimport {PopupWindowType} from \"../../data/enums/PopupWindowType\";\nimport {CustomCursorStyle} from \"../../data/enums/CustomCursorStyle\";\nimport {ContextType} from \"../../data/enums/ContextType\";\n\nexport function updateWindowSize(windowSize: ISize): GeneralActionTypes {\n    return {\n        type: Action.UPDATE_WINDOW_SIZE,\n        payload: {\n            windowSize,\n        },\n    };\n}\n\nexport function updateActivePopupType(activePopupType: PopupWindowType): GeneralActionTypes {\n    return {\n        type: Action.UPDATE_ACTIVE_POPUP_TYPE,\n        payload: {\n            activePopupType,\n        }\n    }\n}\n\nexport function updateCustomCursorStyle(customCursorStyle: CustomCursorStyle): GeneralActionTypes {\n    return {\n        type: Action.UPDATE_CUSTOM_CURSOR_STYLE,\n        payload: {\n            customCursorStyle,\n        }\n    }\n}\n\nexport function updateActiveContext(activeContext: ContextType): GeneralActionTypes {\n    return {\n        type: Action.UPDATE_CONTEXT,\n        payload: {\n            activeContext,\n        },\n    };\n}","import { PrimaryEditorRenderEngine } from \"../logic/render/PrimaryEditorRenderEngine\";\nimport { BaseRenderEngine } from \"../logic/render/BaseRenderEngine\";\nimport { IRect } from \"../interfaces/IRect\";\nimport { IPoint } from \"../interfaces/IPoint\";\n\nexport class EditorModel {\n  public static canvas: HTMLCanvasElement;\n  public static mousePositionIndicator: HTMLDivElement;\n  public static cursor: HTMLDivElement;\n  public static primaryRenderingEngine: PrimaryEditorRenderEngine;\n  public static supportRenderingEngine: BaseRenderEngine;\n  public static image: HTMLImageElement;\n  public static imageRectOnCanvas: IRect;\n  public static imageScale: number; // Image / Canvas\n  public static mousePositionOnCanvas: IPoint;\n  public static isLoading: boolean = false;\n}\n","export class UnitUtil {\n\n    public static deg2rad(angleDeg:number) {\n        return(angleDeg * Math.PI/180);\n    }\n\n    public static rad2deg(angleRad:number) {\n        return(angleRad * 180/Math.PI);\n    }\n}","export enum CustomCursorStyle {\n    DEFAULT = \"DEFAULT\",\n    MOVE = \"MOVE\",\n    RESIZE = \"RESIZE\",\n    ADD = \"ADD\",\n    CANCEL = \"CANCEL\",\n    CLOSE = \"CLOSE\"\n}","import { IPoint } from \"../interfaces/IPoint\";\nimport { IRect } from \"../interfaces/IRect\";\nimport { UnitUtil } from \"./UnitUtil\";\n\nexport class DrawUtil {\n  public static clearCanvas(canvas: HTMLCanvasElement): void {\n    let ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n  }\n\n  public static drawLine(\n    canvas: HTMLCanvasElement,\n    startPoint: IPoint,\n    endPoint: IPoint,\n    color: string = \"#111111\",\n    thickness: number = 1\n  ): void {\n    let ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = thickness;\n    ctx.lineCap = \"round\";\n    ctx.beginPath();\n    ctx.moveTo(startPoint.x, startPoint.y);\n    ctx.lineTo(endPoint.x + 1, endPoint.y + 1);\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  public static drawRect(\n    canvas: HTMLCanvasElement,\n    rect: IRect,\n    color: string = \"#fff\",\n    thickness: number = 1\n  ): void {\n    let ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = thickness;\n    ctx.beginPath();\n    ctx.rect(rect.x, rect.y, rect.width, rect.height);\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  public static drawRectWithFill(\n    canvas: HTMLCanvasElement,\n    rect: IRect,\n    color: string = \"#ADCC53\"\n  ): void {\n    let ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\n    ctx.save();\n    ctx.fillStyle = color;\n    ctx.beginPath();\n    ctx.rect(rect.x, rect.y, rect.width, rect.height);\n    ctx.fill();\n    ctx.restore();\n  }\n\n  public static shadeEverythingButRect(\n    canvas: HTMLCanvasElement,\n    rect: IRect,\n    color: string = \"rgba(0, 0, 0, 0.7)\"\n  ): void {\n    let ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\n    ctx.save();\n    ctx.fillStyle = color;\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    ctx.globalCompositeOperation = \"destination-out\";\n    ctx.fillRect(rect.x, rect.y, rect.width, rect.height);\n    ctx.restore();\n  }\n\n  public static drawCircleWithFill(\n    canvas: HTMLCanvasElement,\n    anchorPoint: IPoint,\n    radius: number,\n    color: string = \"#ffffff\"\n  ): void {\n    const ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\n    ctx.save();\n    const startAngleRad = UnitUtil.deg2rad(0);\n    const endAngleRad = UnitUtil.deg2rad(360);\n    ctx.fillStyle = color;\n    ctx.beginPath();\n    ctx.arc(anchorPoint.x, anchorPoint.y, radius, startAngleRad, endAngleRad, false);\n    ctx.fill();\n    ctx.restore();\n  }\n\n  public static drawCircle(\n    canvas: HTMLCanvasElement,\n    anchorPoint: IPoint,\n    radius: number,\n    startAngleDeg: number,\n    endAngleDeg: number,\n    thickness: number = 20,\n    color: string = \"#ffffff\"\n  ): void {\n    let ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\n    let startAngleRad = UnitUtil.deg2rad(startAngleDeg);\n    let endAngleRad = UnitUtil.deg2rad(endAngleDeg);\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = thickness;\n    ctx.beginPath();\n    ctx.arc(anchorPoint.x, anchorPoint.y, radius, startAngleRad, endAngleRad, false);\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  public static drawPolygon(\n    canvas: HTMLCanvasElement,\n    anchors: IPoint[],\n    color: string = \"#fff\",\n    thickness: number = 1\n  ): void {\n    let ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = thickness;\n    ctx.beginPath();\n    ctx.moveTo(anchors[0].x, anchors[0].y);\n    for (let i = 1; i < anchors.length; i++) {\n      ctx.lineTo(anchors[i].x, anchors[i].y);\n    }\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  public static drawPolygonWithFill(\n    canvas: HTMLCanvasElement,\n    anchors: IPoint[],\n    color: string = \"#fff\"\n  ): void {\n    let ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\n    ctx.save();\n    ctx.fillStyle = color;\n    ctx.beginPath();\n    ctx.moveTo(anchors[0].x, anchors[0].y);\n    for (let i = 1; i < anchors.length; i++) {\n      ctx.lineTo(anchors[i].x, anchors[i].y);\n    }\n    ctx.closePath();\n    ctx.fill();\n    ctx.restore();\n  }\n\n  public static drawText(\n    canvas: HTMLCanvasElement,\n    text: string,\n    textSize: number,\n    anchorPoint: IPoint,\n    color: string = \"#ffffff\",\n    bold: boolean = false,\n    align: string = \"center\"\n  ): void {\n    let ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\n    ctx.save();\n    ctx.fillStyle = color;\n    ctx.textAlign = align as CanvasTextAlign;\n    ctx.textBaseline = \"middle\";\n    ctx.font = (bold ? \"bold \" : \"\") + textSize + \"px Arial\";\n    ctx.fillText(text, anchorPoint.x, anchorPoint.y);\n    ctx.restore();\n  }\n\n  public static getRandomRGBColor(): string {\n    return (\n      \"rgb(\" +\n      Math.round(Math.random() * 255) +\n      \",\" +\n      Math.round(Math.random() * 255) +\n      \",\" +\n      Math.round(Math.random() * 255) +\n      \")\"\n    );\n  }\n\n  public static hexToRGB(hex: string, alpha: number): string {\n    const r = parseInt(hex.slice(1, 3), 16);\n    const g = parseInt(hex.slice(3, 5), 16);\n    const b = parseInt(hex.slice(5, 7), 16);\n\n    if (alpha) {\n      return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\n    } else {\n      return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\n    }\n  }\n}\n","import { IPoint } from '../interfaces/IPoint';\n\nexport class PointUtil {\n  public static equals(p1: IPoint, p2: IPoint): boolean {\n    return p1.x === p2.x && p1.y === p2.y;\n  }\n\n  public static add(p1: IPoint, p2: IPoint): IPoint {\n    return {\n      x: p1.x + p2.x,\n      y: p1.y + p2.y,\n    };\n  }\n\n  public static subtract(p1: IPoint, p2: IPoint): IPoint {\n    return {\n      x: p1.x - p2.x,\n      y: p1.y - p2.y,\n    };\n  }\n\n  public static multiply(p1: IPoint, factor: number) {\n    return {\n      x: p1.x * factor,\n      y: p1.y * factor,\n    };\n  }\n\n  public static devide(p1: IPoint, factor: number) {\n    return {\n      x: p1.x / factor,\n      y: p1.y / factor,\n    };\n  }\n\n  public static getEuclidianDistance(p1: IPoint, p2: IPoint): number {\n    return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2));\n  }\n}\n","import {ISize} from \"../interfaces/ISize\";\nimport {Settings} from \"./Settings\";\n\nexport class RenderEngineConfig {\n    public readonly lineThickness: number = 2;\n    public readonly lineActiveColor: string = Settings.PRIMARY_COLOR;\n    public readonly lineInactiveColor: string = \"#fff\";\n    public readonly anchorSize: ISize = {\n        width: Settings.RESIZE_HANDLE_DIMENSION_PX,\n        height: Settings.RESIZE_HANDLE_DIMENSION_PX\n    };\n    public readonly anchorHoverSize: ISize = {\n        width: Settings.RESIZE_HANDLE_HOVER_DIMENSION_PX,\n        height: Settings.RESIZE_HANDLE_HOVER_DIMENSION_PX\n    };\n    public readonly suggestedAnchorDetectionSize: ISize = {\n        width: 100,\n        height: 100\n    };\n    public readonly activeAnchorColor: string = Settings.SECONDARY_COLOR;\n    public readonly inactiveAnchorColor: string = Settings.DARK_THEME_SECOND_COLOR;\n}","import { ImageData, LabelPoint, LabelPolygon, LabelRect } from '../editor/types';\nimport _ from 'lodash';\nimport { LabelType } from '../../data/enums/LabelType';\nimport { store } from '../../index';\n\nexport class EditorSelector {\n  public static getProjectName(): string {\n    return store.getState().editor.projectName;\n  }\n\n  public static getLabelNames(): string[] {\n    return store.getState().editor.labelNames;\n  }\n\n  public static getActiveImageIndex(): number {\n    return store.getState().editor.activeImageIndex;\n  }\n\n  public static getActiveGroupIndex(): number {\n    return store.getState().editor.imagesData[this.getActiveImageIndex()].activeGroupIndex;\n  }\n\n  public static getActiveLabelNameIndex(): number {\n    return store.getState().editor.imagesData[this.getActiveImageIndex()].groupList[this.getActiveGroupIndex()]\n      .activeLabelNameIndex;\n  }\n  public static getLabelNameLength(): number {\n    return store.getState().editor.labelNames.length;\n  }\n\n  public static getImagesData(): ImageData[] {\n    return store.getState().editor.imagesData;\n  }\n\n  public static getActiveImageData(): ImageData | null {\n    let activeImageIndex: number | null = EditorSelector.getActiveImageIndex();\n\n    if (activeImageIndex === null) return null;\n\n    let imagesData: ImageData[] = EditorSelector.getImagesData();\n    return imagesData[activeImageIndex];\n  }\n\n  public static getActiveLabelId(): string | null {\n    const result = store.getState().editor.imagesData[this.getActiveImageIndex()].groupList[this.getActiveGroupIndex()]\n      .activeLabelId;\n    if (!result) {\n      // console.log(result);\n    }\n    return result;\n  }\n\n  public static getHighlightedLabelId(): string | null {\n    return store.getState().editor.imagesData[this.getActiveImageIndex()].groupList[this.getActiveGroupIndex()]\n      .highlightedLabelId;\n  }\n\n  public static getActiveRectLabel(): LabelRect | null {\n    let activeLabelId: string | null = EditorSelector.getActiveLabelId();\n    let activeGroupIndex: number | null = EditorSelector.getActiveGroupIndex();\n\n    if (activeLabelId === null) return null;\n\n    return _.find(EditorSelector.getActiveImageData().groupList[activeGroupIndex].labelRects, {\n      id: activeLabelId,\n    });\n  }\n\n  public static getActivePointLabel(): LabelPoint | null {\n    let activeLabelId: string | null = EditorSelector.getActiveLabelId();\n    let activeGroupIndex: number | null = EditorSelector.getActiveGroupIndex();\n\n    if (activeLabelId === null) return null;\n\n    return _.find(EditorSelector.getActiveImageData().groupList[activeGroupIndex].labelPoints, {\n      id: activeLabelId,\n    });\n  }\n\n  public static getAllPointLabelIndex(): number[] {\n    //  let activeLabelId: string | null = EditorSelector.getActiveLabelId();\n    let activeGroupIndex: number | null = EditorSelector.getActiveGroupIndex();\n\n    const indexs = EditorSelector.getActiveImageData().groupList[activeGroupIndex].labelPoints.map(\n      ele => ele.labelIndex\n    );\n    return indexs;\n  }\n\n  public static getActivePolygonLabel(): LabelPolygon | null {\n    let activeLabelId: string | null = EditorSelector.getActiveLabelId();\n    let activeGroupIndex: number | null = EditorSelector.getActiveGroupIndex();\n\n    if (activeLabelId === null) return null;\n\n    return _.find(EditorSelector.getActiveImageData().groupList[activeGroupIndex].labelPolygons, {\n      id: activeLabelId,\n    });\n  }\n\n  public static getActiveLabelType(): LabelType {\n    if (EditorSelector.getActiveImageData()) {\n      return EditorSelector.getActiveImageData().groupList[EditorSelector.getActiveGroupIndex()].activeLabelType;\n    } else {\n      return LabelType.POINT\n    }\n\n  }\n\n  public static getFirstLabelCreatedFlag(): boolean {\n    return EditorSelector.getActiveImageData().groupList[EditorSelector.getActiveGroupIndex()].firstLabelCreatedFlag;\n  }\n}\n","export enum EventType {\n    MOUSE_UP = \"mouseup\",\n    MOUSE_DOWN = \"mousedown\",\n    MOUSE_MOVE = \"mousemove\",\n    KEY_DOWN = \"keydown\",\n    KEY_UP = \"keyup\"\n}","import {EventType} from \"../data/enums/EventType\";\n\nexport class MouseEventUtil {\n    public static getEventType(event: Event): EventType | null {\n        if (!event) return null;\n\n        switch (event.type) {\n            case EventType.MOUSE_DOWN:\n                return EventType.MOUSE_DOWN;\n            case EventType.MOUSE_UP:\n                return EventType.MOUSE_UP;\n            case EventType.MOUSE_MOVE:\n                return EventType.MOUSE_MOVE;\n            default:\n                return null;\n        }\n    }\n}","import {EditorData} from \"../../data/EditorData\";\nimport {MouseEventUtil} from \"../../utils/MouseEventUtil\";\nimport {EventType} from \"../../data/enums/EventType\";\nimport {LabelType} from \"../../data/enums/LabelType\";\n\nexport abstract class BaseRenderEngine {\n    protected readonly canvas: HTMLCanvasElement;\n    public labelType: LabelType;\n\n    protected constructor(canvas: HTMLCanvasElement) {\n        this.canvas = canvas;\n    }\n\n    public update(data: EditorData): void {\n        if (!!data.event) {\n            switch (MouseEventUtil.getEventType(data.event)) {\n                case EventType.MOUSE_MOVE:\n                    this.mouseMoveHandler(data);\n                    break;\n                case EventType.MOUSE_UP:\n                    this.mouseUpHandler(data);\n                    break;\n                case EventType.MOUSE_DOWN:\n                    this.mouseDownHandler(data);\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n\n    protected abstract mouseDownHandler(data: EditorData): void;\n    protected abstract mouseMoveHandler(data: EditorData): void;\n    protected abstract mouseUpHandler(data: EditorData): void;\n\n    abstract render(data: EditorData): void;\n\n    abstract isInProgress(): boolean;\n}","import { EditorData } from '../data/EditorData';\nimport { RectUtil } from './RectUtil';\nimport { store } from '../index';\nimport { CustomCursorStyle } from '../data/enums/CustomCursorStyle';\nimport { updateCustomCursorStyle } from '../store/general/actionCreators';\nimport { IPoint } from '../interfaces/IPoint';\nimport { PointUtil } from './PointUtil';\nimport { IRect } from '../interfaces/IRect';\n\nexport class RenderEngineUtil {\n  public static isMouseOverImage(data: EditorData): boolean {\n    return RectUtil.isPointInside(data.activeImageRectOnCanvas, data.mousePositionOnCanvas);\n  }\n\n  public static isMouseOverCanvas(data: EditorData): boolean {\n    return RectUtil.isPointInside({ x: 0, y: 0, ...data.canvasSize }, data.mousePositionOnCanvas);\n  }\n\n  public static transferPolygonFromImageToCanvas(polygon: IPoint[], data: EditorData): IPoint[] {\n    return polygon.map((point: IPoint) => RenderEngineUtil.transferPointFromImageToCanvas(point, data));\n  }\n\n  public static transferPointFromImageToCanvas(point: IPoint, data: EditorData): IPoint {\n    return PointUtil.add(PointUtil.multiply(point, 1 / data.activeImageScale), data.activeImageRectOnCanvas);\n  }\n\n  public static transferPolygonFromCanvasToImage(polygon: IPoint[], data: EditorData): IPoint[] {\n    return polygon.map((point: IPoint) => RenderEngineUtil.transferPointFromCanvasToImage(point, data));\n  }\n\n  public static transferPointFromCanvasToImage(point: IPoint, data: EditorData): IPoint {\n    return PointUtil.multiply(PointUtil.subtract(point, data.activeImageRectOnCanvas), data.activeImageScale);\n  }\n\n  public static transferRectFromCanvasToImage(rect: IRect, data: EditorData): IRect {\n    return RectUtil.translate(RectUtil.scaleRect(rect, 1 / data.activeImageScale), data.activeImageRectOnCanvas);\n  }\n\n  public static wrapDefaultCursorStyleInCancel(data: EditorData) {\n    if (RectUtil.isPointInside(data.activeImageRectOnCanvas, data.mousePositionOnCanvas)) {\n      store.dispatch(updateCustomCursorStyle(CustomCursorStyle.DEFAULT));\n    } else {\n      store.dispatch(updateCustomCursorStyle(CustomCursorStyle.CANCEL));\n    }\n  }\n\n  public static setValueBetweenPixels(value: number): number {\n    return Math.floor(value) + 0.5;\n  }\n\n  public static setPointBetweenPixels(point: IPoint): IPoint {\n    return {\n      x: RenderEngineUtil.setValueBetweenPixels(point.x),\n      y: RenderEngineUtil.setValueBetweenPixels(point.y),\n    };\n  }\n\n  public static setRectBetweenPixels(rect: IRect): IRect {\n    const topLeft: IPoint = {\n      x: rect.x,\n      y: rect.y,\n    };\n    const bottomRight: IPoint = {\n      x: rect.x + rect.width,\n      y: rect.y + rect.height,\n    };\n    const topLeftBetweenPixels = RenderEngineUtil.setPointBetweenPixels(topLeft);\n    const bottomRightBetweenPixels = RenderEngineUtil.setPointBetweenPixels(bottomRight);\n    return {\n      x: topLeftBetweenPixels.x,\n      y: topLeftBetweenPixels.y,\n      width: bottomRightBetweenPixels.x - topLeftBetweenPixels.x,\n      height: bottomRightBetweenPixels.y - topLeftBetweenPixels.y,\n    };\n  }\n}\n","import { IPoint } from \"../../interfaces/IPoint\";\nimport { IRect } from \"../../interfaces/IRect\";\nimport { RectUtil } from \"../../utils/RectUtil\";\nimport { DrawUtil } from \"../../utils/DrawUtil\";\nimport { store } from \"../..\";\nimport { ImageData, LabelRect } from \"../../store/editor/types\";\nimport uuidv1 from \"uuid/v1\";\nimport {\n  updateActiveLabelId,\n  updateFirstLabelCreatedFlag,\n  updateHighlightedLabelId,\n  updateImageDataById,\n} from \"../../store/editor/actionCreators\";\nimport { PointUtil } from \"../../utils/PointUtil\";\nimport { RectAnchor } from \"../../data/RectAnchor\";\nimport { RenderEngineConfig } from \"../../settings/RenderEngineConfig\";\nimport { updateCustomCursorStyle } from \"../../store/general/actionCreators\";\nimport { CustomCursorStyle } from \"../../data/enums/CustomCursorStyle\";\nimport { EditorSelector } from \"../../store/selectors/EditorSelector\";\nimport { EditorData } from \"../../data/EditorData\";\nimport { BaseRenderEngine } from \"./BaseRenderEngine\";\nimport { RenderEngineUtil } from \"../../utils/RenderEngineUtil\";\nimport { LabelType } from \"../../data/enums/LabelType\";\nimport _ from \"lodash\";\nimport produce from \"immer\";\n\nexport class RectRenderEngine extends BaseRenderEngine {\n  private config: RenderEngineConfig = new RenderEngineConfig();\n\n  // =================================================================================================================\n  // STATE\n  // =================================================================================================================\n\n  private startCreateRectPoint: IPoint;\n  private startResizeRectAnchor: RectAnchor;\n\n  public constructor(canvas: HTMLCanvasElement) {\n    super(canvas);\n    this.labelType = LabelType.RECTANGLE;\n  }\n\n  // =================================================================================================================\n  // EVENT HANDLERS\n  // =================================================================================================================\n\n  public mouseDownHandler = (data: EditorData) => {\n    const isMouseOverImage: boolean = RenderEngineUtil.isMouseOverImage(data);\n    const isMouseOverCanvas: boolean = RenderEngineUtil.isMouseOverCanvas(data);\n    if (isMouseOverCanvas) {\n      const rectUnderMouse: LabelRect = this.getRectUnderMouse(\n        data.activeImageScale,\n        data.activeImageRectOnCanvas,\n        data.mousePositionOnCanvas\n      );\n      if (!!rectUnderMouse) {\n        const rect: IRect = this.calculateRectRelativeToActiveImage(rectUnderMouse.rect, data.activeImageScale);\n        const anchorUnderMouse: RectAnchor = this.getAnchorUnderMouseByRect(\n          rect,\n          data.mousePositionOnCanvas,\n          data.activeImageRectOnCanvas\n        );\n        if (!!anchorUnderMouse) {\n          store.dispatch(updateActiveLabelId(rectUnderMouse.id));\n          this.startRectResize(anchorUnderMouse);\n        } else {\n          if (!!EditorSelector.getHighlightedLabelId())\n            store.dispatch(updateActiveLabelId(EditorSelector.getHighlightedLabelId()));\n          else this.startRectCreation(data.mousePositionOnCanvas);\n        }\n      } else if (isMouseOverImage) {\n        this.startRectCreation(data.mousePositionOnCanvas);\n      }\n    }\n  };\n\n  public mouseUpHandler = (data: EditorData) => {\n    if (!!data.activeImageRectOnCanvas) {\n      const mousePositionSnapped: IPoint = RectUtil.snapPointToRect(\n        data.mousePositionOnCanvas,\n        data.activeImageRectOnCanvas\n      );\n\n      if (!!this.startCreateRectPoint && !PointUtil.equals(this.startCreateRectPoint, mousePositionSnapped)) {\n        const minX: number = Math.min(this.startCreateRectPoint.x, mousePositionSnapped.x);\n        const minY: number = Math.min(this.startCreateRectPoint.y, mousePositionSnapped.y);\n        const maxX: number = Math.max(this.startCreateRectPoint.x, mousePositionSnapped.x);\n        const maxY: number = Math.max(this.startCreateRectPoint.y, mousePositionSnapped.y);\n\n        const rect: IRect = {\n          x: (minX - data.activeImageRectOnCanvas.x) * data.activeImageScale,\n          y: (minY - data.activeImageRectOnCanvas.y) * data.activeImageScale,\n          width: (maxX - minX) * data.activeImageScale,\n          height: (maxY - minY) * data.activeImageScale,\n        };\n        this.addRectLabel(rect);\n      }\n\n      if (!!this.startResizeRectAnchor) {\n        const activeLabelRect: LabelRect = EditorSelector.getActiveRectLabel();\n        const rect: IRect = this.calculateRectRelativeToActiveImage(activeLabelRect.rect, data.activeImageScale);\n        const startAnchorPosition: IPoint = PointUtil.add(\n          this.startResizeRectAnchor.position,\n          data.activeImageRectOnCanvas\n        );\n        const delta: IPoint = PointUtil.subtract(mousePositionSnapped, startAnchorPosition);\n        const resizeRect: IRect = RectUtil.resizeRect(rect, this.startResizeRectAnchor.type, delta);\n        const scaledRect: IRect = RectUtil.scaleRect(resizeRect, data.activeImageScale);\n\n        const imageData = EditorSelector.getActiveImageData();\n        const activeGroupIndex = EditorSelector.getActiveGroupIndex();\n        const newImageData = produce(imageData, draft => {\n          draft.groupList[activeGroupIndex].labelRects = imageData.groupList[activeGroupIndex].labelRects.map(\n            (labelRect: LabelRect) => {\n              if (labelRect.id === activeLabelRect.id) {\n                return {\n                  ...labelRect,\n                  rect: scaledRect,\n                };\n              }\n              return labelRect;\n            }\n          );\n        });\n\n        store.dispatch(updateImageDataById(imageData.id, newImageData));\n      }\n    }\n    this.endRectTransformation();\n  };\n\n  public mouseMoveHandler = (data: EditorData) => {\n    if (!!data.activeImageRectOnCanvas && !!data.mousePositionOnCanvas) {\n      const isOverImage: boolean = RenderEngineUtil.isMouseOverImage(data);\n      if (isOverImage && !this.startResizeRectAnchor) {\n        const labelRect: LabelRect = this.getRectUnderMouse(\n          data.activeImageScale,\n          data.activeImageRectOnCanvas,\n          data.mousePositionOnCanvas\n        );\n        if (!!labelRect) {\n          if (EditorSelector.getHighlightedLabelId() !== labelRect.id) {\n            store.dispatch(updateHighlightedLabelId(labelRect.id));\n          }\n        } else {\n          if (EditorSelector.getHighlightedLabelId() !== null) {\n            store.dispatch(updateHighlightedLabelId(null));\n          }\n        }\n      }\n    }\n  };\n\n  // =================================================================================================================\n  // RENDERING\n  // =================================================================================================================\n\n  public render(data: EditorData) {\n    const activeLabelId: string = EditorSelector.getActiveLabelId();\n    const imageData: ImageData = EditorSelector.getActiveImageData();\n    const activeGroupIndex = EditorSelector.getActiveGroupIndex();\n\n    if (imageData) {\n      imageData.groupList[activeGroupIndex].labelRects.forEach((labelRect: LabelRect) => {\n        labelRect.id === activeLabelId\n          ? this.drawActiveRect(\n              labelRect,\n              data.mousePositionOnCanvas,\n              data.activeImageRectOnCanvas,\n              data.activeImageScale\n            )\n          : this.drawInactiveRect(labelRect, data);\n      });\n      this.drawCurrentlyCreatedRect(data.mousePositionOnCanvas, data.activeImageRectOnCanvas);\n      this.updateCursorStyle(data);\n    }\n  }\n\n  private drawCurrentlyCreatedRect(mousePosition: IPoint, imageRect: IRect) {\n    if (!!this.startCreateRectPoint) {\n      const mousePositionSnapped: IPoint = RectUtil.snapPointToRect(mousePosition, imageRect);\n      const activeRect: IRect = {\n        x: this.startCreateRectPoint.x,\n        y: this.startCreateRectPoint.y,\n        width: mousePositionSnapped.x - this.startCreateRectPoint.x,\n        height: mousePositionSnapped.y - this.startCreateRectPoint.y,\n      };\n      const activeRectBetweenPixels = RenderEngineUtil.setRectBetweenPixels(activeRect);\n      DrawUtil.drawRect(this.canvas, activeRectBetweenPixels, this.config.lineActiveColor, this.config.lineThickness);\n    }\n  }\n\n  private drawInactiveRect(labelRect: LabelRect, data: EditorData) {\n    const rectOnImage: IRect = RenderEngineUtil.transferRectFromCanvasToImage(labelRect.rect, data);\n    const highlightedLabelId: string = EditorSelector.getHighlightedLabelId();\n    this.renderRect(rectOnImage, labelRect.id === highlightedLabelId);\n  }\n\n  private drawActiveRect(labelRect: LabelRect, mousePosition: IPoint, imageRect: IRect, scale: number) {\n    let rect: IRect = this.calculateRectRelativeToActiveImage(labelRect.rect, scale);\n    if (!!this.startResizeRectAnchor) {\n      const startAnchorPosition: IPoint = PointUtil.add(this.startResizeRectAnchor.position, imageRect);\n      const endAnchorPositionSnapped: IPoint = RectUtil.snapPointToRect(mousePosition, imageRect);\n      const delta = PointUtil.subtract(endAnchorPositionSnapped, startAnchorPosition);\n      rect = RectUtil.resizeRect(rect, this.startResizeRectAnchor.type, delta);\n    }\n    const rectOnImage: IRect = RectUtil.translate(rect, imageRect);\n    this.renderRect(rectOnImage, true);\n  }\n\n  private renderRect(rectOnImage: IRect, isActive: boolean) {\n    const rectBetweenPixels = RenderEngineUtil.setRectBetweenPixels(rectOnImage);\n    const lineColor: string = isActive ? this.config.lineActiveColor : this.config.lineInactiveColor;\n    DrawUtil.drawRect(this.canvas, rectBetweenPixels, lineColor, this.config.lineThickness);\n    if (isActive) {\n      const handleCenters: IPoint[] = RectUtil.mapRectToAnchors(rectOnImage).map(\n        (rectAnchor: RectAnchor) => rectAnchor.position\n      );\n      handleCenters.forEach((center: IPoint) => {\n        const handleRect: IRect = RectUtil.getRectWithCenterAndSize(center, this.config.anchorSize);\n        const handleRectBetweenPixels: IRect = RenderEngineUtil.setRectBetweenPixels(handleRect);\n        DrawUtil.drawRectWithFill(this.canvas, handleRectBetweenPixels, this.config.activeAnchorColor);\n      });\n    }\n  }\n\n  private updateCursorStyle(data: EditorData) {\n    if (!!this.canvas && !!data.mousePositionOnCanvas) {\n      const rectAnchorUnderMouse: RectAnchor = this.getAnchorUnderMouse(\n        data.activeImageScale,\n        data.mousePositionOnCanvas,\n        data.activeImageRectOnCanvas\n      );\n      if (!!rectAnchorUnderMouse || !!this.startResizeRectAnchor) {\n        store.dispatch(updateCustomCursorStyle(CustomCursorStyle.MOVE));\n        return;\n      }\n      if (RenderEngineUtil.isMouseOverCanvas(data)) {\n        if (\n          !RectUtil.isPointInside(data.activeImageRectOnCanvas, data.mousePositionOnCanvas) &&\n          !!this.startCreateRectPoint\n        )\n          store.dispatch(updateCustomCursorStyle(CustomCursorStyle.MOVE));\n        else RenderEngineUtil.wrapDefaultCursorStyleInCancel(data);\n        this.canvas.style.cursor = \"none\";\n      } else {\n        this.canvas.style.cursor = \"default\";\n      }\n    }\n  }\n\n  // =================================================================================================================\n  // HELPERS\n  // =================================================================================================================\n\n  public isInProgress(): boolean {\n    return !!this.startCreateRectPoint || !!this.startResizeRectAnchor;\n  }\n\n  private calculateRectRelativeToActiveImage(rect: IRect, scale: number): IRect {\n    return RectUtil.scaleRect(rect, 1 / scale);\n  }\n\n  private addRectLabel = (rect: IRect) => {\n    const activeLabelIndex = EditorSelector.getActiveLabelNameIndex();\n    const imageData: ImageData = EditorSelector.getActiveImageData();\n    const labelRect: LabelRect = {\n      id: uuidv1(),\n      labelIndex: activeLabelIndex,\n      checked: false,\n      rect,\n    };\n    imageData.groupList[EditorSelector.getActiveGroupIndex()].labelRects.push(labelRect);\n    store.dispatch(updateImageDataById(imageData.id, imageData));\n    store.dispatch(updateFirstLabelCreatedFlag(true));\n    store.dispatch(updateActiveLabelId(labelRect.id));\n  };\n\n  private getRectUnderMouse(scale: number, imageRect: IRect, mousePosition: IPoint): LabelRect {\n    const activeRectLabel: LabelRect = EditorSelector.getActiveRectLabel();\n    if (!!activeRectLabel && this.isMouseOverRectEdges(activeRectLabel.rect, scale, imageRect, mousePosition)) {\n      return activeRectLabel;\n    }\n\n    const labelRects: LabelRect[] = EditorSelector.getActiveImageData().groupList[EditorSelector.getActiveGroupIndex()]\n      .labelRects;\n    for (let i = 0; i < labelRects.length; i++) {\n      if (this.isMouseOverRectEdges(labelRects[i].rect, scale, imageRect, mousePosition)) {\n        return labelRects[i];\n      }\n    }\n    return null;\n  }\n\n  private isMouseOverRectEdges(rect: IRect, scale: number, imageRect: IRect, mousePosition: IPoint): boolean {\n    const rectOnImage: IRect = RectUtil.translate(this.calculateRectRelativeToActiveImage(rect, scale), imageRect);\n\n    const outerRectDelta: IPoint = {\n      x: this.config.anchorHoverSize.width / 2,\n      y: this.config.anchorHoverSize.height / 2,\n    };\n    const outerRect: IRect = RectUtil.expand(rectOnImage, outerRectDelta);\n\n    const innerRectDelta: IPoint = {\n      x: -this.config.anchorHoverSize.width / 2,\n      y: -this.config.anchorHoverSize.height / 2,\n    };\n    const innerRect: IRect = RectUtil.expand(rectOnImage, innerRectDelta);\n\n    return RectUtil.isPointInside(outerRect, mousePosition) && !RectUtil.isPointInside(innerRect, mousePosition);\n  }\n\n  private getAnchorUnderMouseByRect(rect: IRect, mousePosition: IPoint, imageRect: IRect): RectAnchor {\n    const rectAnchors: RectAnchor[] = RectUtil.mapRectToAnchors(rect);\n    for (let i = 0; i < rectAnchors.length; i++) {\n      const anchorRect: IRect = RectUtil.translate(\n        RectUtil.getRectWithCenterAndSize(rectAnchors[i].position, this.config.anchorHoverSize),\n        imageRect\n      );\n      if (!!mousePosition && RectUtil.isPointInside(anchorRect, mousePosition)) {\n        return rectAnchors[i];\n      }\n    }\n    return null;\n  }\n\n  private getAnchorUnderMouse(scale: number, mousePosition: IPoint, imageRect: IRect): RectAnchor {\n    const labelRects: LabelRect[] = EditorSelector.getActiveImageData().groupList[EditorSelector.getActiveGroupIndex()]\n      .labelRects;\n    for (let i = 0; i < labelRects.length; i++) {\n      const rect: IRect = this.calculateRectRelativeToActiveImage(labelRects[i].rect, scale);\n      const rectAnchor = this.getAnchorUnderMouseByRect(rect, mousePosition, imageRect);\n      if (!!rectAnchor) return rectAnchor;\n    }\n    return null;\n  }\n\n  private startRectCreation(mousePosition: IPoint) {\n    this.startCreateRectPoint = mousePosition;\n    store.dispatch(updateActiveLabelId(null));\n  }\n\n  private startRectResize(activatedAnchor: RectAnchor) {\n    this.startResizeRectAnchor = activatedAnchor;\n  }\n\n  private endRectTransformation() {\n    this.startCreateRectPoint = null;\n    this.startResizeRectAnchor = null;\n  }\n}\n","import React from \"react\";\nimport {IPoint} from \"../interfaces/IPoint\";\nimport {IRect} from \"../interfaces/IRect\";\nimport {ISize} from \"../interfaces/ISize\";\n\nexport class CanvasUtil {\n    public static getMousePositionOnCanvasFromEvent(event: React.MouseEvent<HTMLCanvasElement, MouseEvent> | MouseEvent, canvas: HTMLCanvasElement): IPoint {\n        if (!!canvas && !!event) {\n            const canvasRect: ClientRect | DOMRect = canvas.getBoundingClientRect();\n            return {\n                x: event.clientX - canvasRect.left,\n                y: event.clientY - canvasRect.top\n            }\n        }\n        return null;\n    }\n\n    public static getClientRect(canvas: HTMLCanvasElement): IRect {\n        if (!!canvas) {\n            const canvasRect: ClientRect | DOMRect = canvas.getBoundingClientRect();\n            return {\n                x: canvasRect.left,\n                y: canvasRect.top,\n                width: canvasRect.width,\n                height: canvasRect.height\n            }\n        }\n        return null;\n    }\n\n    public static getSize(canvas: HTMLCanvasElement): ISize {\n        if (!!canvas) {\n            const canvasRect: ClientRect | DOMRect = canvas.getBoundingClientRect();\n            return {\n                width: canvasRect.width,\n                height: canvasRect.height\n            }\n        }\n        return null;\n    }\n}","import { IRect } from '../../interfaces/IRect';\nimport { RenderEngineConfig } from '../../settings/RenderEngineConfig';\nimport { IPoint } from '../../interfaces/IPoint';\nimport { CanvasUtil } from '../../utils/CanvasUtil';\nimport { store } from '../../index';\nimport { ImageData, LabelPoint } from '../../store/editor/types';\nimport uuidv1 from 'uuid/v1';\nimport {\n  updateActiveLabelId,\n  updateFirstLabelCreatedFlag,\n  updateHighlightedLabelId,\n  updateImageDataById,\n  updateActiveLabelNameIndex,\n  findNextAvailableLabelIndex,\n} from '../../store/editor/actionCreators';\nimport { RectUtil } from '../../utils/RectUtil';\nimport { DrawUtil } from '../../utils/DrawUtil';\nimport { updateCustomCursorStyle } from '../../store/general/actionCreators';\nimport { CustomCursorStyle } from '../../data/enums/CustomCursorStyle';\nimport { EditorSelector } from '../../store/selectors/EditorSelector';\nimport { EditorData } from '../../data/EditorData';\nimport { BaseRenderEngine } from './BaseRenderEngine';\nimport { RenderEngineUtil } from '../../utils/RenderEngineUtil';\nimport { LabelType } from '../../data/enums/LabelType';\nimport produce from 'immer';\nimport { store as storeNF } from 'react-notifications-component';\n\nexport class PointRenderEngine extends BaseRenderEngine {\n  private config: RenderEngineConfig = new RenderEngineConfig();\n\n  // =================================================================================================================\n  // STATE\n  // =================================================================================================================\n\n  private transformInProgress: boolean = false;\n\n  public constructor(canvas: HTMLCanvasElement) {\n    super(canvas);\n    this.labelType = LabelType.POINT;\n  }\n\n  // =================================================================================================================\n  // EVENT HANDLERS\n  // =================================================================================================================\n\n  public mouseDownHandler(data: EditorData): void {\n    const isMouseOverImage: boolean = RenderEngineUtil.isMouseOverImage(data);\n    const isMouseOverCanvas: boolean = RenderEngineUtil.isMouseOverCanvas(data);\n\n    if (isMouseOverCanvas) {\n      const labelPoint: LabelPoint = this.getLabelPointUnderMouse(data.mousePositionOnCanvas, data);\n      if (!!labelPoint) {\n        const pointOnCanvas: IPoint = RenderEngineUtil.transferPointFromImageToCanvas(labelPoint.point, data);\n        const pointBetweenPixels = RenderEngineUtil.setPointBetweenPixels(pointOnCanvas);\n        const handleRect: IRect = RectUtil.getRectWithCenterAndSize(pointBetweenPixels, this.config.anchorHoverSize);\n        if (RectUtil.isPointInside(handleRect, data.mousePositionOnCanvas)) {\n          store.dispatch(updateActiveLabelId(labelPoint.id));\n          this.transformInProgress = true;\n          return;\n        } else {\n          store.dispatch(updateActiveLabelId(null));\n          const pointOnImage: IPoint = RenderEngineUtil.transferPointFromCanvasToImage(\n            data.mousePositionOnCanvas,\n            data\n          );\n          this.addPointLabel(pointOnImage);\n        }\n      } else if (isMouseOverImage) {\n        const pointOnImage: IPoint = RenderEngineUtil.transferPointFromCanvasToImage(data.mousePositionOnCanvas, data);\n        this.addPointLabel(pointOnImage);\n      }\n    }\n  }\n\n  public mouseUpHandler(data: EditorData): void {\n    if (this.isInProgress()) {\n      const activeLabelPoint: LabelPoint = EditorSelector.getActivePointLabel();\n      const pointSnapped: IPoint = RectUtil.snapPointToRect(data.mousePositionOnCanvas, data.activeImageRectOnCanvas);\n      const pointOnImage: IPoint = RenderEngineUtil.transferPointFromCanvasToImage(pointSnapped, data);\n      const imageData = EditorSelector.getActiveImageData();\n      const activeGroupIndex = EditorSelector.getActiveGroupIndex();\n      const newImageData = produce(imageData, draft => {\n        draft.groupList[activeGroupIndex].labelPoints = imageData.groupList[activeGroupIndex].labelPoints.map(\n          (labelPoint: LabelPoint) => {\n            if (activeLabelPoint && labelPoint.id === activeLabelPoint.id) {\n              return {\n                ...labelPoint,\n                point: pointOnImage,\n              };\n            }\n            return labelPoint;\n          }\n        );\n      });\n\n      store.dispatch(updateImageDataById(imageData.id, newImageData));\n    }\n    this.transformInProgress = false;\n  }\n\n  public mouseMoveHandler(data: EditorData): void {\n    const isOverImage: boolean = RenderEngineUtil.isMouseOverImage(data);\n    if (isOverImage) {\n      const labelPoint: LabelPoint = this.getLabelPointUnderMouse(data.mousePositionOnCanvas, data);\n      if (!!labelPoint) {\n        if (EditorSelector.getHighlightedLabelId() !== labelPoint.id) {\n          store.dispatch(updateHighlightedLabelId(labelPoint.id));\n        }\n      } else {\n        if (EditorSelector.getHighlightedLabelId() !== null) {\n          store.dispatch(updateHighlightedLabelId(null));\n        }\n      }\n    }\n  }\n\n  // =================================================================================================================\n  // RENDERING\n  // =================================================================================================================\n\n  public render(data: EditorData): void {\n    if (!data.activeImageRectOnCanvas) {\n      return;\n    }\n    const activeLabelId: string = EditorSelector.getActiveLabelId();\n    const highlightedLabelId: string = EditorSelector.getHighlightedLabelId();\n    const imageData: ImageData = EditorSelector.getActiveImageData();\n    if (imageData) {\n      const activeGroupIndex = EditorSelector.getActiveGroupIndex();\n      imageData.groupList[activeGroupIndex].labelPoints.forEach((labelPoint: LabelPoint) => {\n        if (labelPoint.id === activeLabelId) {\n          if (this.isInProgress()) {\n            const pointSnapped: IPoint = RectUtil.snapPointToRect(\n              data.mousePositionOnCanvas,\n              data.activeImageRectOnCanvas\n            );\n            const pointBetweenPixels: IPoint = RenderEngineUtil.setPointBetweenPixels(pointSnapped);\n            const handleRect: IRect = RectUtil.getRectWithCenterAndSize(pointBetweenPixels, this.config.anchorSize);\n            DrawUtil.drawRectWithFill(this.canvas, handleRect, this.config.activeAnchorColor);\n          } else {\n            this.renderPoint(labelPoint, true, data);\n          }\n        } else {\n          this.renderPoint(labelPoint, labelPoint.id === activeLabelId || labelPoint.id === highlightedLabelId, data);\n        }\n      });\n    }\n    this.updateCursorStyle(data);\n  }\n\n  private renderPoint(labelPoint: LabelPoint, isActive: boolean, data: EditorData) {\n    const pointOnImage: IPoint = RenderEngineUtil.transferPointFromImageToCanvas(labelPoint.point, data);\n    const pointBetweenPixels = RenderEngineUtil.setPointBetweenPixels(pointOnImage);\n    const handleRect: IRect = RectUtil.getRectWithCenterAndSize(pointBetweenPixels, this.config.anchorSize);\n    const handleColor: string = isActive ? this.config.activeAnchorColor : this.config.inactiveAnchorColor;\n    DrawUtil.drawRectWithFill(this.canvas, handleRect, handleColor);\n  }\n\n  private updateCursorStyle(data: EditorData) {\n    if (!!this.canvas && !!data.mousePositionOnCanvas) {\n      const labelPoint: LabelPoint = this.getLabelPointUnderMouse(data.mousePositionOnCanvas, data);\n      if (!!labelPoint) {\n        const pointOnCanvas: IPoint = RenderEngineUtil.transferPointFromImageToCanvas(labelPoint.point, data);\n        const pointBetweenPixels = RenderEngineUtil.setPointBetweenPixels(pointOnCanvas);\n        const handleRect: IRect = RectUtil.getRectWithCenterAndSize(pointBetweenPixels, this.config.anchorHoverSize);\n        if (RectUtil.isPointInside(handleRect, data.mousePositionOnCanvas)) {\n          store.dispatch(updateCustomCursorStyle(CustomCursorStyle.MOVE));\n          return;\n        }\n      } else if (this.isInProgress()) {\n        store.dispatch(updateCustomCursorStyle(CustomCursorStyle.MOVE));\n        return;\n      }\n\n      if (RectUtil.isPointInside({ x: 0, y: 0, ...CanvasUtil.getSize(this.canvas) }, data.mousePositionOnCanvas)) {\n        RenderEngineUtil.wrapDefaultCursorStyleInCancel(data);\n        this.canvas.style.cursor = 'none';\n      } else {\n        this.canvas.style.cursor = 'default';\n      }\n    }\n  }\n\n  // =================================================================================================================\n  // HELPERS\n  // =================================================================================================================\n\n  public isInProgress(): boolean {\n    return this.transformInProgress;\n  }\n\n  private getLabelPointUnderMouse(mousePosition: IPoint, data: EditorData): LabelPoint {\n    const activeGroupIndex = EditorSelector.getActiveGroupIndex();\n    const labelPoints: LabelPoint[] = EditorSelector.getActiveImageData().groupList[activeGroupIndex].labelPoints;\n    for (let i = 0; i < labelPoints.length; i++) {\n      const pointOnCanvas: IPoint = RenderEngineUtil.transferPointFromImageToCanvas(labelPoints[i].point, data);\n      const handleRect: IRect = RectUtil.getRectWithCenterAndSize(pointOnCanvas, this.config.anchorHoverSize);\n      if (RectUtil.isPointInside(handleRect, mousePosition)) {\n        return labelPoints[i];\n      }\n    }\n    return null;\n  }\n\n  private addPointLabel = (point: IPoint) => {\n    const activeLabelIndex = EditorSelector.getActiveLabelNameIndex();\n    const activeGroupIndex = EditorSelector.getActiveGroupIndex();\n    const imageData: ImageData = EditorSelector.getActiveImageData();\n    const existedLabelIndexs = EditorSelector.getAllPointLabelIndex();\n    const labelsLength = EditorSelector.getLabelNameLength();\n\n    const labelPoint: LabelPoint = {\n      id: uuidv1(),\n      labelIndex: activeLabelIndex,\n      checked: false,\n      point,\n    };\n\n    if (existedLabelIndexs.length === labelsLength) {\n      storeNF.addNotification({\n        message: '已经添加全部的关节',\n        type: 'warning',\n        insert: 'top',\n        container: 'top-center',\n        animationIn: ['animated', 'fadeIn'],\n        animationOut: ['animated', 'fadeOut'],\n        dismiss: {\n          duration: 1000,\n        },\n      });\n      return;\n    }\n\n    const newImageData = produce(imageData, draft => {\n      draft.groupList[activeGroupIndex].labelPoints.push(labelPoint);\n    });\n    store.dispatch(updateImageDataById(imageData.id, newImageData));\n    store.dispatch(updateFirstLabelCreatedFlag(true));\n    store.dispatch(updateActiveLabelId(labelPoint.id));\n    store.dispatch(findNextAvailableLabelIndex());\n  };\n}\n","import {ILine} from \"../interfaces/ILine\";\nimport {IPoint} from \"../interfaces/IPoint\";\n\nexport class LineUtil {\n    public static getDistanceFromLine(l: ILine, p: IPoint): number {\n        if (l.start.x !== l.end.x || l.start.y !== l.end.y) {\n            const nom: number = Math.abs((l.end.y - l.start.y) * p.x - (l.end.x - l.start.x) * p.y + l.end.x * l.start.y - l.end.y * l.start.x);\n            const denom: number = Math.sqrt(Math.pow(l.end.y - l.start.y, 2) + Math.pow(l.end.x - l.start.x, 2));\n            return nom / denom;\n        }\n        return null;\n    }\n\n    public static getCenter(l: ILine): IPoint {\n        return {\n            x: (l.start.x + l.end.x) / 2,\n            y: (l.start.y + l.end.y) / 2\n        }\n    }\n}","import { store } from \"../../index\";\nimport { RectUtil } from \"../../utils/RectUtil\";\nimport { updateCustomCursorStyle } from \"../../store/general/actionCreators\";\nimport { CustomCursorStyle } from \"../../data/enums/CustomCursorStyle\";\nimport { EditorData } from \"../../data/EditorData\";\nimport { BaseRenderEngine } from \"./BaseRenderEngine\";\nimport { RenderEngineConfig } from \"../../settings/RenderEngineConfig\";\nimport { IPoint } from \"../../interfaces/IPoint\";\nimport { ILine } from \"../../interfaces/ILine\";\nimport { DrawUtil } from \"../../utils/DrawUtil\";\nimport { IRect } from \"../../interfaces/IRect\";\nimport { ImageData, LabelPolygon } from \"../../store/editor/types\";\nimport { EditorSelector } from \"../../store/selectors/EditorSelector\";\nimport uuidv1 from \"uuid/v1\";\nimport {\n  updateActiveLabelId,\n  updateFirstLabelCreatedFlag,\n  updateHighlightedLabelId,\n  updateImageDataById,\n} from \"../../store/editor/actionCreators\";\nimport { LineUtil } from \"../../utils/LineUtil\";\nimport { MouseEventUtil } from \"../../utils/MouseEventUtil\";\nimport { EventType } from \"../../data/enums/EventType\";\nimport { RenderEngineUtil } from \"../../utils/RenderEngineUtil\";\nimport { LabelType } from \"../../data/enums/LabelType\";\nimport produce from \"immer\";\n\nexport class PolygonRenderEngine extends BaseRenderEngine {\n  private config: RenderEngineConfig = new RenderEngineConfig();\n\n  // =================================================================================================================\n  // STATE\n  // =================================================================================================================\n\n  private activePath: IPoint[] = [];\n  private resizeAnchorIndex: number = null;\n  private suggestedAnchorPositionOnCanvas: IPoint = null;\n  private suggestedAnchorIndexInPolygon: number = null;\n\n  public constructor(canvas: HTMLCanvasElement) {\n    super(canvas);\n    this.labelType = LabelType.POLYGON;\n  }\n\n  // =================================================================================================================\n  // EVENT HANDLERS\n  // =================================================================================================================\n\n  public update(data: EditorData): void {\n    if (!!data.event) {\n      switch (MouseEventUtil.getEventType(data.event)) {\n        case EventType.MOUSE_MOVE:\n          this.mouseMoveHandler(data);\n          break;\n        case EventType.MOUSE_UP:\n          this.mouseUpHandler(data);\n          break;\n        case EventType.MOUSE_DOWN:\n          this.mouseDownHandler(data);\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  public mouseDownHandler(data: EditorData): void {\n    const isMouseOverCanvas: boolean = RenderEngineUtil.isMouseOverCanvas(data);\n    if (isMouseOverCanvas) {\n      if (this.isCreationInProgress()) {\n        const isMouseOverStartAnchor: boolean = this.isMouseOverAnchor(data.mousePositionOnCanvas, this.activePath[0]);\n        if (isMouseOverStartAnchor) {\n          this.addLabelAndFinishCreation(data);\n        } else {\n          this.updateActivelyCreatedLabel(data);\n        }\n      } else {\n        const polygonUnderMouse: LabelPolygon = this.getPolygonUnderMouse(data);\n        if (!!polygonUnderMouse) {\n          const anchorIndex: number = polygonUnderMouse.vertices.reduce(\n            (indexUnderMouse: number, anchor: IPoint, index: number) => {\n              if (indexUnderMouse === null) {\n                const anchorOnCanvas: IPoint = RenderEngineUtil.transferPointFromImageToCanvas(anchor, data);\n                if (this.isMouseOverAnchor(data.mousePositionOnCanvas, anchorOnCanvas)) {\n                  return index;\n                }\n              }\n              return indexUnderMouse;\n            },\n            null\n          );\n\n          if (anchorIndex !== null) {\n            this.startExistingLabelResize(data, polygonUnderMouse.id, anchorIndex);\n          } else {\n            const isMouseOverNewAnchor: boolean = this.isMouseOverAnchor(\n              data.mousePositionOnCanvas,\n              this.suggestedAnchorPositionOnCanvas\n            );\n            if (isMouseOverNewAnchor) {\n              store.dispatch(updateActiveLabelId(polygonUnderMouse.id));\n              this.addSuggestedAnchorToPolygonLabel(data);\n            } else {\n              this.updateActivelyCreatedLabel(data);\n            }\n          }\n        } else {\n          this.updateActivelyCreatedLabel(data);\n        }\n      }\n    }\n  }\n\n  public mouseUpHandler(data: EditorData): void {\n    if (this.isResizeInProgress()) this.endExistingLabelResize(data);\n  }\n\n  public mouseMoveHandler(data: EditorData): void {\n    if (!!data.activeImageRectOnCanvas && !!data.mousePositionOnCanvas) {\n      const isOverImage: boolean = RenderEngineUtil.isMouseOverImage(data);\n      if (isOverImage && !this.isCreationInProgress()) {\n        const labelPolygon: LabelPolygon = this.getPolygonUnderMouse(data);\n        if (!!labelPolygon && !this.isResizeInProgress()) {\n          if (EditorSelector.getHighlightedLabelId() !== labelPolygon.id) {\n            store.dispatch(updateHighlightedLabelId(labelPolygon.id));\n          }\n          const pathOnCanvas: IPoint[] = RenderEngineUtil.transferPolygonFromImageToCanvas(labelPolygon.vertices, data);\n          const linesOnCanvas: ILine[] = this.mapPointsToLines(pathOnCanvas.concat(pathOnCanvas[0]));\n\n          for (let j = 0; j < linesOnCanvas.length; j++) {\n            if (this.isMouseOverLine(data.mousePositionOnCanvas, linesOnCanvas[j])) {\n              this.suggestedAnchorPositionOnCanvas = LineUtil.getCenter(linesOnCanvas[j]);\n              this.suggestedAnchorIndexInPolygon = j + 1;\n              break;\n            }\n          }\n        } else {\n          if (EditorSelector.getHighlightedLabelId() !== null) {\n            store.dispatch(updateHighlightedLabelId(null));\n            this.discardSuggestedPoint();\n          }\n        }\n      }\n    }\n  }\n\n  // =================================================================================================================\n  // RENDERING\n  // =================================================================================================================\n\n  public render(data: EditorData): void {\n    const imageData: ImageData = EditorSelector.getActiveImageData();\n    if (imageData) {\n      this.drawExistingLabels(data);\n      this.drawActivelyCreatedLabel(data);\n      this.drawActivelyResizeLabel(data);\n      this.updateCursorStyle(data);\n      this.drawSuggestedAnchor(data);\n    }\n  }\n\n  private updateCursorStyle(data: EditorData) {\n    if (!!this.canvas && !!data.mousePositionOnCanvas) {\n      const isMouseOverCanvas: boolean = RenderEngineUtil.isMouseOverCanvas(data);\n      if (isMouseOverCanvas) {\n        if (this.isCreationInProgress()) {\n          const isMouseOverStartAnchor: boolean = this.isMouseOverAnchor(\n            data.mousePositionOnCanvas,\n            this.activePath[0]\n          );\n          if (isMouseOverStartAnchor && this.activePath.length > 2)\n            store.dispatch(updateCustomCursorStyle(CustomCursorStyle.CLOSE));\n          else store.dispatch(updateCustomCursorStyle(CustomCursorStyle.DEFAULT));\n        } else {\n          const anchorUnderMouse: IPoint = this.getAnchorUnderMouse(data);\n          const isMouseOverNewAnchor: boolean = this.isMouseOverAnchor(\n            data.mousePositionOnCanvas,\n            this.suggestedAnchorPositionOnCanvas\n          );\n          if (!!isMouseOverNewAnchor) {\n            store.dispatch(updateCustomCursorStyle(CustomCursorStyle.ADD));\n          } else if (this.isResizeInProgress()) {\n            store.dispatch(updateCustomCursorStyle(CustomCursorStyle.MOVE));\n          } else if (!!anchorUnderMouse) {\n            store.dispatch(updateCustomCursorStyle(CustomCursorStyle.MOVE));\n          } else {\n            RenderEngineUtil.wrapDefaultCursorStyleInCancel(data);\n          }\n        }\n        this.canvas.style.cursor = \"none\";\n      } else {\n        this.canvas.style.cursor = \"default\";\n      }\n    }\n  }\n\n  private drawActivelyCreatedLabel(data: EditorData) {\n    const standardizedPoints: IPoint[] = this.activePath.map((point: IPoint) =>\n      RenderEngineUtil.setPointBetweenPixels(point)\n    );\n    const path = standardizedPoints.concat(data.mousePositionOnCanvas);\n    const lines: ILine[] = this.mapPointsToLines(path);\n\n    DrawUtil.drawPolygonWithFill(this.canvas, path, DrawUtil.hexToRGB(this.config.lineActiveColor, 0.2));\n    lines.forEach((line: ILine) => {\n      DrawUtil.drawLine(this.canvas, line.start, line.end, this.config.lineActiveColor, this.config.lineThickness);\n    });\n    this.mapPointsToAnchors(standardizedPoints).forEach((handleRect: IRect) => {\n      DrawUtil.drawRectWithFill(this.canvas, handleRect, this.config.activeAnchorColor);\n    });\n  }\n\n  private drawActivelyResizeLabel(data: EditorData) {\n    const activeLabelPolygon: LabelPolygon = EditorSelector.getActivePolygonLabel();\n    if (!!activeLabelPolygon && this.isResizeInProgress()) {\n      const snappedMousePosition: IPoint = RectUtil.snapPointToRect(\n        data.mousePositionOnCanvas,\n        data.activeImageRectOnCanvas\n      );\n      const polygonOnCanvas: IPoint[] = activeLabelPolygon.vertices.map((point: IPoint, index: number) => {\n        return index === this.resizeAnchorIndex\n          ? snappedMousePosition\n          : RenderEngineUtil.transferPointFromImageToCanvas(point, data);\n      });\n      this.drawPolygon(polygonOnCanvas, true);\n    }\n  }\n\n  private drawExistingLabels(data: EditorData) {\n    const activeLabelId: string = EditorSelector.getActiveLabelId();\n    const highlightedLabelId: string = EditorSelector.getHighlightedLabelId();\n    const imageData: ImageData = EditorSelector.getActiveImageData();\n    const activeGroupIndex = EditorSelector.getActiveGroupIndex();\n\n    imageData.groupList[activeGroupIndex].labelPolygons.forEach((labelPolygon: LabelPolygon) => {\n      const isActive: boolean = labelPolygon.id === activeLabelId || labelPolygon.id === highlightedLabelId;\n      const pathOnCanvas: IPoint[] = RenderEngineUtil.transferPolygonFromImageToCanvas(labelPolygon.vertices, data);\n      if (!(labelPolygon.id === activeLabelId && this.isResizeInProgress())) {\n        this.drawPolygon(pathOnCanvas, isActive);\n      }\n    });\n  }\n\n  private drawPolygon(polygon: IPoint[], isActive: boolean) {\n    const color: string = isActive ? this.config.lineActiveColor : this.config.lineInactiveColor;\n    const standardizedPoints: IPoint[] = polygon.map((point: IPoint) => RenderEngineUtil.setPointBetweenPixels(point));\n    if (isActive) {\n      DrawUtil.drawPolygonWithFill(this.canvas, standardizedPoints, DrawUtil.hexToRGB(color, 0.2));\n    }\n    DrawUtil.drawPolygon(this.canvas, standardizedPoints, color, this.config.lineThickness);\n    if (isActive) {\n      this.mapPointsToAnchors(standardizedPoints).forEach((handleRect: IRect) => {\n        DrawUtil.drawRectWithFill(this.canvas, handleRect, this.config.activeAnchorColor);\n      });\n    }\n  }\n\n  private drawSuggestedAnchor(data: EditorData) {\n    if (this.suggestedAnchorPositionOnCanvas) {\n      const suggestedAnchorRect: IRect = RectUtil.getRectWithCenterAndSize(\n        this.suggestedAnchorPositionOnCanvas,\n        this.config.suggestedAnchorDetectionSize\n      );\n      const isMouseOverSuggestedAnchor: boolean = RectUtil.isPointInside(\n        suggestedAnchorRect,\n        data.mousePositionOnCanvas\n      );\n\n      if (isMouseOverSuggestedAnchor) {\n        const handleRect = RectUtil.getRectWithCenterAndSize(\n          this.suggestedAnchorPositionOnCanvas,\n          this.config.anchorSize\n        );\n        DrawUtil.drawRectWithFill(this.canvas, handleRect, this.config.lineInactiveColor);\n      }\n    }\n  }\n\n  // =================================================================================================================\n  // CREATION\n  // =================================================================================================================\n\n  private updateActivelyCreatedLabel(data: EditorData) {\n    if (this.isCreationInProgress()) {\n      const mousePositionSnapped: IPoint = RectUtil.snapPointToRect(\n        data.mousePositionOnCanvas,\n        data.activeImageRectOnCanvas\n      );\n      this.activePath.push(mousePositionSnapped);\n    } else {\n      const isMouseOverImage: boolean = RectUtil.isPointInside(\n        data.activeImageRectOnCanvas,\n        data.mousePositionOnCanvas\n      );\n      if (isMouseOverImage) {\n        this.activePath.push(data.mousePositionOnCanvas);\n        store.dispatch(updateActiveLabelId(null));\n      }\n    }\n  }\n\n  public cancelLabelCreation() {\n    this.activePath = [];\n  }\n\n  private finishLabelCreation() {\n    this.activePath = [];\n  }\n\n  public addLabelAndFinishCreation(data: EditorData) {\n    if (this.isCreationInProgress() && this.activePath.length > 2) {\n      const polygonOnImage: IPoint[] = RenderEngineUtil.transferPolygonFromCanvasToImage(this.activePath, data);\n      this.addPolygonLabel(polygonOnImage);\n      this.finishLabelCreation();\n    }\n  }\n\n  private addPolygonLabel(polygon: IPoint[]) {\n    const activeLabelIndex = EditorSelector.getActiveLabelNameIndex();\n    const imageData: ImageData = EditorSelector.getActiveImageData();\n    const labelPolygon: LabelPolygon = {\n      id: uuidv1(),\n      labelIndex: activeLabelIndex,\n      checked: false,\n      vertices: polygon,\n    };\n    const activeGroupIndex = EditorSelector.getActiveGroupIndex();\n\n    imageData.groupList[activeGroupIndex].labelPolygons.push(labelPolygon);\n    store.dispatch(updateImageDataById(imageData.id, imageData));\n    store.dispatch(updateFirstLabelCreatedFlag(true));\n    store.dispatch(updateActiveLabelId(labelPolygon.id));\n  }\n\n  // =================================================================================================================\n  // TRANSFER\n  // =================================================================================================================\n\n  private startExistingLabelResize(data: EditorData, labelId: string, anchorIndex: number) {\n    store.dispatch(updateActiveLabelId(labelId));\n    this.resizeAnchorIndex = anchorIndex;\n  }\n\n  private endExistingLabelResize(data: EditorData) {\n    this.applyResizeToPolygonLabel(data);\n    this.resizeAnchorIndex = null;\n  }\n\n  private applyResizeToPolygonLabel(data: EditorData) {\n    const imageData: ImageData = EditorSelector.getActiveImageData();\n    const activeLabel: LabelPolygon = EditorSelector.getActivePolygonLabel();\n    const activeGroupIndex = EditorSelector.getActiveGroupIndex();\n    const newImageData = produce(imageData, draft => {\n      draft.groupList[activeGroupIndex].labelPolygons = imageData.groupList[activeGroupIndex].labelPolygons.map(\n        (polygon: LabelPolygon) => {\n          if (polygon.id !== activeLabel.id) {\n            return polygon;\n          } else {\n            return {\n              ...polygon,\n              vertices: polygon.vertices.map((value: IPoint, index: number) => {\n                if (index !== this.resizeAnchorIndex) {\n                  return value;\n                } else {\n                  const snappedMousePosition: IPoint = RectUtil.snapPointToRect(\n                    data.mousePositionOnCanvas,\n                    data.activeImageRectOnCanvas\n                  );\n                  return RenderEngineUtil.transferPointFromCanvasToImage(snappedMousePosition, data);\n                }\n              }),\n            };\n          }\n        }\n      );\n    });\n\n    store.dispatch(updateImageDataById(imageData.id, newImageData));\n    store.dispatch(updateActiveLabelId(activeLabel.id));\n  }\n\n  private discardSuggestedPoint(): void {\n    this.suggestedAnchorIndexInPolygon = null;\n    this.suggestedAnchorPositionOnCanvas = null;\n  }\n\n  // =================================================================================================================\n  // UPDATE\n  // =================================================================================================================\n\n  private addSuggestedAnchorToPolygonLabel(data: EditorData) {\n    const imageData: ImageData = EditorSelector.getActiveImageData();\n    const activeLabel: LabelPolygon = EditorSelector.getActivePolygonLabel();\n    const newAnchorPositionOnImage: IPoint = RenderEngineUtil.transferPointFromCanvasToImage(\n      this.suggestedAnchorPositionOnCanvas,\n      data\n    );\n    const insert = (arr, index, newItem) => [...arr.slice(0, index), newItem, ...arr.slice(index)];\n    const activeGroupIndex = EditorSelector.getActiveGroupIndex();\n\n    const newImageData: ImageData = produce(imageData, draft => {\n      draft.groupList[imageData.activeGroupIndex].labelPolygons = imageData.groupList[\n        activeGroupIndex\n      ].labelPolygons.map((polygon: LabelPolygon) => {\n        if (polygon.id !== activeLabel.id) {\n          return polygon;\n        } else {\n          return {\n            ...polygon,\n            vertices: insert(polygon.vertices, this.suggestedAnchorIndexInPolygon, newAnchorPositionOnImage),\n          };\n        }\n      });\n    });\n\n    store.dispatch(updateImageDataById(newImageData.id, newImageData));\n    this.startExistingLabelResize(data, activeLabel.id, this.suggestedAnchorIndexInPolygon);\n    this.discardSuggestedPoint();\n  }\n\n  // =================================================================================================================\n  // VALIDATORS\n  // =================================================================================================================\n\n  public isInProgress(): boolean {\n    return this.isCreationInProgress() || this.isResizeInProgress();\n  }\n\n  private isCreationInProgress(): boolean {\n    return this.activePath !== null && this.activePath.length !== 0;\n  }\n\n  private isResizeInProgress(): boolean {\n    return this.resizeAnchorIndex !== null;\n  }\n\n  private isMouseOverAnchor(mouse: IPoint, anchor: IPoint): boolean {\n    if (!mouse || !anchor) return null;\n    return RectUtil.isPointInside(RectUtil.getRectWithCenterAndSize(anchor, this.config.anchorSize), mouse);\n  }\n\n  private isMouseOverLine(mouse: IPoint, l: ILine): boolean {\n    const hoverReach: number = this.config.anchorHoverSize.width / 2;\n    const minX: number = Math.min(l.start.x, l.end.x);\n    const maxX: number = Math.max(l.start.x, l.end.x);\n    const minY: number = Math.min(l.start.y, l.end.y);\n    const maxY: number = Math.max(l.start.y, l.end.y);\n\n    return (\n      minX - hoverReach <= mouse.x &&\n      maxX + hoverReach >= mouse.x &&\n      (minY - hoverReach <= mouse.y && maxY + hoverReach >= mouse.y) &&\n      LineUtil.getDistanceFromLine(l, mouse) < hoverReach\n    );\n  }\n\n  // =================================================================================================================\n  // MAPPERS\n  // =================================================================================================================\n\n  private mapPointsToLines(points: IPoint[]): ILine[] {\n    const lines: ILine[] = [];\n    for (let i = 0; i < points.length - 1; i++) {\n      lines.push({ start: points[i], end: points[i + 1] });\n    }\n    return lines;\n  }\n\n  private mapPointsToAnchors(points: IPoint[]): IRect[] {\n    return points.map((point: IPoint) => RectUtil.getRectWithCenterAndSize(point, this.config.anchorSize));\n  }\n\n  // =================================================================================================================\n  // GETTERS\n  // =================================================================================================================\n\n  private getPolygonUnderMouse(data: EditorData): LabelPolygon {\n    const activeGroupIndex = EditorSelector.getActiveGroupIndex();\n    const labelPolygons: LabelPolygon[] = EditorSelector.getActiveImageData().groupList[activeGroupIndex].labelPolygons;\n    for (let i = 0; i < labelPolygons.length; i++) {\n      const pathOnCanvas: IPoint[] = RenderEngineUtil.transferPolygonFromImageToCanvas(labelPolygons[i].vertices, data);\n      const linesOnCanvas: ILine[] = this.mapPointsToLines(pathOnCanvas.concat(pathOnCanvas[0]));\n\n      for (let j = 0; j < linesOnCanvas.length; j++) {\n        if (this.isMouseOverLine(data.mousePositionOnCanvas, linesOnCanvas[j])) return labelPolygons[i];\n      }\n      for (let j = 0; j < pathOnCanvas.length; j++) {\n        if (this.isMouseOverAnchor(data.mousePositionOnCanvas, pathOnCanvas[j])) return labelPolygons[i];\n      }\n    }\n    return null;\n  }\n\n  private getAnchorUnderMouse(data: EditorData): IPoint {\n    const activeGroupIndex = EditorSelector.getActiveGroupIndex();\n\n    const labelPolygons: LabelPolygon[] = EditorSelector.getActiveImageData().groupList[activeGroupIndex].labelPolygons;\n    for (let i = 0; i < labelPolygons.length; i++) {\n      const pathOnCanvas: IPoint[] = RenderEngineUtil.transferPolygonFromImageToCanvas(labelPolygons[i].vertices, data);\n      for (let j = 0; j < pathOnCanvas.length; j++) {\n        if (this.isMouseOverAnchor(data.mousePositionOnCanvas, pathOnCanvas[j])) return pathOnCanvas[j];\n      }\n    }\n    return null;\n  }\n}\n","import {IRect} from \"../../interfaces/IRect\";\nimport {BaseRenderEngine} from \"./BaseRenderEngine\";\nimport {EditorData} from \"../../data/EditorData\";\n\nexport class PrimaryEditorRenderEngine extends BaseRenderEngine {\n\n    public constructor(canvas: HTMLCanvasElement) {\n        super(canvas);\n    }\n\n    // =================================================================================================================\n    // EVENT HANDLERS\n    // =================================================================================================================\n\n    public mouseMoveHandler(data: EditorData): void {}\n    public mouseDownHandler(data: EditorData): void {}\n    public mouseUpHandler(data: EditorData): void {}\n\n    // =================================================================================================================\n    // RENDERING\n    // =================================================================================================================\n\n    public render(data: EditorData): void {}\n\n    public drawImage(image: HTMLImageElement, imageRect: IRect) {\n        if (!!image && !!this.canvas) {\n            const ctx = this.canvas.getContext(\"2d\");\n            ctx.drawImage(image, imageRect.x, imageRect.y, imageRect.width, imageRect.height);\n        }\n    }\n\n    isInProgress(): boolean {\n        return false;\n    }\n}","import { LabelType } from '../../data/enums/LabelType';\nimport { EditorModel } from '../../staticModels/EditorModel';\nimport { RectRenderEngine } from '../render/RectRenderEngine';\nimport { PointRenderEngine } from '../render/PointRenderEngine';\nimport { PolygonRenderEngine } from '../render/PolygonRenderEngine';\nimport { IRect } from '../../interfaces/IRect';\nimport { Settings } from '../../settings/Settings';\nimport { RectUtil } from '../../utils/RectUtil';\nimport { EditorData } from '../../data/EditorData';\nimport { CanvasUtil } from '../../utils/CanvasUtil';\nimport { ISize } from '../../interfaces/ISize';\nimport React from 'react';\nimport { IPoint } from '../../interfaces/IPoint';\nimport { DrawUtil } from '../../utils/DrawUtil';\nimport { PrimaryEditorRenderEngine } from '../render/PrimaryEditorRenderEngine';\nimport { ContextManager } from '../context/ContextManager';\n\nexport class EditorActions {\n  // =================================================================================================================\n  // RENDER ENGINES\n  // =================================================================================================================\n\n  public static mountSupportRenderingEngine(activeLabelType: LabelType) {\n    switch (activeLabelType) {\n      case LabelType.RECTANGLE:\n        EditorModel.supportRenderingEngine = new RectRenderEngine(EditorModel.canvas);\n        break;\n      case LabelType.POINT:\n        EditorModel.supportRenderingEngine = new PointRenderEngine(EditorModel.canvas);\n        break;\n      case LabelType.POLYGON:\n        EditorModel.supportRenderingEngine = new PolygonRenderEngine(EditorModel.canvas);\n        break;\n      default:\n        EditorModel.supportRenderingEngine = null;\n        break;\n    }\n  }\n\n  public static swapSupportRenderingEngine(activeLabelType: LabelType) {\n    EditorActions.mountSupportRenderingEngine(activeLabelType);\n  }\n\n  public static mountRenderEngines(activeLabelType: LabelType) {\n    EditorModel.primaryRenderingEngine = new PrimaryEditorRenderEngine(EditorModel.canvas);\n    EditorActions.mountSupportRenderingEngine(activeLabelType);\n  }\n\n  // =================================================================================================================\n  // RENDER\n  // =================================================================================================================\n\n  public static fullRender() {\n    DrawUtil.clearCanvas(EditorModel.canvas);\n    EditorModel.primaryRenderingEngine.drawImage(EditorModel.image, EditorModel.imageRectOnCanvas);\n    EditorModel.primaryRenderingEngine.render(EditorActions.getEditorData());\n    EditorModel.supportRenderingEngine && EditorModel.supportRenderingEngine.render(EditorActions.getEditorData());\n  }\n\n  // =================================================================================================================\n  // SETTERS\n  // =================================================================================================================\n\n  public static setLoadingStatus(status: boolean) {\n    EditorModel.isLoading = status;\n  }\n\n  public static setActiveImage(image: HTMLImageElement) {\n    EditorModel.image = image;\n  }\n\n  // =================================================================================================================\n  // GETTERS\n  // =================================================================================================================\n\n  public static getEditorData(event?: Event): EditorData {\n    return {\n      mousePositionOnCanvas: EditorModel.mousePositionOnCanvas,\n      canvasSize: CanvasUtil.getSize(EditorModel.canvas),\n      activeImageScale: EditorModel.imageScale,\n      activeImageRectOnCanvas: EditorModel.imageRectOnCanvas,\n      activeKeyCombo: ContextManager.getActiveCombo(),\n      event: event,\n    };\n  }\n\n  // =================================================================================================================\n  // CALCULATIONS\n  // =================================================================================================================\n\n  public static calculateImageRect(image: HTMLImageElement): IRect | null {\n    if (!!image) {\n      const canvasPaddingWidth: number = Settings.CANVAS_PADDING_WIDTH_PX;\n      const imageRect: IRect = { x: 0, y: 0, width: image.width, height: image.height };\n      const canvasRect: IRect = {\n        x: canvasPaddingWidth,\n        y: canvasPaddingWidth,\n        width: EditorModel.canvas.width - 2 * canvasPaddingWidth,\n        height: EditorModel.canvas.height - 2 * canvasPaddingWidth,\n      };\n      return RectUtil.fitInsideRectWithRatio(canvasRect, RectUtil.getRatio(imageRect));\n    }\n    return null;\n  }\n\n  public static calculateImageScale(image: HTMLImageElement): number | null {\n    if (!image || !EditorModel.imageRectOnCanvas) return null;\n\n    return image.width / EditorModel.imageRectOnCanvas.width;\n  }\n\n  // =================================================================================================================\n  // HELPERS\n  // =================================================================================================================\n\n  public static calculateAllCharacteristics() {\n    EditorModel.imageRectOnCanvas = EditorActions.calculateImageRect(EditorModel.image);\n    EditorModel.imageScale = EditorActions.calculateImageScale(EditorModel.image);\n  }\n\n  public static resizeCanvas = (newCanvasSize: ISize) => {\n    if (!!newCanvasSize && !!EditorModel.canvas) {\n      EditorModel.canvas.width = newCanvasSize.width;\n      EditorModel.canvas.height = newCanvasSize.height;\n    }\n  };\n\n  public static updateMousePositionIndicator(event: React.MouseEvent<HTMLCanvasElement, MouseEvent> | MouseEvent) {\n    if (!EditorModel.imageRectOnCanvas || !EditorModel.canvas) {\n      EditorModel.mousePositionIndicator.style.display = 'none';\n      EditorModel.cursor.style.display = 'none';\n      return;\n    }\n\n    const mousePositionOnCanvas: IPoint = CanvasUtil.getMousePositionOnCanvasFromEvent(event, EditorModel.canvas);\n    const canvasRect: IRect = { x: 0, y: 0, ...CanvasUtil.getSize(EditorModel.canvas) };\n    const isOverCanvas: boolean = RectUtil.isPointInside(canvasRect, mousePositionOnCanvas);\n\n    if (!isOverCanvas) {\n      EditorModel.mousePositionIndicator.style.display = 'none';\n      EditorModel.cursor.style.display = 'none';\n      return;\n    }\n\n    const isOverImage: boolean = RectUtil.isPointInside(EditorModel.imageRectOnCanvas, mousePositionOnCanvas);\n\n    if (isOverImage) {\n      const scale = EditorModel.imageScale;\n      const x: number = Math.round((mousePositionOnCanvas.x - EditorModel.imageRectOnCanvas.x) * scale);\n      const y: number = Math.round((mousePositionOnCanvas.y - EditorModel.imageRectOnCanvas.y) * scale);\n      const text: string = 'x: ' + x + ', y: ' + y;\n\n      EditorModel.mousePositionIndicator.innerHTML = text;\n      EditorModel.mousePositionIndicator.style.left = mousePositionOnCanvas.x + 15 + 'px';\n      EditorModel.mousePositionIndicator.style.top = mousePositionOnCanvas.y + 15 + 'px';\n      EditorModel.mousePositionIndicator.style.display = 'block';\n    } else {\n      EditorModel.mousePositionIndicator.style.display = 'none';\n    }\n\n    EditorModel.cursor.style.left = mousePositionOnCanvas.x + 'px';\n    EditorModel.cursor.style.top = mousePositionOnCanvas.y + 'px';\n    EditorModel.cursor.style.display = 'block';\n  }\n}\n","import {HotKeyAction} from \"../../data/HotKeyAction\";\n\nexport class BaseContext {\n    public static actions: HotKeyAction[] = [];\n\n    public static getActions(): HotKeyAction[] {\n        return this.actions;\n    }\n}","import {MobileDeviceData} from \"../data/MobileDeviceData\";\n\nexport class PlatformModel {\n    public static mobileDeviceData: MobileDeviceData;\n    public static isMac: boolean;\n    public static isSafari: boolean;\n    public static isFirefox: boolean;\n}","import {EditorSelector} from \"../../store/selectors/EditorSelector\";\nimport {store} from \"../../index\";\nimport {updateActiveImageIndex} from \"../../store/editor/actionCreators\";\n\nexport class ImageActions {\n    public static getPreviousImage(): void {\n        const currentImageIndex: number = EditorSelector.getActiveImageIndex();\n        store.dispatch(updateActiveImageIndex(currentImageIndex - 1));\n    }\n\n    public static getNextImage(): void {\n        const currentImageIndex: number = EditorSelector.getActiveImageIndex();\n        store.dispatch(updateActiveImageIndex(currentImageIndex + 1));\n    }\n\n    public static getImageByIndex(index: number): void {\n        const imageCount: number = EditorSelector.getImagesData().length;\n\n        if (index < 0 || index > imageCount - 1)\n            return;\n        else\n            store.dispatch(updateActiveImageIndex(index));\n    }\n}","import {HotKeyAction} from \"../../data/HotKeyAction\";\nimport {EditorModel} from \"../../staticModels/EditorModel\";\nimport {LabelType} from \"../../data/enums/LabelType\";\nimport {EditorData} from \"../../data/EditorData\";\nimport {EditorActions} from \"../actions/EditorActions\";\nimport {PolygonRenderEngine} from \"../render/PolygonRenderEngine\";\nimport {BaseContext} from \"./BaseContext\";\nimport {PlatformModel} from \"../../staticModels/PlatformModel\";\nimport {ImageActions} from \"../actions/ImageActions\";\n\nexport class EditorContext extends BaseContext {\n    public static actions: HotKeyAction[] = [\n        {\n            keyCombo: [\"Enter\"],\n            action: (event: KeyboardEvent) => {\n                if (EditorModel.supportRenderingEngine && EditorModel.supportRenderingEngine.labelType === LabelType.POLYGON) {\n                    const editorData: EditorData = EditorActions.getEditorData();\n                    (EditorModel.supportRenderingEngine as PolygonRenderEngine).addLabelAndFinishCreation(editorData);\n                }\n                EditorActions.fullRender();\n            }\n        },\n        {\n            keyCombo: [\"Escape\"],\n            action: (event: KeyboardEvent) => {\n                if (EditorModel.supportRenderingEngine && EditorModel.supportRenderingEngine.labelType === LabelType.POLYGON)\n                    (EditorModel.supportRenderingEngine as PolygonRenderEngine).cancelLabelCreation();\n                EditorActions.fullRender();\n            }\n        },\n        {\n            keyCombo: PlatformModel.isMac ? [\"Meta\", \"ArrowLeft\"] : [\"Control\", \"ArrowLeft\"],\n            action: (event: KeyboardEvent) => {\n                ImageActions.getPreviousImage()\n            }\n        },\n        {\n            keyCombo: PlatformModel.isMac ? [\"Meta\", \"ArrowRight\"] : [\"Control\", \"ArrowRight\"],\n            action: (event: KeyboardEvent) => {\n                ImageActions.getNextImage();\n            }\n        }\n    ];\n}","import {store} from \"../..\";\nimport {PopupWindowType} from \"../../data/enums/PopupWindowType\";\nimport {ContextType} from \"../../data/enums/ContextType\";\n\nexport class GeneralSelector {\n    public static getActivePopupType(): PopupWindowType {\n        return store.getState().general.activePopupType;\n    }\n\n    public static getActiveContext(): ContextType {\n        return store.getState().general.activeContext;\n    }\n}","import {ContextManager} from \"../context/ContextManager\";\nimport {store} from \"../../index\";\nimport {updateActivePopupType} from \"../../store/general/actionCreators\";\n\nexport class PopupActions {\n    public static close() {\n        store.dispatch(updateActivePopupType(null));\n        ContextManager.restoreCtx();\n    }\n}","import {HotKeyAction} from \"../../data/HotKeyAction\";\nimport {PopupWindowType} from \"../../data/enums/PopupWindowType\";\nimport {GeneralSelector} from \"../../store/selectors/GeneralSelector\";\nimport {BaseContext} from \"./BaseContext\";\nimport {PopupActions} from \"../actions/PopupActions\";\nimport {Settings} from \"../../settings/Settings\";\n\nexport class PopupContext extends BaseContext {\n    public static actions: HotKeyAction[] = [\n        {\n            keyCombo: [\"Escape\"],\n            action: (event: KeyboardEvent) => {\n                const popupType: PopupWindowType = GeneralSelector.getActivePopupType();\n                const canBeClosed: boolean = Settings.CLOSEABLE_POPUPS.includes(popupType);\n                if (canBeClosed) {\n                    PopupActions.close();\n                }\n            }\n        }\n    ];\n}","import {ContextType} from \"../../data/enums/ContextType\";\nimport {HotKeyAction} from \"../../data/HotKeyAction\";\nimport {store} from \"../../index\";\nimport {updateActiveContext} from \"../../store/general/actionCreators\";\nimport * as _ from \"lodash\";\nimport {EditorContext} from \"./EditorContext\";\nimport {PopupContext} from \"./PopupContext\";\nimport {GeneralSelector} from \"../../store/selectors/GeneralSelector\";\n\nexport class ContextManager {\n    private static activeCombo: string[] = [];\n    private static actions: HotKeyAction[] = [];\n    private static contextHistory: ContextType[] = [];\n\n    public static getActiveCombo(): string[] {\n        return ContextManager.activeCombo;\n    }\n\n    public static init(): void {\n        window.addEventListener(\"keydown\", ContextManager.onDown);\n        window.addEventListener(\"keyup\", ContextManager.onUp);\n    }\n\n    public static switchCtx(context: ContextType): void {\n        const activeCtx: ContextType = GeneralSelector.getActiveContext();\n\n        if (activeCtx !== context) {\n            ContextManager.contextHistory.push(activeCtx);\n            ContextManager.updateCtx(context);\n        }\n    }\n\n    private static updateCtx(context: ContextType): void {\n        store.dispatch(updateActiveContext(context));\n        switch (context) {\n            case ContextType.EDITOR:\n                ContextManager.actions = EditorContext.getActions();\n                break;\n            case ContextType.POPUP:\n                ContextManager.actions = PopupContext.getActions();\n                break;\n            default:\n                ContextManager.actions = [];\n        }\n    }\n\n    public static restoreCtx(): void {\n        ContextManager.updateCtx(ContextManager.contextHistory.pop());\n    }\n\n    private static onDown(event: KeyboardEvent): void {\n        const keyCode: string = ContextManager.getKeyCodeFromEvent(event);\n        if (!ContextManager.isInCombo(keyCode)) {\n            ContextManager.addToCombo(keyCode);\n            ContextManager.execute(event);\n        }\n    }\n\n    private static onUp(event: KeyboardEvent): void {\n        const keyCode: string = ContextManager.getKeyCodeFromEvent(event);\n        ContextManager.removeFromCombo(keyCode);\n    }\n\n    private static execute(event: KeyboardEvent): void {\n        for (let i = 0; i < ContextManager.actions.length; i++) {\n            const hotKey: HotKeyAction = ContextManager.actions[i];\n            if (ContextManager.matchCombo(ContextManager.activeCombo, hotKey.keyCombo)) {\n                hotKey.action(event);\n            }\n        }\n    }\n\n    private static isInCombo(keyCode: string): boolean {\n        return ContextManager.activeCombo.indexOf(keyCode) >= 0;\n    }\n\n    private static addToCombo(keyCode: string): void {\n        ContextManager.activeCombo.push(keyCode);\n    }\n\n    private static removeFromCombo(keyCode: string): void {\n        const index: number = ContextManager.activeCombo.indexOf(keyCode);\n        if (index >= 0) {\n            ContextManager.activeCombo.splice(index, 1);\n        }\n    }\n\n    private static getKeyCodeFromEvent(event: KeyboardEvent): string {\n        return event.key;\n    }\n\n    private static matchCombo(combo1: string[], combo2: string[]): boolean {\n        return _.isEmpty(_.xor(combo1, combo2))\n    }\n}","export enum ProjectType {\n    IMAGE_RECOGNITION = \"IMAGE_RECOGNITION\",\n    OBJECT_DETECTION = \"OBJECT_DETECTION\"\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { LabelType } from '../../../../data/enums/LabelType';\nimport { ISize } from '../../../../interfaces/ISize';\nimport { AppState } from '../../../../store';\nimport {\n  updateActiveImageIndex,\n  updateActiveLabelId,\n  updateActiveLabelType,\n  updateGroupList,\n  updateActiveGroupIndex,\n  updateLabelIndexByInfo,\n  addImageData\n} from '../../../../store/editor/actionCreators';\nimport { ImageData } from '../../../../store/editor/types';\nimport VirtualList from '../../../Common/VirtualList/VirtualList';\nimport ImagePreview from '../ImagePreview/ImagePreview';\nimport './ImagesList.scss';\nimport { ContextManager } from '../../../../logic/context/ContextManager';\nimport { ContextType } from '../../../../data/enums/ContextType';\nimport { EditorSelector } from '../../../../store/selectors/EditorSelector';\nimport { EditorActions } from '../../../../logic/actions/EditorActions';\nimport { RenderEngineUtil } from '../../../../utils/RenderEngineUtil';\nimport { EditorModel } from '../../../../staticModels/EditorModel';\nimport { postData } from '../../../../utils/HttpUtils';\nimport { store } from 'react-notifications-component';\n\ninterface IProps {\n  activeImageIndex: number;\n  imagesData: ImageData[];\n  updateActiveImageIndex: (activeImageIndex: number) => any;\n  updateActiveLabelId: (activeLabelId: string) => any;\n  updateActiveLabelType: (activeLabelType: LabelType) => any;\n  activeLabelType: LabelType;\n  updateGroupList: (groupName: string) => any;\n  updateActiveGroupIndex: (groupIndex: number) => any;\n  updateLabelIndexByInfo: (\n    imageIndex: number,\n    groupIndex: number,\n    labelPointIndex: number,\n    labelIndex: number,\n    checked: boolean\n  ) => any;\n  addImageData: (imageData: ImageData[]) => any;\n}\n\ninterface IState {\n  size: ISize;\n}\n\nclass ImagesList extends React.Component<IProps, IState> {\n  private imagesListRef: HTMLDivElement;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      size: null,\n    };\n  }\n\n  public componentDidMount(): void {\n    this.updateListSize();\n    window.addEventListener('resize', this.updateListSize);\n  }\n\n  public componentWillUnmount(): void {\n    window.removeEventListener('resize', this.updateListSize);\n  }\n\n  private updateListSize = () => {\n    if (!this.imagesListRef) return;\n\n    const listBoundingBox = this.imagesListRef.getBoundingClientRect();\n    this.setState({\n      size: {\n        width: listBoundingBox.width,\n        height: listBoundingBox.height,\n      },\n    });\n  };\n\n  private onClickHandler = (index: number) => {\n    //remote request\n    const activeImageIndex = this.props.activeImageIndex;\n    const data = {\n      id: this.props.imagesData[activeImageIndex].fileData.name,\n      point: JSON.stringify(this.props.imagesData[activeImageIndex].groupList),\n    };\n\n    postData('/mark/sign/mark', data).then(resJson => {\n      if (resJson.status !== 200) {\n        store.addNotification({\n          title: '服务器保存出错,请联系开发人员 @tuguang , @chaihang',\n          message: resJson.message,\n          type: 'warning',\n          insert: 'top',\n          container: 'top-center',\n          animationIn: ['animated', 'fadeIn'],\n          animationOut: ['animated', 'fadeOut'],\n          dismiss: {\n            duration: 1000,\n          },\n        });\n      } else {\n        store.addNotification({\n          message: '保存成功',\n          type: 'success',\n          insert: 'top',\n          container: 'top-center',\n          animationIn: ['animated', 'fadeIn'],\n          animationOut: ['animated', 'fadeOut'],\n          dismiss: {\n            duration: 500,\n          },\n        });\n        this.props.updateActiveImageIndex(index);\n        this.props.updateActiveLabelType(this.props.activeLabelType);\n        this.props.updateActiveLabelId(null);\n      }\n    });\n  };\n\n  private renderImagePreview = (\n    index: number,\n    isScrolling: boolean,\n    isVisible: boolean,\n    style: React.CSSProperties\n  ) => {\n\n    return (\n      <ImagePreview\n        key={index}\n        index={index}\n        style={style}\n        size={{ width: 150, height: 150 }}\n        isScrolling={isScrolling}\n        isChecked={\n          this.props.imagesData[index].groupList.some(item => item.labelRects.length > 0) ||\n          this.props.imagesData[index].groupList.some(item => item.labelPoints.length > 0) ||\n          this.props.imagesData[index].groupList.some(item => item.labelPolygons.length > 0)\n        }\n        imageData={this.props.imagesData[index]}\n        onClick={() => this.onClickHandler(index)}\n        isSelected={this.props.activeImageIndex === index}\n      />\n    );\n  };\n\n  public render() {\n    const { size } = this.state;\n    return (\n      <div\n        className=\"ImagesList\"\n        ref={ref => (this.imagesListRef = ref)}\n        onClick={() => ContextManager.switchCtx(ContextType.LEFT_NAVBAR)}\n      >\n        {!!size && (\n          <VirtualList\n            size={size}\n            childSize={{ width: 150, height: 150 }}\n            childCount={this.props.imagesData.length}\n            childRender={this.renderImagePreview}\n            overScanHeight={200}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  updateActiveImageIndex,\n  updateActiveLabelId,\n  updateActiveLabelType,\n  updateLabelIndexByInfo,\n  updateActiveGroupIndex,\n  updateGroupList,\n  addImageData\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  activeImageIndex: state.editor.activeImageIndex,\n  imagesData: state.editor.imagesData,\n  activeLabelType:\n    state.editor.imagesData[EditorSelector.getActiveImageIndex()].groupList[EditorSelector.getActiveGroupIndex()]\n      .activeLabelType,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ImagesList);\n","import { LabelType } from \"../enums/LabelType\";\n\nexport interface ILabelToolkit {\n  labelType: LabelType;\n  headerText: string;\n  imageSrc: string;\n  imageAlt: string;\n}\n\nexport const LabelToolkitData: ILabelToolkit[] = [\n  {\n    labelType: LabelType.NAME,\n    headerText: \"图像识别\",\n    imageSrc: \"ico/object.png\",\n    imageAlt: \"object\",\n  },\n  {\n    labelType: LabelType.RECTANGLE,\n    headerText: \"矩形\",\n    imageSrc: \"ico/rectangle.png\",\n    imageAlt: \"rectangle\",\n  },\n  {\n    labelType: LabelType.POINT,\n    headerText: \"点\",\n    imageSrc: \"ico/point.png\",\n    imageAlt: \"point\",\n  },\n  {\n    labelType: LabelType.POLYGON,\n    headerText: \"多边形\",\n    imageSrc: \"ico/polygon.png\",\n    imageAlt: \"polygon\",\n  },\n];\n","import * as React from 'react';\nimport {ISize} from \"../../../interfaces/ISize\";\nimport './ImageButton.scss';\nimport classNames from \"classnames\";\n\ninterface Props {\n    size:ISize,\n    padding?:number;\n    image:string,\n    imageAlt:string,\n    href?:string\n    onClick?:() => any;\n    style?:React.CSSProperties\n    isActive?:boolean;\n    isDisabled?:boolean;\n    externalClassName?:string;\n}\n\nexport const ImageButton = (props:Props) => {\n    const {size, padding, image, imageAlt, href, onClick, style, isActive, isDisabled, externalClassName} = props;\n    const imagePadding:number = !!padding ? padding : 10;\n\n    const onClickHandler = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n        event.stopPropagation();\n        !!onClick && onClick();\n    };\n\n    const buttonStyle:React.CSSProperties = {\n        ...style,\n        width: size.width,\n        height: size.height\n    };\n\n    const imageStyle:React.CSSProperties = {\n        maxWidth: size.width - imagePadding,\n        maxHeight: size.height - imagePadding\n    };\n\n    const getClassName = () => {\n        return classNames(\n            \"ImageButton\",\n            externalClassName,\n            {\n                \"active\": isActive,\n                \"disabled\": isDisabled,\n            }\n        );\n    };\n    \n    return(\n        <div className={getClassName()} style={buttonStyle} onClick={onClickHandler}>\n            {!!href && <a href={href} style={imageStyle} target=\"_blank\" rel=\"noopener noreferrer\">\n                <img\n                    draggable={false}\n                    alt={imageAlt}\n                    src={image}\n                    style={imageStyle}\n                />\n            </a>}\n            {!href && <img\n                draggable={false}\n                alt={imageAlt}\n                src={image}\n                style={imageStyle}\n            />}\n        </div>\n    );\n};","import React from \"react\";\nimport { ISize } from \"../../../../interfaces/ISize\";\nimport \"./LabelInputField.scss\";\nimport classNames from \"classnames\";\nimport { ImageButton } from \"../../../Common/ImageButton/ImageButton\";\nimport { IRect } from \"../../../../interfaces/IRect\";\nimport { IPoint } from \"../../../../interfaces/IPoint\";\nimport { RectUtil } from \"../../../../utils/RectUtil\";\nimport { AppState } from \"../../../../store\";\nimport { connect } from \"react-redux\";\nimport {\n  updateActiveLabelId,\n  updateHighlightedLabelId,\n  findNextAvailableLabelIndex,\n} from \"../../../../store/editor/actionCreators\";\nimport Scrollbars from \"react-custom-scrollbars\";\n\ninterface IProps {\n  size: ISize;\n  isActive: boolean;\n  isHighlighted: boolean;\n  id: string;\n  index: number;\n  value: string;\n  checked: boolean;\n  options: string[];\n  onDelete: (id: string) => any;\n  onCheck: (id: string) => any;\n  onSelectLabel: (labelRectId: string, labelNameIndex: number) => any;\n  updateHighlightedLabelId: (highlightedLabelId: string) => any;\n  updateActiveLabelId: (highlightedLabelId: string) => any;\n  findNextAvailableLabelIndex: () => any;\n}\n\ninterface IState {\n  animate: boolean;\n  isOpen: boolean;\n}\n\nclass LabelInputField extends React.Component<IProps, IState> {\n  private dropdownOptionHeight: number = 30;\n  private dropdownOptionCount: number = 6;\n  private dropdownMargin: number = 4;\n  private dropdownLabel: HTMLDivElement;\n  private dropdown: HTMLDivElement;\n\n  public constructor(props) {\n    super(props);\n    this.state = {\n      animate: false,\n      isOpen: false,\n    };\n  }\n\n  public componentDidMount(): void {\n    requestAnimationFrame(() => {\n      this.setState({ animate: true });\n    });\n  }\n\n  private getClassName() {\n    return classNames(\"LabelInputField\", {\n      loaded: this.state.animate,\n      active: this.props.isActive,\n      highlighted: this.props.isHighlighted,\n    });\n  }\n\n  private openDropdown = () => {\n    this.setState({ isOpen: true });\n    window.addEventListener(\"mousedown\", this.closeDropdown);\n  };\n\n  private closeDropdown = (event: MouseEvent) => {\n    const mousePosition: IPoint = { x: event.clientX, y: event.clientY };\n    const clientRect = this.dropdown.getBoundingClientRect();\n    const dropDownRect: IRect = {\n      x: clientRect.left,\n      y: clientRect.top,\n      width: clientRect.width,\n      height: clientRect.height,\n    };\n\n    if (!RectUtil.isPointInside(dropDownRect, mousePosition)) {\n      this.setState({ isOpen: false });\n      window.removeEventListener(\"mousedown\", this.closeDropdown);\n    }\n  };\n\n  private getDropdownStyle = (): React.CSSProperties => {\n    const clientRect = this.dropdownLabel.getBoundingClientRect();\n    const height: number = Math.min(this.props.options.length, this.dropdownOptionCount) * this.dropdownOptionHeight;\n    const style = {\n      width: clientRect.width,\n      height: height,\n      left: clientRect.left,\n    };\n\n    if ((window.innerHeight * 2) / 3 < clientRect.top)\n      return Object.assign(style, { top: clientRect.top - this.dropdownMargin - height });\n    else return Object.assign(style, { top: clientRect.bottom + this.dropdownMargin });\n  };\n\n  private getDropdownOptions = () => {\n    const onClick = (index: number, event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n      this.setState({ isOpen: false });\n      window.removeEventListener(\"mousedown\", this.closeDropdown);\n      this.props.onSelectLabel(this.props.id, index);\n      this.props.updateHighlightedLabelId(null);\n      this.props.updateActiveLabelId(this.props.id);\n      this.props.findNextAvailableLabelIndex();\n      event.stopPropagation();\n    };\n\n    return this.props.options.map((option: string, index: number) => {\n      return (\n        <div\n          className=\"DropdownOption\"\n          key={option}\n          style={{ height: this.dropdownOptionHeight }}\n          onClick={event => onClick(index, event)}\n        >\n          {option}\n        </div>\n      );\n    });\n  };\n\n  private mouseEnterHandler = () => {\n    this.props.updateHighlightedLabelId(this.props.id);\n  };\n\n  private mouseLeaveHandler = () => {\n    this.props.updateHighlightedLabelId(null);\n  };\n\n  private onClickHandler = () => {\n    this.props.updateActiveLabelId(this.props.id);\n  };\n\n  public render() {\n    const { size, id, value, onDelete, onCheck, checked } = this.props;\n\n    return (\n      <div\n        className={this.getClassName()}\n        style={{\n          width: size.width,\n          height: size.height,\n        }}\n        key={id}\n        onMouseEnter={this.mouseEnterHandler}\n        onMouseLeave={this.mouseLeaveHandler}\n        onClick={this.onClickHandler}\n      >\n        <div\n          className=\"LabelInputFieldWrapper\"\n          style={{\n            width: size.width,\n            height: size.height,\n          }}\n        >\n          <div className=\"Marker\" />\n          <div className=\"Content\">\n            <div className=\"ContentWrapper\">\n              <div className=\"DropdownLabel\" ref={ref => (this.dropdownLabel = ref)} onClick={this.openDropdown}>\n                {value ? value : \"选择一个标签\"}\n              </div>\n              {this.state.isOpen && (\n                <div className=\"Dropdown\" style={this.getDropdownStyle()} ref={ref => (this.dropdown = ref)}>\n                  <Scrollbars>\n                    <div>{this.getDropdownOptions()}</div>\n                  </Scrollbars>\n                </div>\n              )}\n            </div>\n            <span className=\"describeText\">被遮挡</span>\n            <input type=\"checkbox\" onClick={() => onCheck(id)} checked={checked} onChange={() => {}} />\n\n            <div className=\"ContentWrapper\">\n              <ImageButton\n                externalClassName={\"trash\"}\n                image={\"ico/trash.png\"}\n                imageAlt={\"remove_rect\"}\n                size={{ width: 30, height: 30 }}\n                onClick={() => onDelete(id)}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  updateHighlightedLabelId,\n  updateActiveLabelId,\n  findNextAvailableLabelIndex,\n};\n\nconst mapStateToProps = (state: AppState) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LabelInputField);\n","import React from \"react\";\nimport \"./EmptyLabelList.scss\";\nimport { AppState } from \"../../../../store\";\nimport { connect } from \"react-redux\";\nimport { EditorSelector } from \"../../../../store/selectors/EditorSelector\";\n\ninterface IProps {\n  firstLabelCreatedFlag: boolean;\n  labelBefore: string;\n  labelAfter: string;\n}\n\nconst EmptyLabelList: React.FC<IProps> = ({ firstLabelCreatedFlag, labelBefore, labelAfter }) => {\n  const before = (\n    <>\n      <img draggable={false} alt={\"lets_start\"} src={\"img/rocket.png\"} />\n      <p className=\"extraBold\">{labelBefore}</p>\n    </>\n  );\n\n  const after = (\n    <>\n      <img draggable={false} alt={\"no_labels\"} src={\"img/box-opened.png\"} />\n      <p className=\"extraBold\">{labelAfter}</p>\n    </>\n  );\n\n  return <div className=\"EmptyLabelList\">{!firstLabelCreatedFlag ? before : after}</div>;\n};\n\nconst mapDispatchToProps = {};\n\nconst mapStateToProps = (state: AppState) => ({\n  firstLabelCreatedFlag: EditorSelector.getFirstLabelCreatedFlag(),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EmptyLabelList);\n","import React from \"react\";\nimport { ISize } from \"../../../../interfaces/ISize\";\nimport Scrollbars from \"react-custom-scrollbars\";\nimport { ImageData, LabelRect } from \"../../../../store/editor/types\";\nimport \"./RectLabelsList.scss\";\nimport {\n  updateActiveLabelId,\n  updateActiveLabelNameIndex,\n  updateImageDataById,\n} from \"../../../../store/editor/actionCreators\";\nimport { AppState } from \"../../../../store\";\nimport { connect } from \"react-redux\";\nimport * as _ from \"lodash\";\nimport LabelInputField from \"../LabelInputField/LabelInputField\";\nimport EmptyLabelList from \"../EmptyLabelList/EmptyLabelList\";\nimport { EditorSelector } from \"../../../../store/selectors/EditorSelector\";\nimport produce from \"immer\";\n\ninterface IProps {\n  size: ISize;\n  imageData: ImageData;\n  updateImageDataById: (id: string, newImageData: ImageData) => any;\n  activeLabelId: string;\n  highlightedLabelId: string;\n  updateActiveLabelNameIndex: (activeLabelIndex: number) => any;\n  labelNames: string[];\n  updateActiveLabelId: (activeLabelId: string) => any;\n}\n\nconst RectLabelsList: React.FC<IProps> = ({\n  size,\n  imageData,\n  updateImageDataById,\n  labelNames,\n  updateActiveLabelNameIndex,\n  activeLabelId,\n  highlightedLabelId,\n  updateActiveLabelId,\n}) => {\n  const labelRects = EditorSelector.getActiveImageData().groupList[EditorSelector.getActiveGroupIndex()].labelRects;\n\n  const labelInputFieldHeight = 40;\n  const listStyle: React.CSSProperties = {\n    width: size.width,\n    height: size.height,\n  };\n  const listStyleContent: React.CSSProperties = {\n    width: size.width,\n    height: labelRects.length * labelInputFieldHeight,\n  };\n\n  const deleteRectLabelById = (labelRectId: string) => {\n    const newImageData = produce(imageData, draft => {\n      draft.groupList[imageData.activeGroupIndex].labelRects = labelRects.filter((currentLabel: LabelRect) => {\n        return currentLabel.id !== labelRectId;\n      });\n    });\n    updateImageDataById(imageData.id, newImageData);\n  };\n\n  const checkRectLabelById = (labelRectId: string) => {\n    const newImageData = produce(imageData, draft => {\n      draft.groupList[imageData.activeGroupIndex].labelRects = labelRects.map((currentLabel: LabelRect) => {\n        return currentLabel.id !== labelRectId ? currentLabel : { ...currentLabel, checked: !currentLabel.checked };\n      });\n    });\n    updateImageDataById(imageData.id, newImageData);\n  };\n\n  const updateRectLabel = (labelRectId: string, labelNameIndex: number) => {\n    const newImageData = produce(imageData, draft => {\n      draft.groupList[imageData.activeGroupIndex].labelRects = labelRects.map((labelRect: LabelRect) => {\n        if (labelRect.id === labelRectId) {\n          return {\n            ...labelRect,\n            labelIndex: labelNameIndex,\n          };\n        } else {\n          return labelRect;\n        }\n      });\n    });\n    updateImageDataById(imageData.id, newImageData);\n    updateActiveLabelNameIndex(labelNameIndex);\n  };\n\n  const onClickHandler = () => {\n    updateActiveLabelId(null);\n  };\n\n  const getChildren = () => {\n    return labelRects.map((labelRect: LabelRect, labelIndex: number) => {\n      return (\n        <LabelInputField\n          size={{\n            width: size.width,\n            height: labelInputFieldHeight,\n          }}\n          isActive={labelRect.id === activeLabelId}\n          index={labelIndex}\n          isHighlighted={labelRect.id === highlightedLabelId}\n          id={labelRect.id}\n          key={labelRect.id}\n          onDelete={deleteRectLabelById}\n          onCheck={checkRectLabelById}\n          value={labelRect.labelIndex !== null ? labelNames[labelRect.labelIndex] : null}\n          options={labelNames}\n          onSelectLabel={updateRectLabel}\n          checked={labelRect.checked}\n        />\n      );\n    });\n  };\n\n  return (\n    <div className=\"RectLabelsList\" style={listStyle} onClickCapture={onClickHandler}>\n      {labelRects.length === 0 ? (\n        <EmptyLabelList labelBefore={\"标记第一个矩形\"} labelAfter={\"这张图片还没有标注\"} />\n      ) : (\n        <Scrollbars>\n          <div className=\"RectLabelsListContent\" style={listStyleContent}>\n            {getChildren()}\n          </div>\n        </Scrollbars>\n      )}\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {\n  updateImageDataById,\n  updateActiveLabelNameIndex,\n  updateActiveLabelId,\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  activeLabelId: EditorSelector.getActiveLabelId(),\n  highlightedLabelId: EditorSelector.getHighlightedLabelId(),\n  labelNames: state.editor.labelNames,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RectLabelsList);\n","import React from 'react';\nimport { ISize } from '../../../../interfaces/ISize';\nimport Scrollbars from 'react-custom-scrollbars';\nimport { ImageData, LabelPoint } from '../../../../store/editor/types';\nimport './PointLabelsList.scss';\nimport {\n  updateActiveLabelId,\n  updateActiveLabelNameIndex,\n  updateImageDataById,\n  findNextAvailableLabelIndex,\n} from '../../../../store/editor/actionCreators';\nimport { AppState } from '../../../../store';\nimport { connect } from 'react-redux';\nimport * as _ from 'lodash';\nimport LabelInputField from '../LabelInputField/LabelInputField';\nimport EmptyLabelList from '../EmptyLabelList/EmptyLabelList';\nimport { EditorSelector } from '../../../../store/selectors/EditorSelector';\nimport produce from 'immer';\nimport { store as storeNF } from 'react-notifications-component';\n\ninterface IProps {\n  size: ISize;\n  imageData: ImageData;\n  updateImageDataById: (id: string, newImageData: ImageData) => any;\n  activeLabelId: string;\n  highlightedLabelId: string;\n  updateActiveLabelNameIndex: (activeLabelIndex: number) => any;\n  labelNames: string[];\n  updateActiveLabelId: (activeLabelId: string) => any;\n  findNextAvailableLabelIndex: () => any;\n}\n\nconst PointLabelsList: React.FC<IProps> = ({\n  size,\n  imageData,\n  updateImageDataById,\n  labelNames,\n  updateActiveLabelNameIndex,\n  activeLabelId,\n  highlightedLabelId,\n  updateActiveLabelId,\n  findNextAvailableLabelIndex,\n}) => {\n  const labelPoints = EditorSelector.getActiveImageData().groupList[EditorSelector.getActiveGroupIndex()].labelPoints;\n  const labelInputFieldHeight = 40;\n  const listStyle: React.CSSProperties = {\n    width: size.width,\n    height: size.height,\n  };\n  const listStyleContent: React.CSSProperties = {\n    width: size.width,\n    height: labelPoints.length * labelInputFieldHeight,\n  };\n\n  const deletePointLabelById = (labelPointId: string) => {\n    const newImageData = produce(imageData, draft => {\n      draft.groupList[imageData.activeGroupIndex].labelPoints = labelPoints.filter((currentLabel: LabelPoint) => {\n        return currentLabel.id !== labelPointId;\n      });\n    });\n    updateImageDataById(imageData.id, newImageData);\n    findNextAvailableLabelIndex();\n  };\n\n  const checkPointLabelById = (labelPointId: string) => {\n    const newImageData = produce(imageData, draft => {\n      draft.groupList[imageData.activeGroupIndex].labelPoints = labelPoints.map((currentLabel: LabelPoint) => {\n        return currentLabel.id !== labelPointId ? currentLabel : { ...currentLabel, checked: !currentLabel.checked };\n      });\n    });\n    updateImageDataById(imageData.id, newImageData);\n  };\n\n  const updatePointLabel = (labelPointId: string, labelNameIndex: number) => {\n    let alreadyFlag: boolean = false;\n    const newImageData = produce(imageData, draft => {\n      draft.groupList[imageData.activeGroupIndex].labelPoints = labelPoints.map((currentLabel: LabelPoint) => {\n        if (currentLabel.id === labelPointId) {\n          const alreadyHasIndex = draft.groupList[imageData.activeGroupIndex].labelPoints.some(\n            ele => ele.labelIndex === labelNameIndex\n          );\n          if (alreadyHasIndex) {\n            // console.log(\"labelNameIndex\", labelNameIndex);\n            storeNF.addNotification({\n              message: '已经标记过这个部位了',\n              type: 'warning',\n              insert: 'top',\n              container: 'top-center',\n              animationIn: ['animated', 'fadeIn'],\n              animationOut: ['animated', 'fadeOut'],\n              dismiss: {\n                duration: 1000,\n              },\n            });\n            alreadyFlag = true;\n            return currentLabel;\n          }\n          return {\n            ...currentLabel,\n            labelIndex: labelNameIndex,\n          };\n        }\n        return currentLabel;\n      });\n    });\n    updateImageDataById(imageData.id, newImageData);\n    !alreadyFlag && updateActiveLabelNameIndex(labelNameIndex);\n  };\n\n  const onClickHandler = () => {\n    updateActiveLabelId(null);\n  };\n\n  const getChildren = () => {\n    return labelPoints.map((labelPoint: LabelPoint, labelIndex: number) => {\n      return (\n        <LabelInputField\n          size={{\n            width: size.width,\n            height: labelInputFieldHeight,\n          }}\n          isActive={labelPoint.id === activeLabelId}\n          isHighlighted={labelPoint.id === highlightedLabelId}\n          id={labelPoint.id}\n          key={labelPoint.id}\n          onDelete={deletePointLabelById}\n          value={labelPoint.labelIndex !== null ? labelNames[labelPoint.labelIndex] : null}\n          options={labelNames}\n          onSelectLabel={updatePointLabel}\n          onCheck={checkPointLabelById}\n          checked={labelPoint.checked}\n          index={labelIndex}\n        />\n      );\n    });\n  };\n\n  return (\n    <div className=\"PointLabelsList\" style={listStyle} onClickCapture={onClickHandler}>\n      {labelPoints.length === 0 ? (\n        <EmptyLabelList labelBefore={'\b标记第一个点'} labelAfter={'这张图片还没有标注'} />\n      ) : (\n        <Scrollbars>\n          <div className=\"PointLabelsListContent\" style={listStyleContent}>\n            {getChildren()}\n          </div>\n        </Scrollbars>\n      )}\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {\n  updateImageDataById,\n  updateActiveLabelNameIndex,\n  updateActiveLabelId,\n  findNextAvailableLabelIndex,\n};\n\nconst mapStateToProps = (state: AppState) => {\n  return {\n    activeLabelId: EditorSelector.getActiveLabelId(),\n    highlightedLabelId: EditorSelector.getHighlightedLabelId(),\n    labelNames: state.editor.labelNames,\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PointLabelsList);\n","import React from \"react\";\nimport { ISize } from \"../../../../interfaces/ISize\";\nimport Scrollbars from \"react-custom-scrollbars\";\nimport { ImageData, LabelPolygon } from \"../../../../store/editor/types\";\nimport \"./PolygonLabelsList.scss\";\nimport {\n  updateActiveLabelId,\n  updateActiveLabelNameIndex,\n  updateImageDataById,\n} from \"../../../../store/editor/actionCreators\";\nimport { AppState } from \"../../../../store\";\nimport { connect } from \"react-redux\";\nimport * as _ from \"lodash\";\nimport LabelInputField from \"../LabelInputField/LabelInputField\";\nimport EmptyLabelList from \"../EmptyLabelList/EmptyLabelList\";\nimport { EditorSelector } from \"../../../../store/selectors/EditorSelector\";\nimport produce from \"immer\";\n\ninterface IProps {\n  size: ISize;\n  imageData: ImageData;\n  updateImageDataById: (id: string, newImageData: ImageData) => any;\n  activeLabelId: string;\n  highlightedLabelId: string;\n  updateActiveLabelNameIndex: (activeLabelIndex: number) => any;\n  labelNames: string[];\n  updateActiveLabelId: (activeLabelId: string) => any;\n}\n\nconst PolygonLabelsList: React.FC<IProps> = ({\n  size,\n  imageData,\n  updateImageDataById,\n  labelNames,\n  updateActiveLabelNameIndex,\n  activeLabelId,\n  highlightedLabelId,\n  updateActiveLabelId,\n}) => {\n  const labelPolygons = EditorSelector.getActiveImageData().groupList[EditorSelector.getActiveGroupIndex()]\n    .labelPolygons;\n  const labelInputFieldHeight = 40;\n  const listStyle: React.CSSProperties = {\n    width: size.width,\n    height: size.height,\n  };\n  const listStyleContent: React.CSSProperties = {\n    width: size.width,\n    height: labelPolygons.length * labelInputFieldHeight,\n  };\n\n  const deletePolygonLabelById = (labelPolygonId: string) => {\n    const newImageData = produce(imageData, draft => {\n      draft.groupList[imageData.activeGroupIndex].labelPolygons = labelPolygons.filter((currentLabel: LabelPolygon) => {\n        return currentLabel.id !== labelPolygonId;\n      });\n    });\n    updateImageDataById(imageData.id, newImageData);\n  };\n\n  const checkPolygonLabelById = (labelPolygonId: string) => {\n    const newImageData = produce(imageData, draft => {\n      draft.groupList[imageData.activeGroupIndex].labelPolygons = labelPolygons.map((currentLabel: LabelPolygon) => {\n        return currentLabel.id !== labelPolygonId ? currentLabel : { ...currentLabel, checked: !currentLabel.checked };\n      });\n    });\n    updateImageDataById(imageData.id, newImageData);\n  };\n\n  const updatePolygonLabel = (labelPolygonId: string, labelNameIndex: number) => {\n    const newImageData = produce(imageData, draft => {\n      draft.groupList[imageData.activeGroupIndex].labelPolygons = labelPolygons.map((currentLabel: LabelPolygon) => {\n        if (currentLabel.id === labelPolygonId) {\n          return {\n            ...currentLabel,\n            labelIndex: labelNameIndex,\n          };\n        } else {\n          return currentLabel;\n        }\n      });\n    });\n    updateImageDataById(imageData.id, newImageData);\n    updateActiveLabelNameIndex(labelNameIndex);\n  };\n\n  const onClickHandler = () => {\n    updateActiveLabelId(null);\n  };\n\n  const getChildren = () => {\n    return labelPolygons.map((labelPolygon: LabelPolygon, labelIndex: number) => {\n      return (\n        <LabelInputField\n          size={{\n            width: size.width,\n            height: labelInputFieldHeight,\n          }}\n          isActive={labelPolygon.id === activeLabelId}\n          isHighlighted={labelPolygon.id === highlightedLabelId}\n          id={labelPolygon.id}\n          index={labelIndex}\n          key={labelPolygon.id}\n          onDelete={deletePolygonLabelById}\n          value={labelPolygon.labelIndex !== null ? labelNames[labelPolygon.labelIndex] : null}\n          options={labelNames}\n          onSelectLabel={updatePolygonLabel}\n          onCheck={checkPolygonLabelById}\n          checked={labelPolygon.checked}\n        />\n      );\n    });\n  };\n\n  return (\n    <div className=\"PolygonLabelsList\" style={listStyle} onClickCapture={onClickHandler}>\n      {labelPolygons.length === 0 ? (\n        <EmptyLabelList labelBefore={\"标注第一个多边形\"} labelAfter={\"这张图片还没有标注\"} />\n      ) : (\n        <Scrollbars>\n          <div className=\"PolygonLabelsListContent\" style={listStyleContent}>\n            {getChildren()}\n          </div>\n        </Scrollbars>\n      )}\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {\n  updateImageDataById,\n  updateActiveLabelNameIndex,\n  updateActiveLabelId,\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  activeLabelId: EditorSelector.getActiveLabelId(),\n  highlightedLabelId: EditorSelector.getHighlightedLabelId(),\n  labelNames: state.editor.labelNames,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PolygonLabelsList);\n","import * as React from 'react';\nimport './TextButton.scss';\nimport classNames from 'classnames';\n\ninterface IProps {\n  key?: string;\n  label: any;\n  onClick?: () => any;\n  style?: React.CSSProperties;\n  isActive?: boolean;\n  isDisabled?: boolean;\n  externalClassName?: string;\n}\n\nexport const TextButton = (props: IProps) => {\n  const { key, label, onClick, style, isActive, isDisabled, externalClassName } = props;\n\n  const getClassName = () => {\n    return classNames('TextButton', externalClassName, {\n      active: isActive,\n      disabled: isDisabled,\n    });\n  };\n\n  const onClickHandler = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    event.stopPropagation();\n    !!onClick && onClick();\n  };\n\n  return (\n    <div className={getClassName()} onClick={onClickHandler} key={key} style={style}>\n      {label}\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./LabelsToolkit.scss\";\nimport { ImageData } from \"../../../../store/editor/types\";\nimport {\n  updateActiveLabelId,\n  updateActiveLabelType,\n  updateImageDataById,\n  updateGroupList,\n  updateActiveGroupIndex,\n  deleteGroupList,\n} from \"../../../../store/editor/actionCreators\";\nimport { AppState } from \"../../../../store\";\nimport { connect } from \"react-redux\";\nimport { LabelType } from \"../../../../data/enums/LabelType\";\nimport { ProjectType } from \"../../../../data/enums/ProjectType\";\nimport { ISize } from \"../../../../interfaces/ISize\";\nimport classNames from \"classnames\";\nimport * as _ from \"lodash\";\nimport { ILabelToolkit, LabelToolkitData } from \"../../../../data/info/LabelToolkitData\";\nimport { Settings } from \"../../../../settings/Settings\";\nimport RectLabelsList from \"../RectLabelsList/RectLabelsList\";\nimport PointLabelsList from \"../PointLabelsList/PointLabelsList\";\nimport PolygonLabelsList from \"../PolygonLabelsList/PolygonLabelsList\";\nimport { ContextManager } from \"../../../../logic/context/ContextManager\";\nimport { ContextType } from \"../../../../data/enums/ContextType\";\nimport Scrollbars from \"react-custom-scrollbars\";\nimport { GroupType } from \"../../../../store/editor/types\";\nimport { EditorSelector } from \"../../../../store/selectors/EditorSelector\";\nimport { TextButton } from \"../../../Common/TextButton/TextButton\";\n\ninterface IProps {\n  activeImageIndex: number;\n  activeLabelType: LabelType;\n  imagesData: ImageData[];\n  projectType: ProjectType;\n  groupList: GroupType[];\n  activeGroupIndex: number;\n  updateImageDataById: (id: string, newImageData: ImageData) => any;\n  updateActiveLabelType: (activeLabelType: LabelType) => any;\n  updateActiveLabelId: (highlightedLabelId: string) => any;\n  updateGroupList: (groupName: string) => any;\n  updateActiveGroupIndex: (groupIndex: number) => any;\n  deleteGroupList: (groupIndex: number) => any;\n}\n\ninterface IState {\n  size: ISize;\n  activeLabelType: LabelType;\n}\n\nclass LabelsToolkit extends React.Component<IProps, IState> {\n  private labelsToolkitRef: HTMLDivElement;\n  private readonly tabs: LabelType[];\n\n  constructor(props) {\n    super(props);\n\n    this.tabs = props.projectType === ProjectType.IMAGE_RECOGNITION ? [LabelType.NAME]\n      : [LabelType.RECTANGLE, LabelType.POINT, LabelType.POLYGON];\n\n    const activeTab: LabelType = props.activeLabelType ? props.activeLabelType : this.tabs[0];\n\n    this.state = {\n      size: null,\n      activeLabelType: activeTab,\n    };\n    props.updateActiveLabelType(activeTab);\n  }\n\n  public componentDidMount(): void {\n    this.updateToolkitSize();\n    window.addEventListener(\"resize\", this.updateToolkitSize);\n  }\n\n  public componentWillUnmount(): void {\n    window.removeEventListener(\"resize\", this.updateToolkitSize);\n  }\n\n  private updateToolkitSize = () => {\n    if (!this.labelsToolkitRef) return;\n\n    const listBoundingBox = this.labelsToolkitRef.getBoundingClientRect();\n    this.setState({\n      size: {\n        width: listBoundingBox.width,\n        height: listBoundingBox.height,\n      },\n    });\n  };\n\n  private headerClickHandler = (activeTab: LabelType) => {\n    this.setState({ activeLabelType: activeTab });\n    this.props.updateActiveLabelType(activeTab);\n    this.props.updateActiveLabelId(null);\n  };\n\n  private renderChildren = (currentGroupIndex: number) => {\n    const { activeLabelType, size } = this.state;\n    const { activeImageIndex, imagesData, activeGroupIndex } = this.props;\n    return this.tabs.reduce((children, labelType: LabelType, index: number) => {\n      const isActive: boolean = labelType === activeLabelType && activeGroupIndex === currentGroupIndex;\n      const tabData: ILabelToolkit = _.find(LabelToolkitData, { labelType });\n      // const activeTabContentHeight: number = size.height - this.tabs.length * Settings.TOOLKIT_TAB_HEIGHT_PX - 50 - 50;\n      const activeTabContentHeight = 300;\n      const getClassName = (baseClass: string) =>\n        classNames(baseClass, {\n          active: isActive,\n        });\n\n      const header = (\n        <div\n          key={\"Header_\" + index}\n          className={getClassName(\"Header\")}\n          onClick={() => this.headerClickHandler(labelType)}\n          style={{ height: Settings.TOOLKIT_TAB_HEIGHT_PX }}\n        >\n          <div className=\"Marker\" />\n          <div className=\"HeaderGroupWrapper\">\n            <img draggable={false} className=\"Ico\" src={tabData.imageSrc} alt={tabData.imageAlt} />\n            {tabData.headerText}\n          </div>\n          <div className=\"HeaderGroupWrapper\">\n            <img draggable={false} className=\"Arrow\" src={\"ico/down.png\"} alt={\"down_arrow\"} />\n          </div>\n        </div>\n      );\n\n      const content = (\n        <div\n          key={\"Content_\" + index}\n          className={getClassName(\"Content\")}\n          style={{ height: isActive ? activeTabContentHeight : 0 }}\n        >\n          {labelType === LabelType.RECTANGLE && (\n            <RectLabelsList\n              size={{\n                width: size.width - 20,\n                height: activeTabContentHeight - 20,\n              }}\n              imageData={imagesData[activeImageIndex]}\n            />\n          )}\n          {labelType === LabelType.POINT && (\n            <PointLabelsList\n              size={{\n                width: size.width - 20,\n                height: activeTabContentHeight - 20,\n              }}\n              imageData={imagesData[activeImageIndex]}\n            />\n          )}\n          {labelType === LabelType.POLYGON && (\n            <PolygonLabelsList\n              size={{\n                width: size.width - 20,\n                height: activeTabContentHeight - 20,\n              }}\n              imageData={imagesData[activeImageIndex]}\n            />\n          )}\n        </div>\n      );\n\n      children.push([header, content]);\n      return children;\n    }, []);\n  };\n\n  private buttonOnClickHandle = () => {\n    this.props.updateGroupList(`group-${this.props.groupList.length + 1}`);\n  };\n  private renderChildrenWrapper = () => {\n    const { groupList, activeGroupIndex } = this.props;\n    return groupList\n      .map((groupName, idx) => (\n        <div className=\"LabelsToolkitWrapper\" key={`LabelsToolkitWrapper_` + idx}>\n          <div\n            className={idx === activeGroupIndex ? \"active pDiv\" : \"pDiv\"}\n            onClick={() => {\n              this.props.updateActiveGroupIndex(idx);\n              this.headerClickHandler(this.state.activeLabelType);\n            }}\n          >\n            {`person-` + idx}\n            {idx !== activeGroupIndex ? (\n              <TextButton\n                label=\"删除\"\n                externalClassName=\"buttonClass\"\n                onClick={() => this.props.deleteGroupList(idx)}\n              ></TextButton>\n            ) : null}\n          </div>\n          {idx === activeGroupIndex && this.renderChildren(idx)}\n        </div>\n      ))\n      .concat(\n        <div className=\"addButton\" key=\"button\">\n          <button style={{ width: \"30%\" }} onClick={this.buttonOnClickHandle}>\n            添加 +{\" \"}\n          </button>\n        </div>\n      );\n  };\n  public render() {\n    return (\n      <div\n        className=\"LabelsToolkit\"\n        ref={ref => (this.labelsToolkitRef = ref)}\n        onClick={() => ContextManager.switchCtx(ContextType.RIGHT_NAVBAR)}\n      >\n        <Scrollbars>{this.state.size && this.renderChildrenWrapper()}</Scrollbars>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  updateImageDataById,\n  updateActiveLabelType,\n  updateActiveLabelId,\n  updateGroupList,\n  updateActiveGroupIndex,\n  deleteGroupList,\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  activeImageIndex: state.editor.activeImageIndex,\n  activeLabelType: EditorSelector.getActiveLabelType(),\n  imagesData: state.editor.imagesData,\n  projectType: state.editor.projectType,\n  groupList: EditorSelector.getActiveImageData().groupList,\n  activeGroupIndex: EditorSelector.getActiveGroupIndex(),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LabelsToolkit);\n","import React from 'react';\nimport classNames from 'classnames';\nimport './SideNavigationBar.scss';\nimport {Direction} from \"../../../data/enums/Direction\";\n\ninterface IProps {\n    direction: Direction\n    isOpen: boolean;\n    isWithContext?: boolean;\n    renderCompanion?: () => any;\n    renderContent?: () => any;\n}\n\nexport const SideNavigationBar: React.FC<IProps> = (props) => {\n    const {direction, isOpen, isWithContext, renderContent, renderCompanion} = props;\n\n    const getClassName = () => {\n        return classNames(\n            \"SideNavigationBar\",\n            {\n                \"left\": direction === Direction.LEFT,\n                \"right\": direction === Direction.RIGHT,\n                \"with-context\": isWithContext,\n                \"closed\": !isOpen\n            }\n        );\n    };\n\n    return (\n        <div className={getClassName()}>\n            <div className=\"CompanionBar\">\n                {renderCompanion && renderCompanion()}\n            </div>\n            {isOpen && <div className=\"NavigationBarContentWrapper\">\n                {renderContent && renderContent()}\n            </div>}\n        </div>\n    );\n};","import * as React from \"react\";\nimport classNames from \"classnames\";\nimport './VerticalEditorButton.scss';\n\ninterface IProps {\n    key?:string;\n    label:string;\n    onClick?:() => any;\n    style?:React.CSSProperties;\n    isActive?:boolean;\n    isDisabled?:boolean;\n    image?:string,\n    imageAlt?:string,\n}\n\nexport const VerticalEditorButton = (props:IProps) => {\n\n    const { key, label, onClick, style, isActive, isDisabled, image, imageAlt} = props;\n\n    const getClassName = () => {\n        return classNames(\n            \"VerticalEditorButton\",\n            {\n                \"active\": isActive,\n                \"disabled\": isDisabled\n            }\n        );\n    };\n\n    return(\n        <div\n            className={getClassName()}\n            onClick={!!onClick ? onClick : undefined}\n            key={key}\n            style={style}\n        >\n            {image && <img \n                draggable={false}\n                alt={imageAlt} \n                src={image}\n            />}\n            {label}\n        </div>\n    )\n};","import {CustomCursorStyle} from \"../data/enums/CustomCursorStyle\";\nimport classNames from \"classnames\";\n\nexport class EditorUtil {\n    public static getIndicator = (cursorStyle: CustomCursorStyle): string => {\n        switch (cursorStyle) {\n            case CustomCursorStyle.ADD:\n                return \"ico/plus.png\";\n            case CustomCursorStyle.RESIZE:\n                return \"ico/resize.png\";\n            case CustomCursorStyle.CLOSE:\n                return \"ico/close.png\";\n            case CustomCursorStyle.MOVE:\n                return \"ico/move.png\";\n            case CustomCursorStyle.CANCEL:\n                return \"ico/cancel.png\";\n            default:\n                return null;\n        }\n    };\n\n    public static getCursorStyle = (cursorStyle: CustomCursorStyle) => {\n        return classNames(\n            \"Cursor\", {\n                \"move\": cursorStyle === CustomCursorStyle.MOVE,\n                \"add\": cursorStyle === CustomCursorStyle.ADD,\n                \"resize\": cursorStyle === CustomCursorStyle.RESIZE,\n                \"close\": cursorStyle === CustomCursorStyle.CLOSE,\n                \"cancel\": cursorStyle === CustomCursorStyle.CANCEL,\n            }\n        );\n    };\n}","export enum AcceptedFileType {\n    IMAGE = 'image/jpeg, image/png',\n    TEXT = 'text/plain'\n}","import React from 'react';\nimport './Editor.scss';\nimport { ISize } from '../../../interfaces/ISize';\nimport { ImageData } from '../../../store/editor/types';\nimport { FileUtil } from '../../../utils/FileUtil';\nimport { AppState } from '../../../store';\nimport { connect } from 'react-redux';\nimport { updateImageDataById } from '../../../store/editor/actionCreators';\nimport { ImageRepository } from '../../../logic/imageRepository/ImageRepository';\nimport { LabelType } from '../../../data/enums/LabelType';\nimport { PopupWindowType } from '../../../data/enums/PopupWindowType';\nimport { CanvasUtil } from '../../../utils/CanvasUtil';\nimport { CustomCursorStyle } from '../../../data/enums/CustomCursorStyle';\nimport { ImageLoadManager } from '../../../logic/imageRepository/ImageLoadManager';\nimport { EventType } from '../../../data/enums/EventType';\nimport { EditorData } from '../../../data/EditorData';\nimport { EditorModel } from '../../../staticModels/EditorModel';\nimport { EditorActions } from '../../../logic/actions/EditorActions';\nimport { EditorUtil } from '../../../utils/EditorUtil';\nimport { ContextManager } from '../../../logic/context/ContextManager';\nimport { ContextType } from '../../../data/enums/ContextType';\nimport { loadDataFromLocalStorge } from '../../../store/editor/actionCreators';\n\nimport { EditorSelector } from '../../../store/selectors/EditorSelector';\nimport produce from 'immer';\n\ninterface IProps {\n  size: ISize;\n  imageData: ImageData;\n  activeLabelType: LabelType;\n  updateImageDataById: (id: string, newImageData: ImageData) => any;\n  activePopupType: PopupWindowType;\n  activeLabelId: string;\n  customCursorStyle: CustomCursorStyle;\n  loadDataFromLocalStorge: () => any;\n}\n\nclass Editor extends React.Component<IProps, {}> {\n  // =================================================================================================================\n  // LIFE CYCLE\n  // =================================================================================================================\n\n  public componentDidMount(): void {\n    this.mountEventListeners();\n\n    const { imageData, activeLabelType } = this.props;\n    ContextManager.switchCtx(ContextType.EDITOR);\n    EditorActions.mountRenderEngines(activeLabelType);\n    ImageLoadManager.addAndRun(this.loadImage(imageData));\n  }\n\n  public componentWillUnmount(): void {\n    this.unmountEventListeners();\n  }\n\n  public componentDidUpdate(prevProps: Readonly<IProps>, prevState: Readonly<{}>, snapshot?: any): void {\n    const { imageData, activeLabelType } = this.props;\n    prevProps.imageData.id !== imageData.id && ImageLoadManager.addAndRun(this.loadImage(imageData));\n    prevProps.activeLabelType !== activeLabelType && EditorActions.swapSupportRenderingEngine(activeLabelType);\n    this.updateModelAndRender();\n  }\n\n  // =================================================================================================================\n  // EVENT HANDLERS\n  // =================================================================================================================\n\n  private mountEventListeners() {\n    window.addEventListener(EventType.MOUSE_MOVE, this.update);\n    window.addEventListener(EventType.MOUSE_UP, this.update);\n    EditorModel.canvas.addEventListener(EventType.MOUSE_DOWN, this.update);\n  }\n\n  private unmountEventListeners() {\n    window.removeEventListener(EventType.MOUSE_MOVE, this.update);\n    window.removeEventListener(EventType.MOUSE_UP, this.update);\n    EditorModel.canvas.removeEventListener(EventType.MOUSE_DOWN, this.update);\n  }\n\n  // =================================================================================================================\n  // LOAD IMAGE\n  // =================================================================================================================\n\n  private loadImage = async (imageData: ImageData): Promise<any> => {\n    if (imageData.loadStatus) {\n      EditorActions.setActiveImage(ImageRepository.getById(imageData.id));\n      this.updateModelAndRender();\n    } else {\n      if (!EditorModel.isLoading) {\n        EditorActions.setLoadingStatus(true);\n        const saveLoadedImagePartial = (image: HTMLImageElement) => this.saveLoadedImage(image, imageData);\n        FileUtil.loadImage(imageData.fileData, saveLoadedImagePartial, this.handleLoadImageError);\n      }\n    }\n  };\n\n  private saveLoadedImage = (image: HTMLImageElement, imageData: ImageData) => {\n    const newImageData = produce(imageData, draft => {\n      draft.loadStatus = true;\n    });\n    this.props.updateImageDataById(imageData.id, newImageData);\n    ImageRepository.store(newImageData.id, image);\n    EditorActions.setActiveImage(image);\n    EditorActions.setLoadingStatus(false);\n    this.updateModelAndRender();\n  };\n\n  private handleLoadImageError = () => {\n    console.log('handleLoadImageError');\n  };\n\n  // =================================================================================================================\n  // HELPER METHODS\n  // =================================================================================================================\n\n  private updateModelAndRender = () => {\n    EditorActions.resizeCanvas(this.props.size);\n    EditorActions.calculateAllCharacteristics();\n    EditorActions.fullRender();\n  };\n\n  private update = (event: MouseEvent) => {\n    const editorData: EditorData = EditorActions.getEditorData(event);\n    EditorModel.mousePositionOnCanvas = CanvasUtil.getMousePositionOnCanvasFromEvent(event, EditorModel.canvas);\n    EditorModel.primaryRenderingEngine.update(editorData);\n    EditorModel.supportRenderingEngine && EditorModel.supportRenderingEngine.update(editorData);\n    !this.props.activePopupType && EditorActions.updateMousePositionIndicator(event);\n    EditorActions.fullRender();\n  };\n\n  public render() {\n    return (\n      <div className=\"Editor\">\n        <canvas\n          className=\"ImageCanvas\"\n          ref={ref => (EditorModel.canvas = ref)}\n          draggable={false}\n          onContextMenu={(event: React.MouseEvent<HTMLCanvasElement>) => event.preventDefault()}\n        />\n        <div\n          className=\"MousePositionIndicator\"\n          ref={ref => (EditorModel.mousePositionIndicator = ref)}\n          draggable={false}\n        />\n        <div\n          className={EditorUtil.getCursorStyle(this.props.customCursorStyle)}\n          ref={ref => (EditorModel.cursor = ref)}\n          draggable={false}\n        >\n          <img draggable={false} alt={'indicator'} src={EditorUtil.getIndicator(this.props.customCursorStyle)} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  updateImageDataById,\n  loadDataFromLocalStorge,\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  activeLabelType:\n    state.editor.imagesData[EditorSelector.getActiveImageIndex()].groupList[EditorSelector.getActiveGroupIndex()]\n      .activeLabelType || LabelType.POINT,\n  activePopupType: state.general.activePopupType,\n  activeLabelId:\n    state.editor.imagesData[EditorSelector.getActiveImageIndex()].groupList[EditorSelector.getActiveGroupIndex()]\n      .activeLabelId,\n  customCursorStyle: state.general.customCursorStyle,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Editor);\n","import React from \"react\";\nimport \"./BottomNavigationBar.scss\";\nimport { ImageData } from \"../../../store/editor/types\";\nimport { updateActiveImageIndex } from \"../../../store/editor/actionCreators\";\nimport { AppState } from \"../../../store\";\nimport { connect } from \"react-redux\";\nimport { ImageButton } from \"../../Common/ImageButton/ImageButton\";\nimport { ISize } from \"../../../interfaces/ISize\";\nimport { ContextType } from \"../../../data/enums/ContextType\";\nimport classNames from \"classnames\";\n\ninterface IProps {\n  size: ISize;\n  imageData: ImageData;\n  totalImageCount: number;\n  activeImageIndex: number;\n  activeContext: ContextType;\n  updateActiveImageIndex: (activeImageIndex: number) => any;\n}\n\nconst BottomNavigationBar: React.FC<IProps> = ({\n  size,\n  imageData,\n  totalImageCount,\n  activeImageIndex,\n  activeContext,\n  updateActiveImageIndex,\n}) => {\n  const minWidth: number = 400;\n  const viewPreviousImage = () => {\n    if (activeImageIndex > 0) {\n      updateActiveImageIndex(activeImageIndex - 1);\n    }\n  };\n\n  const viewNextImage = () => {\n    if (activeImageIndex < totalImageCount - 1) {\n      updateActiveImageIndex(activeImageIndex + 1);\n    }\n  };\n\n  const getImageCounter = () => {\n    return activeImageIndex + 1 + \" / \" + totalImageCount;\n  };\n\n  const getClassName = () => {\n    return classNames(\"BottomNavigationBar\", {\n      \"with-context\": activeContext === ContextType.EDITOR,\n    });\n  };\n\n  return (\n    <div className={getClassName()}>\n      <ImageButton\n        image={\"ico/left.png\"}\n        imageAlt={\"previous\"}\n        size={{ width: 25, height: 25 }}\n        onClick={viewPreviousImage}\n        isDisabled={activeImageIndex === 0}\n        externalClassName={\"left\"}\n      />\n      {size.width > minWidth ? (\n        <div className=\"CurrentImageName\"> {imageData.fileData.name} </div>\n      ) : (\n        <div className=\"CurrentImageCount\"> {getImageCounter()} </div>\n      )}\n      <ImageButton\n        image={\"ico/right.png\"}\n        imageAlt={\"next\"}\n        size={{ width: 25, height: 25 }}\n        onClick={viewNextImage}\n        isDisabled={activeImageIndex === totalImageCount - 1}\n        externalClassName={\"right\"}\n      />\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {\n  updateActiveImageIndex,\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  activeImageIndex: state.editor.activeImageIndex,\n  activeContext: state.general.activeContext,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BottomNavigationBar);\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Direction } from '../../../data/enums/Direction';\nimport { ISize } from '../../../interfaces/ISize';\nimport { Settings } from '../../../settings/Settings';\nimport { AppState } from '../../../store';\nimport { ImageData } from '../../../store/editor/types';\nimport ImagesList from '../SideNavigationBar/ImagesList/ImagesList';\nimport LabelsToolkit from '../SideNavigationBar/LabelsToolkit/LabelsToolkit';\nimport { SideNavigationBar } from '../SideNavigationBar/SideNavigationBar';\nimport { VerticalEditorButton } from '../VerticalEditorButton/VerticalEditorButton';\nimport './EditorContainer.scss';\nimport Editor from '../Editor/Editor';\nimport BottomNavigationBar from '../BottomNavigationBar/BottomNavigationBar';\nimport { ContextManager } from '../../../logic/context/ContextManager';\nimport { ContextType } from '../../../data/enums/ContextType';\nimport {\n  updateGroupList,\n  updateActiveGroupIndex,\n  updateActiveLabelNameIndex,\n  updateLabelIndexByInfo,\n  updateActiveImageIndex,\n} from '../../../store/editor/actionCreators';\nimport { LabelType } from '../../../data/enums/LabelType';\nimport { EditorModel } from '../../../staticModels/EditorModel';\nimport { RenderEngineUtil } from '../../../utils/RenderEngineUtil';\nimport { EditorActions } from '../../../logic/actions/EditorActions';\nimport { EditorSelector } from '../../../store/selectors/EditorSelector';\n// import {RenderEngineUtil} from '../'\n\ninterface IProps {\n  windowSize: ISize;\n  activeImageIndex: number;\n  imagesData: ImageData[];\n  activeContext: ContextType;\n  editor: any;\n  updateGroupList: (groupName: string) => any;\n  updateActiveGroupIndex: (groupIndex: number) => any;\n  updateActiveLabelNameIndex: (labelNameIndex: number) => any;\n  updateLabelIndexByInfo: (\n    imageIndex: number,\n    groupIndex: number,\n    labelPointIndex: number,\n    labelIndex: number,\n    checked: boolean\n  ) => any;\n  updateActiveImageIndex: (imageIndex: number) => any;\n}\n\nconst EditorContainer: React.FC<IProps> = ({\n  windowSize,\n  activeImageIndex,\n  imagesData,\n  activeContext,\n  editor,\n  updateGroupList,\n  updateActiveGroupIndex,\n  updateLabelIndexByInfo,\n}) => {\n  const [leftTabStatus, setLeftTabStatus] = useState(true);\n  const [rightTabStatus, setRightTabStatus] = useState(true);\n  const calculateEditorSize = (): ISize => {\n    if (windowSize) {\n      const leftTabWidth = leftTabStatus\n        ? Settings.SIDE_NAVIGATION_BAR_WIDTH_OPEN_PX\n        : Settings.SIDE_NAVIGATION_BAR_WIDTH_CLOSED_PX;\n      const rightTabWidth = rightTabStatus\n        ? Settings.SIDE_NAVIGATION_BAR_WIDTH_OPEN_PX\n        : Settings.SIDE_NAVIGATION_BAR_WIDTH_CLOSED_PX;\n      return {\n        width: windowSize.width - leftTabWidth - rightTabWidth,\n        height: windowSize.height - Settings.TOP_NAVIGATION_BAR_HEIGHT_PX - Settings.BOTTOM_NAVIGATION_BAR_HEIGHT_PX,\n      };\n    } else return null;\n  };\n\n  const leftSideBarButtonOnClick = () => {\n    if (!leftTabStatus) ContextManager.switchCtx(ContextType.LEFT_NAVBAR);\n    else if (leftTabStatus && activeContext === ContextType.LEFT_NAVBAR) ContextManager.restoreCtx();\n\n    setLeftTabStatus(!leftTabStatus);\n  };\n\n  const leftSideBarCompanionRender = () => {\n    return (\n      <>\n        <VerticalEditorButton\n          label=\"Images\"\n          image={'/ico/files.png'}\n          imageAlt={'images'}\n          onClick={leftSideBarButtonOnClick}\n          isActive={leftTabStatus}\n        />\n      </>\n    );\n  };\n\n  const leftSideBarRender = () => {\n    return <ImagesList />;\n  };\n\n  const rightSideBarButtonOnClick = () => {\n    if (!rightTabStatus) ContextManager.switchCtx(ContextType.RIGHT_NAVBAR);\n    else if (rightTabStatus && activeContext === ContextType.RIGHT_NAVBAR) ContextManager.restoreCtx();\n\n    setRightTabStatus(!rightTabStatus);\n  };\n\n  const rightSideBarCompanionRender = () => {\n    return (\n      <>\n        <VerticalEditorButton\n          label=\"Labels\"\n          image={'/ico/tags.png'}\n          imageAlt={'labels'}\n          onClick={rightSideBarButtonOnClick}\n          isActive={rightTabStatus}\n        />\n      </>\n    );\n  };\n\n  const rightSideBarRender = () => {\n    return <LabelsToolkit />;\n  };\n\n  useEffect(() => {\n    return;\n    // setTimeout(() => {\n    //   localStorage.setItem(\n    //     'offsetHeight',\n    //     (document.getElementsByClassName('TopNavigationBar')[0] as any).offsetHeight\n    //   );\n    //   localStorage.setItem(\n    //     'offsetWidth',\n    //     (document.getElementsByClassName('SideNavigationBar left')[0] as any).offsetWidth\n    //   );\n    //   const editorData = EditorActions.getEditorData();\n    //   const offsetWidth = localStorage.getItem('offsetWidth');\n    //   const offsetHeight = localStorage.getItem('offsetHeight');\n    //   // const newIndexs: number[] = [];\n    //   // [].slice\n    //   //   .call(document.getElementsByClassName('ImagePreview'))\n    //   //   .forEach(r => newIndexs.push(+r.getAttribute('data-index')));\n    //   // const showImageIndexs: number[] = (window as any).showImageIndexs || [];\n    //   // const showImagesData = imagesData.filter((itme, idx) => newIndexs.includes(idx));\n    //   imagesData.forEach((imageData, imageIndex) => {\n    //     console.log('activeImageIndex', imageIndex);\n    //     const localData: ImageData = JSON.parse(localStorage.getItem(imageData.fileData.name));\n    //     // updateActiveImageIndex(imageIndex);\n    //     const evt_click = new MouseEvent('click', {\n    //       bubbles: true,\n    //       view: window,\n    //     });\n    //     document.querySelectorAll('.VirtualListContent .ImagePreview')[imageIndex].dispatchEvent(evt_click);\n    //     if (localData) {\n    //       localData.groupList.forEach((item, groupIndex) => {\n    //         if (groupIndex !== 0) {\n    //           updateGroupList(`person-${groupIndex}`);\n    //           updateActiveGroupIndex(groupIndex);\n    //         }\n    //         item.labelPoints.forEach((labelPoint, labelPointIndex) => {\n    //           const point = RenderEngineUtil.transferPointFromImageToCanvas(labelPoint.point, editorData);\n    //           const evt_up = new MouseEvent('mouseup', {\n    //             bubbles: true,\n    //             view: window,\n    //             clientX: point.x + +offsetWidth,\n    //             clientY: point.y + +offsetHeight,\n    //           });\n    //           const evt_down = new MouseEvent('mousedown', {\n    //             bubbles: true,\n    //             view: window,\n    //             clientX: point.x + +offsetWidth,\n    //             clientY: point.y + +offsetHeight,\n    //           });\n    //           EditorModel.canvas.dispatchEvent(evt_up);\n    //           EditorModel.canvas.dispatchEvent(evt_down);\n    //           console.log(imageIndex, groupIndex, labelPointIndex, labelPoint.labelIndex);\n    //           updateLabelIndexByInfo(\n    //             imageIndex,\n    //             groupIndex,\n    //             labelPointIndex,\n    //             labelPoint.labelIndex,\n    //             labelPoint.checked\n    //           );\n    //         });\n    //       });\n    //     }\n    //   });\n    // }, 1000);\n  }, []);\n  return (\n    <div className=\"EditorContainer\">\n      <SideNavigationBar\n        direction={Direction.LEFT}\n        isOpen={leftTabStatus}\n        isWithContext={activeContext === ContextType.LEFT_NAVBAR}\n        renderCompanion={leftSideBarCompanionRender}\n        renderContent={leftSideBarRender}\n      />\n      <div className=\"EditorWrapper\" onMouseDown={() => ContextManager.switchCtx(ContextType.EDITOR)}>\n        <Editor size={calculateEditorSize()} imageData={imagesData[activeImageIndex]} />\n        <BottomNavigationBar\n          imageData={imagesData[activeImageIndex]}\n          size={calculateEditorSize()}\n          totalImageCount={imagesData.length}\n        />\n      </div>\n      <SideNavigationBar\n        direction={Direction.RIGHT}\n        isOpen={rightTabStatus}\n        isWithContext={activeContext === ContextType.RIGHT_NAVBAR}\n        renderCompanion={rightSideBarCompanionRender}\n        renderContent={rightSideBarRender}\n      />\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {\n  updateGroupList,\n  updateActiveGroupIndex,\n  updateActiveLabelNameIndex,\n  updateLabelIndexByInfo,\n  updateActiveImageIndex,\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  windowSize: state.general.windowSize,\n  activeImageIndex: state.editor.activeImageIndex,\n  imagesData: state.editor.imagesData,\n  activeContext: state.general.activeContext,\n  editor: state.editor,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EditorContainer);\n","import React from \"react\";\nimport \"./StateBar.scss\";\nimport { ImageData } from \"../../../store/editor/types\";\nimport { AppState } from \"../../../store\";\nimport { connect } from \"react-redux\";\nimport { LabelType } from \"../../../data/enums/LabelType\";\nimport { EditorSelector } from \"../../../store/selectors/EditorSelector\";\n\ninterface IProps {\n  imagesData: ImageData[];\n  activeLabelType: LabelType;\n}\n\nconst StateBar: React.FC<IProps> = ({ imagesData, activeLabelType }) => {\n  const pointLabeledImages = imagesData.reduce((currentCount: number, currentImage: ImageData) => {\n    return currentCount + (currentImage.groupList[currentImage.activeGroupIndex].labelPoints.length > 0 ? 1 : 0);\n  }, 0);\n\n  const rectLabeledImages = imagesData.reduce((currentCount: number, currentImage: ImageData) => {\n    return currentCount + (currentImage.groupList[currentImage.activeGroupIndex].labelRects.length > 0 ? 1 : 0);\n  }, 0);\n\n  const polygonLabeledImages = imagesData.reduce((currentCount: number, currentImage: ImageData) => {\n    return currentCount + (currentImage.groupList[currentImage.activeGroupIndex].labelPolygons.length > 0 ? 1 : 0);\n  }, 0);\n\n  const getProgress = () => {\n    switch (activeLabelType) {\n      case LabelType.POINT:\n        return (100 * pointLabeledImages) / imagesData.length;\n      case LabelType.RECTANGLE:\n        return (100 * rectLabeledImages) / imagesData.length;\n      case LabelType.POLYGON:\n        return (100 * polygonLabeledImages) / imagesData.length;\n      default:\n        return 0;\n    }\n  };\n\n  return (\n    <div className=\"StateBar\">\n      <div style={{ width: getProgress() + \"%\" }} className=\"done\" />\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {};\n\nconst mapStateToProps = (state: AppState) => ({\n  imagesData: state.editor.imagesData,\n  activeLabelType: EditorSelector.getActiveLabelType(),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(StateBar);\n","import React from 'react'\nimport classNames from 'classnames'\nimport './UnderlineTextButton.scss'\n\ninterface IProps {\n  under?: boolean\n  over?: boolean\n  active?: boolean\n  key?: string\n  label: string\n  onClick?: () => any\n  style?: React.CSSProperties\n}\n\nexport const UnderlineTextButton = (props: IProps) => {\n  const { under, over, active, key, label, onClick, style } = props;\n\n  const getClassName = () => {\n    return classNames('UnderlineTextButton', {\n      under: under,\n      over: over,\n      active: active,\n    })\n  };\n\n  return (\n    <div\n      className={getClassName()}\n      onClick={!!onClick ? onClick : undefined}\n      key={key}\n      style={style}\n    >\n      {label}\n    </div>\n  )\n};\n","import React from 'react';\nimport './TextInput.scss';\n\ninterface IProps {\n    key: string;\n    label?: string;\n    isPassword: boolean;\n    onChange?: (event: React.ChangeEvent<HTMLInputElement>) => any;\n    onFocus?: (event: React.FocusEvent<HTMLInputElement>) => any;\n    inputStyle?: React.CSSProperties;\n    labelStyle?: React.CSSProperties;\n    barStyle?: React.CSSProperties;\n    value?: string;\n}\n\nconst TextInput = (props: IProps) => {\n\n    const {\n        key,\n        label,\n        isPassword,\n        onChange,\n        onFocus,\n        inputStyle,\n        labelStyle,\n        barStyle,\n        value\n    } = props;\n\n    const getInputType = () => {\n        return isPassword ? \"password\" : \"text\";\n    };\n\n    return (\n        <div className=\"TextInput\">\n            <input\n                value={!!value ? value : undefined}\n                type={getInputType()}\n                id={key}\n                style={inputStyle}\n                onChange={onChange ? onChange : undefined}\n                onFocus={onFocus ? onFocus : undefined}\n            />\n            {!!label && <label\n                htmlFor={key}\n                style={labelStyle}\n            >\n                {label}\n            </label>}\n            <div\n                className=\"Bar\"\n                style={barStyle}\n            />\n        </div>\n    );\n};\n\nexport default TextInput;","import React from 'react';\nimport './TopNavigationBar.scss';\nimport StateBar from '../StateBar/StateBar';\nimport { UnderlineTextButton } from '../../Common/UnderlineTextButton/UnderlineTextButton';\nimport { PopupWindowType } from '../../../data/enums/PopupWindowType';\nimport { AppState } from '../../../store';\nimport { connect } from 'react-redux';\nimport { updateActivePopupType } from '../../../store/general/actionCreators';\nimport TextInput from '../../Common/TextInput/TextInput';\nimport {\n  updateProjectName,\n  updateProjectType,\n  updateImageData,\n  updateActiveImageIndex,\n} from '../../../store/editor/actionCreators';\nimport { ImageButton } from '../../Common/ImageButton/ImageButton';\nimport { Settings } from '../../../settings/Settings';\nimport { ProjectType } from '../../../data/enums/ProjectType';\nimport { ImageData } from '../../../store/editor/types';\n\ninterface IProps {\n  updateActivePopupType: (activePopupType: PopupWindowType) => any;\n  updateProjectName: (projectName: string) => any;\n  updateImageData: (imageData: ImageData[]) => any;\n  updateProjectType: (projectType: ProjectType) => any;\n  updateActiveImageIndex: (activeImageIndex: number) => any;\n  projectName: string;\n}\n\nconst TopNavigationBar: React.FC<IProps> = ({\n  updateActivePopupType,\n  updateProjectName,\n  projectName,\n  updateImageData,\n  updateActiveImageIndex,\n  updateProjectType,\n}) => {\n  const onFocus = (event: React.FocusEvent<HTMLInputElement>) => {\n    event.target.setSelectionRange(0, event.target.value.length);\n  };\n\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.value.toLowerCase().replace(' ', '-');\n    updateProjectName(value);\n  };\n\n  const returnDir = () => {\n    updateImageData([]);\n    updateActiveImageIndex(0);\n    updateProjectType(null);\n  };\n  return (\n    <div className=\"TopNavigationBar\">\n      <StateBar />\n      <div className=\"TopNavigationBarWrapper\">\n        <div>\n          <div\n            className=\"Header\"\n          // onClick={() => updateActivePopupType(PopupWindowType.EXIT_PROJECT)}\n          >\n            {/* <img draggable={false} alt={\"make-sense\"} src={\"/make-sense-ico-transparent.png\"} />\n            Make Sense */}\n          </div>\n        </div>\n        <div className=\"NavigationBarGroupWrapper\">\n          <div className=\"ProjectName\">项目名称:</div>\n          <TextInput key={'ProjectName'} isPassword={false} value={projectName} onChange={onChange} onFocus={onFocus} />\n        </div>\n        <div className=\"NavigationBarGroupWrapper\">\n          <UnderlineTextButton label={'返回文件夹'} under={true} onClick={() => returnDir()} />\n          <UnderlineTextButton\n            label={'导入更多图片'}\n            under={true}\n            onClick={() => updateActivePopupType(PopupWindowType.LOAD_IMAGES)}\n          />\n          <UnderlineTextButton\n            label={'导出标注'}\n            under={true}\n            onClick={() => updateActivePopupType(PopupWindowType.EXPORT_LABELS)}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {\n  updateActivePopupType,\n  updateProjectName,\n  updateImageData,\n  updateActiveImageIndex,\n  updateProjectType,\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  projectName: state.editor.projectName,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TopNavigationBar);\n","import React from \"react\";\nimport \"./EditorView.scss\";\nimport EditorContainer from \"./EditorContainer/EditorContainer\";\nimport { PopupWindowType } from \"../../data/enums/PopupWindowType\";\nimport { AppState } from \"../../store\";\nimport { connect } from \"react-redux\";\nimport classNames from \"classnames\";\nimport TopNavigationBar from \"./TopNavigationBar/TopNavigationBar\";\n\ninterface IProps {\n  activePopupType: PopupWindowType;\n}\n\nconst EditorView: React.FC<IProps> = ({ activePopupType }) => {\n  const getClassName = () => {\n    return classNames(\"EditorView\", {\n      withPopup: !!activePopupType,\n    });\n  };\n\n  return (\n    <div className={getClassName()}>\n      <TopNavigationBar />\n      <EditorContainer />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  activePopupType: state.general.activePopupType,\n});\n\nexport default connect(mapStateToProps)(EditorView);\n","import {Settings} from \"../../settings/Settings\";\n\nexport interface ISocialMedia {\n    displayName:string;\n    imageSrc:string;\n    imageAlt:string;\n    href:string;\n    tooltipMessage:string;\n}\n\nexport const SocialMediaData: ISocialMedia[] = [\n    {\n        displayName: \"Github\",\n        imageSrc: \"/img/github-logo.png\",\n        imageAlt: \"GitHub Logo\",\n        href: Settings.GITHUB_URL,\n        tooltipMessage: \"Show me some love on GitHub\",\n    },\n    {\n        displayName: \"Medium\",\n        imageSrc: \"/img/medium-logo.png\",\n        imageAlt: \"Medium Logo\",\n        href: Settings.MEDIUM_URL,\n        tooltipMessage: \"Read my AI content on Medium\",\n    },\n    {\n        displayName: \"Patreon\",\n        imageSrc: \"/img/patreon-logo.png\",\n        imageAlt: \"Patreon Logo\",\n        href: Settings.PATREON_URL,\n        tooltipMessage: \"Support MakeSense on Patreon and help it grow\"\n    },\n];","export interface IEditorFeature {\n  displayText: string;\n  imageSrc: string;\n  imageAlt: string;\n}\n\nexport const EditorFeatureData: IEditorFeature[] = [\n  {\n    displayText: \"不需要额外安装，仅仅打开浏览器就可以开始工作\",\n    imageSrc: \"img/online.png\",\n    imageAlt: \"online\",\n  },\n  {\n    displayText: \"我们不存储你的图片\",\n    imageSrc: \"img/private.png\",\n    imageAlt: \"private\",\n  },\n  {\n    displayText: \"支持点、矩形、多边形标注\",\n    imageSrc: \"img/labels.png\",\n    imageAlt: \"labels\",\n  },\n  {\n    displayText: \"支持导出标注数据\",\n    imageSrc: \"img/file.png\",\n    imageAlt: \"file\",\n  },\n  {\n    displayText: \"支持裁剪和调整大小\",\n    imageSrc: \"img/crop.png\",\n    imageAlt: \"crop\",\n  },\n];\n","import React, { useEffect, useState } from \"react\";\nimport \"./GenericYesNoPopup.scss\";\nimport { TextButton } from \"../../Common/TextButton/TextButton\";\nimport { ContextManager } from \"../../../logic/context/ContextManager\";\nimport { ContextType } from \"../../../data/enums/ContextType\";\n\ninterface IProps {\n  title: string;\n  renderContent: () => any;\n  acceptLabel: string;\n  onAccept: () => any;\n  skipAcceptButton?: boolean;\n  disableAcceptButton?: boolean;\n  rejectLabel: string;\n  onReject: () => any;\n  skipRejectButton?: boolean;\n  disableRejectButton?: boolean;\n  onClickUpload?: () => any;\n  isUpload?: boolean;\n  isLogin?: boolean;\n  onClickBack?: () => any;\n}\n\nexport const GenericYesNoPopup: React.FC<IProps> = ({\n  title,\n  renderContent,\n  acceptLabel,\n  onAccept,\n  skipAcceptButton,\n  disableAcceptButton,\n  rejectLabel,\n  onReject,\n  skipRejectButton,\n  disableRejectButton,\n  onClickUpload,\n  isUpload,\n  isLogin,\n  onClickBack\n}) => {\n  const [status, setMountStatus] = useState(false);\n  useEffect(() => {\n    if (!status) {\n      ContextManager.switchCtx(ContextType.POPUP);\n      setMountStatus(true);\n    }\n  }, [status]);\n\n  const renderNormalFooter = () => {\n    return (\n      <div className=\"Footer\" >\n        {\n          isLogin && <TextButton\n            label={\"上传图片\"}\n            onClick={onClickUpload}\n            externalClassName={\"accept\"}\n          />\n        }\n        {!skipRejectButton && (\n          <TextButton\n            label={!!rejectLabel ? rejectLabel : \"不, 谢谢\"}\n            onClick={onReject}\n            externalClassName={\"reject\"}\n            isDisabled={disableRejectButton}\n          />\n        )\n        }\n        {\n          !skipAcceptButton && (\n            <TextButton\n              label={!!acceptLabel ? acceptLabel : \"好的\"}\n              onClick={onAccept}\n              externalClassName={\"accept\"}\n              isDisabled={disableAcceptButton}\n            />\n          )\n        }\n      </div >\n    )\n  }\n  const renderUploadFooter = () => {\n    return <div className=\"Footer\" >\n      {/* <TextButton\n        label={\"新建文件夹\"}\n        onClick={onClickUpload}\n        externalClassName={\"accept\"}\n      /> */}\n      <TextButton\n        label={\"返回\"}\n        onClick={onClickBack}\n        externalClassName={\"accept\"}\n      />\n    </div>\n  }\n  return (\n    <div className=\"GenericYesNoPopup\">\n      <div className=\"Header\">{title}</div>\n      <div className=\"Content\">{renderContent()}</div>\n      {!isUpload ? renderNormalFooter() : renderUploadFooter()}\n    </div>\n  );\n};\n","import React, { useState, useEffect, useRef } from 'react';\nimport './LoginPopup.scss';\nimport { GenericYesNoPopup } from '../GenericYesNoPopup/GenericYesNoPopup';\nimport {\n  updateActiveImageIndex,\n  updateActiveLabelNameIndex,\n  updateFirstLabelCreatedFlag,\n  updateImageData,\n  updateLabelNamesList,\n  updateProjectType,\n  addImageData,\n  // updateDirInfo\n} from '../../../store/editor/actionCreators';\nimport { AppState } from '../../../store';\nimport { connect } from 'react-redux';\nimport { ProjectType } from '../../../data/enums/ProjectType';\nimport { ImageData, Dirinfo } from '../../../store/editor/types';\nimport { PopupActions } from '../../../logic/actions/PopupActions';\nimport TextInput from '../../Common/TextInput/TextInput';\nimport { store } from 'react-notifications-component';\nimport { useCookies, Cookies } from 'react-cookie';\nimport uuidv1 from 'uuid/v1';\n\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { LabelType } from '../../../data/enums/LabelType';\nimport { makeRequest, postData, getData, postFile } from '../../../utils/HttpUtils';\n// import ImagesDropZone from '../../MainView/ImagesDropZone/ImagesDropZone';\n// import { useDropzone } from 'react-dropzone';\nimport useModal from \"use-react-modal\";\nimport { TextButton } from '../../Common/TextButton/TextButton';\nimport ReactLoading from 'react-loading';\nimport { PopupWindowType } from '../../../data/enums/PopupWindowType';\nimport { updateActivePopupType } from '../../../store/general/actionCreators';\n\n\ninterface IProps {\n  updateActiveImageIndex: (activeImageIndex: number) => any;\n  updateProjectType: (projectType: ProjectType) => any;\n  updateActiveLabelNameIndex: (activeLabelIndex: number) => any;\n  updateLabelNamesList: (labelNames: string[]) => any;\n  updateImageData: (imageData: ImageData[]) => any;\n  updateFirstLabelCreatedFlag: (firstLabelCreatedFlag: boolean) => any;\n  addImageData: (imageData: ImageData[], inital?: boolean) => any;\n  updateActivePopupType: (activePopupType: PopupWindowType) => any;\n  // updateDirInfo: (params: Dirinfo) => any;\n}\n\nconst ExitProjectPopup: React.FC<IProps> = props => {\n  const {\n    updateActiveLabelNameIndex,\n    updateLabelNamesList,\n    updateProjectType,\n    updateActiveImageIndex,\n    updateImageData,\n    updateFirstLabelCreatedFlag,\n    addImageData,\n    updateActivePopupType\n  } = props;\n\n  const { openModal, closeModal, isOpen, Modal } = useModal();\n\n  const [cookies, setCookie, removeCookie] = useCookies(['token']);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isLogin, setIsLogin] = useState(false);\n  const [isUpload, setIsUpload] = useState(false);\n  const [dirList, setDirList] = useState([]);\n  const [picListDir, setPiclistDir] = useState([]);\n  const [picList, setPicList] = useState([])\n  const [selectDirName, setSelectDirName] = useState('');\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [dirInfo, setDirInfo] = useState({\n    dir: '',\n    userId: 0\n  });\n  const [isEditingId, setIsEditingId] = useState('')\n  const [dirName, setDirName] = useState('')\n  const [isUploading, setIsUploading] = useState(false)\n\n  let inputRef = useRef<HTMLInputElement>();\n\n  const onChangeUsername = val => {\n    setUsername(val.target.value);\n  };\n\n  const onChangePassword = val => {\n    setPassword(val.target.value);\n  };\n\n  useEffect(() => {\n    getInitDir()\n  }, []);\n\n  const getInitDir = () => {\n    if (cookies.token) {\n      getData('/mark/sign/getDir').then(data => {\n        if (data.status === 200) {\n          const lists = data.data.reduce((acc, cur) => cur.list ? [...acc, ...cur.list] : [...acc], [])\n          setDirList(lists)\n          setIsLogin(true);\n        } else {\n          removeCookie('token');\n        }\n      });\n    }\n  }\n  const renderContent = () => {\n    return (\n      <div className=\"ExitProjectPopupContent\">\n        <div className=\"Message\">\n          {!isLogin ? (\n            <>\n              用户名： <TextInput key=\"username\" isPassword={false} onChange={onChangeUsername} />\n              密码： <TextInput key=\"password\" isPassword={true} onChange={onChangePassword} />\n            </>\n          ) : (\n              <Scrollbars style={{ width: '100%', height: 300, fontSize: 18 }}>\n                {dirList.map((item, idx) => {\n                  return (\n                    <p\n                      style={{ cursor: 'point' }}\n                      onClick={() => onSelectDir(item)}\n                      key={item}\n                      className={selectDirName === item ? 'active' : ''}\n                    >\n                      {item}\n                    </p>\n                  );\n                })}\n              </Scrollbars>\n            )}\n        </div>\n      </div>\n    );\n  };\n\n  const handleChange = (files: File[]) => {\n    let formdata = new FormData()\n    formdata.append('dir', dirInfo.dir);\n    formdata.append('userId', dirInfo.userId + '');\n    [].slice.call(files).forEach((file, index) => {\n      formdata.append('files', file)\n    })\n    files.length && setIsUploading(true)\n    postFile('/mark/sign/upload', formdata).then(data => {\n      if (data.status === 200) {\n        console.log('success', data)\n        setIsUploading(false)\n      }\n    });\n  }\n\n  const onClickImport = (userId: number, dir: string) => {\n    setDirInfo({\n      userId,\n      dir\n    })\n    inputRef.current.click();\n  }\n\n  const onOpenModal = (e, dirName) => {\n    openModal(e);\n    postData('/mark/sign/picList', {\n      dir: dirName, // 文件夹名称\n      pageNo: 1, // 分页参数\n      pageSize: 100, // 分页参数\n    }).then(resJson => {\n      if (resJson.status === 200) {\n        setPicList(resJson.data.rows)\n      }\n    });\n  }\n\n  const onCreateDir = (e, userId) => {\n    setIsEditingId(userId)\n  }\n\n  const onConfirmCreateDir = (e, userId) => {\n    postData('/mark/sign/addDir', {\n      \"dir\": dirName, // 文件夹名称\n      \"userId\": userId      // 文件夹对应用户\n    }).then(resJson => {\n      if (resJson.status === 200) {\n        onClickUpload()\n        setIsEditingId('')\n        setDirName('')\n      }\n    });\n  }\n\n  const onCancelCreateDir = (e, userId) => {\n    setIsEditingId('')\n    setDirName('')\n  }\n\n  const onChangeDirName = (e) => {\n    setDirName(e.target.value)\n  }\n  const renderPicList = () => {\n    return <div className=\"ExitProjectPopupContent\">\n      <div className=\"Message\">\n        <Scrollbars style={{ width: '100%', height: 300, fontSize: 18 }}>\n          {picListDir.map((item, idx) => {\n            // <div {...getRootProps({ className: 'DropZone' })}>{getDropZoneContent()}</div>\n            return (\n              <>\n                <p\n                  style={{ cursor: 'point' }}\n                  // onClick={() => onSelectPicList(item.username)}\n                  key={item.username}\n                  className={selectDirName === item.username ? 'active Utitle' : 'Utitle'}\n                >\n                  用户：{item.username}\n                  {\n                    isEditingId === item.userId ? <div>\n                      <TextInput key=\"editDir\" isPassword={false} onChange={onChangeDirName} />\n                      <span className=\"confirmLabel\" onClick={(e) => onConfirmCreateDir(e, item.userId)} >确定</span>\n                      <span className=\"confirmLabel delete\" onClick={(e) => onCancelCreateDir(e, item.userId)} >取消</span>\n                    </div> :\n                      <span className=\"ShowLabel\" onClick={(e) => onCreateDir(e, item.userId)} >新建文件夹</span>\n                  }\n                </p>\n                <ul>\n                  {item.list && item.list.map((ele, index) => {\n                    return <li key={index}><img src={require('./dir.svg')} /><span className=\"DirName\">{ele}</span>\n                      <span className=\"ShowLabel\" onClick={(e) => onOpenModal(e, ele)} >查看</span>\n                      <span className=\"ShowLabel ImportLabel\" onClick={() => onClickImport(item.userId, ele)}>导入</span></li>\n                  })}\n                </ul>\n              </>\n            );\n          })}\n        </Scrollbars>\n        <input\n          type=\"file\"\n          style={{ display: 'none' }}\n          ref={inputRef}\n          accept=\"image/*\"\n          onChange={(e: any) => handleChange(e.target.files)}\n          multiple\n          hidden\n        />\n      </div>\n    </div>\n  }\n\n  const onSelectDir = dirName => {\n    setCookie('dirName', dirName);\n    setCookie('pageNo', 1);\n    setCookie('pageSize', 10);\n    setSelectDirName(dirName);\n\n    postData('/mark/sign/picList', {\n      dir: dirName, // 文件夹名称\n      pageNo: 1, // 分页参数\n      pageSize: 10, // 分页参数\n    }).then(resJson => {\n      if (resJson.status === 200) {\n        importImagesDataFromHttp(resJson.data.rows);\n      }\n    });\n  };\n\n  const onLogout = () => {\n    removeCookie('token');\n    window.location.reload();\n  };\n  const importImagesDataFromHttp = (urlAry: any[]) => {\n    let imagesData = [];\n    let number = 0;\n    setIsLoaded(false);\n    urlAry.forEach(async (data, idx) => {\n      let blob = await makeRequest('get', data.url);\n      var file = new File([blob as any], data.id);\n      const reader = new FileReader();\n      reader.onabort = () => console.log('file reading was aborted');\n      reader.onerror = () => console.log('file reading has failed');\n      reader.onload = () => {\n        var image = new Image();\n        image.src = reader.result as any;\n        image.onload = function (img) {\n          (file as any).width = (this as any).width;\n          (file as any).height = (this as any).height;\n          const groupListData = data.point\n            ? JSON.parse(data.point)\n            : [\n              {\n                activeLabelNameIndex: 0,\n                activeLabelType: LabelType.POINT,\n                activeLabelId: null,\n                highlightedLabelId: null,\n                firstLabelCreatedFlag: false,\n                labelRects: [],\n                labelPoints: [],\n                labelPolygons: [],\n              },\n            ];\n          var tempImageData = {\n            activeGroupIndex: 0,\n            fileData: file,\n            groupList: groupListData,\n            id: uuidv1(),\n            loadStatus: false,\n          };\n          imagesData.push(tempImageData);\n          number++;\n          if (number === urlAry.length) {\n            imagesData.sort(function (a, b) {\n              return +a.fileData.name - +b.fileData.name;\n            });\n            addImageData(imagesData, true);\n            setIsLoaded(true);\n          }\n        };\n      };\n      reader.readAsDataURL(file);\n    });\n  };\n  const onAccept = () => {\n    postData('/mark/igt/login', {\n      username,\n      password,\n    }).then(function (res) {\n      if (res.status !== 200) {\n        store.addNotification({\n          title: '登录出错',\n          message: res.message,\n          type: 'warning',\n          insert: 'top',\n          container: 'top-center',\n          animationIn: ['animated', 'fadeIn'],\n          animationOut: ['animated', 'fadeOut'],\n          dismiss: {\n            duration: 1000,\n            // onScreen: true,\n          },\n        });\n      } else {\n        setCookie('token', res.data);\n        store.addNotification({\n          message: '登录成功',\n          type: 'success',\n          insert: 'top',\n          container: 'top-center',\n          animationIn: ['animated', 'fadeIn'],\n          animationOut: ['animated', 'fadeOut'],\n          dismiss: {\n            duration: 1000,\n            // onScreen: true,\n          },\n        });\n        getData('/mark/sign/getDir').then(data => {\n          if (data.status === 200) {\n            const lists = data.data.reduce((acc, cur) => cur.list ? [...acc, ...cur.list] : [...acc], [])\n            setDirList(lists)\n          }\n        });\n        setIsLogin(true);\n      }\n    });\n    // getData('http://47.99.138.248/mark/sign/init').then(function(myJson) {\n    //   console.log(myJson);\n    // });\n    // PopupActions.close();\n  };\n\n  const onReject = () => { };\n  const onStart = () => {\n    // PopupActions.close();\n    updateActiveImageIndex(0);\n    updateProjectType(ProjectType.OBJECT_DETECTION);\n    updateActivePopupType(PopupWindowType.INSERT_LABEL_NAMES);\n  };\n  const onClickUpload = () => {\n    setIsUpload(true)\n    getData('/mark/sign/getDir').then(data => {\n      if (data.status === 200) {\n        const lists = data.data\n        setPiclistDir(lists)\n      }\n    });\n  }\n  const onClickBack = () => {\n    getInitDir();\n    setIsUpload(false)\n  }\n  return (\n    <>\n      <GenericYesNoPopup\n        title={!isLogin ? '登录' : '选择文件夹'}\n        renderContent={!isUpload ? renderContent : renderPicList}\n        acceptLabel={!isLogin ? '登录' : '开始标记'}\n        onAccept={!isLogin ? onAccept : onStart}\n        skipRejectButton={!isLogin}\n        rejectLabel={'退出登录'}\n        onReject={onLogout}\n        disableAcceptButton={(isLogin && !selectDirName) || (isLogin && !isLoaded)}\n        onClickUpload={onClickUpload}\n        onClickBack={onClickBack}\n        isUpload={isUpload}\n        isLogin={isLogin}\n      />\n      {isOpen && (\n        <Modal className={\"PicModal\"}>\n          <div className=\"PicModal__Header\" >图片列表</div>\n          <div className=\"PicModal__Content\" >\n            <Scrollbars style={{\n              width: '100%', height: 300, fontSize: 18, display: 'flex', flexWrap: 'wrap', justifyContent: 'space-around'\n            }}>\n              {picList.map((item, idx) => {\n                return (\n                  <img\n                    style={{ cursor: 'point' }}\n                    key={item.id}\n                    // className={selectDirName === item ? 'active' : ''}\n                    src={item.url}\n                  />\n                );\n              })}\n            </Scrollbars>\n          </div>\n          <div className=\"PicModal__Footer\" >\n            <TextButton\n              label={\"返回\"}\n              onClick={closeModal}\n              externalClassName={\"back\"}\n            />\n          </div>\n        </Modal>\n      )}\n      {isUploading ?\n        <div className=\"Blocker\">\n          <div>\n            <ReactLoading type={'balls'} color={'#fff'} width={70} />\n            <p>上传中...</p>\n            <p>Tips: 上传大量图片需要等待更长时间.</p>\n          </div>\n        </div>\n        : null}\n    </>\n\n  );\n};\n\nconst mapDispatchToProps = {\n  updateActiveLabelNameIndex,\n  updateLabelNamesList,\n  updateProjectType,\n  updateActiveImageIndex,\n  updateImageData,\n  updateFirstLabelCreatedFlag,\n  addImageData,\n  updateActivePopupType\n};\n\nconst mapStateToProps = (state: AppState) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ExitProjectPopup);\n","import React, { useState } from 'react';\nimport './MainView.scss';\nimport { TextButton } from '../Common/TextButton/TextButton';\nimport classNames from 'classnames';\nimport { ISize } from '../../interfaces/ISize';\nimport { ImageButton } from '../Common/ImageButton/ImageButton';\nimport { ISocialMedia, SocialMediaData } from '../../data/info/SocialMediaData';\nimport { EditorFeatureData, IEditorFeature } from '../../data/info/EditorFeatureData';\nimport { Tooltip } from '@material-ui/core';\nimport Fade from '@material-ui/core/Fade';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ImagesDropZone from './ImagesDropZone/ImagesDropZone';\nimport 'react-notifications-component/dist/theme.css';\nimport LoginPopup from '../PopupView/LoginPopup/LoginPopup';\n\nconst MainView: React.FC = () => {\n  const [projectInProgress, setProjectInProgress] = useState(false);\n  const [projectCanceled, setProjectCanceled] = useState(false);\n\n  const startProject = () => {\n    setProjectInProgress(true);\n  };\n  const jumpToRegular = () => {\n    window.location.href = 'https://uglyspoon.github.io/regular/';\n  };\n\n  const endProject = () => {\n    setProjectInProgress(false);\n    setProjectCanceled(true);\n  };\n\n  const getClassName = () => {\n    return classNames('MainView', {\n      InProgress: projectInProgress,\n      Canceled: !projectInProgress && projectCanceled,\n    });\n  };\n\n  const DarkTooltip = withStyles(theme => ({\n    tooltip: {\n      backgroundColor: '#171717',\n      color: '#ffffff',\n      boxShadow: theme.shadows[1],\n      fontSize: 11,\n      maxWidth: 120,\n    },\n  }))(Tooltip);\n\n  const getSocialMediaButtons = (size: ISize) => {\n    return SocialMediaData.map((data: ISocialMedia, index: number) => {\n      return (\n        <DarkTooltip\n          key={index}\n          disableFocusListener\n          title={data.tooltipMessage}\n          TransitionComponent={Fade}\n          TransitionProps={{ timeout: 600 }}\n          placement=\"left\"\n        >\n          <div>\n            <ImageButton size={size} image={data.imageSrc} imageAlt={data.imageAlt} href={data.href} />\n          </div>\n        </DarkTooltip>\n      );\n    });\n  };\n\n  const getEditorFeatureTiles = () => {\n    return EditorFeatureData.map((data: IEditorFeature) => {\n      return (\n        <div className=\"EditorFeaturesTiles\" key={data.displayText}>\n          <div className=\"EditorFeaturesTilesWrapper\">\n            <img draggable={false} alt={data.imageAlt} src={data.imageSrc} />\n            <div className=\"EditorFeatureLabel\">{data.displayText}</div>\n          </div>\n        </div>\n      );\n    });\n  };\n\n  return (\n    <div className={getClassName()}>\n      <div className=\"Slider\" id=\"lower\">\n        <div className=\"TriangleVertical\">\n          <div className=\"TriangleVerticalContent\" />\n        </div>\n      </div>\n\n      <div className=\"Slider\" id=\"upper\">\n        <div className=\"TriangleVertical\">\n          <div className=\"TriangleVerticalContent\" />\n        </div>\n      </div>\n\n      <div className=\"LeftColumn\">\n        <div className={'LogoWrapper'}>\n          {/* <img draggable={false} alt={\"main-logo\"} src={\"img/main-image-color.png\"} /> */}\n          {/* <div /> */}\n        </div>\n        <div className=\"EditorFeaturesWrapper\">{getEditorFeatureTiles()}</div>\n        <div className=\"TriangleVertical\">\n          <div className=\"TriangleVerticalContent\" />\n        </div>\n        {projectInProgress && <TextButton label={'返回'} onClick={endProject} />}\n      </div>\n      <div className=\"RightColumn\">\n        <div />\n        {/* <ImagesDropZone /> */}\n        {projectInProgress && <LoginPopup />}\n        {/* <div className=\"SocialMediaWrapper\">{getSocialMediaButtons({ width: 30, height: 30 })}</div> */}\n        <div className=\"SocialMediaWrapper\"></div>\n        <TextButton label={'常规标记'} onClick={jumpToRegular} />\n        {!projectInProgress && <TextButton label={'关节标记'} onClick={startProject} />}\n      </div>\n    </div>\n  );\n};\n\nexport default MainView;\n","import React, { useState } from \"react\";\nimport \"./LoadLabelNamesPopup.scss\";\nimport { AppState } from \"../../../store\";\nimport { connect } from \"react-redux\";\nimport {\n  updateActiveLabelNameIndex,\n  updateLabelNamesList,\n} from \"../../../store/editor/actionCreators\";\nimport { GenericYesNoPopup } from \"../GenericYesNoPopup/GenericYesNoPopup\";\nimport { PopupWindowType } from \"../../../data/enums/PopupWindowType\";\nimport { updateActivePopupType } from \"../../../store/general/actionCreators\";\nimport { useDropzone } from \"react-dropzone\";\nimport { FileUtil } from \"../../../utils/FileUtil\";\nimport { AcceptedFileType } from \"../../../data/enums/AcceptedFileType\";\nimport { PopupActions } from \"../../../logic/actions/PopupActions\";\n\ninterface IProps {\n  updateActiveLabelNameIndex: (activeLabelIndex: number) => any;\n  updateLabelNamesList: (labelNames: string[]) => any;\n  updateActivePopupType: (activePopupType: PopupWindowType) => any;\n}\n\nconst LoadLabelNamesPopup: React.FC<IProps> = ({\n  updateActiveLabelNameIndex,\n  updateLabelNamesList,\n  updateActivePopupType,\n}) => {\n  const [labelsList, setLabelsList] = useState([]);\n  const [invalidFileLoadedStatus, setInvalidFileLoadedStatus] = useState(false);\n\n  const { acceptedFiles, getRootProps, getInputProps } = useDropzone({\n    accept: AcceptedFileType.TEXT,\n    multiple: false,\n    onDrop: acceptedFiles => {\n      if (acceptedFiles.length === 1) {\n        FileUtil.loadLabelsList(acceptedFiles[0], onSuccess, onFailure);\n      }\n    },\n  });\n\n  const onSuccess = (labelsList: string[]) => {\n    setLabelsList(labelsList);\n    setInvalidFileLoadedStatus(false);\n  };\n\n  const onFailure = () => {\n    setInvalidFileLoadedStatus(true);\n  };\n\n  const onAccept = () => {\n    if (labelsList.length > 0) {\n      updateActiveLabelNameIndex(0);\n      updateLabelNamesList(labelsList);\n      PopupActions.close();\n    }\n  };\n\n  const onReject = () => {\n    updateActivePopupType(PopupWindowType.INSERT_LABEL_NAMES);\n  };\n\n  const getDropZoneContent = () => {\n    if (invalidFileLoadedStatus)\n      return (\n        <>\n          <input {...getInputProps()} />\n          <img draggable={false} alt={\"upload\"} src={\"img/box-opened.png\"} />\n          <p className=\"extraBold\">导入文件未成功！</p>\n          <p className=\"extraBold\">请再试一次</p>\n        </>\n      );\n    else if (acceptedFiles.length === 0)\n      return (\n        <>\n          <input {...getInputProps()} />\n          <img draggable={false} alt={\"upload\"} src={\"img/box-opened.png\"} />\n          <p className=\"extraBold\">拖拽文件到这里</p>\n          <p>或</p>\n          <p className=\"extraBold\">点击此处选择导入</p>\n        </>\n      );\n    else if (labelsList.length === 1)\n      return (\n        <>\n          <img draggable={false} alt={\"uploaded\"} src={\"img/box-closed.png\"} />\n          <p className=\"extraBold\">已导入了一个标签</p>\n        </>\n      );\n    else\n      return (\n        <>\n          <img draggable={false} alt={\"uploaded\"} src={\"img/box-closed.png\"} />\n          <p className=\"extraBold\"> 已导入了{labelsList.length}个标签</p>\n        </>\n      );\n  };\n\n  const renderContent = () => {\n    return (\n      <div className=\"LoadLabelsPopupContent\">\n        <div className=\"Message\">\n          选择一个你准备好的.txt格式的文本文件，注意每个标签应该另起一行\n        </div>\n        <div {...getRootProps({ className: \"DropZone\" })}>{getDropZoneContent()}</div>\n      </div>\n    );\n  };\n\n  return (\n    <GenericYesNoPopup\n      title={\"导入标签列表文件\"}\n      renderContent={renderContent}\n      acceptLabel={\"开始\"}\n      onAccept={onAccept}\n      disableAcceptButton={labelsList.length === 0}\n      rejectLabel={\"返回\"}\n      onReject={onReject}\n    />\n  );\n};\n\nconst mapDispatchToProps = {\n  updateActiveLabelNameIndex,\n  updateLabelNamesList,\n  updateActivePopupType,\n};\n\nconst mapStateToProps = (state: AppState) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoadLabelNamesPopup);\n","export enum ExportFormatType {\n  YOLO = \"YOLO\",\n  COCO = \"COCO\",\n  CSV = \"CSV\",\n  VOC = \"VOC\",\n  VGG_JSON = \"VGG_JSON\",\n  JSON = \"JSON\",\n}\n","export class XMLSanitizerUtil {\n    public static sanitize(input: string): string {\n        return input\n            .replace('<', '&lt;')\n            .replace('>', '&gt;')\n            .replace('&', '&amp;')\n            .replace(\"'\", '&#39;')\n            .replace(\"/\", '&#x2F;')\n    }\n}","import {EditorSelector} from \"../store/selectors/EditorSelector\";\nimport moment from 'moment';\n\nexport class ExporterUtil {\n    public static getExportFileName(): string {\n        const projectName: string = EditorSelector.getProjectName();\n        const date: string = moment().format('YYYYMMDDhhmmss');\n        return `labels_${projectName}_${date}`\n    }\n}","import { ExportFormatType } from \"../../data/enums/ExportFormatType\";\nimport { ImageData, LabelRect } from \"../../store/editor/types\";\nimport { ImageRepository } from \"../imageRepository/ImageRepository\";\nimport JSZip from \"jszip\";\nimport { saveAs } from \"file-saver\";\nimport { EditorSelector } from \"../../store/selectors/EditorSelector\";\nimport { XMLSanitizerUtil } from \"../../utils/XMLSanitizerUtil\";\nimport { ExporterUtil } from \"../../utils/ExporterUtil\";\n\nexport class RectLabelsExporter {\n  public static export(exportFormatType: ExportFormatType): void {\n    switch (exportFormatType) {\n      case ExportFormatType.YOLO:\n        RectLabelsExporter.exportAsYOLO();\n        break;\n      case ExportFormatType.VOC:\n        RectLabelsExporter.exportAsVOC();\n        break;\n      case ExportFormatType.CSV:\n        RectLabelsExporter.exportAsCSV();\n        break;\n      default:\n        return;\n    }\n  }\n\n  private static exportAsYOLO(): void {\n    let zip = new JSZip();\n    EditorSelector.getImagesData().forEach((imageData: ImageData) => {\n      const fileContent: string = RectLabelsExporter.wrapRectLabelsIntoYOLO(imageData);\n      if (fileContent) {\n        const fileName: string = imageData.fileData.name.replace(/\\.[^/.]+$/, \".txt\");\n        try {\n          zip.file(fileName, fileContent);\n        } catch (error) {\n          // TODO\n          throw new Error(error);\n        }\n      }\n    });\n\n    try {\n      zip.generateAsync({ type: \"blob\" }).then(function(content) {\n        saveAs(content, `${ExporterUtil.getExportFileName()}.zip`);\n      });\n    } catch (error) {\n      // TODO\n      throw new Error(error);\n    }\n  }\n\n  private static wrapRectLabelsIntoYOLO(imageData: ImageData): string {\n    if (imageData.groupList[imageData.activeGroupIndex].labelRects.length === 0 || !imageData.loadStatus) return null;\n\n    const image: HTMLImageElement = ImageRepository.getById(imageData.id);\n    const labelRectsString: string[] = imageData.groupList[imageData.activeGroupIndex].labelRects.map(\n      (labelRect: LabelRect) => {\n        const labelFields = [\n          labelRect.labelIndex + \"\",\n          ((labelRect.rect.x + labelRect.rect.width / 2) / image.width).toFixed(6) + \"\",\n          ((labelRect.rect.y + labelRect.rect.height / 2) / image.height).toFixed(6) + \"\",\n          (labelRect.rect.width / image.width).toFixed(6) + \"\",\n          (labelRect.rect.height / image.height).toFixed(6) + \"\",\n        ];\n        return labelFields.join(\" \");\n      }\n    );\n    return labelRectsString.join(\"\\n\");\n  }\n\n  private static exportAsVOC(): void {\n    let zip = new JSZip();\n    EditorSelector.getImagesData().forEach((imageData: ImageData) => {\n      const fileContent: string = RectLabelsExporter.wrapImageIntoVOC(imageData);\n      if (fileContent) {\n        const fileName: string = imageData.fileData.name.replace(/\\.[^/.]+$/, \".xml\");\n        try {\n          zip.file(fileName, fileContent);\n        } catch (error) {\n          // TODO\n          throw new Error(error);\n        }\n      }\n    });\n\n    try {\n      zip.generateAsync({ type: \"blob\" }).then(function(content) {\n        saveAs(content, `${ExporterUtil.getExportFileName()}.zip`);\n      });\n    } catch (error) {\n      // TODO\n      throw new Error(error);\n    }\n  }\n\n  private static wrapRectLabelsIntoVOC(imageData: ImageData): string {\n    if (imageData.groupList[imageData.activeGroupIndex].labelRects.length === 0 || !imageData.loadStatus) return null;\n\n    const labelNamesList: string[] = EditorSelector.getLabelNames();\n    const labelRectsString: string[] = imageData.groupList[imageData.activeGroupIndex].labelRects.map(\n      (labelRect: LabelRect) => {\n        const labelFields = [\n          `\\t<object>`,\n          `\\t\\t<name>${labelNamesList[labelRect.labelIndex]}</name>`,\n          `\\t\\t<pose>Unspecified</pose>`,\n          `\\t\\t<truncated>Unspecified</truncated>`,\n          `\\t\\t<difficult>Unspecified</difficult>`,\n          `\\t\\t<bndbox>`,\n          `\\t\\t\\t<xmin>${Math.round(labelRect.rect.x)}</xmin>`,\n          `\\t\\t\\t<ymin>${Math.round(labelRect.rect.y)}</ymin>`,\n          `\\t\\t\\t<xmax>${Math.round(labelRect.rect.x + labelRect.rect.width)}</xmax>`,\n          `\\t\\t\\t<ymax>${Math.round(labelRect.rect.y + labelRect.rect.height)}</ymax>`,\n          `\\t\\t</bndbox>`,\n          `\\t</object>`,\n        ];\n        return labelFields.join(\"\\n\");\n      }\n    );\n    return labelRectsString.join(\"\\n\");\n  }\n\n  private static wrapImageIntoVOC(imageData: ImageData): string {\n    const labels: string = RectLabelsExporter.wrapRectLabelsIntoVOC(imageData);\n    const projectName: string = XMLSanitizerUtil.sanitize(EditorSelector.getProjectName());\n\n    if (labels) {\n      const image: HTMLImageElement = ImageRepository.getById(imageData.id);\n      return [\n        `<annotation>`,\n        `\\t<folder>${projectName}</folder>`,\n        `\\t<filename>${imageData.fileData.name}</filename>`,\n        `\\t<path>/${projectName}/${imageData.fileData.name}</path>`,\n        `\\t<source>`,\n        `\\t\\t<database>Unspecified</database>`,\n        `\\t</source>`,\n        `\\t<size>`,\n        `\\t\\t<width>${image.width}</width>`,\n        `\\t\\t<height>${image.height}</height>`,\n        `\\t\\t<depth>3</depth>`,\n        `\\t</size>`,\n        labels,\n        `</annotation>`,\n      ].join(\"\\n\");\n    }\n    return null;\n  }\n\n  private static exportAsCSV(): void {\n    const content: string = EditorSelector.getImagesData()\n      .map((imageData: ImageData) => {\n        return RectLabelsExporter.wrapRectLabelsIntoCSV(imageData);\n      })\n      .filter((imageLabelData: string) => {\n        return !!imageLabelData;\n      })\n      .join(\"\\n\");\n\n    const blob = new Blob([content], { type: \"text/plain;charset=utf-8\" });\n    try {\n      saveAs(blob, `${ExporterUtil.getExportFileName()}.csv`);\n    } catch (error) {\n      // TODO\n      throw new Error(error);\n    }\n  }\n\n  private static wrapRectLabelsIntoCSV(imageData: ImageData): string {\n    if (imageData.groupList[imageData.activeGroupIndex].labelRects.length === 0 || !imageData.loadStatus) return null;\n\n    const image: HTMLImageElement = ImageRepository.getById(imageData.id);\n    const labelNamesList: string[] = EditorSelector.getLabelNames();\n    const labelRectsString: string[] = imageData.groupList[imageData.activeGroupIndex].labelRects.map(\n      (labelRect: LabelRect) => {\n        const labelFields = [\n          labelNamesList[labelRect.labelIndex],\n          Math.round(labelRect.rect.x) + \"\",\n          Math.round(labelRect.rect.y) + \"\",\n          Math.round(labelRect.rect.width) + \"\",\n          Math.round(labelRect.rect.height) + \"\",\n          imageData.fileData.name,\n          image.width + \"\",\n          image.height + \"\",\n        ];\n        return labelFields.join(\",\");\n      }\n    );\n    return labelRectsString.join(\"\\n\");\n  }\n}\n","import { IExportFormat } from \"../../interfaces/IExportFormat\";\nimport { ExportFormatType } from \"../enums/ExportFormatType\";\n\nexport const AllExportFormatData: IExportFormat[] = [\n  {\n    type: ExportFormatType.JSON,\n    label: \"JSON格式文件\",\n  },\n];\n","import { ExportFormatType } from \"../enums/ExportFormatType\";\nimport { IExportFormat } from \"../../interfaces/IExportFormat\";\n\nexport const PointExportFormatData: IExportFormat[] = [\n  {\n    type: ExportFormatType.CSV,\n    label: \"单一的CSV文件\",\n  },\n];\n","import { ExportFormatType } from \"../../data/enums/ExportFormatType\";\nimport { ImageData, LabelPoint } from \"../../store/editor/types\";\nimport { saveAs } from \"file-saver\";\nimport { ImageRepository } from \"../imageRepository/ImageRepository\";\nimport { EditorSelector } from \"../../store/selectors/EditorSelector\";\nimport { ExporterUtil } from \"../../utils/ExporterUtil\";\n\nexport class PointLabelsExporter {\n  public static export(exportFormatType: ExportFormatType): void {\n    switch (exportFormatType) {\n      case ExportFormatType.CSV:\n        PointLabelsExporter.exportAsCSV();\n        break;\n      default:\n        return;\n    }\n  }\n\n  private static exportAsCSV(): void {\n    const content: string = EditorSelector.getImagesData()\n      .map((imageData: ImageData) => {\n        return PointLabelsExporter.wrapRectLabelsIntoCSV(imageData);\n      })\n      .filter((imageLabelData: string) => {\n        return !!imageLabelData;\n      })\n      .join(\"\\n\");\n\n    const blob = new Blob([content], { type: \"text/plain;charset=utf-8\" });\n    try {\n      saveAs(blob, `${ExporterUtil.getExportFileName()}.csv`);\n    } catch (error) {\n      // TODO\n      throw new Error(error);\n    }\n  }\n\n  private static wrapRectLabelsIntoCSV(imageData: ImageData): string {\n    if (imageData.groupList[imageData.activeGroupIndex].labelPoints.length === 0 || !imageData.loadStatus) return null;\n\n    const image: HTMLImageElement = ImageRepository.getById(imageData.id);\n    const labelNamesList: string[] = EditorSelector.getLabelNames();\n    const labelRectsString: string[] = imageData.groupList[imageData.activeGroupIndex].labelPoints.map(\n      (labelPoint: LabelPoint) => {\n        const labelFields = [\n          labelNamesList[labelPoint.labelIndex],\n          Math.round(labelPoint.point.x) + \"\",\n          Math.round(labelPoint.point.y) + \"\",\n          imageData.fileData.name,\n          image.width + \"\",\n          image.height + \"\",\n        ];\n        return labelFields.join(\",\");\n      }\n    );\n    return labelRectsString.join(\"\\n\");\n  }\n}\n","import { ExportFormatType } from \"../../data/enums/ExportFormatType\";\nimport { IPoint } from \"../../interfaces/IPoint\";\nimport { VGGFileData, VGGObject, VGGRegionsData } from \"../../data/VGG/JSON\";\nimport { ImageData, LabelPolygon, GroupType, LabelPoint } from \"../../store/editor/types\";\nimport { EditorSelector } from \"../../store/selectors/EditorSelector\";\nimport { saveAs } from \"file-saver\";\nimport { ExporterUtil } from \"../../utils/ExporterUtil\";\n\nexport class AllLabelsExporter {\n  public static export(exportFormatType: ExportFormatType): void {\n    switch (exportFormatType) {\n      case ExportFormatType.JSON:\n        AllLabelsExporter.exportAsJson();\n        break;\n      default:\n        return;\n    }\n  }\n\n  private static exportAsJson(): void {\n    const imagesData: ImageData[] = EditorSelector.getImagesData();\n    const labelNames: string[] = EditorSelector.getLabelNames();\n    const content: string = JSON.stringify(AllLabelsExporter.mapImagesDataToVGGObject(imagesData, labelNames));\n    const blob = new Blob([content], { type: \"text/plain;charset=utf-8\" });\n    try {\n      saveAs(blob, `${ExporterUtil.getExportFileName()}.json`);\n    } catch (error) {\n      // TODO\n      throw new Error(error);\n    }\n  }\n\n  private static mapImagesDataToVGGObject(imagesData: ImageData[], labelNames: string[]): VGGObject {\n    return imagesData.reduce((data: VGGObject, image: ImageData) => {\n      const fileData: VGGFileData = AllLabelsExporter.mapImageDataToVGGFileData(image, labelNames);\n      if (!!fileData) {\n        data[image.fileData.name] = fileData;\n      }\n      return data;\n    }, {});\n  }\n\n  private static mapImageDataToVGGFileData(imageData: ImageData, labelNames: string[]): VGGFileData {\n    let regionsDataArray: VGGRegionsData[][] = AllLabelsExporter.mapImageDataToVGG(imageData, labelNames);\n    if (!regionsDataArray) return null;\n\n    const orderArray: string[] = labelNames;\n    const tempArray = [];\n    regionsDataArray.forEach(item => {\n      item = Object.values(item);\n      orderArray.forEach((ele, idx) => {\n        if (!item.some(r => r.label === ele)) {\n          item.push({\n            label: ele,\n            type: \"point\",\n            is_checked: null,\n            all_points: null,\n          });\n        }\n      });\n      const temp = item.sort((a, b) => {\n        return orderArray.indexOf(a.label as any) - orderArray.indexOf(b.label as any);\n      });\n      tempArray.push(temp);\n    });\n\n    const peopleDataArray = tempArray.map((personData, idx) => {\n      let result = [];\n      personData.forEach((item, idx) => {\n        if (item.all_points) {\n          result.push(item.all_points[0], item.all_points[1], item.is_checked);\n        } else {\n          result.push(-1, -1, -1);\n        }\n      });\n      return {\n        pose_keypoints_2d: result,\n      };\n    });\n    return {\n      // size: imageData.fileData.size,\n      label_name: labelNames,\n      width: (imageData.fileData as any).width,\n      height: (imageData.fileData as any).height,\n      // image_name: imageData.fileData.name,\n      people: peopleDataArray,\n    };\n  }\n\n  public static mapImageDataToVGG(imageData: ImageData, labelNames: string[]): VGGRegionsData[][] {\n    if (\n      !imageData.loadStatus ||\n      !imageData.groupList[imageData.activeGroupIndex].labelPoints ||\n      !imageData.groupList[imageData.activeGroupIndex].labelPoints.length ||\n      !labelNames ||\n      !labelNames.length\n    )\n      return null;\n\n    // const validPolygonLabelsArray: Array<LabelPolygon[]> = AllLabelsExporter.getValidPolygonLabelsArray(imageData);\n\n    // let polygonsData = [];\n    // if (validPolygonLabelsArray.length) {\n    //   polygonsData = validPolygonLabelsArray.map((validLabels: LabelPolygon[]) => {\n    //     return validLabels.reduce((data: VGGRegionsData, label: LabelPolygon, index: number) => {\n    //       data[`${index}`] = {\n    //         all_points: AllLabelsExporter.mapPolygonToVGG(label.vertices),\n    //         label: labelNames[label.labelIndex],\n    //         is_checked: label.checked ? \"1\" : \"0\",\n    //         type: \"polygon\",\n    //       };\n    //       return data;\n    //     }, {});\n    //   });\n    // }\n\n    const validPointLabelsArray: Array<LabelPoint[]> = AllLabelsExporter.getValidPointLabelsArray(imageData);\n    let pointsData = [];\n    if (validPointLabelsArray.length) {\n      pointsData = validPointLabelsArray.map((validLabels: LabelPoint[]) => {\n        return validLabels.reduce((data: VGGRegionsData, label: LabelPoint, index: number) => {\n          data[`${index}`] = {\n            all_points: [label.point.x, label.point.y],\n            label: labelNames[label.labelIndex],\n            is_checked: label.checked ? 1 : 0,\n            type: \"point\",\n          };\n          return data;\n        }, {});\n      });\n    }\n    return pointsData;\n  }\n\n  public static getValidPolygonLabelsArray(imageData: ImageData): LabelPolygon[][] {\n    return imageData.groupList.map((group: GroupType) => {\n      return group.labelPolygons.filter((label: LabelPolygon) => label.labelIndex !== null && !!label.vertices.length);\n    });\n  }\n\n  public static getValidPointLabelsArray(imageData: ImageData): LabelPoint[][] {\n    return imageData.groupList.map((group: GroupType) => {\n      return group.labelPoints.filter((label: LabelPoint) => label.labelIndex !== null && !!label.point);\n    });\n  }\n\n  public static getValidPolygonLabels(imageData: ImageData): LabelPolygon[] {\n    return imageData.groupList[imageData.activeGroupIndex].labelPolygons.filter(\n      (label: LabelPolygon) => label.labelIndex !== null && !!label.vertices.length\n    );\n  }\n\n  public static mapPolygonToVGG(path: IPoint[]): string[] {\n    if (!path || !path.length) return null;\n    const all_points: string[] = path\n      .map((point: IPoint) => `(${point.x}, ${point.y})`)\n      .concat(`(${path[0].x}, ${path[0].y})`);\n    return all_points;\n  }\n}\n","import { IExportFormat } from \"../../interfaces/IExportFormat\";\nimport { ExportFormatType } from \"../enums/ExportFormatType\";\n\nexport const PolygonExportFormatData: IExportFormat[] = [\n  {\n    type: ExportFormatType.VGG_JSON,\n    label: \"VGG JSON格式文件\",\n  },\n];\n","import { ExportFormatType } from \"../../data/enums/ExportFormatType\";\nimport { IPoint } from \"../../interfaces/IPoint\";\nimport { VGGFileData, VGGObject, VGGPolygon, VGGRegionsData } from \"../../data/VGG/IVGG\";\nimport { ImageData, LabelPolygon } from \"../../store/editor/types\";\nimport { EditorSelector } from \"../../store/selectors/EditorSelector\";\nimport { saveAs } from \"file-saver\";\nimport { ExporterUtil } from \"../../utils/ExporterUtil\";\n\nexport class PolygonLabelsExporter {\n  public static export(exportFormatType: ExportFormatType): void {\n    switch (exportFormatType) {\n      case ExportFormatType.VGG_JSON:\n        PolygonLabelsExporter.exportAsVGGJson();\n        break;\n      default:\n        return;\n    }\n  }\n\n  private static exportAsVGGJson(): void {\n    const imagesData: ImageData[] = EditorSelector.getImagesData();\n    const labelNames: string[] = EditorSelector.getLabelNames();\n    const content: string = JSON.stringify(PolygonLabelsExporter.mapImagesDataToVGGObject(imagesData, labelNames));\n    const blob = new Blob([content], { type: \"text/plain;charset=utf-8\" });\n    try {\n      saveAs(blob, `${ExporterUtil.getExportFileName()}.json`);\n    } catch (error) {\n      // TODO\n      throw new Error(error);\n    }\n  }\n\n  private static mapImagesDataToVGGObject(imagesData: ImageData[], labelNames: string[]): VGGObject {\n    return imagesData.reduce((data: VGGObject, image: ImageData) => {\n      const fileData: VGGFileData = PolygonLabelsExporter.mapImageDataToVGGFileData(image, labelNames);\n      if (!!fileData) {\n        data[image.fileData.name] = fileData;\n      }\n      return data;\n    }, {});\n  }\n\n  private static mapImageDataToVGGFileData(imageData: ImageData, labelNames: string[]): VGGFileData {\n    const regionsData: VGGRegionsData = PolygonLabelsExporter.mapImageDataToVGG(imageData, labelNames);\n    if (!regionsData) return null;\n    return {\n      fileref: \"\",\n      size: imageData.fileData.size,\n      filename: imageData.fileData.name,\n      base64_img_data: \"\",\n      file_attributes: {},\n      regions: regionsData,\n    };\n  }\n\n  public static mapImageDataToVGG(imageData: ImageData, labelNames: string[]): VGGRegionsData {\n    if (\n      !imageData.loadStatus ||\n      !imageData.groupList[imageData.activeGroupIndex].labelPolygons ||\n      !imageData.groupList[imageData.activeGroupIndex].labelPolygons.length ||\n      !labelNames ||\n      !labelNames.length\n    )\n      return null;\n\n    const validLabels: LabelPolygon[] = PolygonLabelsExporter.getValidPolygonLabels(imageData);\n\n    if (!validLabels.length) return null;\n\n    return validLabels.reduce((data: VGGRegionsData, label: LabelPolygon, index: number) => {\n      data[`${index}`] = {\n        shape_attributes: PolygonLabelsExporter.mapPolygonToVGG(label.vertices),\n        region_attributes: {\n          label: labelNames[label.labelIndex],\n        },\n      };\n      return data;\n    }, {});\n  }\n\n  public static getValidPolygonLabels(imageData: ImageData): LabelPolygon[] {\n    return imageData.groupList[imageData.activeGroupIndex].labelPolygons.filter(\n      (label: LabelPolygon) => label.labelIndex !== null && !!label.vertices.length\n    );\n  }\n\n  public static mapPolygonToVGG(path: IPoint[]): VGGPolygon {\n    if (!path || !path.length) return null;\n\n    const all_points_x: number[] = path.map((point: IPoint) => point.x).concat(path[0].x);\n    const all_points_y: number[] = path.map((point: IPoint) => point.y).concat(path[0].y);\n    return {\n      name: \"polygon\",\n      all_points_x,\n      all_points_y,\n    };\n  }\n}\n","import { ExportFormatType } from \"../enums/ExportFormatType\";\nimport { IExportFormat } from \"../../interfaces/IExportFormat\";\n\nexport const RectExportFormatData: IExportFormat[] = [\n  {\n    type: ExportFormatType.YOLO,\n    label: \"YOLO 格式的zip包\",\n  },\n  {\n    type: ExportFormatType.VOC,\n    label: \"XML 格式的zip包\",\n  },\n  {\n    type: ExportFormatType.CSV,\n    label: \"单一的CSV文件\",\n  },\n];\n","import React, { useState } from \"react\";\nimport \"./ExportLabelPopup.scss\";\nimport { GenericYesNoPopup } from \"../GenericYesNoPopup/GenericYesNoPopup\";\nimport { AppState } from \"../../../store\";\nimport { connect } from \"react-redux\";\nimport { ExportFormatType } from \"../../../data/enums/ExportFormatType\";\nimport { RectLabelsExporter } from \"../../../logic/export/RectLabelsExporter\";\nimport { LabelType } from \"../../../data/enums/LabelType\";\nimport { ImageButton } from \"../../Common/ImageButton/ImageButton\";\nimport { IExportFormat } from \"../../../interfaces/IExportFormat\";\nimport { AllExportFormatData } from \"../../../data/export/AllExportFormatData\";\nimport { PointExportFormatData } from \"../../../data/export/PointExportFormatData\";\nimport { PointLabelsExporter } from \"../../../logic/export/PointLabelsExport\";\nimport { AllLabelsExporter } from \"../../../logic/export/AllLabelsExport\";\nimport { PolygonExportFormatData } from \"../../../data/export/PolygonExportFormatData\";\nimport { PolygonLabelsExporter } from \"../../../logic/export/PolygonLabelsExporter\";\nimport { PopupActions } from \"../../../logic/actions/PopupActions\";\nimport { RectExportFormatData } from \"../../../data/export/RectExportFormatData\";\n\nconst ExportLabelPopup: React.FC = () => {\n  const [exportLabelType, setExportLabelType] = useState(LabelType.ALL);\n  const [exportFormatType, setExportFormatType] = useState(null);\n\n  const onAccept = () => {\n    if (!exportFormatType) return;\n    switch (exportLabelType) {\n      case LabelType.RECTANGLE:\n        RectLabelsExporter.export(exportFormatType);\n        break;\n      case LabelType.POINT:\n        PointLabelsExporter.export(exportFormatType);\n        break;\n      case LabelType.POLYGON:\n        PolygonLabelsExporter.export(exportFormatType);\n        break;\n      case LabelType.ALL:\n        AllLabelsExporter.export(exportFormatType);\n        break;\n    }\n    PopupActions.close();\n  };\n\n  const onReject = () => {\n    PopupActions.close();\n  };\n\n  const onSelect = (exportFormatType: ExportFormatType) => {\n    setExportFormatType(exportFormatType);\n  };\n\n  const getOptions = (exportFormatData: IExportFormat[]) => {\n    return exportFormatData.map((entry: IExportFormat) => {\n      return (\n        <div className=\"OptionsItem\" onClick={() => onSelect(entry.type)} key={entry.type}>\n          {entry.type === exportFormatType ? (\n            <img draggable={false} src={\"ico/checkbox-checked.png\"} alt={\"checked\"} />\n          ) : (\n            <img draggable={false} src={\"ico/checkbox-unchecked.png\"} alt={\"unchecked\"} />\n          )}\n          {entry.label}\n        </div>\n      );\n    });\n  };\n\n  const renderContent = () => {\n    return (\n      <div className=\"ExportLabelPopupContent\">\n        <div className=\"LeftContainer\">\n          <ImageButton\n            image={\"ico/all.png\"}\n            imageAlt={\"all\"}\n            size={{ width: 40, height: 40 }}\n            padding={20}\n            onClick={() => {\n              setExportLabelType(LabelType.ALL);\n              setExportFormatType(null);\n            }}\n            isActive={exportLabelType === LabelType.ALL}\n          />\n          {/* <ImageButton\n            image={\"ico/rectangle.png\"}\n            imageAlt={\"rectangle\"}\n            size={{ width: 40, height: 40 }}\n            padding={20}\n            onClick={() => {\n              setExportLabelType(LabelType.RECTANGLE);\n              setExportFormatType(null);\n            }}\n            isActive={exportLabelType === LabelType.RECTANGLE}\n          />\n          <ImageButton\n            image={\"ico/point.png\"}\n            imageAlt={\"point\"}\n            size={{ width: 40, height: 40 }}\n            padding={20}\n            onClick={() => {\n              setExportLabelType(LabelType.POINT);\n              setExportFormatType(null);\n            }}\n            isActive={exportLabelType === LabelType.POINT}\n          />\n          <ImageButton\n            image={\"ico/polygon.png\"}\n            imageAlt={\"polygon\"}\n            size={{ width: 40, height: 40 }}\n            padding={20}\n            onClick={() => {\n              setExportLabelType(LabelType.POLYGON);\n              setExportFormatType(null);\n            }}\n            isActive={exportLabelType === LabelType.POLYGON}\n          /> */}\n        </div>\n        <div className=\"RightContainer\">\n          <div className=\"Message\">选择标注类型和导出文件格式</div>\n          <div className=\"Options\">\n            {exportLabelType === LabelType.ALL && getOptions(AllExportFormatData)}\n            {exportLabelType === LabelType.RECTANGLE && getOptions(RectExportFormatData)}\n            {exportLabelType === LabelType.POINT && getOptions(PointExportFormatData)}\n            {exportLabelType === LabelType.POLYGON && getOptions(PolygonExportFormatData)}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <GenericYesNoPopup\n      title={\"导出标注\"}\n      renderContent={renderContent}\n      acceptLabel={\"导出\"}\n      onAccept={onAccept}\n      rejectLabel={\"取消\"}\n      onReject={onReject}\n    />\n  );\n};\n\nconst mapDispatchToProps = {};\n\nconst mapStateToProps = (state: AppState) => ({\n  imagesData: state.editor.imagesData,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ExportLabelPopup);\n","import React, { useState } from \"react\";\nimport \"./InsertLabelNamesPopup.scss\";\nimport { GenericYesNoPopup } from \"../GenericYesNoPopup/GenericYesNoPopup\";\nimport { PopupWindowType } from \"../../../data/enums/PopupWindowType\";\nimport { updateActiveLabelNameIndex, updateLabelNamesList } from \"../../../store/editor/actionCreators\";\nimport { updateActivePopupType } from \"../../../store/general/actionCreators\";\nimport { AppState } from \"../../../store\";\nimport { connect } from \"react-redux\";\nimport Scrollbars from \"react-custom-scrollbars\";\nimport TextInput from \"../../Common/TextInput/TextInput\";\nimport { ImageButton } from \"../../Common/ImageButton/ImageButton\";\nimport uuidv1 from \"uuid/v1\";\nimport { PopupActions } from \"../../../logic/actions/PopupActions\";\n\ninterface IProps {\n  updateActiveLabelNameIndex: (activeLabelIndex: number) => any;\n  updateLabelNamesList: (labelNames: string[]) => any;\n  updateActivePopupType: (activePopupType: PopupWindowType) => any;\n}\n\nconst InsertLabelNamesPopup: React.FC<IProps> = ({\n  updateActiveLabelNameIndex,\n  updateLabelNamesList,\n  updateActivePopupType,\n}) => {\n  const [labelNames, setLabelNames] = useState({});\n\n  const addHandle = () => {\n    const newLabelNames = { ...labelNames, [uuidv1()]: \"\" };\n    setLabelNames(newLabelNames);\n  };\n\n  const deleteHandle = (key: string) => {\n    const newLabelNames = { ...labelNames };\n    delete newLabelNames[key];\n    setLabelNames(newLabelNames);\n  };\n\n  const labelInputs = Object.keys(labelNames).map((key: string) => {\n    return (\n      <div className=\"LabelEntry\" key={key}>\n        <TextInput\n          key={key}\n          isPassword={false}\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => onChange(key, event.target.value)}\n          label={\"标注名称\"}\n        />\n        <ImageButton\n          image={\"ico/trash.png\"}\n          imageAlt={\"remove_label\"}\n          size={{ width: 30, height: 30 }}\n          onClick={() => deleteHandle(key)}\n        />\n      </div>\n    );\n  });\n\n  const onChange = (key: string, value: string) => {\n    const newLabelNames = { ...labelNames, [key]: value };\n    setLabelNames(newLabelNames);\n  };\n\n  const onAccept = () => {\n    const labelNamesList: string[] = extractLabelNamesList();\n    if (labelNamesList.length > 0) {\n      updateLabelNamesList(labelNamesList);\n      PopupActions.close();\n    }\n  };\n\n  const extractLabelNamesList = (): string[] => {\n    const labelNameList: string[] = Object.values(labelNames).filter(value => !!value) as string[];\n    // const defaultLabelList: string[] = [\n    //   \"头顶\",\n    //   \"左手心\",\n    //   \"右手心\",\n    //   \"左脚跟\",\n    //   \"左脚尖\",\n    //   \"右脚跟\",\n    //   \"右脚尖\",\n    // ];\n\n    // return defaultLabelList.concat(labelNameList);\n    return labelNameList;\n  };\n\n  const onReject = () => {\n    updateActivePopupType(PopupWindowType.LOAD_LABEL_NAMES);\n  };\n\n  const renderContent = () => {\n    return (\n      <div className=\"InsertLabelNamesPopup\">\n        <div className=\"LeftContainer\">\n          <ImageButton\n            image={\"ico/plus.png\"}\n            imageAlt={\"plus\"}\n            size={{ width: 40, height: 40 }}\n            padding={25}\n            onClick={addHandle}\n          />\n        </div>\n        <div className=\"RightContainer\">\n          <div className=\"Message\">在你开始之前，请创建一个即将用在你项目内的标签列表，点击左边的 + 号添加新标签</div>\n          <div className=\"LabelsContainer\">\n            {Object.keys(labelNames).length !== 0 ? (\n              <Scrollbars>\n                <div className=\"InsertLabelNamesPopupContent\">{labelInputs}</div>\n              </Scrollbars>\n            ) : (\n              <div className=\"EmptyList\" onClick={addHandle}>\n                <img draggable={false} alt={\"upload\"} src={\"img/type-writer.png\"} />\n                <p className=\"extraBold\">当前项目标签列表为空</p>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <GenericYesNoPopup\n      title={\"创建标签列表\"}\n      renderContent={renderContent}\n      acceptLabel={\"开始标注\"}\n      onAccept={onAccept}\n      disableAcceptButton={extractLabelNamesList().length === 0}\n      rejectLabel={\"从文件载入\"}\n      onReject={onReject}\n    />\n  );\n};\n\nconst mapDispatchToProps = {\n  updateActiveLabelNameIndex,\n  updateLabelNamesList,\n  updateActivePopupType,\n};\n\nconst mapStateToProps = (state: AppState) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(InsertLabelNamesPopup);\n","import React from \"react\";\nimport \"./ExitProjectPopup.scss\";\nimport { GenericYesNoPopup } from \"../GenericYesNoPopup/GenericYesNoPopup\";\nimport {\n  updateActiveImageIndex,\n  updateActiveLabelNameIndex,\n  updateFirstLabelCreatedFlag,\n  updateImageData,\n  updateLabelNamesList,\n  updateProjectType,\n} from \"../../../store/editor/actionCreators\";\nimport { AppState } from \"../../../store\";\nimport { connect } from \"react-redux\";\nimport { ProjectType } from \"../../../data/enums/ProjectType\";\nimport { ImageData } from \"../../../store/editor/types\";\nimport { PopupActions } from \"../../../logic/actions/PopupActions\";\n\ninterface IProps {\n  updateActiveImageIndex: (activeImageIndex: number) => any;\n  updateProjectType: (projectType: ProjectType) => any;\n  updateActiveLabelNameIndex: (activeLabelIndex: number) => any;\n  updateLabelNamesList: (labelNames: string[]) => any;\n  updateImageData: (imageData: ImageData[]) => any;\n  updateFirstLabelCreatedFlag: (firstLabelCreatedFlag: boolean) => any;\n}\n\nconst ExitProjectPopup: React.FC<IProps> = props => {\n  const {\n    updateActiveLabelNameIndex,\n    updateLabelNamesList,\n    updateProjectType,\n    updateActiveImageIndex,\n    updateImageData,\n    updateFirstLabelCreatedFlag,\n  } = props;\n\n  const renderContent = () => {\n    return (\n      <div className=\"ExitProjectPopupContent\">\n        <div className=\"Message\">\n          Are you sure you want to leave the editor? You will permanently lose all your progress.\n        </div>\n      </div>\n    );\n  };\n\n  const onAccept = () => {\n    updateActiveLabelNameIndex(null);\n    updateLabelNamesList([]);\n    updateProjectType(null);\n    updateActiveImageIndex(null);\n    updateImageData([]);\n    updateFirstLabelCreatedFlag(false);\n    PopupActions.close();\n  };\n\n  const onReject = () => {\n    PopupActions.close();\n  };\n\n  return (\n    <GenericYesNoPopup\n      title={\"Exit project\"}\n      renderContent={renderContent}\n      acceptLabel={\"Exit\"}\n      onAccept={onAccept}\n      rejectLabel={\"Back\"}\n      onReject={onReject}\n    />\n  );\n};\n\nconst mapDispatchToProps = {\n  updateActiveLabelNameIndex,\n  updateLabelNamesList,\n  updateProjectType,\n  updateActiveImageIndex,\n  updateImageData,\n  updateFirstLabelCreatedFlag,\n};\n\nconst mapStateToProps = (state: AppState) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ExitProjectPopup);\n","import React, { useCallback } from \"react\";\nimport \"./LoadMoreImagesPopup.scss\";\nimport { AppState } from \"../../../store\";\nimport { connect } from \"react-redux\";\nimport { addImageData } from \"../../../store/editor/actionCreators\";\nimport { GenericYesNoPopup } from \"../GenericYesNoPopup/GenericYesNoPopup\";\nimport { useDropzone } from \"react-dropzone\";\nimport { FileUtil } from \"../../../utils/FileUtil\";\nimport { ImageData } from \"../../../store/editor/types\";\nimport { AcceptedFileType } from \"../../../data/enums/AcceptedFileType\";\nimport { PopupActions } from \"../../../logic/actions/PopupActions\";\n\ninterface IProps {\n  addImageData: (imageData: ImageData[]) => any;\n}\n\nconst LoadMoreImagesPopup: React.FC<IProps> = ({ addImageData }) => {\n  const onDrop = useCallback(acceptedFiles => {\n    acceptedFiles.forEach(file => {\n      const reader = new FileReader();\n      reader.onabort = () => console.log(\"file reading was aborted\");\n      reader.onerror = () => console.log(\"file reading has failed\");\n      reader.onload = () => {\n        var image = new Image();\n        image.src = reader.result as any;\n        image.onload = function(img) {\n          file.width = (this as any).width;\n          file.height = (this as any).height;\n        };\n      };\n      reader.readAsDataURL(file);\n    });\n  }, []);\n\n  const { acceptedFiles, getRootProps, getInputProps } = useDropzone({\n    accept: AcceptedFileType.IMAGE,\n    onDrop,\n  });\n\n  const onAccept = () => {\n    if (acceptedFiles.length > 0) {\n      addImageData(acceptedFiles.map((fileData: File) => FileUtil.mapFileDataToImageData(fileData)));\n      PopupActions.close();\n    }\n  };\n\n  const onReject = () => {\n    PopupActions.close();\n  };\n\n  const getDropZoneContent = () => {\n    if (acceptedFiles.length === 0)\n      return (\n        <>\n          <input {...getInputProps()} />\n          <img draggable={false} alt={\"upload\"} src={\"img/box-opened.png\"} />\n          <p className=\"extraBold\">拖拽到这里</p>\n          <p>或</p>\n          <p className=\"extraBold\">点击导入</p>\n        </>\n      );\n    else if (acceptedFiles.length === 1)\n      return (\n        <>\n          <img draggable={false} alt={\"uploaded\"} src={\"img/box-closed.png\"} />\n          <p className=\"extraBold\">导入了 1 张新图片 </p>\n        </>\n      );\n    else\n      return (\n        <>\n          <img draggable={false} key={1} alt={\"uploaded\"} src={\"img/box-closed.png\"} />\n          <p key={2} className=\"extraBold\">\n            导入了 {acceptedFiles.length} 张新图片\n          </p>\n        </>\n      );\n  };\n\n  const renderContent = () => {\n    return (\n      <div className=\"LoadMoreImagesPopupContent\">\n        <div {...getRootProps({ className: \"DropZone\" })}>{getDropZoneContent()}</div>\n      </div>\n    );\n  };\n\n  return (\n    <GenericYesNoPopup\n      title={\"导入更多图片\"}\n      renderContent={renderContent}\n      acceptLabel={\"载入\"}\n      disableAcceptButton={acceptedFiles.length < 1}\n      onAccept={onAccept}\n      rejectLabel={\"取消\"}\n      onReject={onReject}\n    />\n  );\n};\n\nconst mapDispatchToProps = {\n  addImageData,\n};\n\nconst mapStateToProps = (state: AppState) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoadMoreImagesPopup);\n","import React from \"react\";\nimport \"./PopupView.scss\";\nimport { PopupWindowType } from \"../../data/enums/PopupWindowType\";\nimport { AppState } from \"../../store\";\nimport { connect } from \"react-redux\";\nimport LoadLabelsPopup from \"./LoadLabelNamesPopup/LoadLabelNamesPopup\";\nimport ExportLabelPopup from \"./ExportLabelsPopup/ExportLabelPopup\";\nimport InsertLabelNamesPopup from \"./InsertLabelNamesPopup/InsertLabelNamesPopup\";\nimport ExitProjectPopup from \"./ExitProjectPopup/ExitProjectPopup\";\nimport LoadMoreImagesPopup from \"./LoadMoreImagesPopup/LoadMoreImagesPopup\";\n\ninterface IProps {\n  activePopupType: PopupWindowType;\n}\n\nconst PopupView: React.FC<IProps> = ({ activePopupType }) => {\n  const selectPopup = () => {\n    switch (activePopupType) {\n      case PopupWindowType.LOAD_LABEL_NAMES:\n        return <LoadLabelsPopup />;\n      case PopupWindowType.EXPORT_LABELS:\n        return <ExportLabelPopup />;\n      case PopupWindowType.INSERT_LABEL_NAMES:\n        return <InsertLabelNamesPopup />;\n      case PopupWindowType.EXIT_PROJECT:\n        return <ExitProjectPopup />;\n      case PopupWindowType.LOAD_IMAGES:\n        return <LoadMoreImagesPopup />;\n      default:\n        return null;\n    }\n  };\n\n  return activePopupType && <div className=\"PopupView\">{selectPopup()}</div>;\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  activePopupType: state.general.activePopupType,\n});\n\nexport default connect(mapStateToProps)(PopupView);\n","import React, {useState} from 'react';\nimport './MobileMainView.scss';\nimport Scrollbars from 'react-custom-scrollbars';\nimport {ISize} from \"../../interfaces/ISize\";\nimport {AppState} from \"../../store\";\nimport {connect} from \"react-redux\";\nimport classNames from 'classnames'\nimport {EditorFeatureData, IEditorFeature} from \"../../data/info/EditorFeatureData\";\nimport {ISocialMedia, SocialMediaData} from \"../../data/info/SocialMediaData\";\nimport {ImageButton} from \"../Common/ImageButton/ImageButton\";\n\ninterface IProps {\n    size: ISize;\n}\n\nconst MobileMainView: React.FC<IProps> = ({size}) => {\n    const scrollPositionThreshold: number = 350;\n    const [scrollPosition, setScrollPosition] = useState(0);\n\n    const getClassName = () => {\n        return classNames('MobileTopNavigationBar', {\n            Hide: scrollPosition < scrollPositionThreshold,\n            Show: scrollPosition >= scrollPositionThreshold,\n        })\n    };\n\n    const onScroll = (value) => {\n        setScrollPosition(value.scrollTop);\n    };\n\n    const getEditorFeatureTiles = (features: IEditorFeature[]) => {\n        return features.map((data:IEditorFeature) => {\n            return <div\n                className=\"EditorFeaturesTiles\"\n                key={data.displayText}\n            >\n                <div\n                    className=\"EditorFeaturesTilesWrapper\"\n                >\n                    <img\n                        draggable={false}\n                        alt={data.imageAlt}\n                        src={data.imageSrc}\n                    />\n                    <div className=\"EditorFeatureLabel\">\n                        {data.displayText}\n                    </div>\n                </div>\n            </div>\n        });\n    };\n\n    const getSocialMediaButtons = (size:ISize) => {\n        return SocialMediaData.map((data:ISocialMedia, index: number) => {\n            return <ImageButton\n                key={index}\n                size={size}\n                image={data.imageSrc}\n                imageAlt={data.imageAlt}\n                href={data.href}\n            />\n        });\n    };\n\n    const topNavigationBar = <div className={getClassName()}>\n        <div className=\"NavigationBarGroupWrapper\">\n            <div className=\"Header\">\n                <img\n                    draggable={false}\n                    alt={\"make-sense\"}\n                    src={\"/make-sense-ico-transparent.png\"}\n                />\n                Make Sense\n            </div>\n        </div>\n        <div className=\"TriangleHorizontal Bottom\">\n            <div className=\"TriangleHorizontalContent\"/>\n        </div>\n    </div>;\n\n    const firstStage = <div className=\"FirstStage\">\n        <img\n            draggable={false}\n            alt={\"main-logo\"}\n            src={\"img/main-image-color.png\"}\n        />\n        <div className=\"TriangleHorizontal Bottom\">\n            <div className=\"TriangleHorizontalContent\"/>\n        </div>\n    </div>;\n\n    const secondStage = <div className=\"SecondStage\">\n        {getEditorFeatureTiles(EditorFeatureData.slice(0, 3))}\n    </div>;\n\n    const thirdStage = <div className=\"ThirdStage\">\n        {getEditorFeatureTiles(EditorFeatureData.slice(3, 6))}\n        <div className=\"TriangleHorizontal Top\">\n            <div className=\"TriangleHorizontalContent\"/>\n        </div>\n        <div className=\"TriangleHorizontal Bottom\">\n            <div className=\"TriangleHorizontalContent\"/>\n        </div>\n    </div>;\n\n    const fourthStage = <div className=\"FourthStage\">\n        <div className=\"Message\">\n            Due to the small size of the screen we do not support our editor on mobile devices. Check what you missed and visit us from a desktop.\n        </div>\n        <div className=\"SocialMediaWrapper\">\n            {getSocialMediaButtons({width: 40, height: 40})}\n        </div>\n    </div>;\n\n    return(<div className=\"MobileMainView\">\n        {topNavigationBar}\n        <Scrollbars\n            onScrollFrame={onScroll}\n        >\n            <div\n                className=\"MobileMainViewContent\"\n                style={{width: size.width}}\n            >\n                {firstStage}\n                {secondStage}\n                {thirdStage}\n                {fourthStage}\n            </div>\n        </Scrollbars>\n    </div>)\n};\n\nconst mapDispatchToProps = {};\n\nconst mapStateToProps = (state: AppState) => ({\n    size: state.general.windowSize\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(MobileMainView);","import React from 'react';\nimport './SizeItUpView.scss';\nimport {Settings} from \"../../settings/Settings\";\n\nexport const SizeItUpView: React.FC = () => {\n    return(<div className=\"SizeItUpView\">\n        <p className=\"extraBold\">Ops... This window is to tight for me!</p>\n        <img\n            draggable={false}\n            alt={\"small_window\"}\n            src={\"img/small_window.png\"}\n        />\n        <p className=\"extraBold\">Please... make it at least {Settings.EDITOR_MIN_WIDTH} x {Settings.EDITOR_MIN_HEIGHT} px.</p>\n    </div>)\n};","import React from 'react';\nimport './App.scss';\nimport EditorView from './views/EditorView/EditorView';\nimport MainView from './views/MainView/MainView';\nimport { ProjectType } from './data/enums/ProjectType';\nimport { AppState } from './store';\nimport { connect } from 'react-redux';\nimport PopupView from './views/PopupView/PopupView';\nimport MobileMainView from './views/MobileMainView/MobileMainView';\nimport { ISize } from './interfaces/ISize';\nimport { Settings } from './settings/Settings';\nimport { SizeItUpView } from './views/SizeItUpView/SizeItUpView';\nimport { PlatformModel } from './staticModels/PlatformModel';\nimport ReactNotification from 'react-notifications-component';\n\ninterface IProps {\n  projectType: ProjectType;\n  windowSize: ISize;\n}\n\nconst App: React.FC<IProps> = ({ projectType, windowSize }) => {\n  const selectRoute = () => {\n    if (!!PlatformModel.mobileDeviceData.manufacturer && !!PlatformModel.mobileDeviceData.os) return <MobileMainView />;\n    if (!projectType) return <MainView />;\n    else {\n      if (windowSize.height < Settings.EDITOR_MIN_HEIGHT || windowSize.width < Settings.EDITOR_MIN_WIDTH) {\n        return <SizeItUpView />;\n      } else {\n        return <EditorView />;\n      }\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {selectRoute()}\n      <PopupView />\n      <ReactNotification />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  projectType: state.editor.projectType,\n  windowSize: state.general.windowSize,\n});\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { EditorActionTypes, EditorState, ImageData } from './types';\nimport { Action } from '../Actions';\nimport produce from 'immer';\nimport { LabelType } from '../../data/enums/LabelType';\nimport { EditorActions } from '../../logic/actions/EditorActions';\nimport { EditorModel } from '../../staticModels/EditorModel';\n\nconst initialState: EditorState = {\n  activeImageIndex: 0,\n  projectName: 'regular_project',\n  imagesData: [],\n  projectType: null,\n  labelNames: [],\n};\n\nexport function editorReducer(state = initialState, action: EditorActionTypes): EditorState {\n  const activeImageIndex = state.activeImageIndex;\n  const activeGroupIndex = state.imagesData[activeImageIndex]\n    ? state.imagesData[activeImageIndex].activeGroupIndex\n    : undefined;\n  const result = produce(state, draft => {\n    switch (action.type) {\n      case Action.UPDATE_PROJECT_TYPE:\n        draft.projectType = action.payload.projectType;\n        break;\n      case Action.UPDATE_PROJECT_NAME:\n        draft.projectName = action.payload.projectName;\n        break;\n      case Action.UPDATE_ACTIVE_IMAGE_INDEX:\n        draft.activeImageIndex = action.payload.activeImageIndex;\n        break;\n      case Action.UPDATE_ACTIVE_LABEL_NAME_INDEX:\n        draft.imagesData[activeImageIndex].groupList[activeGroupIndex].activeLabelNameIndex =\n          action.payload.activeLabelNameIndex;\n        break;\n      case Action.UPDATE_LABEL_INDEX_BY_INFO:\n        const { imageIndex, groupIndex, labelPointIndex, labelIndex, labelCheckd } = action.payload;\n        if (!draft.imagesData[imageIndex].groupList[groupIndex].labelPoints[labelPointIndex]) {\n          break;\n        }\n        draft.imagesData[imageIndex].groupList[groupIndex].labelPoints[labelPointIndex].labelIndex = labelIndex;\n        draft.imagesData[imageIndex].groupList[groupIndex].labelPoints[labelPointIndex].checked = labelCheckd;\n        break;\n      case Action.UPDATE_ACTIVE_LABEL_ID:\n        draft.imagesData[activeImageIndex].groupList[activeGroupIndex].activeLabelId = action.payload.activeLabelId;\n        break;\n      case Action.UPDATE_HIGHLIGHTED_LABEL_ID:\n        draft.imagesData[activeImageIndex].groupList[activeGroupIndex].highlightedLabelId =\n          action.payload.highlightedLabelId;\n        break;\n      case Action.UPDATE_ACTIVE_LABEL_TYPE:\n        draft.imagesData[activeImageIndex].groupList[activeGroupIndex].activeLabelType = action.payload.activeLabelType;\n        break;\n      case Action.UPDATE_IMAGE_DATA_BY_ID:\n        //filter TODO\n        draft.imagesData = state.imagesData.map((imageData: ImageData) =>\n          imageData.id === action.payload.id ? action.payload.newImageData : imageData\n        );\n        // draft.imagesData.forEach((item, idx) => {\n        //   if (item.groupList.some(ele => !!ele.activeLabelId)) {\n        //     localStorage.setItem(item.fileData.name, JSON.stringify(item));\n        //   }\n        // });\n        break;\n      case Action.ADD_IMAGES_DATA:\n        const addImagesData = action.payload.imageData;\n        if (action.payload.inital) {\n          draft.imagesData = addImagesData\n        } else {\n          draft.imagesData = draft.imagesData.concat(addImagesData);\n        }\n\n        break;\n\n      case Action.LOAD_DATA_FROM_LOCALSTORGE:\n        draft.imagesData.forEach((item, idx) => {\n          if (localStorage.getItem(item.fileData.name)) {\n            const newData = JSON.parse(localStorage.getItem(item.fileData.name));\n            newData.fileData = draft.imagesData[idx].fileData;\n            draft.imagesData[idx] = newData;\n            // console.log(JSON.parse(localStorage.getItem(item.fileData.name)));\n          }\n        });\n        break;\n      case Action.UPDATE_IMAGES_DATA:\n        draft.imagesData = action.payload.imageData;\n        break;\n      case Action.UPDATE_LABEL_NAMES_LIST:\n        draft.labelNames = action.payload.labelNames;\n        break;\n      case Action.UPDATE_FIRST_LABEL_CREATED_FLAG:\n        draft.imagesData[activeImageIndex].groupList[activeGroupIndex].firstLabelCreatedFlag =\n          action.payload.firstLabelCreatedFlag;\n        break;\n      case Action.UPDATE_GROUP_LIST:\n        draft.imagesData[activeImageIndex].groupList.push({\n          activeLabelNameIndex: 0,\n          activeLabelType: LabelType.POINT,\n          activeLabelId: null,\n          highlightedLabelId: null,\n          firstLabelCreatedFlag: false,\n          labelRects: [],\n          labelPoints: [],\n          labelPolygons: [],\n        });\n        break;\n      case Action.DELETE_GROUP_LIST:\n        const newGroupList = draft.imagesData[activeImageIndex].groupList.filter(\n          (_, idx) => idx !== action.payload.groupIndex\n        );\n        const activeGroup = draft.imagesData[activeImageIndex].groupList[activeGroupIndex];\n\n        const newActiveGroupIndex = newGroupList.findIndex(item => item === activeGroup);\n        draft.imagesData[activeImageIndex].activeGroupIndex = newActiveGroupIndex;\n        draft.imagesData[activeImageIndex].groupList = newGroupList;\n        break;\n      case Action.UPDATE_ACTIVE_GROUP_INDEX:\n        draft.imagesData[activeImageIndex].activeGroupIndex = action.payload.groupIndex;\n        break;\n      case Action.FIND_NEXT_AVAILABLE_LABEL_INDEX:\n        const allIndex = [...Array(draft.labelNames.length)].map((v, k) => k);\n        const existedLabelIndexs = draft.imagesData[activeImageIndex].groupList[activeGroupIndex].labelPoints.map(\n          ele => ele.labelIndex\n        );\n\n        const difference = existedLabelIndexs\n          .concat(allIndex)\n          .filter(v => !existedLabelIndexs.includes(v) || !allIndex.includes(v));\n        draft.imagesData[activeImageIndex].groupList[activeGroupIndex].activeLabelNameIndex = difference.length\n          ? difference[0]\n          : 0;\n        break;\n    }\n  });\n  return result;\n}\n","import {GeneralActionTypes, GeneralState} from \"./types\";\nimport {Action} from \"../Actions\";\nimport {CustomCursorStyle} from \"../../data/enums/CustomCursorStyle\";\n\nconst initialState: GeneralState = {\n    windowSize: null,\n    activePopupType: null,\n    customCursorStyle: CustomCursorStyle.DEFAULT,\n    activeContext: null\n};\n\nexport function generalReducer(\n    state = initialState,\n    action: GeneralActionTypes\n): GeneralState {\n    switch (action.type) {\n        case Action.UPDATE_WINDOW_SIZE: {\n            return {\n                ...state,\n                windowSize: action.payload.windowSize\n            }\n        }\n        case Action.UPDATE_ACTIVE_POPUP_TYPE: {\n            return {\n                ...state,\n                activePopupType: action.payload.activePopupType\n            }\n        }\n        case Action.UPDATE_CUSTOM_CURSOR_STYLE: {\n            return {\n                ...state,\n                customCursorStyle: action.payload.customCursorStyle\n            }\n        }\n        case Action.UPDATE_CONTEXT: {\n            return {\n                ...state,\n                activeContext: action.payload.activeContext\n            }\n        }\n        default:\n            return state;\n    }\n}","import { combineReducers } from \"redux\";\nimport { editorReducer } from \"./editor/reducer\";\nimport { generalReducer } from \"./general/reducer\";\n\nexport const rootReducer = combineReducers({\n  general: generalReducer,\n  editor: editorReducer,\n});\n\nexport type AppState = ReturnType<typeof rootReducer>;\n","import {MobileDeviceData} from \"../data/MobileDeviceData\";\nimport MobileDetect from 'mobile-detect'\n\nexport class PlatformUtil {\n    public static getMobileDeviceData(userAgent: string): MobileDeviceData {\n        const mobileDetect = new MobileDetect(userAgent);\n        return {\n            manufacturer: mobileDetect.mobile(),\n            browser: mobileDetect.userAgent(),\n            os: mobileDetect.os()\n        }\n    }\n\n    public static isMac(userAgent: string): boolean {\n        return !!userAgent.toLowerCase().match(\"mac\");\n    }\n\n    public static isSafari(userAgent: string): boolean {\n        return !!userAgent.toLowerCase().match(\"safari\");\n    }\n\n    public static isFirefox(userAgent: string): boolean {\n        return !!userAgent.toLowerCase().match(\"firefox\");\n    }\n}","import { updateWindowSize } from \"../../store/general/actionCreators\";\nimport { ContextManager } from \"../context/ContextManager\";\nimport { store } from \"../../index\";\nimport { PlatformUtil } from \"../../utils/PlatformUtil\";\nimport { PlatformModel } from \"../../staticModels/PlatformModel\";\n\nexport class AppInitializer {\n  public static inti(): void {\n    AppInitializer.handleResize();\n    AppInitializer.detectDeviceParams();\n    window.addEventListener(\"resize\", AppInitializer.handleResize);\n    ContextManager.init();\n  }\n\n  private static handleResize = () => {\n    store.dispatch(\n      updateWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      })\n    );\n  };\n\n  private static detectDeviceParams = () => {\n    const userAgent: string = window.navigator.userAgent;\n    PlatformModel.mobileDeviceData = PlatformUtil.getMobileDeviceData(userAgent);\n    PlatformModel.isMac = PlatformUtil.isMac(userAgent);\n    PlatformModel.isSafari = PlatformUtil.isSafari(userAgent);\n    PlatformModel.isFirefox = PlatformUtil.isFirefox(userAgent);\n  };\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './configureStore';\nimport { Provider } from 'react-redux';\nimport { AppInitializer } from './logic/initializer/AppInitializer';\n\nexport const store = configureStore();\nAppInitializer.inti();\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root') || document.createElement('div') // fix for testing purposes\n);\n\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from \"redux\";\nimport { rootReducer } from \"./store\";\nimport logger from \"redux-logger\";\n\nexport default function configureStore() {\n  return createStore(\n    rootReducer\n    // applyMiddleware(logger)\n    // @ts-ignore\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  );\n}\n"],"sourceRoot":""}