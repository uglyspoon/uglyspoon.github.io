{"version":3,"sources":["data/enums/Direction.ts","data/enums/PopupWindowType.ts","settings/Settings.ts","store/Actions.ts","store/editor/actionCreators.ts","utils/VirtualListUtil.ts","utils/NumberUtil.ts","utils/RectUtil.ts","views/Common/VirtualList/VirtualList.tsx","logic/imageRepository/ImageLoadManager.ts","logic/imageRepository/ImageRepository.ts","utils/FileUtil.ts","data/enums/ContextType.ts","views/EditorView/SideNavigationBar/ImagePreview/ImagePreview.tsx","store/general/actionCreators.ts","data/enums/LabelType.ts","staticModels/EditorModel.ts","utils/UnitUtil.ts","data/enums/CustomCursorStyle.ts","utils/DrawUtil.ts","utils/PointUtil.ts","settings/RenderEngineConfig.ts","store/selectors/EditorSelector.ts","data/enums/EventType.ts","utils/MouseEventUtil.ts","logic/render/BaseRenderEngine.ts","utils/RenderEngineUtil.ts","logic/render/RectRenderEngine.ts","utils/CanvasUtil.ts","logic/render/PointRenderEngine.ts","utils/LineUtil.ts","logic/render/PolygonRenderEngine.ts","logic/render/PrimaryEditorRenderEngine.ts","logic/actions/EditorActions.ts","logic/context/BaseContext.ts","staticModels/PlatformModel.ts","logic/actions/ImageActions.ts","logic/context/EditorContext.ts","store/selectors/GeneralSelector.ts","logic/actions/PopupActions.ts","logic/context/PopupContext.ts","logic/context/ContextManager.ts","utils/HttpUtils.ts","data/enums/ProjectType.ts","views/EditorView/SideNavigationBar/ImagesList/ImagesList.tsx","data/info/LabelToolkitData.ts","views/Common/ImageButton/ImageButton.tsx","views/EditorView/SideNavigationBar/LabelInputField/LabelInputField.tsx","views/EditorView/SideNavigationBar/EmptyLabelList/EmptyLabelList.tsx","views/EditorView/SideNavigationBar/RectLabelsList/RectLabelsList.tsx","views/EditorView/SideNavigationBar/PointLabelsList/PointLabelsList.tsx","views/EditorView/SideNavigationBar/PolygonLabelsList/PolygonLabelsList.tsx","views/Common/TextButton/TextButton.tsx","views/EditorView/SideNavigationBar/LabelsToolkit/LabelsToolkit.tsx","views/EditorView/SideNavigationBar/SideNavigationBar.tsx","views/EditorView/VerticalEditorButton/VerticalEditorButton.tsx","utils/EditorUtil.ts","data/enums/AcceptedFileType.ts","views/EditorView/Editor/Editor.tsx","views/EditorView/BottomNavigationBar/BottomNavigationBar.tsx","views/EditorView/EditorContainer/EditorContainer.tsx","views/EditorView/StateBar/StateBar.tsx","views/Common/UnderlineTextButton/UnderlineTextButton.tsx","views/Common/TextInput/TextInput.tsx","views/EditorView/TopNavigationBar/TopNavigationBar.tsx","views/EditorView/EditorView.tsx","data/info/SocialMediaData.ts","data/info/EditorFeatureData.ts","views/PopupView/GenericYesNoPopup/GenericYesNoPopup.tsx","views/PopupView/LoginPopup/LoginPopup.tsx","views/MainView/MainView.tsx","views/PopupView/LoadLabelNamesPopup/LoadLabelNamesPopup.tsx","data/enums/ExportFormatType.ts","utils/XMLSanitizerUtil.ts","utils/ExporterUtil.ts","logic/export/RectLabelsExporter.ts","data/export/AllExportFormatData.ts","data/export/PointExportFormatData.ts","logic/export/PointLabelsExport.ts","logic/export/AllLabelsExport.ts","data/export/PolygonExportFormatData.ts","logic/export/PolygonLabelsExporter.ts","data/export/RectExportFormatData.ts","views/PopupView/ExportLabelsPopup/ExportLabelPopup.tsx","views/PopupView/InsertLabelNamesPopup/InsertLabelNamesPopup.tsx","views/PopupView/ExitProjectPopup/ExitProjectPopup.tsx","views/PopupView/LoadMoreImagesPopup/LoadMoreImagesPopup.tsx","views/PopupView/PopupView.tsx","views/MobileMainView/MobileMainView.tsx","views/SizeItUpView/SizeItUpView.tsx","App.tsx","serviceWorker.ts","store/editor/reducer.ts","store/general/reducer.ts","store/index.ts","utils/PlatformUtil.ts","logic/initializer/AppInitializer.ts","index.tsx","configureStore.ts"],"names":["Direction","PopupWindowType","Settings","Object","classCallCheck","this","GITHUB_URL","MEDIUM_URL","PATREON_URL","TOP_NAVIGATION_BAR_HEIGHT_PX","BOTTOM_NAVIGATION_BAR_HEIGHT_PX","SIDE_NAVIGATION_BAR_WIDTH_CLOSED_PX","SIDE_NAVIGATION_BAR_WIDTH_OPEN_PX","TOOLKIT_TAB_HEIGHT_PX","EDITOR_MIN_WIDTH","EDITOR_MIN_HEIGHT","PRIMARY_COLOR","SECONDARY_COLOR","DARK_THEME_FIRST_COLOR","DARK_THEME_SECOND_COLOR","DARK_THEME_THIRD_COLOR","DARK_THEME_FORTH_COLOR","CANVAS_PADDING_WIDTH_PX","CROSS_HAIR_THICKNESS_PX","CROSS_HAIR_COLOR","RESIZE_HANDLE_DIMENSION_PX","RESIZE_HANDLE_HOVER_DIMENSION_PX","CLOSEABLE_POPUPS","LOAD_IMAGES","Action","updateProjectType","projectType","type","UPDATE_PROJECT_TYPE","payload","updateActiveImageIndex","activeImageIndex","UPDATE_ACTIVE_IMAGE_INDEX","updateActiveLabelNameIndex","activeLabelNameIndex","UPDATE_ACTIVE_LABEL_NAME_INDEX","updateLabelIndexByInfo","imageIndex","groupIndex","labelPointIndex","labelIndex","labelCheckd","UPDATE_LABEL_INDEX_BY_INFO","updateActiveLabelId","activeLabelId","UPDATE_ACTIVE_LABEL_ID","updateHighlightedLabelId","highlightedLabelId","UPDATE_HIGHLIGHTED_LABEL_ID","updateActiveLabelType","activeLabelType","UPDATE_ACTIVE_LABEL_TYPE","updateImageDataById","id","newImageData","UPDATE_IMAGE_DATA_BY_ID","addImageData","imageData","ADD_IMAGES_DATA","updateImageData","UPDATE_IMAGES_DATA","updateLabelNamesList","labelNames","UPDATE_LABEL_NAMES_LIST","updateFirstLabelCreatedFlag","firstLabelCreatedFlag","UPDATE_FIRST_LABEL_CREATED_FLAG","updateGroupList","groupName","UPDATE_GROUP_LIST","updateActiveGroupIndex","UPDATE_ACTIVE_GROUP_INDEX","findNextAvailableLabelIndex","FIND_NEXT_AVAILABLE_LABEL_INDEX","VirtualListUtil","createClass","key","value","listSize","childSize","childCount","columnCount","Math","floor","width","height","ceil","gridSize","sizeFromGrid","max","calculateGridSize","horizontalMargin","calculateContentSize","anchors","i","rowCount","anchor","x","y","push","NumberUtil","min","RectUtil","rect","r1","r2","point","centerPoint","size","_objectSpread","containerRect","ratio","getRatio","innerRectHeight","innerRectWidth","inputRect","rectAnchor","delta","RIGHT","BOTTOM_RIGHT","BOTTOM","TOP_RIGHT","TOP","TOP_LEFT","LEFT","BOTTOM_LEFT","scale","position","isPointInside","snapValueToRange","VirtualList","_React$Component","props","_this","possibleConstructorReturn","getPrototypeOf","call","contentSize","childAnchors","scrollbars","loading","calculate","calculateAnchorPoints","getVirtualListStyle","getVirtualListContentStyle","onScrollStart","setState","isScrolling","onScrollStop","onScroll","values","viewportRect","scrollLeft","scrollTop","getChildren","_this$state","state","_this$props","overScanHeight","overScan","viewportRectWithOverScan","reduce","children","index","childRect","assign","isVisible","intersect","childStyle","left","top","concat","childRender","inherits","_this$props2","nextProps","nextState","nextContext","getValues","_this2","displayContent","react_default","a","createElement","className","style","lib_default","ref","onScrollFrame","autoHide","React","Component","ImageLoadManager","fx","queue","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","abrupt","sent","stop","setTimeout","runQueue","add","run","_runQueue","_callee2","_context2","isRunning","runTasks","apply","arguments","_runTasks","_callee3","_context3","length","shift","ImageRepository","uuid","image","repository","FileUtil","fileData","JSON","parse","localStorage","getItem","name","newfileData","loadStatus","uuidv1","activeGroupIndex","groupList","labelRects","labelPoints","labelPolygons","onSuccess","onFailure","Promise","resolve","reject","url","URL","createObjectURL","Image","src","onload","onerror","reader","FileReader","readAsText","onloadend","evt","contents","target","result","split","ContextType","ImagePreview","isLoading","loadImage","_ref","saveLoadedImagePartial","getById","saveLoadedImage","handleLoadImageError","_x","_x2","ImagePreview_objectSpread","store","getStyle","imageRect","imageRatio","imagePosition","fitInsideRectWithRatio","getClassName","classNames","selected","isSelected","addAndRun","isChecked","onClick","undefined","data-index","draggable","alt","dist","sizeUnit","color","mapDispatchToProps","connect","updateActivePopupType","activePopupType","UPDATE_ACTIVE_POPUP_TYPE","updateCustomCursorStyle","customCursorStyle","UPDATE_CUSTOM_CURSOR_STYLE","LabelType","EditorModel","canvas","mousePositionIndicator","cursor","primaryRenderingEngine","supportRenderingEngine","imageRectOnCanvas","imageScale","mousePositionOnCanvas","CustomCursorStyle","UnitUtil","angleDeg","PI","angleRad","DrawUtil","getContext","clearRect","startPoint","endPoint","thickness","ctx","save","strokeStyle","lineWidth","lineCap","beginPath","moveTo","lineTo","stroke","restore","fillStyle","fill","fillRect","globalCompositeOperation","anchorPoint","radius","startAngleRad","deg2rad","endAngleRad","arc","startAngleDeg","endAngleDeg","closePath","text","textSize","bold","align","textAlign","textBaseline","font","fillText","round","random","hex","alpha","r","parseInt","slice","g","b","PointUtil","p1","p2","factor","sqrt","pow","RenderEngineConfig","lineThickness","lineActiveColor","lineInactiveColor","anchorSize","anchorHoverSize","suggestedAnchorDetectionSize","activeAnchorColor","inactiveAnchorColor","EventType","EditorSelector","getState","editor","projectName","imagesData","getActiveImageIndex","getActiveGroupIndex","getImagesData","getActiveLabelId","_","find","getActiveImageData","map","ele","MouseEventUtil","event","MOUSE_DOWN","MOUSE_UP","MOUSE_MOVE","BaseRenderEngine","labelType","data","getEventType","mouseMoveHandler","mouseUpHandler","mouseDownHandler","RenderEngineUtil","activeImageRectOnCanvas","RenderEngineUtil_objectSpread","canvasSize","polygon","transferPointFromImageToCanvas","multiply","activeImageScale","transferPointFromCanvasToImage","subtract","translate","scaleRect","dispatch","DEFAULT","CANCEL","setValueBetweenPixels","topLeft","bottomRight","topLeftBetweenPixels","setPointBetweenPixels","bottomRightBetweenPixels","RectRenderEngine","_BaseRenderEngine","config","startCreateRectPoint","startResizeRectAnchor","isMouseOverImage","isMouseOverCanvas","rectUnderMouse","getRectUnderMouse","calculateRectRelativeToActiveImage","anchorUnderMouse","getAnchorUnderMouseByRect","startRectResize","getHighlightedLabelId","startRectCreation","mousePositionSnapped","snapPointToRect","equals","minX","minY","maxX","maxY","addRectLabel","activeLabelRect","getActiveRectLabel","startAnchorPosition","resizeRect","scaledRect","produce","draft","labelRect","RectRenderEngine_objectSpread","endRectTransformation","activeLabelIndex","getActiveLabelNameIndex","checked","RECTANGLE","forEach","drawActiveRect","drawInactiveRect","drawCurrentlyCreatedRect","updateCursorStyle","mousePosition","activeRect","activeRectBetweenPixels","setRectBetweenPixels","drawRect","rectOnImage","transferRectFromCanvasToImage","renderRect","endAnchorPositionSnapped","isActive","_this3","rectBetweenPixels","lineColor","mapRectToAnchors","center","handleRect","getRectWithCenterAndSize","handleRectBetweenPixels","drawRectWithFill","getAnchorUnderMouse","MOVE","wrapDefaultCursorStyleInCancel","activeRectLabel","isMouseOverRectEdges","outerRectDelta","outerRect","expand","innerRectDelta","innerRect","rectAnchors","anchorRect","activatedAnchor","CanvasUtil","canvasRect","getBoundingClientRect","clientX","clientY","PointRenderEngine","transformInProgress","addPointLabel","existedLabelIndexs","getAllPointLabelIndex","labelsLength","getLabelNameLength","labelPoint","storeNF","addNotification","message","insert","container","animationIn","animationOut","dismiss","duration","POINT","getLabelPointUnderMouse","pointOnCanvas","pointBetweenPixels","pointOnImage","isInProgress","activeLabelPoint","getActivePointLabel","pointSnapped","PointRenderEngine_objectSpread","renderPoint","handleColor","getSize","LineUtil","l","p","start","end","abs","PolygonRenderEngine","activePath","resizeAnchorIndex","suggestedAnchorPositionOnCanvas","suggestedAnchorIndexInPolygon","POLYGON","isCreationInProgress","isMouseOverAnchor","addLabelAndFinishCreation","updateActivelyCreatedLabel","polygonUnderMouse","getPolygonUnderMouse","anchorIndex","vertices","indexUnderMouse","anchorOnCanvas","startExistingLabelResize","addSuggestedAnchorToPolygonLabel","isResizeInProgress","endExistingLabelResize","labelPolygon","pathOnCanvas","transferPolygonFromImageToCanvas","linesOnCanvas","mapPointsToLines","j","isMouseOverLine","getCenter","discardSuggestedPoint","drawExistingLabels","drawActivelyCreatedLabel","drawActivelyResizeLabel","drawSuggestedAnchor","CLOSE","ADD","standardizedPoints","path","lines","drawPolygonWithFill","hexToRGB","line","drawLine","mapPointsToAnchors","_this4","activeLabelPolygon","getActivePolygonLabel","snappedMousePosition","polygonOnCanvas","drawPolygon","_this5","_this6","suggestedAnchorRect","polygonOnImage","transferPolygonFromCanvasToImage","addPolygonLabel","finishLabelCreation","labelId","applyResizeToPolygonLabel","_this7","activeLabel","PolygonRenderEngine_objectSpread","_this8","newAnchorPositionOnImage","arr","newItem","toConsumableArray","mouse","hoverReach","getDistanceFromLine","points","_this9","PrimaryEditorRenderEngine","drawImage","EditorActions","mountSupportRenderingEngine","clearCanvas","render","getEditorData","status","activeKeyCombo","ContextManager","getActiveCombo","canvasPaddingWidth","calculateImageRect","calculateImageScale","display","getMousePositionOnCanvasFromEvent","EditorActions_objectSpread","innerHTML","resizeCanvas","newCanvasSize","BaseContext","actions","PlatformModel","mobileDeviceData","isMac","isSafari","isFirefox","ImageActions","currentImageIndex","imageCount","EditorContext","_BaseContext","keyCombo","action","editorData","fullRender","cancelLabelCreation","getPreviousImage","getNextImage","GeneralSelector","general","activeContext","PopupActions","restoreCtx","PopupContext","popupType","getActivePopupType","includes","close","activeCombo","window","addEventListener","onDown","onUp","context","activeCtx","getActiveContext","contextHistory","updateCtx","UPDATE_CONTEXT","EDITOR","getActions","POPUP","pop","keyCode","getKeyCodeFromEvent","isInCombo","addToCombo","execute","removeFromCombo","hotKey","matchCombo","indexOf","splice","combo1","combo2","HOST","cookies","Cookies","makeRequest","method","xhr","XMLHttpRequest","open","responseType","response","statusText","send","postData","fetch","body","stringify","cache","mode","headers","Authorization","get","content-type","then","json","ProjectType","ImagesList","imagesListRef","updateListSize","listBoundingBox","onClickHandler","console","log","resJson","title","renderImagePreview","SideNavigationBar_ImagePreview_ImagePreview","some","item","removeEventListener","switchCtx","LEFT_NAVBAR","VirtualList_VirtualList","LabelToolkitData","NAME","headerText","imageSrc","imageAlt","ImageButton","padding","href","isDisabled","externalClassName","imagePadding","buttonStyle","ImageButton_objectSpread","imageStyle","maxWidth","maxHeight","react","active","disabled","stopPropagation","rel","LabelInputField","dropdownOptionHeight","dropdownOptionCount","dropdownMargin","dropdownLabel","dropdown","openDropdown","isOpen","closeDropdown","clientRect","dropDownRect","getDropdownStyle","options","innerHeight","bottom","getDropdownOptions","option","onSelectLabel","mouseEnterHandler","mouseLeaveHandler","animate","requestAnimationFrame","loaded","highlighted","isHighlighted","onDelete","onCheck","onMouseEnter","onMouseLeave","onChange","ImageButton_ImageButton_ImageButton","getFirstLabelCreatedFlag","labelBefore","labelAfter","before","Fragment","after","listStyle","listStyleContent","deleteRectLabelById","labelRectId","filter","currentLabel","checkRectLabelById","RectLabelsList_objectSpread","updateRectLabel","labelNameIndex","onClickCapture","SideNavigationBar_EmptyLabelList_EmptyLabelList","SideNavigationBar_LabelInputField_LabelInputField","deletePointLabelById","labelPointId","checkPointLabelById","PointLabelsList_objectSpread","updatePointLabel","alreadyFlag","deletePolygonLabelById","labelPolygonId","checkPolygonLabelById","PolygonLabelsList_objectSpread","updatePolygonLabel","TextButton","label","LabelsToolkit","labelsToolkitRef","tabs","updateToolkitSize","headerClickHandler","activeTab","renderChildren","currentGroupIndex","tabData","baseClass","header","content","SideNavigationBar_RectLabelsList_RectLabelsList","activeTabContentHeight","SideNavigationBar_PointLabelsList_PointLabelsList","SideNavigationBar_PolygonLabelsList_PolygonLabelsList","buttonOnClickHandle","renderChildrenWrapper","idx","TextButton_TextButton_TextButton","deleteGroupList","IMAGE_RECOGNITION","RIGHT_NAVBAR","DELETE_GROUP_LIST","getActiveLabelType","SideNavigationBar","direction","isWithContext","renderContent","renderCompanion","right","with-context","closed","VerticalEditorButton","EditorUtil","getIndicator","cursorStyle","RESIZE","getCursorStyle","move","resize","cancel","AcceptedFileType","Editor","setActiveImage","updateModelAndRender","setLoadingStatus","calculateAllCharacteristics","update","updateMousePositionIndicator","mountEventListeners","mountRenderEngines","unmountEventListeners","prevProps","prevState","snapshot","swapSupportRenderingEngine","onContextMenu","preventDefault","loadDataFromLocalStorge","LOAD_DATA_FROM_LOCALSTORGE","totalImageCount","windowSize","_useState","useState","_useState2","slicedToArray","leftTabStatus","setLeftTabStatus","_useState3","_useState4","rightTabStatus","setRightTabStatus","calculateEditorSize","leftTabWidth","rightTabWidth","leftSideBarButtonOnClick","rightSideBarButtonOnClick","useEffect","SideNavigationBar_SideNavigationBar_SideNavigationBar","VerticalEditorButton_VerticalEditorButton_VerticalEditorButton","SideNavigationBar_ImagesList_ImagesList","onMouseDown","EditorView_Editor_Editor","EditorView_BottomNavigationBar_BottomNavigationBar","SideNavigationBar_LabelsToolkit_LabelsToolkit","pointLabeledImages","currentCount","currentImage","rectLabeledImages","polygonLabeledImages","getProgress","UnderlineTextButton","under","over","TextInput","isPassword","onFocus","inputStyle","labelStyle","barStyle","htmlFor","updateProjectName","UPDATE_PROJECT_NAME","EditorView_StateBar_StateBar","Common_TextInput_TextInput","toLowerCase","replace","setSelectionRange","UnderlineTextButton_UnderlineTextButton_UnderlineTextButton","EXPORT_LABELS","withPopup","EditorView_TopNavigationBar_TopNavigationBar","EditorView_EditorContainer_EditorContainer","SocialMediaData","displayName","tooltipMessage","EditorFeatureData","displayText","GenericYesNoPopup","acceptLabel","onAccept","skipAcceptButton","disableAcceptButton","rejectLabel","onReject","skipRejectButton","disableRejectButton","setMountStatus","_useCookies","useCookies","_useCookies2","setCookie","username","setUsername","password","setPassword","_useState5","_useState6","isLogin","setIsLogin","_useState7","_useState8","dirList","setDirList","_useState9","_useState10","selectDirName","setSelectDirName","_useState11","_useState12","isLoaded","setIsLoaded","onChangeUsername","val","onChangePassword","onSelectDir","dirName","dir","pageNo","pageSize","importImagesDataFromHttp","rows","urlAry","number","blob","file","File","onabort","img","groupListData","tempImageData","sort","readAsDataURL","GenericYesNoPopup_GenericYesNoPopup_GenericYesNoPopup","lib","fontSize","OBJECT_DETECTION","res","MainView","projectInProgress","setProjectInProgress","projectCanceled","setProjectCanceled","withStyles","theme","tooltip","backgroundColor","boxShadow","shadows","Tooltip","InProgress","Canceled","LoginPopup_LoginPopup","location","ExportFormatType","labelsList","setLabelsList","invalidFileLoadedStatus","setInvalidFileLoadedStatus","_useDropzone","useDropzone","accept","TEXT","multiple","onDrop","acceptedFiles","loadLabelsList","getRootProps","getInputProps","INSERT_LABEL_NAMES","XMLSanitizerUtil","input","ExporterUtil","getProjectName","date","moment","format","RectLabelsExporter","exportFormatType","YOLO","exportAsYOLO","VOC","exportAsVOC","CSV","exportAsCSV","zip","JSZip","fileContent","wrapRectLabelsIntoYOLO","fileName","error","Error","generateAsync","saveAs","getExportFileName","toFixed","join","wrapImageIntoVOC","labelNamesList","getLabelNames","labels","wrapRectLabelsIntoVOC","sanitize","wrapRectLabelsIntoCSV","imageLabelData","Blob","AllExportFormatData","PointExportFormatData","PointLabelsExporter","AllLabelsExporter","exportAsJson","mapImagesDataToVGGObject","mapImageDataToVGGFileData","regionsDataArray","mapImageDataToVGG","orderArray","tempArray","is_checked","all_points","temp","peopleDataArray","personData","pose_keypoints_2d","label_name","people","validPointLabelsArray","getValidPointLabelsArray","pointsData","validLabels","group","PolygonExportFormatData","VGG_JSON","PolygonLabelsExporter","exportAsVGGJson","regionsData","fileref","filename","base64_img_data","file_attributes","regions","getValidPolygonLabels","shape_attributes","mapPolygonToVGG","region_attributes","all_points_x","all_points_y","RectExportFormatData","ALL","exportLabelType","setExportLabelType","setExportFormatType","getOptions","exportFormatData","entry","export","setLabelNames","addHandle","newLabelNames","InsertLabelNamesPopup_objectSpread","defineProperty","labelInputs","keys","deleteHandle","extractLabelNamesList","LOAD_LABEL_NAMES","useCallback","IMAGE","mapFileDataToImageData","PopupView_LoadLabelNamesPopup_LoadLabelNamesPopup","PopupView_ExportLabelsPopup_ExportLabelPopup","PopupView_InsertLabelNamesPopup_InsertLabelNamesPopup","EXIT_PROJECT","PopupView_ExitProjectPopup_ExitProjectPopup","PopupView_LoadMoreImagesPopup_LoadMoreImagesPopup","selectPopup","scrollPosition","setScrollPosition","getEditorFeatureTiles","features","topNavigationBar","Hide","Show","firstStage","secondStage","thirdStage","fourthStage","getSocialMediaButtons","SizeItUpView","manufacturer","os","views_MobileMainView_MobileMainView","SizeItUpView_SizeItUpView_SizeItUpView","views_EditorView_EditorView","views_MainView_MainView","views_PopupView_PopupView","dist_default","Boolean","hostname","match","initialState","rootReducer","combineReducers","UPDATE_WINDOW_SIZE","reducer_objectSpread","_action$payload","addImagesData","newData","newGroupList","activeGroup","newActiveGroupIndex","findIndex","allIndex","Array","v","k","difference","PlatformUtil","userAgent","mobileDetect","MobileDetect","mobile","browser","AppInitializer","handleResize","detectDeviceParams","init","innerWidth","navigator","getMobileDeviceData","__webpack_require__","d","__webpack_exports__","createStore","inti","ReactDOM","es","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.074ee361.chunk.js","sourcesContent":["export enum Direction {\n    TOP = \"TOP\",\n    BOTTOM = \"BOTTOM\",\n    LEFT = \"LEFT\",\n    RIGHT = \"RIGHT\",\n    TOP_RIGHT = \"TOP_RIGHT\",\n    TOP_LEFT = \"TOP_LEFT\",\n    BOTTOM_RIGHT = \"BOTTOM_RIGHT\",\n    BOTTOM_LEFT = \"BOTTOM_LEFT\",\n    CENTER = \"CENTER\"\n}","export enum PopupWindowType {\n    LOAD_LABEL_NAMES = \"LOAD_LABEL_NAMES\",\n    LOAD_IMAGES = \"LOAD_IMAGES\",\n    EXPORT_LABELS = \"EXPORT_LABELS\",\n    INSERT_LABEL_NAMES = 'INSERT_LABEL_NAMES',\n    EXIT_PROJECT = 'EXIT_PROJECT'\n}","import { PopupWindowType } from \"../data/enums/PopupWindowType\";\n\nexport class Settings {\n  public static readonly GITHUB_URL: string = \"https://github.com/SkalskiP\";\n  public static readonly MEDIUM_URL: string = \"https://medium.com/@piotr.skalski92\";\n  public static readonly PATREON_URL: string = \"https://www.patreon.com/make_sense\";\n\n  public static readonly TOP_NAVIGATION_BAR_HEIGHT_PX: number = 35;\n  public static readonly BOTTOM_NAVIGATION_BAR_HEIGHT_PX: number = 45 + 1;\n  public static readonly SIDE_NAVIGATION_BAR_WIDTH_CLOSED_PX: number = 20 + 1;\n  public static readonly SIDE_NAVIGATION_BAR_WIDTH_OPEN_PX: number =\n    Settings.SIDE_NAVIGATION_BAR_WIDTH_CLOSED_PX + 300 + 1;\n  public static readonly TOOLKIT_TAB_HEIGHT_PX: number = 40;\n\n  public static readonly EDITOR_MIN_WIDTH: number = 900;\n  public static readonly EDITOR_MIN_HEIGHT: number = 500;\n\n  public static readonly PRIMARY_COLOR: string = \"#2af598\";\n  public static readonly SECONDARY_COLOR: string = \"#009efd\";\n\n  public static readonly DARK_THEME_FIRST_COLOR: string = \"#171717\";\n  public static readonly DARK_THEME_SECOND_COLOR: string = \"#C9FF2F\";\n  public static readonly DARK_THEME_THIRD_COLOR: string = \"#4c4c4c\";\n  public static readonly DARK_THEME_FORTH_COLOR: string = \"#252f35\";\n\n  public static readonly CANVAS_PADDING_WIDTH_PX: number = 20;\n  public static readonly CROSS_HAIR_THICKNESS_PX: number = 1;\n  public static readonly CROSS_HAIR_COLOR: string = \"#fff\";\n\n  public static readonly RESIZE_HANDLE_DIMENSION_PX: number = 6;\n  public static readonly RESIZE_HANDLE_HOVER_DIMENSION_PX = 16;\n\n  public static readonly CLOSEABLE_POPUPS: PopupWindowType[] = [\n    PopupWindowType.LOAD_IMAGES,\n    PopupWindowType.LOAD_IMAGES,\n    PopupWindowType.LOAD_IMAGES,\n  ];\n}\n","export enum Action {\n  UPDATE_PROJECT_TYPE = '@@UPDATE_PROJECT_TYPE',\n  UPDATE_PROJECT_NAME = '@@UPDATE_PROJECT_NAME',\n  UPDATE_ACTIVE_IMAGE_INDEX = '@@UPDATE_ACTIVE_IMAGE_INDEX',\n  UPDATE_IMAGE_DATA_BY_ID = '@@UPDATE_IMAGE_DATA_BY_ID',\n  UPDATE_GROUP_DATA_BY_INDEX = '@@UPDATE_GROUP_DATA_BY_INDEX',\n  ADD_IMAGES_DATA = '@@ADD_IMAGES_DATA',\n  UPDATE_IMAGES_DATA = '@@UPDATE_IMAGES_DATA',\n  UPDATE_WINDOW_SIZE = '@@UPDATE_WINDOW_SIZE',\n  UPDATE_ACTIVE_POPUP_TYPE = '@@UPDATE_ACTIVE_POPUP_TYPE',\n  UPDATE_ACTIVE_LABEL_NAME_INDEX = '@@UPDATE_ACTIVE_LABEL_NAME_INDEX',\n  UPDATE_ACTIVE_LABEL_TYPE = '@@UPDATE_ACTIVE_LABEL_TYPE',\n  UPDATE_ACTIVE_LABEL_ID = '@@UPDATE_ACTIVE_LABEL_ID',\n  UPDATE_HIGHLIGHTED_LABEL_ID = '@@UPDATE_HIGHLIGHTED_LABEL_ID',\n  UPDATE_LABEL_NAMES_LIST = '@@UPDATE_LABEL_NAMES_LIST',\n  UPDATE_FIRST_LABEL_CREATED_FLAG = '@@UPDATE_FIRST_LABEL_CREATED_FLAG',\n  UPDATE_CUSTOM_CURSOR_STYLE = '@@UPDATE_CUSTOM_CURSOR_STYLE',\n  UPDATE_CONTEXT = '@@UPDATE_CONTEXT',\n  UPDATE_GROUP_LIST = '@@UPDATE_GROUP_LIST',\n  UPDATE_ACTIVE_GROUP_INDEX = '@@UPDATE_ACTIVE_GROUP_INDEX',\n  FIND_NEXT_AVAILABLE_LABEL_INDEX = '@@FIND_NEXT_AVAILABLE_LABEL_INDEX',\n  DELETE_GROUP_LIST = '@@DELETE_GROUP_LIST',\n  LOAD_DATA_FROM_LOCALSTORGE = '@@LOAD_DATA_FROM_LOCALSTORGE',\n  UPDATE_LABEL_INDEX_BY_INFO = '@@UPDATE_LABEL_INDEX_BY_INFO',\n}\n","import { ProjectType } from '../../data/enums/ProjectType';\nimport { EditorActionTypes, ImageData } from './types';\nimport { Action } from '../Actions';\nimport { LabelType } from '../../data/enums/LabelType';\n\nexport function updateProjectType(projectType: ProjectType): EditorActionTypes {\n  return {\n    type: Action.UPDATE_PROJECT_TYPE,\n    payload: {\n      projectType,\n    },\n  };\n}\n\nexport function updateProjectName(projectName: string): EditorActionTypes {\n  return {\n    type: Action.UPDATE_PROJECT_NAME,\n    payload: {\n      projectName,\n    },\n  };\n}\n\nexport function updateActiveImageIndex(activeImageIndex: number): EditorActionTypes {\n  return {\n    type: Action.UPDATE_ACTIVE_IMAGE_INDEX,\n    payload: {\n      activeImageIndex,\n    },\n  };\n}\n\nexport function updateActiveLabelNameIndex(activeLabelNameIndex: number): EditorActionTypes {\n  return {\n    type: Action.UPDATE_ACTIVE_LABEL_NAME_INDEX,\n    payload: {\n      activeLabelNameIndex,\n    },\n  };\n}\n\nexport function updateLabelIndexByInfo(\n  imageIndex: number,\n  groupIndex: number,\n  labelPointIndex: number,\n  labelIndex: number,\n  labelCheckd: boolean\n): EditorActionTypes {\n  return {\n    type: Action.UPDATE_LABEL_INDEX_BY_INFO,\n    payload: {\n      imageIndex,\n      groupIndex,\n      labelPointIndex,\n      labelIndex,\n      labelCheckd,\n    },\n  };\n}\n\nexport function updateActiveLabelId(activeLabelId: string): EditorActionTypes {\n  return {\n    type: Action.UPDATE_ACTIVE_LABEL_ID,\n    payload: {\n      activeLabelId,\n    },\n  };\n}\n\nexport function updateHighlightedLabelId(highlightedLabelId: string): EditorActionTypes {\n  return {\n    type: Action.UPDATE_HIGHLIGHTED_LABEL_ID,\n    payload: {\n      highlightedLabelId,\n    },\n  };\n}\n\nexport function updateActiveLabelType(activeLabelType: LabelType): EditorActionTypes {\n  return {\n    type: Action.UPDATE_ACTIVE_LABEL_TYPE,\n    payload: {\n      activeLabelType,\n    },\n  };\n}\n\nexport function updateImageDataById(id: string, newImageData: ImageData): EditorActionTypes {\n  return {\n    type: Action.UPDATE_IMAGE_DATA_BY_ID,\n    payload: {\n      id,\n      newImageData,\n    },\n  };\n}\n\nexport function addImageData(imageData: ImageData[]): EditorActionTypes {\n  return {\n    type: Action.ADD_IMAGES_DATA,\n    payload: {\n      imageData,\n    },\n  };\n}\n\nexport function updateImageData(imageData: ImageData[]): EditorActionTypes {\n  return {\n    type: Action.UPDATE_IMAGES_DATA,\n    payload: {\n      imageData,\n    },\n  };\n}\n\nexport function updateLabelNamesList(labelNames: string[]) {\n  return {\n    type: Action.UPDATE_LABEL_NAMES_LIST,\n    payload: {\n      labelNames,\n    },\n  };\n}\n\nexport function updateFirstLabelCreatedFlag(firstLabelCreatedFlag: boolean) {\n  return {\n    type: Action.UPDATE_FIRST_LABEL_CREATED_FLAG,\n    payload: {\n      firstLabelCreatedFlag,\n    },\n  };\n}\n\nexport function updateGroupList(groupName: string) {\n  return {\n    type: Action.UPDATE_GROUP_LIST,\n    payload: {\n      groupName,\n    },\n  };\n}\nexport function updateActiveGroupIndex(groupIndex: number) {\n  return {\n    type: Action.UPDATE_ACTIVE_GROUP_INDEX,\n    payload: {\n      groupIndex,\n    },\n  };\n}\nexport function findNextAvailableLabelIndex() {\n  return {\n    type: Action.FIND_NEXT_AVAILABLE_LABEL_INDEX,\n  };\n}\n\nexport function deleteGroupList(groupIndex: number) {\n  return {\n    type: Action.DELETE_GROUP_LIST,\n    payload: {\n      groupIndex,\n    },\n  };\n}\n\nexport function loadDataFromLocalStorge() {\n  return {\n    type: Action.LOAD_DATA_FROM_LOCALSTORGE,\n  };\n}\n","import {ISize} from \"../interfaces/ISize\";\nimport {IPoint} from \"../interfaces/IPoint\";\n\nexport class VirtualListUtil {\n    public static calculateGridSize(listSize: ISize, childSize: ISize, childCount: number): ISize {\n        const columnCount: number = Math.floor(listSize.width / childSize.width);\n        const rowCount: number = Math.ceil(childCount / columnCount);\n        return {width: columnCount, height: rowCount};\n    }\n\n    public static calculateContentSize(listSize: ISize, childSize: ISize, gridSize: ISize): ISize {\n        const sizeFromGrid:ISize = {\n            width: childSize.width * gridSize.width,\n            height: childSize.height * gridSize.height\n        };\n\n        return {\n            width: Math.max(listSize.width, sizeFromGrid.width),\n            height: sizeFromGrid.height\n        }\n    }\n\n    public static calculateAnchorPoints(listSize: ISize, childSize: ISize, childCount: number): IPoint[] {\n        const gridSize: ISize = VirtualListUtil.calculateGridSize(listSize, childSize, childCount);\n        const contentWrapperSize: ISize = VirtualListUtil.calculateContentSize(listSize, childSize, gridSize);\n        const horizontalMargin = (contentWrapperSize.width - gridSize.width * childSize.width) / (gridSize.width + 1);\n\n        let anchors = [];\n        for (let i = 0; i < childCount; i++) {\n            const rowCount: number = Math.floor(i / gridSize.width);\n            const columnCount: number = i % gridSize.width;\n\n            const anchor: IPoint = {\n                x: rowCount * horizontalMargin + columnCount * childSize.width,\n                y: rowCount * childSize.height\n            };\n            anchors.push(anchor);\n        }\n        return anchors;\n    }\n}","export class NumberUtil {\n    public static snapValueToRange(value: number, min: number, max: number): number {\n        if (value < min)\n            return min;\n        if (value > max)\n            return max;\n\n        return value;\n    }\n}","import {IRect} from \"../interfaces/IRect\";\nimport {IPoint} from \"../interfaces/IPoint\";\nimport {ISize} from \"../interfaces/ISize\";\nimport {RectAnchor} from \"../data/RectAnchor\";\nimport {NumberUtil} from \"./NumberUtil\";\nimport {Direction} from \"../data/enums/Direction\";\n\nexport class RectUtil {\n    public static getRatio(rect: IRect): number {\n        if (!rect) return null;\n\n        return rect.width/rect.height\n    }\n\n    public static intersect(r1: IRect, r2: IRect) {\n        if (!r1 || !r2) return null;\n        return !(\n            r2.x > r1.x + r1.width ||\n            r2.x + r2.width < r1.x ||\n            r2.y > r1.y + r1.height ||\n            r2.y + r2.height < r1.y\n        );\n    }\n\n    public static isPointInside(rect: IRect, point: IPoint): boolean {\n        if (!rect || !point) return null;\n        return (\n            rect.x < point.x &&\n            rect.x + rect.width > point.x &&\n            rect.y < point.y &&\n            rect.y + rect.height > point.y\n        )\n    }\n\n    public static getRectWithCenterAndSize(centerPoint: IPoint, size: ISize): IRect {\n        return {\n            x: centerPoint.x - 0.5 * size.width,\n            y: centerPoint.y - 0.5 * size.height,\n            ...size\n        }\n    }\n\n    public static fitInsideRectWithRatio(containerRect: IRect, ratio: number): IRect {\n        const containerRectRatio = RectUtil.getRatio(containerRect);\n        if (containerRectRatio < ratio) {\n            const innerRectHeight = containerRect.width / ratio;\n            return {\n                x: containerRect.x,\n                y: containerRect.y + (containerRect.height - innerRectHeight) / 2,\n                width: containerRect.width,\n                height: innerRectHeight\n            }\n        }\n        else {\n            const innerRectWidth = containerRect.height * ratio;\n            return {\n                x: containerRect.x + (containerRect.width - innerRectWidth) / 2,\n                y: containerRect.y,\n                width: innerRectWidth,\n                height: containerRect.height\n            }\n        }\n    }\n\n    public static resizeRect(inputRect: IRect, rectAnchor: Direction, delta): IRect {\n        const rect: IRect = {...inputRect};\n        switch (rectAnchor) {\n            case Direction.RIGHT:\n                rect.width += delta.x;\n                break;\n            case Direction.BOTTOM_RIGHT:\n                rect.width += delta.x;\n                rect.height += delta.y;\n                break;\n            case Direction.BOTTOM:\n                rect.height += delta.y;\n                break;\n            case Direction.TOP_RIGHT:\n                rect.width += delta.x;\n                rect.y += delta.y;\n                rect.height -= delta.y;\n                break;\n            case Direction.TOP:\n                rect.y += delta.y;\n                rect.height -= delta.y;\n                break;\n            case Direction.TOP_LEFT:\n                rect.x += delta.x;\n                rect.width -= delta.x;\n                rect.y += delta.y;\n                rect.height -= delta.y;\n                break;\n            case Direction.LEFT:\n                rect.x += delta.x;\n                rect.width -= delta.x;\n                break;\n            case Direction.BOTTOM_LEFT:\n                rect.x += delta.x;\n                rect.width -= delta.x;\n                rect.height += delta.y;\n                break;\n        }\n\n        if (rect.width < 0)  {\n            rect.x = rect.x + rect.width;\n            rect.width = - rect.width;\n        }\n\n        if (rect.height < 0)  {\n            rect.y = rect.y + rect.height;\n            rect.height = - rect.height;\n        }\n\n        return rect;\n    }\n\n    public static translate(rect: IRect, delta: IPoint): IRect {\n        return {\n            ...rect,\n            x: rect.x + delta.x,\n            y: rect.y + delta.y\n        }\n    }\n\n    public static expand(rect: IRect, delta: IPoint): IRect {\n        return {\n            x: rect.x - delta.x,\n            y: rect.y - delta.y,\n            width: rect.width + 2 * delta.x,\n            height: rect.height + 2 * delta.y\n        }\n    }\n\n    public static scaleRect(rect:IRect, scale: number): IRect {\n        return {\n            x: rect.x * scale,\n            y: rect.y * scale,\n            width: rect.width * scale,\n            height: rect.height * scale\n        }\n    }\n\n    public static mapRectToAnchors(rect: IRect): RectAnchor[] {\n        return [\n            {type: Direction.TOP_LEFT, position: {x: rect.x, y: rect.y}},\n            {type: Direction.TOP, position: {x: rect.x + 0.5 * rect.width, y: rect.y}},\n            {type: Direction.TOP_RIGHT, position: {x: rect.x + rect.width, y: rect.y}},\n            {type: Direction.LEFT, position: {x: rect.x, y: rect.y + 0.5 * rect.height}},\n            {type: Direction.RIGHT, position: {x: rect.x + rect.width, y: rect.y + 0.5 * rect.height}},\n            {type: Direction.BOTTOM_LEFT, position: {x: rect.x, y: rect.y + rect.height}},\n            {type: Direction.BOTTOM, position: {x: rect.x + 0.5 * rect.width, y: rect.y + rect.height}},\n            {type: Direction.BOTTOM_RIGHT, position: {x: rect.x + rect.width, y: rect.y + rect.height}}\n        ]\n    }\n\n    public static snapPointToRect(point: IPoint, rect: IRect): IPoint {\n        if (RectUtil.isPointInside(rect, point))\n            return point;\n\n        return {\n            x: NumberUtil.snapValueToRange(point.x, rect.x, rect.x + rect.width),\n            y: NumberUtil.snapValueToRange(point.y, rect.y, rect.y + rect.height)\n        }\n    }\n}","import React from 'react';\nimport { ISize } from '../../../interfaces/ISize';\nimport { IRect } from '../../../interfaces/IRect';\nimport Scrollbars from 'react-custom-scrollbars';\nimport { VirtualListUtil } from '../../../utils/VirtualListUtil';\nimport { IPoint } from '../../../interfaces/IPoint';\nimport { RectUtil } from '../../../utils/RectUtil';\nimport _ from 'lodash';\nimport { EditorActions } from '../../../logic/actions/EditorActions';\nimport { EditorSelector } from '../../../store/selectors/EditorSelector';\nimport { ImageData } from '../../../store/editor/types';\nimport {\n  updateGroupList,\n  updateActiveGroupIndex,\n  updateLabelIndexByInfo,\n  updateActiveImageIndex,\n} from '../../../store/editor/actionCreators';\nimport { RenderEngineUtil } from '../../../utils/RenderEngineUtil';\nimport { EditorModel } from '../../../staticModels/EditorModel';\n\ninterface IProps {\n  size: ISize;\n  childCount: number;\n  childSize: ISize;\n  childRender: (index: number, isScrolling: boolean, isVisible: boolean, style: React.CSSProperties) => any;\n  overScanHeight?: number;\n}\n\ninterface IState {\n  viewportRect: IRect;\n  isScrolling: boolean;\n}\n\nexport class VirtualList extends React.Component<IProps, IState> {\n  private gridSize: ISize;\n  private contentSize: ISize;\n  private childAnchors: IPoint[];\n  private scrollbars: Scrollbars;\n  private loading: boolean;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      viewportRect: null,\n      isScrolling: false,\n    };\n    this.loading = false;\n  }\n\n  public componentDidMount(): void {\n    const { size, childSize, childCount } = this.props;\n    this.calculate(size, childSize, childCount);\n    this.setState({\n      viewportRect: {\n        x: 0,\n        y: 0,\n        width: this.props.size.width,\n        height: this.props.size.height,\n      },\n    });\n  }\n\n  public componentWillUpdate(nextProps: Readonly<IProps>, nextState: Readonly<IState>, nextContext: any): void {\n    const { size, childSize, childCount } = nextProps;\n    if (\n      this.props.size.height !== size.height ||\n      this.props.size.width !== size.width ||\n      this.props.childCount !== childCount\n    ) {\n      this.calculate(size, childSize, childCount);\n      this.setState({\n        viewportRect: {\n          x: this.scrollbars.getValues().scrollLeft,\n          y: this.scrollbars.getValues().scrollTop,\n          width: size.width,\n          height: size.height,\n        },\n      });\n    }\n  }\n\n  private calculate = (size: ISize, childSize: ISize, childCount: number) => {\n    this.gridSize = VirtualListUtil.calculateGridSize(size, childSize, childCount);\n    this.contentSize = VirtualListUtil.calculateContentSize(size, childSize, this.gridSize);\n    this.childAnchors = VirtualListUtil.calculateAnchorPoints(size, childSize, childCount);\n  };\n\n  private getVirtualListStyle = (): React.CSSProperties => {\n    return {\n      position: 'relative',\n      width: this.props.size.width,\n      height: this.props.size.height,\n    };\n  };\n\n  private getVirtualListContentStyle = (): React.CSSProperties => {\n    return {\n      width: this.contentSize.width,\n      height: this.contentSize.height,\n    };\n  };\n\n  private onScrollStart = () => {\n    this.setState({ isScrolling: true });\n  };\n\n  private onScrollStop = () => {\n    this.setState({ isScrolling: false });\n    // this.onUpdate();\n  };\n\n  private onScroll = values => {\n    this.setState({\n      viewportRect: {\n        x: values.scrollLeft,\n        y: values.scrollTop,\n        width: this.props.size.width,\n        height: this.props.size.height,\n      },\n    });\n  };\n\n  private getChildren = () => {\n    const { viewportRect, isScrolling } = this.state;\n    const { overScanHeight, childSize } = this.props;\n    const overScan: number = !!overScanHeight ? overScanHeight : 0;\n\n    const viewportRectWithOverScan: IRect = {\n      x: viewportRect.x,\n      y: viewportRect.y - overScan,\n      width: viewportRect.width,\n      height: viewportRect.height + 2 * overScan,\n    };\n    // let showImageIndexs: number[] = [];\n    const result = this.childAnchors.reduce((children, anchor: IPoint, index: number) => {\n      const childRect = Object.assign(anchor, childSize);\n      const isVisible = RectUtil.intersect(viewportRectWithOverScan, childRect);\n\n      if (isVisible) {\n        const childStyle: React.CSSProperties = {\n          position: 'absolute',\n          left: anchor.x,\n          top: anchor.y,\n          width: childSize.width,\n          height: childSize.height,\n        };\n        // showImageIndexs.push(index);\n        return children.concat(this.props.childRender(index, isScrolling, isVisible, childStyle));\n      } else {\n        return children;\n      }\n    }, []);\n    // if (showImageIndexs && !_.isEqual(showImageIndexs, (window as any).showImageIndexs)) {\n    //   console.log(showImageIndexs, (window as any).showImageIndexs, '(window as any).showImageIndexs');\n    //   (window as any).showImageIndexs = showImageIndexs;\n    // }\n\n    return result;\n  };\n  // private onUpdate = () => {\n  //   const imagesData = EditorSelector.getImagesData();\n  //   const activeImageIndex = EditorSelector.getActiveImageIndex();\n  //   if (this.state.isScrolling) {\n  //     return;\n  //   }\n  //   setTimeout(() => {\n  //     localStorage.setItem(\n  //       'offsetHeight',\n  //       (document.getElementsByClassName('TopNavigationBar')[0] as any).offsetHeight\n  //     );\n  //     localStorage.setItem(\n  //       'offsetWidth',\n  //       (document.getElementsByClassName('SideNavigationBar left')[0] as any).offsetWidth\n  //     );\n  //     const editorData = EditorActions.getEditorData();\n  //     const offsetWidth = localStorage.getItem('offsetWidth');\n  //     const offsetHeight = localStorage.getItem('offsetHeight');\n  //     const newIndexs: number[] = [];\n  //     [].slice\n  //       .call(document.getElementsByClassName('ImagePreview'))\n  //       .forEach(r => newIndexs.push(+r.getAttribute('data-index')));\n  //     // const showImageIndexs: number[] = (window as any).showImageIndexs || [];\n  //     const showImagesData = imagesData.filter((itme, idx) => newIndexs.includes(idx));\n  //     showImagesData.forEach((imageData, imageIndex) => {\n  //       const localData: ImageData = JSON.parse(localStorage.getItem(imageData.fileData.name));\n  //       // updateActiveImageIndex(imageIndex);\n  //       const evt_click = new MouseEvent('click', {\n  //         bubbles: true,\n  //         view: window,\n  //       });\n  //       document.querySelectorAll('.VirtualListContent .ImagePreview')[imageIndex].dispatchEvent(evt_click);\n  //       if (localData) {\n  //         localData.groupList.forEach((item, groupIndex) => {\n  //           if (groupIndex !== 0) {\n  //             updateGroupList(`person-${groupIndex}`);\n  //             updateActiveGroupIndex(groupIndex);\n  //           }\n  //           item.labelPoints.forEach((labelPoint, labelPointIndex) => {\n  //             const point = RenderEngineUtil.transferPointFromImageToCanvas(labelPoint.point, editorData);\n  //             const evt_up = new MouseEvent('mouseup', {\n  //               bubbles: true,\n  //               view: window,\n  //               clientX: point.x + +offsetWidth,\n  //               clientY: point.y + +offsetHeight,\n  //             });\n  //             const evt_down = new MouseEvent('mousedown', {\n  //               bubbles: true,\n  //               view: window,\n  //               clientX: point.x + +offsetWidth,\n  //               clientY: point.y + +offsetHeight,\n  //             });\n  //             EditorModel.canvas.dispatchEvent(evt_up);\n  //             EditorModel.canvas.dispatchEvent(evt_down);\n  //             updateLabelIndexByInfo(\n  //               imageIndex,\n  //               groupIndex,\n  //               labelPointIndex,\n  //               labelPoint.labelIndex,\n  //               labelPoint.checked\n  //             );\n  //           });\n  //         });\n  //       }\n  //     });\n  //     //   updateActiveImageIndex(activeImageIndex);\n  //   }, 1000);\n  // };\n  public render() {\n    const displayContent = !!this.props.size && !!this.props.childSize && !!this.gridSize;\n\n    return (\n      <div className=\"VirtualList\" style={this.getVirtualListStyle()}>\n        <Scrollbars\n          ref={ref => (this.scrollbars = ref)}\n          onScrollFrame={this.onScroll}\n          onScrollStart={this.onScrollStart}\n          onScrollStop={this.onScrollStop}\n          autoHide={true}\n          //   onUpdate={this.onUpdate}\n        >\n          {displayContent && (\n            <div className=\"VirtualListContent\" style={this.getVirtualListContentStyle()}>\n              {this.getChildren()}\n            </div>\n          )}\n        </Scrollbars>\n      </div>\n    );\n  }\n}\n","export class ImageLoadManager {\n  private static queue: (() => Promise<any>)[] = [];\n  private static isRunning: boolean = false;\n\n  public static add(fx: Promise<any>) {\n    ImageLoadManager.queue.push(async () => await fx);\n  }\n\n  public static run() {\n    setTimeout(() => ImageLoadManager.runQueue(), 10);\n  }\n\n  public static addAndRun(fx: Promise<any>) {\n    ImageLoadManager.add(fx);\n    ImageLoadManager.run();\n  }\n\n  public static async runQueue() {\n    if (!ImageLoadManager.isRunning) {\n      ImageLoadManager.isRunning = true;\n      await ImageLoadManager.runTasks();\n      ImageLoadManager.isRunning = false;\n    }\n  }\n\n  private static async runTasks() {\n    while (ImageLoadManager.queue.length > 0) {\n      const fx = ImageLoadManager.queue.shift();\n      await fx();\n    }\n  }\n}\n","export type ImageMap = { [s: string]: HTMLImageElement; };\n\nexport class ImageRepository {\n    private static repository: ImageMap = {};\n\n    public static store(uuid: string, image: HTMLImageElement): string {\n        ImageRepository.repository[uuid] = image;\n        return uuid;\n    }\n\n    public static getById(uuid: string): HTMLImageElement {\n        return ImageRepository.repository[uuid];\n    }\n}","import uuidv1 from 'uuid/v1';\nimport { ImageData } from '../store/editor/types';\n\nexport class FileUtil {\n  public static mapFileDataToImageData(fileData: File): ImageData {\n    if (JSON.parse(localStorage.getItem(fileData.name))) {\n      var newfileData = JSON.parse(localStorage.getItem(fileData.name));\n      newfileData.fileData = fileData;\n      newfileData.loadStatus = false;\n      // newfileData.groupList.forEach((item, idx) => {\n      //   item.firstLabelCreatedFlag = false;\n      //   // newfileData.groupList[idx].labelPoints = [];\n      // });\n      // console.log(newfileData);\n      return newfileData;\n    }\n    return {\n      id: uuidv1(),\n      fileData: fileData,\n      loadStatus: false,\n      activeGroupIndex: 0,\n      groupList: [\n        {\n          labelRects: [],\n          labelPoints: [],\n          labelPolygons: [],\n          activeLabelNameIndex: 0,\n          activeLabelType: null,\n          activeLabelId: null,\n          highlightedLabelId: null,\n          firstLabelCreatedFlag: false,\n        },\n      ],\n    };\n  }\n\n  public static loadImage(\n    fileData: File,\n    onSuccess: (image: HTMLImageElement) => any,\n    onFailure: () => any\n  ): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const url = URL.createObjectURL(fileData);\n      const image = new Image();\n      image.src = url;\n      image.onload = () => {\n        onSuccess(image);\n        resolve();\n      };\n      image.onerror = () => {\n        onFailure();\n        reject();\n      };\n    });\n  }\n\n  public static loadLabelsList(fileData: File, onSuccess: (labels: string[]) => any, onFailure: () => any) {\n    const reader = new FileReader();\n    reader.readAsText(fileData);\n    reader.onloadend = function(evt: any) {\n      const contents: string = evt.target.result;\n      onSuccess(contents.split(/[\\r\\n]/));\n    };\n    reader.onerror = () => onFailure();\n  }\n}\n","export enum ContextType {\n    EDITOR = \"EDITOR\",\n    LEFT_NAVBAR = \"LEFT_NAVBAR\",\n    RIGHT_NAVBAR = \"RIGHT_NAVBAR\",\n    POPUP = \"POPUP\",\n    DROPDOWN = \"DROPDOWN\"\n}","import classNames from 'classnames';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { ClipLoader } from 'react-spinners';\nimport { ImageLoadManager } from '../../../../logic/imageRepository/ImageLoadManager';\nimport { IRect } from '../../../../interfaces/IRect';\nimport { ISize } from '../../../../interfaces/ISize';\nimport { ImageRepository } from '../../../../logic/imageRepository/ImageRepository';\nimport { Settings } from '../../../../settings/Settings';\nimport { AppState } from '../../../../store';\nimport { updateImageDataById } from '../../../../store/editor/actionCreators';\nimport { ImageData } from '../../../../store/editor/types';\nimport { FileUtil } from '../../../../utils/FileUtil';\nimport { RectUtil } from '../../../../utils/RectUtil';\nimport './ImagePreview.scss';\n\ninterface IProps {\n  imageData: ImageData;\n  style: React.CSSProperties;\n  size: ISize;\n  index: number;\n  isScrolling?: boolean;\n  isChecked?: boolean;\n  onClick?: () => any;\n  isSelected?: boolean;\n  updateImageDataById: (id: string, newImageData: ImageData) => any;\n}\n\ninterface IState {\n  image: HTMLImageElement;\n}\n\nclass ImagePreview extends React.Component<IProps, IState> {\n  private isLoading: boolean = false;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      image: null,\n    };\n  }\n\n  public componentDidMount(): void {\n    ImageLoadManager.addAndRun(this.loadImage(this.props.imageData, this.props.isScrolling));\n  }\n\n  public componentWillUpdate(nextProps: Readonly<IProps>, nextState: Readonly<IState>, nextContext: any): void {\n    if (this.props.imageData.id !== nextProps.imageData.id) {\n      if (nextProps.imageData.loadStatus) {\n        ImageLoadManager.addAndRun(this.loadImage(nextProps.imageData, nextProps.isScrolling));\n      } else {\n        this.setState({ image: null });\n      }\n    }\n\n    if (this.props.isScrolling && !nextProps.isScrolling) {\n      ImageLoadManager.addAndRun(this.loadImage(nextProps.imageData, false));\n    }\n  }\n\n  shouldComponentUpdate(nextProps: Readonly<IProps>, nextState: Readonly<IState>, nextContext: any): boolean {\n    return (\n      this.props.imageData.id !== nextProps.imageData.id ||\n      this.state.image !== nextState.image ||\n      this.props.isSelected !== nextProps.isSelected ||\n      this.props.isChecked !== nextProps.isChecked\n    );\n  }\n\n  private loadImage = async (imageData: ImageData, isScrolling: boolean) => {\n    if (imageData.loadStatus) {\n      const image = ImageRepository.getById(imageData.id);\n      if (this.state.image !== image) {\n        this.setState({ image });\n      }\n    } else if (!isScrolling || !this.isLoading) {\n      this.isLoading = true;\n      const saveLoadedImagePartial = (image: HTMLImageElement) => this.saveLoadedImage(image, imageData);\n      await FileUtil.loadImage(imageData.fileData, saveLoadedImagePartial, this.handleLoadImageError);\n    }\n  };\n\n  private saveLoadedImage = (image: HTMLImageElement, imageData: ImageData) => {\n    this.props.updateImageDataById(imageData.id, { ...imageData, loadStatus: true });\n    ImageRepository.store(imageData.id, image);\n    if (imageData.id === this.props.imageData.id) {\n      this.setState({ image });\n      this.isLoading = false;\n    }\n  };\n\n  private getStyle = () => {\n    const { size } = this.props;\n\n    const containerRect: IRect = {\n      x: 0.15 * size.width,\n      y: 0.15 * size.height,\n      width: 0.7 * size.width,\n      height: 0.7 * size.height,\n    };\n\n    const imageRect: IRect = {\n      x: 0,\n      y: 0,\n      width: this.state.image.width,\n      height: this.state.image.height,\n    };\n\n    const imageRatio = RectUtil.getRatio(imageRect);\n    const imagePosition: IRect = RectUtil.fitInsideRectWithRatio(containerRect, imageRatio);\n\n    return {\n      width: imagePosition.width,\n      height: imagePosition.height,\n      left: imagePosition.x,\n      top: imagePosition.y,\n    };\n  };\n\n  private handleLoadImageError = () => {};\n\n  private getClassName = () => {\n    return classNames('ImagePreview', {\n      selected: this.props.isSelected,\n    });\n  };\n\n  public render() {\n    const { isChecked, style, onClick, index } = this.props;\n    return (\n      <div className={this.getClassName()} style={style} onClick={onClick ? onClick : undefined} data-index={index}>\n        {!!this.state.image ? (\n          [\n            <div className=\"Foreground\" key={'Foreground'} style={this.getStyle()}>\n              <img\n                className=\"Image\"\n                draggable={false}\n                src={this.state.image.src}\n                alt={this.state.image.alt}\n                style={{ ...this.getStyle(), left: 0, top: 0 }}\n              />\n              {isChecked && (\n                <img className=\"CheckBox\" draggable={false} src={'ico/checkbox-checked-color.png'} alt={'checkbox'} />\n              )}\n            </div>,\n            <div className=\"Background\" key={'Background'} style={this.getStyle()} />,\n          ]\n        ) : (\n          <ClipLoader sizeUnit={'px'} size={30} color={Settings.SECONDARY_COLOR} loading={true} />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  updateImageDataById,\n};\n\nconst mapStateToProps = (state: AppState) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ImagePreview);\n","import {ISize} from \"../../interfaces/ISize\";\nimport {GeneralActionTypes} from \"./types\";\nimport {Action} from \"../Actions\";\nimport {PopupWindowType} from \"../../data/enums/PopupWindowType\";\nimport {CustomCursorStyle} from \"../../data/enums/CustomCursorStyle\";\nimport {ContextType} from \"../../data/enums/ContextType\";\n\nexport function updateWindowSize(windowSize: ISize): GeneralActionTypes {\n    return {\n        type: Action.UPDATE_WINDOW_SIZE,\n        payload: {\n            windowSize,\n        },\n    };\n}\n\nexport function updateActivePopupType(activePopupType: PopupWindowType): GeneralActionTypes {\n    return {\n        type: Action.UPDATE_ACTIVE_POPUP_TYPE,\n        payload: {\n            activePopupType,\n        }\n    }\n}\n\nexport function updateCustomCursorStyle(customCursorStyle: CustomCursorStyle): GeneralActionTypes {\n    return {\n        type: Action.UPDATE_CUSTOM_CURSOR_STYLE,\n        payload: {\n            customCursorStyle,\n        }\n    }\n}\n\nexport function updateActiveContext(activeContext: ContextType): GeneralActionTypes {\n    return {\n        type: Action.UPDATE_CONTEXT,\n        payload: {\n            activeContext,\n        },\n    };\n}","export enum LabelType {\n  NAME = \"NAME\",\n  POINT = \"POINT\",\n  RECTANGLE = \"RECTANGLE\",\n  POLYGON = \"POLYGON\",\n  ALL = \"ALL\",\n}\n","import { PrimaryEditorRenderEngine } from \"../logic/render/PrimaryEditorRenderEngine\";\nimport { BaseRenderEngine } from \"../logic/render/BaseRenderEngine\";\nimport { IRect } from \"../interfaces/IRect\";\nimport { IPoint } from \"../interfaces/IPoint\";\n\nexport class EditorModel {\n  public static canvas: HTMLCanvasElement;\n  public static mousePositionIndicator: HTMLDivElement;\n  public static cursor: HTMLDivElement;\n  public static primaryRenderingEngine: PrimaryEditorRenderEngine;\n  public static supportRenderingEngine: BaseRenderEngine;\n  public static image: HTMLImageElement;\n  public static imageRectOnCanvas: IRect;\n  public static imageScale: number; // Image / Canvas\n  public static mousePositionOnCanvas: IPoint;\n  public static isLoading: boolean = false;\n}\n","export class UnitUtil {\n\n    public static deg2rad(angleDeg:number) {\n        return(angleDeg * Math.PI/180);\n    }\n\n    public static rad2deg(angleRad:number) {\n        return(angleRad * 180/Math.PI);\n    }\n}","export enum CustomCursorStyle {\n    DEFAULT = \"DEFAULT\",\n    MOVE = \"MOVE\",\n    RESIZE = \"RESIZE\",\n    ADD = \"ADD\",\n    CANCEL = \"CANCEL\",\n    CLOSE = \"CLOSE\"\n}","import { IPoint } from \"../interfaces/IPoint\";\nimport { IRect } from \"../interfaces/IRect\";\nimport { UnitUtil } from \"./UnitUtil\";\n\nexport class DrawUtil {\n  public static clearCanvas(canvas: HTMLCanvasElement): void {\n    let ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n  }\n\n  public static drawLine(\n    canvas: HTMLCanvasElement,\n    startPoint: IPoint,\n    endPoint: IPoint,\n    color: string = \"#111111\",\n    thickness: number = 1\n  ): void {\n    let ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = thickness;\n    ctx.lineCap = \"round\";\n    ctx.beginPath();\n    ctx.moveTo(startPoint.x, startPoint.y);\n    ctx.lineTo(endPoint.x + 1, endPoint.y + 1);\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  public static drawRect(\n    canvas: HTMLCanvasElement,\n    rect: IRect,\n    color: string = \"#fff\",\n    thickness: number = 1\n  ): void {\n    let ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = thickness;\n    ctx.beginPath();\n    ctx.rect(rect.x, rect.y, rect.width, rect.height);\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  public static drawRectWithFill(\n    canvas: HTMLCanvasElement,\n    rect: IRect,\n    color: string = \"#ADCC53\"\n  ): void {\n    let ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\n    ctx.save();\n    ctx.fillStyle = color;\n    ctx.beginPath();\n    ctx.rect(rect.x, rect.y, rect.width, rect.height);\n    ctx.fill();\n    ctx.restore();\n  }\n\n  public static shadeEverythingButRect(\n    canvas: HTMLCanvasElement,\n    rect: IRect,\n    color: string = \"rgba(0, 0, 0, 0.7)\"\n  ): void {\n    let ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\n    ctx.save();\n    ctx.fillStyle = color;\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    ctx.globalCompositeOperation = \"destination-out\";\n    ctx.fillRect(rect.x, rect.y, rect.width, rect.height);\n    ctx.restore();\n  }\n\n  public static drawCircleWithFill(\n    canvas: HTMLCanvasElement,\n    anchorPoint: IPoint,\n    radius: number,\n    color: string = \"#ffffff\"\n  ): void {\n    const ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\n    ctx.save();\n    const startAngleRad = UnitUtil.deg2rad(0);\n    const endAngleRad = UnitUtil.deg2rad(360);\n    ctx.fillStyle = color;\n    ctx.beginPath();\n    ctx.arc(anchorPoint.x, anchorPoint.y, radius, startAngleRad, endAngleRad, false);\n    ctx.fill();\n    ctx.restore();\n  }\n\n  public static drawCircle(\n    canvas: HTMLCanvasElement,\n    anchorPoint: IPoint,\n    radius: number,\n    startAngleDeg: number,\n    endAngleDeg: number,\n    thickness: number = 20,\n    color: string = \"#ffffff\"\n  ): void {\n    let ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\n    let startAngleRad = UnitUtil.deg2rad(startAngleDeg);\n    let endAngleRad = UnitUtil.deg2rad(endAngleDeg);\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = thickness;\n    ctx.beginPath();\n    ctx.arc(anchorPoint.x, anchorPoint.y, radius, startAngleRad, endAngleRad, false);\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  public static drawPolygon(\n    canvas: HTMLCanvasElement,\n    anchors: IPoint[],\n    color: string = \"#fff\",\n    thickness: number = 1\n  ): void {\n    let ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = thickness;\n    ctx.beginPath();\n    ctx.moveTo(anchors[0].x, anchors[0].y);\n    for (let i = 1; i < anchors.length; i++) {\n      ctx.lineTo(anchors[i].x, anchors[i].y);\n    }\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  public static drawPolygonWithFill(\n    canvas: HTMLCanvasElement,\n    anchors: IPoint[],\n    color: string = \"#fff\"\n  ): void {\n    let ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\n    ctx.save();\n    ctx.fillStyle = color;\n    ctx.beginPath();\n    ctx.moveTo(anchors[0].x, anchors[0].y);\n    for (let i = 1; i < anchors.length; i++) {\n      ctx.lineTo(anchors[i].x, anchors[i].y);\n    }\n    ctx.closePath();\n    ctx.fill();\n    ctx.restore();\n  }\n\n  public static drawText(\n    canvas: HTMLCanvasElement,\n    text: string,\n    textSize: number,\n    anchorPoint: IPoint,\n    color: string = \"#ffffff\",\n    bold: boolean = false,\n    align: string = \"center\"\n  ): void {\n    let ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\n    ctx.save();\n    ctx.fillStyle = color;\n    ctx.textAlign = align as CanvasTextAlign;\n    ctx.textBaseline = \"middle\";\n    ctx.font = (bold ? \"bold \" : \"\") + textSize + \"px Arial\";\n    ctx.fillText(text, anchorPoint.x, anchorPoint.y);\n    ctx.restore();\n  }\n\n  public static getRandomRGBColor(): string {\n    return (\n      \"rgb(\" +\n      Math.round(Math.random() * 255) +\n      \",\" +\n      Math.round(Math.random() * 255) +\n      \",\" +\n      Math.round(Math.random() * 255) +\n      \")\"\n    );\n  }\n\n  public static hexToRGB(hex: string, alpha: number): string {\n    const r = parseInt(hex.slice(1, 3), 16);\n    const g = parseInt(hex.slice(3, 5), 16);\n    const b = parseInt(hex.slice(5, 7), 16);\n\n    if (alpha) {\n      return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\n    } else {\n      return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\n    }\n  }\n}\n","import { IPoint } from '../interfaces/IPoint';\n\nexport class PointUtil {\n  public static equals(p1: IPoint, p2: IPoint): boolean {\n    return p1.x === p2.x && p1.y === p2.y;\n  }\n\n  public static add(p1: IPoint, p2: IPoint): IPoint {\n    return {\n      x: p1.x + p2.x,\n      y: p1.y + p2.y,\n    };\n  }\n\n  public static subtract(p1: IPoint, p2: IPoint): IPoint {\n    return {\n      x: p1.x - p2.x,\n      y: p1.y - p2.y,\n    };\n  }\n\n  public static multiply(p1: IPoint, factor: number) {\n    return {\n      x: p1.x * factor,\n      y: p1.y * factor,\n    };\n  }\n\n  public static devide(p1: IPoint, factor: number) {\n    return {\n      x: p1.x / factor,\n      y: p1.y / factor,\n    };\n  }\n\n  public static getEuclidianDistance(p1: IPoint, p2: IPoint): number {\n    return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2));\n  }\n}\n","import {ISize} from \"../interfaces/ISize\";\nimport {Settings} from \"./Settings\";\n\nexport class RenderEngineConfig {\n    public readonly lineThickness: number = 2;\n    public readonly lineActiveColor: string = Settings.PRIMARY_COLOR;\n    public readonly lineInactiveColor: string = \"#fff\";\n    public readonly anchorSize: ISize = {\n        width: Settings.RESIZE_HANDLE_DIMENSION_PX,\n        height: Settings.RESIZE_HANDLE_DIMENSION_PX\n    };\n    public readonly anchorHoverSize: ISize = {\n        width: Settings.RESIZE_HANDLE_HOVER_DIMENSION_PX,\n        height: Settings.RESIZE_HANDLE_HOVER_DIMENSION_PX\n    };\n    public readonly suggestedAnchorDetectionSize: ISize = {\n        width: 100,\n        height: 100\n    };\n    public readonly activeAnchorColor: string = Settings.SECONDARY_COLOR;\n    public readonly inactiveAnchorColor: string = Settings.DARK_THEME_SECOND_COLOR;\n}","import { ImageData, LabelPoint, LabelPolygon, LabelRect } from '../editor/types';\nimport _ from 'lodash';\nimport { LabelType } from '../../data/enums/LabelType';\nimport { store } from '../../index';\n\nexport class EditorSelector {\n  public static getProjectName(): string {\n    return store.getState().editor.projectName;\n  }\n\n  public static getLabelNames(): string[] {\n    return store.getState().editor.labelNames;\n  }\n\n  public static getActiveImageIndex(): number {\n    return store.getState().editor.activeImageIndex;\n  }\n\n  public static getActiveGroupIndex(): number {\n    return store.getState().editor.imagesData[this.getActiveImageIndex()].activeGroupIndex;\n  }\n\n  public static getActiveLabelNameIndex(): number {\n    return store.getState().editor.imagesData[this.getActiveImageIndex()].groupList[this.getActiveGroupIndex()]\n      .activeLabelNameIndex;\n  }\n  public static getLabelNameLength(): number {\n    return store.getState().editor.labelNames.length;\n  }\n\n  public static getImagesData(): ImageData[] {\n    return store.getState().editor.imagesData;\n  }\n\n  public static getActiveImageData(): ImageData | null {\n    let activeImageIndex: number | null = EditorSelector.getActiveImageIndex();\n\n    if (activeImageIndex === null) return null;\n\n    let imagesData: ImageData[] = EditorSelector.getImagesData();\n    return imagesData[activeImageIndex];\n  }\n\n  public static getActiveLabelId(): string | null {\n    const result = store.getState().editor.imagesData[this.getActiveImageIndex()].groupList[this.getActiveGroupIndex()]\n      .activeLabelId;\n    if (!result) {\n      // console.log(result);\n    }\n    return result;\n  }\n\n  public static getHighlightedLabelId(): string | null {\n    return store.getState().editor.imagesData[this.getActiveImageIndex()].groupList[this.getActiveGroupIndex()]\n      .highlightedLabelId;\n  }\n\n  public static getActiveRectLabel(): LabelRect | null {\n    let activeLabelId: string | null = EditorSelector.getActiveLabelId();\n    let activeGroupIndex: number | null = EditorSelector.getActiveGroupIndex();\n\n    if (activeLabelId === null) return null;\n\n    return _.find(EditorSelector.getActiveImageData().groupList[activeGroupIndex].labelRects, {\n      id: activeLabelId,\n    });\n  }\n\n  public static getActivePointLabel(): LabelPoint | null {\n    let activeLabelId: string | null = EditorSelector.getActiveLabelId();\n    let activeGroupIndex: number | null = EditorSelector.getActiveGroupIndex();\n\n    if (activeLabelId === null) return null;\n\n    return _.find(EditorSelector.getActiveImageData().groupList[activeGroupIndex].labelPoints, {\n      id: activeLabelId,\n    });\n  }\n\n  public static getAllPointLabelIndex(): number[] {\n    //  let activeLabelId: string | null = EditorSelector.getActiveLabelId();\n    let activeGroupIndex: number | null = EditorSelector.getActiveGroupIndex();\n\n    const indexs = EditorSelector.getActiveImageData().groupList[activeGroupIndex].labelPoints.map(\n      ele => ele.labelIndex\n    );\n    return indexs;\n  }\n\n  public static getActivePolygonLabel(): LabelPolygon | null {\n    let activeLabelId: string | null = EditorSelector.getActiveLabelId();\n    let activeGroupIndex: number | null = EditorSelector.getActiveGroupIndex();\n\n    if (activeLabelId === null) return null;\n\n    return _.find(EditorSelector.getActiveImageData().groupList[activeGroupIndex].labelPolygons, {\n      id: activeLabelId,\n    });\n  }\n\n  public static getActiveLabelType(): LabelType {\n    return EditorSelector.getActiveImageData().groupList[EditorSelector.getActiveGroupIndex()].activeLabelType;\n  }\n\n  public static getFirstLabelCreatedFlag(): boolean {\n    return EditorSelector.getActiveImageData().groupList[EditorSelector.getActiveGroupIndex()].firstLabelCreatedFlag;\n  }\n}\n","export enum EventType {\n    MOUSE_UP = \"mouseup\",\n    MOUSE_DOWN = \"mousedown\",\n    MOUSE_MOVE = \"mousemove\",\n    KEY_DOWN = \"keydown\",\n    KEY_UP = \"keyup\"\n}","import {EventType} from \"../data/enums/EventType\";\n\nexport class MouseEventUtil {\n    public static getEventType(event: Event): EventType | null {\n        if (!event) return null;\n\n        switch (event.type) {\n            case EventType.MOUSE_DOWN:\n                return EventType.MOUSE_DOWN;\n            case EventType.MOUSE_UP:\n                return EventType.MOUSE_UP;\n            case EventType.MOUSE_MOVE:\n                return EventType.MOUSE_MOVE;\n            default:\n                return null;\n        }\n    }\n}","import {EditorData} from \"../../data/EditorData\";\nimport {MouseEventUtil} from \"../../utils/MouseEventUtil\";\nimport {EventType} from \"../../data/enums/EventType\";\nimport {LabelType} from \"../../data/enums/LabelType\";\n\nexport abstract class BaseRenderEngine {\n    protected readonly canvas: HTMLCanvasElement;\n    public labelType: LabelType;\n\n    protected constructor(canvas: HTMLCanvasElement) {\n        this.canvas = canvas;\n    }\n\n    public update(data: EditorData): void {\n        if (!!data.event) {\n            switch (MouseEventUtil.getEventType(data.event)) {\n                case EventType.MOUSE_MOVE:\n                    this.mouseMoveHandler(data);\n                    break;\n                case EventType.MOUSE_UP:\n                    this.mouseUpHandler(data);\n                    break;\n                case EventType.MOUSE_DOWN:\n                    this.mouseDownHandler(data);\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n\n    protected abstract mouseDownHandler(data: EditorData): void;\n    protected abstract mouseMoveHandler(data: EditorData): void;\n    protected abstract mouseUpHandler(data: EditorData): void;\n\n    abstract render(data: EditorData): void;\n\n    abstract isInProgress(): boolean;\n}","import { EditorData } from '../data/EditorData';\nimport { RectUtil } from './RectUtil';\nimport { store } from '../index';\nimport { CustomCursorStyle } from '../data/enums/CustomCursorStyle';\nimport { updateCustomCursorStyle } from '../store/general/actionCreators';\nimport { IPoint } from '../interfaces/IPoint';\nimport { PointUtil } from './PointUtil';\nimport { IRect } from '../interfaces/IRect';\n\nexport class RenderEngineUtil {\n  public static isMouseOverImage(data: EditorData): boolean {\n    return RectUtil.isPointInside(data.activeImageRectOnCanvas, data.mousePositionOnCanvas);\n  }\n\n  public static isMouseOverCanvas(data: EditorData): boolean {\n    return RectUtil.isPointInside({ x: 0, y: 0, ...data.canvasSize }, data.mousePositionOnCanvas);\n  }\n\n  public static transferPolygonFromImageToCanvas(polygon: IPoint[], data: EditorData): IPoint[] {\n    return polygon.map((point: IPoint) => RenderEngineUtil.transferPointFromImageToCanvas(point, data));\n  }\n\n  public static transferPointFromImageToCanvas(point: IPoint, data: EditorData): IPoint {\n    return PointUtil.add(PointUtil.multiply(point, 1 / data.activeImageScale), data.activeImageRectOnCanvas);\n  }\n\n  public static transferPolygonFromCanvasToImage(polygon: IPoint[], data: EditorData): IPoint[] {\n    return polygon.map((point: IPoint) => RenderEngineUtil.transferPointFromCanvasToImage(point, data));\n  }\n\n  public static transferPointFromCanvasToImage(point: IPoint, data: EditorData): IPoint {\n    return PointUtil.multiply(PointUtil.subtract(point, data.activeImageRectOnCanvas), data.activeImageScale);\n  }\n\n  public static transferRectFromCanvasToImage(rect: IRect, data: EditorData): IRect {\n    return RectUtil.translate(RectUtil.scaleRect(rect, 1 / data.activeImageScale), data.activeImageRectOnCanvas);\n  }\n\n  public static wrapDefaultCursorStyleInCancel(data: EditorData) {\n    if (RectUtil.isPointInside(data.activeImageRectOnCanvas, data.mousePositionOnCanvas)) {\n      store.dispatch(updateCustomCursorStyle(CustomCursorStyle.DEFAULT));\n    } else {\n      store.dispatch(updateCustomCursorStyle(CustomCursorStyle.CANCEL));\n    }\n  }\n\n  public static setValueBetweenPixels(value: number): number {\n    return Math.floor(value) + 0.5;\n  }\n\n  public static setPointBetweenPixels(point: IPoint): IPoint {\n    return {\n      x: RenderEngineUtil.setValueBetweenPixels(point.x),\n      y: RenderEngineUtil.setValueBetweenPixels(point.y),\n    };\n  }\n\n  public static setRectBetweenPixels(rect: IRect): IRect {\n    const topLeft: IPoint = {\n      x: rect.x,\n      y: rect.y,\n    };\n    const bottomRight: IPoint = {\n      x: rect.x + rect.width,\n      y: rect.y + rect.height,\n    };\n    const topLeftBetweenPixels = RenderEngineUtil.setPointBetweenPixels(topLeft);\n    const bottomRightBetweenPixels = RenderEngineUtil.setPointBetweenPixels(bottomRight);\n    return {\n      x: topLeftBetweenPixels.x,\n      y: topLeftBetweenPixels.y,\n      width: bottomRightBetweenPixels.x - topLeftBetweenPixels.x,\n      height: bottomRightBetweenPixels.y - topLeftBetweenPixels.y,\n    };\n  }\n}\n","import { IPoint } from \"../../interfaces/IPoint\";\nimport { IRect } from \"../../interfaces/IRect\";\nimport { RectUtil } from \"../../utils/RectUtil\";\nimport { DrawUtil } from \"../../utils/DrawUtil\";\nimport { store } from \"../..\";\nimport { ImageData, LabelRect } from \"../../store/editor/types\";\nimport uuidv1 from \"uuid/v1\";\nimport {\n  updateActiveLabelId,\n  updateFirstLabelCreatedFlag,\n  updateHighlightedLabelId,\n  updateImageDataById,\n} from \"../../store/editor/actionCreators\";\nimport { PointUtil } from \"../../utils/PointUtil\";\nimport { RectAnchor } from \"../../data/RectAnchor\";\nimport { RenderEngineConfig } from \"../../settings/RenderEngineConfig\";\nimport { updateCustomCursorStyle } from \"../../store/general/actionCreators\";\nimport { CustomCursorStyle } from \"../../data/enums/CustomCursorStyle\";\nimport { EditorSelector } from \"../../store/selectors/EditorSelector\";\nimport { EditorData } from \"../../data/EditorData\";\nimport { BaseRenderEngine } from \"./BaseRenderEngine\";\nimport { RenderEngineUtil } from \"../../utils/RenderEngineUtil\";\nimport { LabelType } from \"../../data/enums/LabelType\";\nimport _ from \"lodash\";\nimport produce from \"immer\";\n\nexport class RectRenderEngine extends BaseRenderEngine {\n  private config: RenderEngineConfig = new RenderEngineConfig();\n\n  // =================================================================================================================\n  // STATE\n  // =================================================================================================================\n\n  private startCreateRectPoint: IPoint;\n  private startResizeRectAnchor: RectAnchor;\n\n  public constructor(canvas: HTMLCanvasElement) {\n    super(canvas);\n    this.labelType = LabelType.RECTANGLE;\n  }\n\n  // =================================================================================================================\n  // EVENT HANDLERS\n  // =================================================================================================================\n\n  public mouseDownHandler = (data: EditorData) => {\n    const isMouseOverImage: boolean = RenderEngineUtil.isMouseOverImage(data);\n    const isMouseOverCanvas: boolean = RenderEngineUtil.isMouseOverCanvas(data);\n    if (isMouseOverCanvas) {\n      const rectUnderMouse: LabelRect = this.getRectUnderMouse(\n        data.activeImageScale,\n        data.activeImageRectOnCanvas,\n        data.mousePositionOnCanvas\n      );\n      if (!!rectUnderMouse) {\n        const rect: IRect = this.calculateRectRelativeToActiveImage(rectUnderMouse.rect, data.activeImageScale);\n        const anchorUnderMouse: RectAnchor = this.getAnchorUnderMouseByRect(\n          rect,\n          data.mousePositionOnCanvas,\n          data.activeImageRectOnCanvas\n        );\n        if (!!anchorUnderMouse) {\n          store.dispatch(updateActiveLabelId(rectUnderMouse.id));\n          this.startRectResize(anchorUnderMouse);\n        } else {\n          if (!!EditorSelector.getHighlightedLabelId())\n            store.dispatch(updateActiveLabelId(EditorSelector.getHighlightedLabelId()));\n          else this.startRectCreation(data.mousePositionOnCanvas);\n        }\n      } else if (isMouseOverImage) {\n        this.startRectCreation(data.mousePositionOnCanvas);\n      }\n    }\n  };\n\n  public mouseUpHandler = (data: EditorData) => {\n    if (!!data.activeImageRectOnCanvas) {\n      const mousePositionSnapped: IPoint = RectUtil.snapPointToRect(\n        data.mousePositionOnCanvas,\n        data.activeImageRectOnCanvas\n      );\n\n      if (!!this.startCreateRectPoint && !PointUtil.equals(this.startCreateRectPoint, mousePositionSnapped)) {\n        const minX: number = Math.min(this.startCreateRectPoint.x, mousePositionSnapped.x);\n        const minY: number = Math.min(this.startCreateRectPoint.y, mousePositionSnapped.y);\n        const maxX: number = Math.max(this.startCreateRectPoint.x, mousePositionSnapped.x);\n        const maxY: number = Math.max(this.startCreateRectPoint.y, mousePositionSnapped.y);\n\n        const rect: IRect = {\n          x: (minX - data.activeImageRectOnCanvas.x) * data.activeImageScale,\n          y: (minY - data.activeImageRectOnCanvas.y) * data.activeImageScale,\n          width: (maxX - minX) * data.activeImageScale,\n          height: (maxY - minY) * data.activeImageScale,\n        };\n        this.addRectLabel(rect);\n      }\n\n      if (!!this.startResizeRectAnchor) {\n        const activeLabelRect: LabelRect = EditorSelector.getActiveRectLabel();\n        const rect: IRect = this.calculateRectRelativeToActiveImage(activeLabelRect.rect, data.activeImageScale);\n        const startAnchorPosition: IPoint = PointUtil.add(\n          this.startResizeRectAnchor.position,\n          data.activeImageRectOnCanvas\n        );\n        const delta: IPoint = PointUtil.subtract(mousePositionSnapped, startAnchorPosition);\n        const resizeRect: IRect = RectUtil.resizeRect(rect, this.startResizeRectAnchor.type, delta);\n        const scaledRect: IRect = RectUtil.scaleRect(resizeRect, data.activeImageScale);\n\n        const imageData = EditorSelector.getActiveImageData();\n        const activeGroupIndex = EditorSelector.getActiveGroupIndex();\n        const newImageData = produce(imageData, draft => {\n          draft.groupList[activeGroupIndex].labelRects = imageData.groupList[activeGroupIndex].labelRects.map(\n            (labelRect: LabelRect) => {\n              if (labelRect.id === activeLabelRect.id) {\n                return {\n                  ...labelRect,\n                  rect: scaledRect,\n                };\n              }\n              return labelRect;\n            }\n          );\n        });\n\n        store.dispatch(updateImageDataById(imageData.id, newImageData));\n      }\n    }\n    this.endRectTransformation();\n  };\n\n  public mouseMoveHandler = (data: EditorData) => {\n    if (!!data.activeImageRectOnCanvas && !!data.mousePositionOnCanvas) {\n      const isOverImage: boolean = RenderEngineUtil.isMouseOverImage(data);\n      if (isOverImage && !this.startResizeRectAnchor) {\n        const labelRect: LabelRect = this.getRectUnderMouse(\n          data.activeImageScale,\n          data.activeImageRectOnCanvas,\n          data.mousePositionOnCanvas\n        );\n        if (!!labelRect) {\n          if (EditorSelector.getHighlightedLabelId() !== labelRect.id) {\n            store.dispatch(updateHighlightedLabelId(labelRect.id));\n          }\n        } else {\n          if (EditorSelector.getHighlightedLabelId() !== null) {\n            store.dispatch(updateHighlightedLabelId(null));\n          }\n        }\n      }\n    }\n  };\n\n  // =================================================================================================================\n  // RENDERING\n  // =================================================================================================================\n\n  public render(data: EditorData) {\n    const activeLabelId: string = EditorSelector.getActiveLabelId();\n    const imageData: ImageData = EditorSelector.getActiveImageData();\n    const activeGroupIndex = EditorSelector.getActiveGroupIndex();\n\n    if (imageData) {\n      imageData.groupList[activeGroupIndex].labelRects.forEach((labelRect: LabelRect) => {\n        labelRect.id === activeLabelId\n          ? this.drawActiveRect(\n              labelRect,\n              data.mousePositionOnCanvas,\n              data.activeImageRectOnCanvas,\n              data.activeImageScale\n            )\n          : this.drawInactiveRect(labelRect, data);\n      });\n      this.drawCurrentlyCreatedRect(data.mousePositionOnCanvas, data.activeImageRectOnCanvas);\n      this.updateCursorStyle(data);\n    }\n  }\n\n  private drawCurrentlyCreatedRect(mousePosition: IPoint, imageRect: IRect) {\n    if (!!this.startCreateRectPoint) {\n      const mousePositionSnapped: IPoint = RectUtil.snapPointToRect(mousePosition, imageRect);\n      const activeRect: IRect = {\n        x: this.startCreateRectPoint.x,\n        y: this.startCreateRectPoint.y,\n        width: mousePositionSnapped.x - this.startCreateRectPoint.x,\n        height: mousePositionSnapped.y - this.startCreateRectPoint.y,\n      };\n      const activeRectBetweenPixels = RenderEngineUtil.setRectBetweenPixels(activeRect);\n      DrawUtil.drawRect(this.canvas, activeRectBetweenPixels, this.config.lineActiveColor, this.config.lineThickness);\n    }\n  }\n\n  private drawInactiveRect(labelRect: LabelRect, data: EditorData) {\n    const rectOnImage: IRect = RenderEngineUtil.transferRectFromCanvasToImage(labelRect.rect, data);\n    const highlightedLabelId: string = EditorSelector.getHighlightedLabelId();\n    this.renderRect(rectOnImage, labelRect.id === highlightedLabelId);\n  }\n\n  private drawActiveRect(labelRect: LabelRect, mousePosition: IPoint, imageRect: IRect, scale: number) {\n    let rect: IRect = this.calculateRectRelativeToActiveImage(labelRect.rect, scale);\n    if (!!this.startResizeRectAnchor) {\n      const startAnchorPosition: IPoint = PointUtil.add(this.startResizeRectAnchor.position, imageRect);\n      const endAnchorPositionSnapped: IPoint = RectUtil.snapPointToRect(mousePosition, imageRect);\n      const delta = PointUtil.subtract(endAnchorPositionSnapped, startAnchorPosition);\n      rect = RectUtil.resizeRect(rect, this.startResizeRectAnchor.type, delta);\n    }\n    const rectOnImage: IRect = RectUtil.translate(rect, imageRect);\n    this.renderRect(rectOnImage, true);\n  }\n\n  private renderRect(rectOnImage: IRect, isActive: boolean) {\n    const rectBetweenPixels = RenderEngineUtil.setRectBetweenPixels(rectOnImage);\n    const lineColor: string = isActive ? this.config.lineActiveColor : this.config.lineInactiveColor;\n    DrawUtil.drawRect(this.canvas, rectBetweenPixels, lineColor, this.config.lineThickness);\n    if (isActive) {\n      const handleCenters: IPoint[] = RectUtil.mapRectToAnchors(rectOnImage).map(\n        (rectAnchor: RectAnchor) => rectAnchor.position\n      );\n      handleCenters.forEach((center: IPoint) => {\n        const handleRect: IRect = RectUtil.getRectWithCenterAndSize(center, this.config.anchorSize);\n        const handleRectBetweenPixels: IRect = RenderEngineUtil.setRectBetweenPixels(handleRect);\n        DrawUtil.drawRectWithFill(this.canvas, handleRectBetweenPixels, this.config.activeAnchorColor);\n      });\n    }\n  }\n\n  private updateCursorStyle(data: EditorData) {\n    if (!!this.canvas && !!data.mousePositionOnCanvas) {\n      const rectAnchorUnderMouse: RectAnchor = this.getAnchorUnderMouse(\n        data.activeImageScale,\n        data.mousePositionOnCanvas,\n        data.activeImageRectOnCanvas\n      );\n      if (!!rectAnchorUnderMouse || !!this.startResizeRectAnchor) {\n        store.dispatch(updateCustomCursorStyle(CustomCursorStyle.MOVE));\n        return;\n      }\n      if (RenderEngineUtil.isMouseOverCanvas(data)) {\n        if (\n          !RectUtil.isPointInside(data.activeImageRectOnCanvas, data.mousePositionOnCanvas) &&\n          !!this.startCreateRectPoint\n        )\n          store.dispatch(updateCustomCursorStyle(CustomCursorStyle.MOVE));\n        else RenderEngineUtil.wrapDefaultCursorStyleInCancel(data);\n        this.canvas.style.cursor = \"none\";\n      } else {\n        this.canvas.style.cursor = \"default\";\n      }\n    }\n  }\n\n  // =================================================================================================================\n  // HELPERS\n  // =================================================================================================================\n\n  public isInProgress(): boolean {\n    return !!this.startCreateRectPoint || !!this.startResizeRectAnchor;\n  }\n\n  private calculateRectRelativeToActiveImage(rect: IRect, scale: number): IRect {\n    return RectUtil.scaleRect(rect, 1 / scale);\n  }\n\n  private addRectLabel = (rect: IRect) => {\n    const activeLabelIndex = EditorSelector.getActiveLabelNameIndex();\n    const imageData: ImageData = EditorSelector.getActiveImageData();\n    const labelRect: LabelRect = {\n      id: uuidv1(),\n      labelIndex: activeLabelIndex,\n      checked: false,\n      rect,\n    };\n    imageData.groupList[EditorSelector.getActiveGroupIndex()].labelRects.push(labelRect);\n    store.dispatch(updateImageDataById(imageData.id, imageData));\n    store.dispatch(updateFirstLabelCreatedFlag(true));\n    store.dispatch(updateActiveLabelId(labelRect.id));\n  };\n\n  private getRectUnderMouse(scale: number, imageRect: IRect, mousePosition: IPoint): LabelRect {\n    const activeRectLabel: LabelRect = EditorSelector.getActiveRectLabel();\n    if (!!activeRectLabel && this.isMouseOverRectEdges(activeRectLabel.rect, scale, imageRect, mousePosition)) {\n      return activeRectLabel;\n    }\n\n    const labelRects: LabelRect[] = EditorSelector.getActiveImageData().groupList[EditorSelector.getActiveGroupIndex()]\n      .labelRects;\n    for (let i = 0; i < labelRects.length; i++) {\n      if (this.isMouseOverRectEdges(labelRects[i].rect, scale, imageRect, mousePosition)) {\n        return labelRects[i];\n      }\n    }\n    return null;\n  }\n\n  private isMouseOverRectEdges(rect: IRect, scale: number, imageRect: IRect, mousePosition: IPoint): boolean {\n    const rectOnImage: IRect = RectUtil.translate(this.calculateRectRelativeToActiveImage(rect, scale), imageRect);\n\n    const outerRectDelta: IPoint = {\n      x: this.config.anchorHoverSize.width / 2,\n      y: this.config.anchorHoverSize.height / 2,\n    };\n    const outerRect: IRect = RectUtil.expand(rectOnImage, outerRectDelta);\n\n    const innerRectDelta: IPoint = {\n      x: -this.config.anchorHoverSize.width / 2,\n      y: -this.config.anchorHoverSize.height / 2,\n    };\n    const innerRect: IRect = RectUtil.expand(rectOnImage, innerRectDelta);\n\n    return RectUtil.isPointInside(outerRect, mousePosition) && !RectUtil.isPointInside(innerRect, mousePosition);\n  }\n\n  private getAnchorUnderMouseByRect(rect: IRect, mousePosition: IPoint, imageRect: IRect): RectAnchor {\n    const rectAnchors: RectAnchor[] = RectUtil.mapRectToAnchors(rect);\n    for (let i = 0; i < rectAnchors.length; i++) {\n      const anchorRect: IRect = RectUtil.translate(\n        RectUtil.getRectWithCenterAndSize(rectAnchors[i].position, this.config.anchorHoverSize),\n        imageRect\n      );\n      if (!!mousePosition && RectUtil.isPointInside(anchorRect, mousePosition)) {\n        return rectAnchors[i];\n      }\n    }\n    return null;\n  }\n\n  private getAnchorUnderMouse(scale: number, mousePosition: IPoint, imageRect: IRect): RectAnchor {\n    const labelRects: LabelRect[] = EditorSelector.getActiveImageData().groupList[EditorSelector.getActiveGroupIndex()]\n      .labelRects;\n    for (let i = 0; i < labelRects.length; i++) {\n      const rect: IRect = this.calculateRectRelativeToActiveImage(labelRects[i].rect, scale);\n      const rectAnchor = this.getAnchorUnderMouseByRect(rect, mousePosition, imageRect);\n      if (!!rectAnchor) return rectAnchor;\n    }\n    return null;\n  }\n\n  private startRectCreation(mousePosition: IPoint) {\n    this.startCreateRectPoint = mousePosition;\n    store.dispatch(updateActiveLabelId(null));\n  }\n\n  private startRectResize(activatedAnchor: RectAnchor) {\n    this.startResizeRectAnchor = activatedAnchor;\n  }\n\n  private endRectTransformation() {\n    this.startCreateRectPoint = null;\n    this.startResizeRectAnchor = null;\n  }\n}\n","import React from \"react\";\nimport {IPoint} from \"../interfaces/IPoint\";\nimport {IRect} from \"../interfaces/IRect\";\nimport {ISize} from \"../interfaces/ISize\";\n\nexport class CanvasUtil {\n    public static getMousePositionOnCanvasFromEvent(event: React.MouseEvent<HTMLCanvasElement, MouseEvent> | MouseEvent, canvas: HTMLCanvasElement): IPoint {\n        if (!!canvas && !!event) {\n            const canvasRect: ClientRect | DOMRect = canvas.getBoundingClientRect();\n            return {\n                x: event.clientX - canvasRect.left,\n                y: event.clientY - canvasRect.top\n            }\n        }\n        return null;\n    }\n\n    public static getClientRect(canvas: HTMLCanvasElement): IRect {\n        if (!!canvas) {\n            const canvasRect: ClientRect | DOMRect = canvas.getBoundingClientRect();\n            return {\n                x: canvasRect.left,\n                y: canvasRect.top,\n                width: canvasRect.width,\n                height: canvasRect.height\n            }\n        }\n        return null;\n    }\n\n    public static getSize(canvas: HTMLCanvasElement): ISize {\n        if (!!canvas) {\n            const canvasRect: ClientRect | DOMRect = canvas.getBoundingClientRect();\n            return {\n                width: canvasRect.width,\n                height: canvasRect.height\n            }\n        }\n        return null;\n    }\n}","import { IRect } from '../../interfaces/IRect';\nimport { RenderEngineConfig } from '../../settings/RenderEngineConfig';\nimport { IPoint } from '../../interfaces/IPoint';\nimport { CanvasUtil } from '../../utils/CanvasUtil';\nimport { store } from '../../index';\nimport { ImageData, LabelPoint } from '../../store/editor/types';\nimport uuidv1 from 'uuid/v1';\nimport {\n  updateActiveLabelId,\n  updateFirstLabelCreatedFlag,\n  updateHighlightedLabelId,\n  updateImageDataById,\n  updateActiveLabelNameIndex,\n  findNextAvailableLabelIndex,\n} from '../../store/editor/actionCreators';\nimport { RectUtil } from '../../utils/RectUtil';\nimport { DrawUtil } from '../../utils/DrawUtil';\nimport { updateCustomCursorStyle } from '../../store/general/actionCreators';\nimport { CustomCursorStyle } from '../../data/enums/CustomCursorStyle';\nimport { EditorSelector } from '../../store/selectors/EditorSelector';\nimport { EditorData } from '../../data/EditorData';\nimport { BaseRenderEngine } from './BaseRenderEngine';\nimport { RenderEngineUtil } from '../../utils/RenderEngineUtil';\nimport { LabelType } from '../../data/enums/LabelType';\nimport produce from 'immer';\nimport { store as storeNF } from 'react-notifications-component';\n\nexport class PointRenderEngine extends BaseRenderEngine {\n  private config: RenderEngineConfig = new RenderEngineConfig();\n\n  // =================================================================================================================\n  // STATE\n  // =================================================================================================================\n\n  private transformInProgress: boolean = false;\n\n  public constructor(canvas: HTMLCanvasElement) {\n    super(canvas);\n    this.labelType = LabelType.POINT;\n  }\n\n  // =================================================================================================================\n  // EVENT HANDLERS\n  // =================================================================================================================\n\n  public mouseDownHandler(data: EditorData): void {\n    const isMouseOverImage: boolean = RenderEngineUtil.isMouseOverImage(data);\n    const isMouseOverCanvas: boolean = RenderEngineUtil.isMouseOverCanvas(data);\n\n    if (isMouseOverCanvas) {\n      const labelPoint: LabelPoint = this.getLabelPointUnderMouse(data.mousePositionOnCanvas, data);\n      if (!!labelPoint) {\n        const pointOnCanvas: IPoint = RenderEngineUtil.transferPointFromImageToCanvas(labelPoint.point, data);\n        const pointBetweenPixels = RenderEngineUtil.setPointBetweenPixels(pointOnCanvas);\n        const handleRect: IRect = RectUtil.getRectWithCenterAndSize(pointBetweenPixels, this.config.anchorHoverSize);\n        if (RectUtil.isPointInside(handleRect, data.mousePositionOnCanvas)) {\n          store.dispatch(updateActiveLabelId(labelPoint.id));\n          this.transformInProgress = true;\n          return;\n        } else {\n          store.dispatch(updateActiveLabelId(null));\n          const pointOnImage: IPoint = RenderEngineUtil.transferPointFromCanvasToImage(\n            data.mousePositionOnCanvas,\n            data\n          );\n          this.addPointLabel(pointOnImage);\n        }\n      } else if (isMouseOverImage) {\n        const pointOnImage: IPoint = RenderEngineUtil.transferPointFromCanvasToImage(data.mousePositionOnCanvas, data);\n        this.addPointLabel(pointOnImage);\n      }\n    }\n  }\n\n  public mouseUpHandler(data: EditorData): void {\n    if (this.isInProgress()) {\n      const activeLabelPoint: LabelPoint = EditorSelector.getActivePointLabel();\n      const pointSnapped: IPoint = RectUtil.snapPointToRect(data.mousePositionOnCanvas, data.activeImageRectOnCanvas);\n      const pointOnImage: IPoint = RenderEngineUtil.transferPointFromCanvasToImage(pointSnapped, data);\n      const imageData = EditorSelector.getActiveImageData();\n      const activeGroupIndex = EditorSelector.getActiveGroupIndex();\n      const newImageData = produce(imageData, draft => {\n        draft.groupList[activeGroupIndex].labelPoints = imageData.groupList[activeGroupIndex].labelPoints.map(\n          (labelPoint: LabelPoint) => {\n            if (activeLabelPoint && labelPoint.id === activeLabelPoint.id) {\n              return {\n                ...labelPoint,\n                point: pointOnImage,\n              };\n            }\n            return labelPoint;\n          }\n        );\n      });\n\n      store.dispatch(updateImageDataById(imageData.id, newImageData));\n    }\n    this.transformInProgress = false;\n  }\n\n  public mouseMoveHandler(data: EditorData): void {\n    const isOverImage: boolean = RenderEngineUtil.isMouseOverImage(data);\n    if (isOverImage) {\n      const labelPoint: LabelPoint = this.getLabelPointUnderMouse(data.mousePositionOnCanvas, data);\n      if (!!labelPoint) {\n        if (EditorSelector.getHighlightedLabelId() !== labelPoint.id) {\n          store.dispatch(updateHighlightedLabelId(labelPoint.id));\n        }\n      } else {\n        if (EditorSelector.getHighlightedLabelId() !== null) {\n          store.dispatch(updateHighlightedLabelId(null));\n        }\n      }\n    }\n  }\n\n  // =================================================================================================================\n  // RENDERING\n  // =================================================================================================================\n\n  public render(data: EditorData): void {\n    if (!data.activeImageRectOnCanvas) {\n      return;\n    }\n    const activeLabelId: string = EditorSelector.getActiveLabelId();\n    const highlightedLabelId: string = EditorSelector.getHighlightedLabelId();\n    const imageData: ImageData = EditorSelector.getActiveImageData();\n    if (imageData) {\n      const activeGroupIndex = EditorSelector.getActiveGroupIndex();\n      imageData.groupList[activeGroupIndex].labelPoints.forEach((labelPoint: LabelPoint) => {\n        if (labelPoint.id === activeLabelId) {\n          if (this.isInProgress()) {\n            const pointSnapped: IPoint = RectUtil.snapPointToRect(\n              data.mousePositionOnCanvas,\n              data.activeImageRectOnCanvas\n            );\n            const pointBetweenPixels: IPoint = RenderEngineUtil.setPointBetweenPixels(pointSnapped);\n            const handleRect: IRect = RectUtil.getRectWithCenterAndSize(pointBetweenPixels, this.config.anchorSize);\n            DrawUtil.drawRectWithFill(this.canvas, handleRect, this.config.activeAnchorColor);\n          } else {\n            this.renderPoint(labelPoint, true, data);\n          }\n        } else {\n          this.renderPoint(labelPoint, labelPoint.id === activeLabelId || labelPoint.id === highlightedLabelId, data);\n        }\n      });\n    }\n    this.updateCursorStyle(data);\n  }\n\n  private renderPoint(labelPoint: LabelPoint, isActive: boolean, data: EditorData) {\n    const pointOnImage: IPoint = RenderEngineUtil.transferPointFromImageToCanvas(labelPoint.point, data);\n    const pointBetweenPixels = RenderEngineUtil.setPointBetweenPixels(pointOnImage);\n    const handleRect: IRect = RectUtil.getRectWithCenterAndSize(pointBetweenPixels, this.config.anchorSize);\n    const handleColor: string = isActive ? this.config.activeAnchorColor : this.config.inactiveAnchorColor;\n    DrawUtil.drawRectWithFill(this.canvas, handleRect, handleColor);\n  }\n\n  private updateCursorStyle(data: EditorData) {\n    if (!!this.canvas && !!data.mousePositionOnCanvas) {\n      const labelPoint: LabelPoint = this.getLabelPointUnderMouse(data.mousePositionOnCanvas, data);\n      if (!!labelPoint) {\n        const pointOnCanvas: IPoint = RenderEngineUtil.transferPointFromImageToCanvas(labelPoint.point, data);\n        const pointBetweenPixels = RenderEngineUtil.setPointBetweenPixels(pointOnCanvas);\n        const handleRect: IRect = RectUtil.getRectWithCenterAndSize(pointBetweenPixels, this.config.anchorHoverSize);\n        if (RectUtil.isPointInside(handleRect, data.mousePositionOnCanvas)) {\n          store.dispatch(updateCustomCursorStyle(CustomCursorStyle.MOVE));\n          return;\n        }\n      } else if (this.isInProgress()) {\n        store.dispatch(updateCustomCursorStyle(CustomCursorStyle.MOVE));\n        return;\n      }\n\n      if (RectUtil.isPointInside({ x: 0, y: 0, ...CanvasUtil.getSize(this.canvas) }, data.mousePositionOnCanvas)) {\n        RenderEngineUtil.wrapDefaultCursorStyleInCancel(data);\n        this.canvas.style.cursor = 'none';\n      } else {\n        this.canvas.style.cursor = 'default';\n      }\n    }\n  }\n\n  // =================================================================================================================\n  // HELPERS\n  // =================================================================================================================\n\n  public isInProgress(): boolean {\n    return this.transformInProgress;\n  }\n\n  private getLabelPointUnderMouse(mousePosition: IPoint, data: EditorData): LabelPoint {\n    const activeGroupIndex = EditorSelector.getActiveGroupIndex();\n    const labelPoints: LabelPoint[] = EditorSelector.getActiveImageData().groupList[activeGroupIndex].labelPoints;\n    for (let i = 0; i < labelPoints.length; i++) {\n      const pointOnCanvas: IPoint = RenderEngineUtil.transferPointFromImageToCanvas(labelPoints[i].point, data);\n      const handleRect: IRect = RectUtil.getRectWithCenterAndSize(pointOnCanvas, this.config.anchorHoverSize);\n      if (RectUtil.isPointInside(handleRect, mousePosition)) {\n        return labelPoints[i];\n      }\n    }\n    return null;\n  }\n\n  private addPointLabel = (point: IPoint) => {\n    const activeLabelIndex = EditorSelector.getActiveLabelNameIndex();\n    const activeGroupIndex = EditorSelector.getActiveGroupIndex();\n    const imageData: ImageData = EditorSelector.getActiveImageData();\n    const existedLabelIndexs = EditorSelector.getAllPointLabelIndex();\n    const labelsLength = EditorSelector.getLabelNameLength();\n\n    const labelPoint: LabelPoint = {\n      id: uuidv1(),\n      labelIndex: activeLabelIndex,\n      checked: false,\n      point,\n    };\n\n    if (existedLabelIndexs.length === labelsLength) {\n      storeNF.addNotification({\n        message: '已经添加全部的关节',\n        type: 'warning',\n        insert: 'top',\n        container: 'top-center',\n        animationIn: ['animated', 'fadeIn'],\n        animationOut: ['animated', 'fadeOut'],\n        dismiss: {\n          duration: 1000,\n        },\n      });\n      return;\n    }\n\n    const newImageData = produce(imageData, draft => {\n      draft.groupList[activeGroupIndex].labelPoints.push(labelPoint);\n    });\n    store.dispatch(updateImageDataById(imageData.id, newImageData));\n    store.dispatch(updateFirstLabelCreatedFlag(true));\n    store.dispatch(updateActiveLabelId(labelPoint.id));\n    store.dispatch(findNextAvailableLabelIndex());\n  };\n}\n","import {ILine} from \"../interfaces/ILine\";\nimport {IPoint} from \"../interfaces/IPoint\";\n\nexport class LineUtil {\n    public static getDistanceFromLine(l: ILine, p: IPoint): number {\n        if (l.start.x !== l.end.x || l.start.y !== l.end.y) {\n            const nom: number = Math.abs((l.end.y - l.start.y) * p.x - (l.end.x - l.start.x) * p.y + l.end.x * l.start.y - l.end.y * l.start.x);\n            const denom: number = Math.sqrt(Math.pow(l.end.y - l.start.y, 2) + Math.pow(l.end.x - l.start.x, 2));\n            return nom / denom;\n        }\n        return null;\n    }\n\n    public static getCenter(l: ILine): IPoint {\n        return {\n            x: (l.start.x + l.end.x) / 2,\n            y: (l.start.y + l.end.y) / 2\n        }\n    }\n}","import { store } from \"../../index\";\nimport { RectUtil } from \"../../utils/RectUtil\";\nimport { updateCustomCursorStyle } from \"../../store/general/actionCreators\";\nimport { CustomCursorStyle } from \"../../data/enums/CustomCursorStyle\";\nimport { EditorData } from \"../../data/EditorData\";\nimport { BaseRenderEngine } from \"./BaseRenderEngine\";\nimport { RenderEngineConfig } from \"../../settings/RenderEngineConfig\";\nimport { IPoint } from \"../../interfaces/IPoint\";\nimport { ILine } from \"../../interfaces/ILine\";\nimport { DrawUtil } from \"../../utils/DrawUtil\";\nimport { IRect } from \"../../interfaces/IRect\";\nimport { ImageData, LabelPolygon } from \"../../store/editor/types\";\nimport { EditorSelector } from \"../../store/selectors/EditorSelector\";\nimport uuidv1 from \"uuid/v1\";\nimport {\n  updateActiveLabelId,\n  updateFirstLabelCreatedFlag,\n  updateHighlightedLabelId,\n  updateImageDataById,\n} from \"../../store/editor/actionCreators\";\nimport { LineUtil } from \"../../utils/LineUtil\";\nimport { MouseEventUtil } from \"../../utils/MouseEventUtil\";\nimport { EventType } from \"../../data/enums/EventType\";\nimport { RenderEngineUtil } from \"../../utils/RenderEngineUtil\";\nimport { LabelType } from \"../../data/enums/LabelType\";\nimport produce from \"immer\";\n\nexport class PolygonRenderEngine extends BaseRenderEngine {\n  private config: RenderEngineConfig = new RenderEngineConfig();\n\n  // =================================================================================================================\n  // STATE\n  // =================================================================================================================\n\n  private activePath: IPoint[] = [];\n  private resizeAnchorIndex: number = null;\n  private suggestedAnchorPositionOnCanvas: IPoint = null;\n  private suggestedAnchorIndexInPolygon: number = null;\n\n  public constructor(canvas: HTMLCanvasElement) {\n    super(canvas);\n    this.labelType = LabelType.POLYGON;\n  }\n\n  // =================================================================================================================\n  // EVENT HANDLERS\n  // =================================================================================================================\n\n  public update(data: EditorData): void {\n    if (!!data.event) {\n      switch (MouseEventUtil.getEventType(data.event)) {\n        case EventType.MOUSE_MOVE:\n          this.mouseMoveHandler(data);\n          break;\n        case EventType.MOUSE_UP:\n          this.mouseUpHandler(data);\n          break;\n        case EventType.MOUSE_DOWN:\n          this.mouseDownHandler(data);\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  public mouseDownHandler(data: EditorData): void {\n    const isMouseOverCanvas: boolean = RenderEngineUtil.isMouseOverCanvas(data);\n    if (isMouseOverCanvas) {\n      if (this.isCreationInProgress()) {\n        const isMouseOverStartAnchor: boolean = this.isMouseOverAnchor(data.mousePositionOnCanvas, this.activePath[0]);\n        if (isMouseOverStartAnchor) {\n          this.addLabelAndFinishCreation(data);\n        } else {\n          this.updateActivelyCreatedLabel(data);\n        }\n      } else {\n        const polygonUnderMouse: LabelPolygon = this.getPolygonUnderMouse(data);\n        if (!!polygonUnderMouse) {\n          const anchorIndex: number = polygonUnderMouse.vertices.reduce(\n            (indexUnderMouse: number, anchor: IPoint, index: number) => {\n              if (indexUnderMouse === null) {\n                const anchorOnCanvas: IPoint = RenderEngineUtil.transferPointFromImageToCanvas(anchor, data);\n                if (this.isMouseOverAnchor(data.mousePositionOnCanvas, anchorOnCanvas)) {\n                  return index;\n                }\n              }\n              return indexUnderMouse;\n            },\n            null\n          );\n\n          if (anchorIndex !== null) {\n            this.startExistingLabelResize(data, polygonUnderMouse.id, anchorIndex);\n          } else {\n            const isMouseOverNewAnchor: boolean = this.isMouseOverAnchor(\n              data.mousePositionOnCanvas,\n              this.suggestedAnchorPositionOnCanvas\n            );\n            if (isMouseOverNewAnchor) {\n              store.dispatch(updateActiveLabelId(polygonUnderMouse.id));\n              this.addSuggestedAnchorToPolygonLabel(data);\n            } else {\n              this.updateActivelyCreatedLabel(data);\n            }\n          }\n        } else {\n          this.updateActivelyCreatedLabel(data);\n        }\n      }\n    }\n  }\n\n  public mouseUpHandler(data: EditorData): void {\n    if (this.isResizeInProgress()) this.endExistingLabelResize(data);\n  }\n\n  public mouseMoveHandler(data: EditorData): void {\n    if (!!data.activeImageRectOnCanvas && !!data.mousePositionOnCanvas) {\n      const isOverImage: boolean = RenderEngineUtil.isMouseOverImage(data);\n      if (isOverImage && !this.isCreationInProgress()) {\n        const labelPolygon: LabelPolygon = this.getPolygonUnderMouse(data);\n        if (!!labelPolygon && !this.isResizeInProgress()) {\n          if (EditorSelector.getHighlightedLabelId() !== labelPolygon.id) {\n            store.dispatch(updateHighlightedLabelId(labelPolygon.id));\n          }\n          const pathOnCanvas: IPoint[] = RenderEngineUtil.transferPolygonFromImageToCanvas(labelPolygon.vertices, data);\n          const linesOnCanvas: ILine[] = this.mapPointsToLines(pathOnCanvas.concat(pathOnCanvas[0]));\n\n          for (let j = 0; j < linesOnCanvas.length; j++) {\n            if (this.isMouseOverLine(data.mousePositionOnCanvas, linesOnCanvas[j])) {\n              this.suggestedAnchorPositionOnCanvas = LineUtil.getCenter(linesOnCanvas[j]);\n              this.suggestedAnchorIndexInPolygon = j + 1;\n              break;\n            }\n          }\n        } else {\n          if (EditorSelector.getHighlightedLabelId() !== null) {\n            store.dispatch(updateHighlightedLabelId(null));\n            this.discardSuggestedPoint();\n          }\n        }\n      }\n    }\n  }\n\n  // =================================================================================================================\n  // RENDERING\n  // =================================================================================================================\n\n  public render(data: EditorData): void {\n    const imageData: ImageData = EditorSelector.getActiveImageData();\n    if (imageData) {\n      this.drawExistingLabels(data);\n      this.drawActivelyCreatedLabel(data);\n      this.drawActivelyResizeLabel(data);\n      this.updateCursorStyle(data);\n      this.drawSuggestedAnchor(data);\n    }\n  }\n\n  private updateCursorStyle(data: EditorData) {\n    if (!!this.canvas && !!data.mousePositionOnCanvas) {\n      const isMouseOverCanvas: boolean = RenderEngineUtil.isMouseOverCanvas(data);\n      if (isMouseOverCanvas) {\n        if (this.isCreationInProgress()) {\n          const isMouseOverStartAnchor: boolean = this.isMouseOverAnchor(\n            data.mousePositionOnCanvas,\n            this.activePath[0]\n          );\n          if (isMouseOverStartAnchor && this.activePath.length > 2)\n            store.dispatch(updateCustomCursorStyle(CustomCursorStyle.CLOSE));\n          else store.dispatch(updateCustomCursorStyle(CustomCursorStyle.DEFAULT));\n        } else {\n          const anchorUnderMouse: IPoint = this.getAnchorUnderMouse(data);\n          const isMouseOverNewAnchor: boolean = this.isMouseOverAnchor(\n            data.mousePositionOnCanvas,\n            this.suggestedAnchorPositionOnCanvas\n          );\n          if (!!isMouseOverNewAnchor) {\n            store.dispatch(updateCustomCursorStyle(CustomCursorStyle.ADD));\n          } else if (this.isResizeInProgress()) {\n            store.dispatch(updateCustomCursorStyle(CustomCursorStyle.MOVE));\n          } else if (!!anchorUnderMouse) {\n            store.dispatch(updateCustomCursorStyle(CustomCursorStyle.MOVE));\n          } else {\n            RenderEngineUtil.wrapDefaultCursorStyleInCancel(data);\n          }\n        }\n        this.canvas.style.cursor = \"none\";\n      } else {\n        this.canvas.style.cursor = \"default\";\n      }\n    }\n  }\n\n  private drawActivelyCreatedLabel(data: EditorData) {\n    const standardizedPoints: IPoint[] = this.activePath.map((point: IPoint) =>\n      RenderEngineUtil.setPointBetweenPixels(point)\n    );\n    const path = standardizedPoints.concat(data.mousePositionOnCanvas);\n    const lines: ILine[] = this.mapPointsToLines(path);\n\n    DrawUtil.drawPolygonWithFill(this.canvas, path, DrawUtil.hexToRGB(this.config.lineActiveColor, 0.2));\n    lines.forEach((line: ILine) => {\n      DrawUtil.drawLine(this.canvas, line.start, line.end, this.config.lineActiveColor, this.config.lineThickness);\n    });\n    this.mapPointsToAnchors(standardizedPoints).forEach((handleRect: IRect) => {\n      DrawUtil.drawRectWithFill(this.canvas, handleRect, this.config.activeAnchorColor);\n    });\n  }\n\n  private drawActivelyResizeLabel(data: EditorData) {\n    const activeLabelPolygon: LabelPolygon = EditorSelector.getActivePolygonLabel();\n    if (!!activeLabelPolygon && this.isResizeInProgress()) {\n      const snappedMousePosition: IPoint = RectUtil.snapPointToRect(\n        data.mousePositionOnCanvas,\n        data.activeImageRectOnCanvas\n      );\n      const polygonOnCanvas: IPoint[] = activeLabelPolygon.vertices.map((point: IPoint, index: number) => {\n        return index === this.resizeAnchorIndex\n          ? snappedMousePosition\n          : RenderEngineUtil.transferPointFromImageToCanvas(point, data);\n      });\n      this.drawPolygon(polygonOnCanvas, true);\n    }\n  }\n\n  private drawExistingLabels(data: EditorData) {\n    const activeLabelId: string = EditorSelector.getActiveLabelId();\n    const highlightedLabelId: string = EditorSelector.getHighlightedLabelId();\n    const imageData: ImageData = EditorSelector.getActiveImageData();\n    const activeGroupIndex = EditorSelector.getActiveGroupIndex();\n\n    imageData.groupList[activeGroupIndex].labelPolygons.forEach((labelPolygon: LabelPolygon) => {\n      const isActive: boolean = labelPolygon.id === activeLabelId || labelPolygon.id === highlightedLabelId;\n      const pathOnCanvas: IPoint[] = RenderEngineUtil.transferPolygonFromImageToCanvas(labelPolygon.vertices, data);\n      if (!(labelPolygon.id === activeLabelId && this.isResizeInProgress())) {\n        this.drawPolygon(pathOnCanvas, isActive);\n      }\n    });\n  }\n\n  private drawPolygon(polygon: IPoint[], isActive: boolean) {\n    const color: string = isActive ? this.config.lineActiveColor : this.config.lineInactiveColor;\n    const standardizedPoints: IPoint[] = polygon.map((point: IPoint) => RenderEngineUtil.setPointBetweenPixels(point));\n    if (isActive) {\n      DrawUtil.drawPolygonWithFill(this.canvas, standardizedPoints, DrawUtil.hexToRGB(color, 0.2));\n    }\n    DrawUtil.drawPolygon(this.canvas, standardizedPoints, color, this.config.lineThickness);\n    if (isActive) {\n      this.mapPointsToAnchors(standardizedPoints).forEach((handleRect: IRect) => {\n        DrawUtil.drawRectWithFill(this.canvas, handleRect, this.config.activeAnchorColor);\n      });\n    }\n  }\n\n  private drawSuggestedAnchor(data: EditorData) {\n    if (this.suggestedAnchorPositionOnCanvas) {\n      const suggestedAnchorRect: IRect = RectUtil.getRectWithCenterAndSize(\n        this.suggestedAnchorPositionOnCanvas,\n        this.config.suggestedAnchorDetectionSize\n      );\n      const isMouseOverSuggestedAnchor: boolean = RectUtil.isPointInside(\n        suggestedAnchorRect,\n        data.mousePositionOnCanvas\n      );\n\n      if (isMouseOverSuggestedAnchor) {\n        const handleRect = RectUtil.getRectWithCenterAndSize(\n          this.suggestedAnchorPositionOnCanvas,\n          this.config.anchorSize\n        );\n        DrawUtil.drawRectWithFill(this.canvas, handleRect, this.config.lineInactiveColor);\n      }\n    }\n  }\n\n  // =================================================================================================================\n  // CREATION\n  // =================================================================================================================\n\n  private updateActivelyCreatedLabel(data: EditorData) {\n    if (this.isCreationInProgress()) {\n      const mousePositionSnapped: IPoint = RectUtil.snapPointToRect(\n        data.mousePositionOnCanvas,\n        data.activeImageRectOnCanvas\n      );\n      this.activePath.push(mousePositionSnapped);\n    } else {\n      const isMouseOverImage: boolean = RectUtil.isPointInside(\n        data.activeImageRectOnCanvas,\n        data.mousePositionOnCanvas\n      );\n      if (isMouseOverImage) {\n        this.activePath.push(data.mousePositionOnCanvas);\n        store.dispatch(updateActiveLabelId(null));\n      }\n    }\n  }\n\n  public cancelLabelCreation() {\n    this.activePath = [];\n  }\n\n  private finishLabelCreation() {\n    this.activePath = [];\n  }\n\n  public addLabelAndFinishCreation(data: EditorData) {\n    if (this.isCreationInProgress() && this.activePath.length > 2) {\n      const polygonOnImage: IPoint[] = RenderEngineUtil.transferPolygonFromCanvasToImage(this.activePath, data);\n      this.addPolygonLabel(polygonOnImage);\n      this.finishLabelCreation();\n    }\n  }\n\n  private addPolygonLabel(polygon: IPoint[]) {\n    const activeLabelIndex = EditorSelector.getActiveLabelNameIndex();\n    const imageData: ImageData = EditorSelector.getActiveImageData();\n    const labelPolygon: LabelPolygon = {\n      id: uuidv1(),\n      labelIndex: activeLabelIndex,\n      checked: false,\n      vertices: polygon,\n    };\n    const activeGroupIndex = EditorSelector.getActiveGroupIndex();\n\n    imageData.groupList[activeGroupIndex].labelPolygons.push(labelPolygon);\n    store.dispatch(updateImageDataById(imageData.id, imageData));\n    store.dispatch(updateFirstLabelCreatedFlag(true));\n    store.dispatch(updateActiveLabelId(labelPolygon.id));\n  }\n\n  // =================================================================================================================\n  // TRANSFER\n  // =================================================================================================================\n\n  private startExistingLabelResize(data: EditorData, labelId: string, anchorIndex: number) {\n    store.dispatch(updateActiveLabelId(labelId));\n    this.resizeAnchorIndex = anchorIndex;\n  }\n\n  private endExistingLabelResize(data: EditorData) {\n    this.applyResizeToPolygonLabel(data);\n    this.resizeAnchorIndex = null;\n  }\n\n  private applyResizeToPolygonLabel(data: EditorData) {\n    const imageData: ImageData = EditorSelector.getActiveImageData();\n    const activeLabel: LabelPolygon = EditorSelector.getActivePolygonLabel();\n    const activeGroupIndex = EditorSelector.getActiveGroupIndex();\n    const newImageData = produce(imageData, draft => {\n      draft.groupList[activeGroupIndex].labelPolygons = imageData.groupList[activeGroupIndex].labelPolygons.map(\n        (polygon: LabelPolygon) => {\n          if (polygon.id !== activeLabel.id) {\n            return polygon;\n          } else {\n            return {\n              ...polygon,\n              vertices: polygon.vertices.map((value: IPoint, index: number) => {\n                if (index !== this.resizeAnchorIndex) {\n                  return value;\n                } else {\n                  const snappedMousePosition: IPoint = RectUtil.snapPointToRect(\n                    data.mousePositionOnCanvas,\n                    data.activeImageRectOnCanvas\n                  );\n                  return RenderEngineUtil.transferPointFromCanvasToImage(snappedMousePosition, data);\n                }\n              }),\n            };\n          }\n        }\n      );\n    });\n\n    store.dispatch(updateImageDataById(imageData.id, newImageData));\n    store.dispatch(updateActiveLabelId(activeLabel.id));\n  }\n\n  private discardSuggestedPoint(): void {\n    this.suggestedAnchorIndexInPolygon = null;\n    this.suggestedAnchorPositionOnCanvas = null;\n  }\n\n  // =================================================================================================================\n  // UPDATE\n  // =================================================================================================================\n\n  private addSuggestedAnchorToPolygonLabel(data: EditorData) {\n    const imageData: ImageData = EditorSelector.getActiveImageData();\n    const activeLabel: LabelPolygon = EditorSelector.getActivePolygonLabel();\n    const newAnchorPositionOnImage: IPoint = RenderEngineUtil.transferPointFromCanvasToImage(\n      this.suggestedAnchorPositionOnCanvas,\n      data\n    );\n    const insert = (arr, index, newItem) => [...arr.slice(0, index), newItem, ...arr.slice(index)];\n    const activeGroupIndex = EditorSelector.getActiveGroupIndex();\n\n    const newImageData: ImageData = produce(imageData, draft => {\n      draft.groupList[imageData.activeGroupIndex].labelPolygons = imageData.groupList[\n        activeGroupIndex\n      ].labelPolygons.map((polygon: LabelPolygon) => {\n        if (polygon.id !== activeLabel.id) {\n          return polygon;\n        } else {\n          return {\n            ...polygon,\n            vertices: insert(polygon.vertices, this.suggestedAnchorIndexInPolygon, newAnchorPositionOnImage),\n          };\n        }\n      });\n    });\n\n    store.dispatch(updateImageDataById(newImageData.id, newImageData));\n    this.startExistingLabelResize(data, activeLabel.id, this.suggestedAnchorIndexInPolygon);\n    this.discardSuggestedPoint();\n  }\n\n  // =================================================================================================================\n  // VALIDATORS\n  // =================================================================================================================\n\n  public isInProgress(): boolean {\n    return this.isCreationInProgress() || this.isResizeInProgress();\n  }\n\n  private isCreationInProgress(): boolean {\n    return this.activePath !== null && this.activePath.length !== 0;\n  }\n\n  private isResizeInProgress(): boolean {\n    return this.resizeAnchorIndex !== null;\n  }\n\n  private isMouseOverAnchor(mouse: IPoint, anchor: IPoint): boolean {\n    if (!mouse || !anchor) return null;\n    return RectUtil.isPointInside(RectUtil.getRectWithCenterAndSize(anchor, this.config.anchorSize), mouse);\n  }\n\n  private isMouseOverLine(mouse: IPoint, l: ILine): boolean {\n    const hoverReach: number = this.config.anchorHoverSize.width / 2;\n    const minX: number = Math.min(l.start.x, l.end.x);\n    const maxX: number = Math.max(l.start.x, l.end.x);\n    const minY: number = Math.min(l.start.y, l.end.y);\n    const maxY: number = Math.max(l.start.y, l.end.y);\n\n    return (\n      minX - hoverReach <= mouse.x &&\n      maxX + hoverReach >= mouse.x &&\n      (minY - hoverReach <= mouse.y && maxY + hoverReach >= mouse.y) &&\n      LineUtil.getDistanceFromLine(l, mouse) < hoverReach\n    );\n  }\n\n  // =================================================================================================================\n  // MAPPERS\n  // =================================================================================================================\n\n  private mapPointsToLines(points: IPoint[]): ILine[] {\n    const lines: ILine[] = [];\n    for (let i = 0; i < points.length - 1; i++) {\n      lines.push({ start: points[i], end: points[i + 1] });\n    }\n    return lines;\n  }\n\n  private mapPointsToAnchors(points: IPoint[]): IRect[] {\n    return points.map((point: IPoint) => RectUtil.getRectWithCenterAndSize(point, this.config.anchorSize));\n  }\n\n  // =================================================================================================================\n  // GETTERS\n  // =================================================================================================================\n\n  private getPolygonUnderMouse(data: EditorData): LabelPolygon {\n    const activeGroupIndex = EditorSelector.getActiveGroupIndex();\n    const labelPolygons: LabelPolygon[] = EditorSelector.getActiveImageData().groupList[activeGroupIndex].labelPolygons;\n    for (let i = 0; i < labelPolygons.length; i++) {\n      const pathOnCanvas: IPoint[] = RenderEngineUtil.transferPolygonFromImageToCanvas(labelPolygons[i].vertices, data);\n      const linesOnCanvas: ILine[] = this.mapPointsToLines(pathOnCanvas.concat(pathOnCanvas[0]));\n\n      for (let j = 0; j < linesOnCanvas.length; j++) {\n        if (this.isMouseOverLine(data.mousePositionOnCanvas, linesOnCanvas[j])) return labelPolygons[i];\n      }\n      for (let j = 0; j < pathOnCanvas.length; j++) {\n        if (this.isMouseOverAnchor(data.mousePositionOnCanvas, pathOnCanvas[j])) return labelPolygons[i];\n      }\n    }\n    return null;\n  }\n\n  private getAnchorUnderMouse(data: EditorData): IPoint {\n    const activeGroupIndex = EditorSelector.getActiveGroupIndex();\n\n    const labelPolygons: LabelPolygon[] = EditorSelector.getActiveImageData().groupList[activeGroupIndex].labelPolygons;\n    for (let i = 0; i < labelPolygons.length; i++) {\n      const pathOnCanvas: IPoint[] = RenderEngineUtil.transferPolygonFromImageToCanvas(labelPolygons[i].vertices, data);\n      for (let j = 0; j < pathOnCanvas.length; j++) {\n        if (this.isMouseOverAnchor(data.mousePositionOnCanvas, pathOnCanvas[j])) return pathOnCanvas[j];\n      }\n    }\n    return null;\n  }\n}\n","import {IRect} from \"../../interfaces/IRect\";\nimport {BaseRenderEngine} from \"./BaseRenderEngine\";\nimport {EditorData} from \"../../data/EditorData\";\n\nexport class PrimaryEditorRenderEngine extends BaseRenderEngine {\n\n    public constructor(canvas: HTMLCanvasElement) {\n        super(canvas);\n    }\n\n    // =================================================================================================================\n    // EVENT HANDLERS\n    // =================================================================================================================\n\n    public mouseMoveHandler(data: EditorData): void {}\n    public mouseDownHandler(data: EditorData): void {}\n    public mouseUpHandler(data: EditorData): void {}\n\n    // =================================================================================================================\n    // RENDERING\n    // =================================================================================================================\n\n    public render(data: EditorData): void {}\n\n    public drawImage(image: HTMLImageElement, imageRect: IRect) {\n        if (!!image && !!this.canvas) {\n            const ctx = this.canvas.getContext(\"2d\");\n            ctx.drawImage(image, imageRect.x, imageRect.y, imageRect.width, imageRect.height);\n        }\n    }\n\n    isInProgress(): boolean {\n        return false;\n    }\n}","import { LabelType } from '../../data/enums/LabelType';\nimport { EditorModel } from '../../staticModels/EditorModel';\nimport { RectRenderEngine } from '../render/RectRenderEngine';\nimport { PointRenderEngine } from '../render/PointRenderEngine';\nimport { PolygonRenderEngine } from '../render/PolygonRenderEngine';\nimport { IRect } from '../../interfaces/IRect';\nimport { Settings } from '../../settings/Settings';\nimport { RectUtil } from '../../utils/RectUtil';\nimport { EditorData } from '../../data/EditorData';\nimport { CanvasUtil } from '../../utils/CanvasUtil';\nimport { ISize } from '../../interfaces/ISize';\nimport React from 'react';\nimport { IPoint } from '../../interfaces/IPoint';\nimport { DrawUtil } from '../../utils/DrawUtil';\nimport { PrimaryEditorRenderEngine } from '../render/PrimaryEditorRenderEngine';\nimport { ContextManager } from '../context/ContextManager';\n\nexport class EditorActions {\n  // =================================================================================================================\n  // RENDER ENGINES\n  // =================================================================================================================\n\n  public static mountSupportRenderingEngine(activeLabelType: LabelType) {\n    switch (activeLabelType) {\n      case LabelType.RECTANGLE:\n        EditorModel.supportRenderingEngine = new RectRenderEngine(EditorModel.canvas);\n        break;\n      case LabelType.POINT:\n        EditorModel.supportRenderingEngine = new PointRenderEngine(EditorModel.canvas);\n        break;\n      case LabelType.POLYGON:\n        EditorModel.supportRenderingEngine = new PolygonRenderEngine(EditorModel.canvas);\n        break;\n      default:\n        EditorModel.supportRenderingEngine = null;\n        break;\n    }\n  }\n\n  public static swapSupportRenderingEngine(activeLabelType: LabelType) {\n    EditorActions.mountSupportRenderingEngine(activeLabelType);\n  }\n\n  public static mountRenderEngines(activeLabelType: LabelType) {\n    EditorModel.primaryRenderingEngine = new PrimaryEditorRenderEngine(EditorModel.canvas);\n    EditorActions.mountSupportRenderingEngine(activeLabelType);\n  }\n\n  // =================================================================================================================\n  // RENDER\n  // =================================================================================================================\n\n  public static fullRender() {\n    DrawUtil.clearCanvas(EditorModel.canvas);\n    EditorModel.primaryRenderingEngine.drawImage(EditorModel.image, EditorModel.imageRectOnCanvas);\n    EditorModel.primaryRenderingEngine.render(EditorActions.getEditorData());\n    EditorModel.supportRenderingEngine && EditorModel.supportRenderingEngine.render(EditorActions.getEditorData());\n  }\n\n  // =================================================================================================================\n  // SETTERS\n  // =================================================================================================================\n\n  public static setLoadingStatus(status: boolean) {\n    EditorModel.isLoading = status;\n  }\n\n  public static setActiveImage(image: HTMLImageElement) {\n    EditorModel.image = image;\n  }\n\n  // =================================================================================================================\n  // GETTERS\n  // =================================================================================================================\n\n  public static getEditorData(event?: Event): EditorData {\n    return {\n      mousePositionOnCanvas: EditorModel.mousePositionOnCanvas,\n      canvasSize: CanvasUtil.getSize(EditorModel.canvas),\n      activeImageScale: EditorModel.imageScale,\n      activeImageRectOnCanvas: EditorModel.imageRectOnCanvas,\n      activeKeyCombo: ContextManager.getActiveCombo(),\n      event: event,\n    };\n  }\n\n  // =================================================================================================================\n  // CALCULATIONS\n  // =================================================================================================================\n\n  public static calculateImageRect(image: HTMLImageElement): IRect | null {\n    if (!!image) {\n      const canvasPaddingWidth: number = Settings.CANVAS_PADDING_WIDTH_PX;\n      const imageRect: IRect = { x: 0, y: 0, width: image.width, height: image.height };\n      const canvasRect: IRect = {\n        x: canvasPaddingWidth,\n        y: canvasPaddingWidth,\n        width: EditorModel.canvas.width - 2 * canvasPaddingWidth,\n        height: EditorModel.canvas.height - 2 * canvasPaddingWidth,\n      };\n      return RectUtil.fitInsideRectWithRatio(canvasRect, RectUtil.getRatio(imageRect));\n    }\n    return null;\n  }\n\n  public static calculateImageScale(image: HTMLImageElement): number | null {\n    if (!image || !EditorModel.imageRectOnCanvas) return null;\n\n    return image.width / EditorModel.imageRectOnCanvas.width;\n  }\n\n  // =================================================================================================================\n  // HELPERS\n  // =================================================================================================================\n\n  public static calculateAllCharacteristics() {\n    EditorModel.imageRectOnCanvas = EditorActions.calculateImageRect(EditorModel.image);\n    EditorModel.imageScale = EditorActions.calculateImageScale(EditorModel.image);\n  }\n\n  public static resizeCanvas = (newCanvasSize: ISize) => {\n    if (!!newCanvasSize && !!EditorModel.canvas) {\n      EditorModel.canvas.width = newCanvasSize.width;\n      EditorModel.canvas.height = newCanvasSize.height;\n    }\n  };\n\n  public static updateMousePositionIndicator(event: React.MouseEvent<HTMLCanvasElement, MouseEvent> | MouseEvent) {\n    if (!EditorModel.imageRectOnCanvas || !EditorModel.canvas) {\n      EditorModel.mousePositionIndicator.style.display = 'none';\n      EditorModel.cursor.style.display = 'none';\n      return;\n    }\n\n    const mousePositionOnCanvas: IPoint = CanvasUtil.getMousePositionOnCanvasFromEvent(event, EditorModel.canvas);\n    const canvasRect: IRect = { x: 0, y: 0, ...CanvasUtil.getSize(EditorModel.canvas) };\n    const isOverCanvas: boolean = RectUtil.isPointInside(canvasRect, mousePositionOnCanvas);\n\n    if (!isOverCanvas) {\n      EditorModel.mousePositionIndicator.style.display = 'none';\n      EditorModel.cursor.style.display = 'none';\n      return;\n    }\n\n    const isOverImage: boolean = RectUtil.isPointInside(EditorModel.imageRectOnCanvas, mousePositionOnCanvas);\n\n    if (isOverImage) {\n      const scale = EditorModel.imageScale;\n      const x: number = Math.round((mousePositionOnCanvas.x - EditorModel.imageRectOnCanvas.x) * scale);\n      const y: number = Math.round((mousePositionOnCanvas.y - EditorModel.imageRectOnCanvas.y) * scale);\n      const text: string = 'x: ' + x + ', y: ' + y;\n\n      EditorModel.mousePositionIndicator.innerHTML = text;\n      EditorModel.mousePositionIndicator.style.left = mousePositionOnCanvas.x + 15 + 'px';\n      EditorModel.mousePositionIndicator.style.top = mousePositionOnCanvas.y + 15 + 'px';\n      EditorModel.mousePositionIndicator.style.display = 'block';\n    } else {\n      EditorModel.mousePositionIndicator.style.display = 'none';\n    }\n\n    EditorModel.cursor.style.left = mousePositionOnCanvas.x + 'px';\n    EditorModel.cursor.style.top = mousePositionOnCanvas.y + 'px';\n    EditorModel.cursor.style.display = 'block';\n  }\n}\n","import {HotKeyAction} from \"../../data/HotKeyAction\";\n\nexport class BaseContext {\n    public static actions: HotKeyAction[] = [];\n\n    public static getActions(): HotKeyAction[] {\n        return this.actions;\n    }\n}","import {MobileDeviceData} from \"../data/MobileDeviceData\";\n\nexport class PlatformModel {\n    public static mobileDeviceData: MobileDeviceData;\n    public static isMac: boolean;\n    public static isSafari: boolean;\n    public static isFirefox: boolean;\n}","import {EditorSelector} from \"../../store/selectors/EditorSelector\";\nimport {store} from \"../../index\";\nimport {updateActiveImageIndex} from \"../../store/editor/actionCreators\";\n\nexport class ImageActions {\n    public static getPreviousImage(): void {\n        const currentImageIndex: number = EditorSelector.getActiveImageIndex();\n        store.dispatch(updateActiveImageIndex(currentImageIndex - 1));\n    }\n\n    public static getNextImage(): void {\n        const currentImageIndex: number = EditorSelector.getActiveImageIndex();\n        store.dispatch(updateActiveImageIndex(currentImageIndex + 1));\n    }\n\n    public static getImageByIndex(index: number): void {\n        const imageCount: number = EditorSelector.getImagesData().length;\n\n        if (index < 0 || index > imageCount - 1)\n            return;\n        else\n            store.dispatch(updateActiveImageIndex(index));\n    }\n}","import {HotKeyAction} from \"../../data/HotKeyAction\";\nimport {EditorModel} from \"../../staticModels/EditorModel\";\nimport {LabelType} from \"../../data/enums/LabelType\";\nimport {EditorData} from \"../../data/EditorData\";\nimport {EditorActions} from \"../actions/EditorActions\";\nimport {PolygonRenderEngine} from \"../render/PolygonRenderEngine\";\nimport {BaseContext} from \"./BaseContext\";\nimport {PlatformModel} from \"../../staticModels/PlatformModel\";\nimport {ImageActions} from \"../actions/ImageActions\";\n\nexport class EditorContext extends BaseContext {\n    public static actions: HotKeyAction[] = [\n        {\n            keyCombo: [\"Enter\"],\n            action: (event: KeyboardEvent) => {\n                if (EditorModel.supportRenderingEngine && EditorModel.supportRenderingEngine.labelType === LabelType.POLYGON) {\n                    const editorData: EditorData = EditorActions.getEditorData();\n                    (EditorModel.supportRenderingEngine as PolygonRenderEngine).addLabelAndFinishCreation(editorData);\n                }\n                EditorActions.fullRender();\n            }\n        },\n        {\n            keyCombo: [\"Escape\"],\n            action: (event: KeyboardEvent) => {\n                if (EditorModel.supportRenderingEngine && EditorModel.supportRenderingEngine.labelType === LabelType.POLYGON)\n                    (EditorModel.supportRenderingEngine as PolygonRenderEngine).cancelLabelCreation();\n                EditorActions.fullRender();\n            }\n        },\n        {\n            keyCombo: PlatformModel.isMac ? [\"Meta\", \"ArrowLeft\"] : [\"Control\", \"ArrowLeft\"],\n            action: (event: KeyboardEvent) => {\n                ImageActions.getPreviousImage()\n            }\n        },\n        {\n            keyCombo: PlatformModel.isMac ? [\"Meta\", \"ArrowRight\"] : [\"Control\", \"ArrowRight\"],\n            action: (event: KeyboardEvent) => {\n                ImageActions.getNextImage();\n            }\n        }\n    ];\n}","import {store} from \"../..\";\nimport {PopupWindowType} from \"../../data/enums/PopupWindowType\";\nimport {ContextType} from \"../../data/enums/ContextType\";\n\nexport class GeneralSelector {\n    public static getActivePopupType(): PopupWindowType {\n        return store.getState().general.activePopupType;\n    }\n\n    public static getActiveContext(): ContextType {\n        return store.getState().general.activeContext;\n    }\n}","import {ContextManager} from \"../context/ContextManager\";\nimport {store} from \"../../index\";\nimport {updateActivePopupType} from \"../../store/general/actionCreators\";\n\nexport class PopupActions {\n    public static close() {\n        store.dispatch(updateActivePopupType(null));\n        ContextManager.restoreCtx();\n    }\n}","import {HotKeyAction} from \"../../data/HotKeyAction\";\nimport {PopupWindowType} from \"../../data/enums/PopupWindowType\";\nimport {GeneralSelector} from \"../../store/selectors/GeneralSelector\";\nimport {BaseContext} from \"./BaseContext\";\nimport {PopupActions} from \"../actions/PopupActions\";\nimport {Settings} from \"../../settings/Settings\";\n\nexport class PopupContext extends BaseContext {\n    public static actions: HotKeyAction[] = [\n        {\n            keyCombo: [\"Escape\"],\n            action: (event: KeyboardEvent) => {\n                const popupType: PopupWindowType = GeneralSelector.getActivePopupType();\n                const canBeClosed: boolean = Settings.CLOSEABLE_POPUPS.includes(popupType);\n                if (canBeClosed) {\n                    PopupActions.close();\n                }\n            }\n        }\n    ];\n}","import {ContextType} from \"../../data/enums/ContextType\";\nimport {HotKeyAction} from \"../../data/HotKeyAction\";\nimport {store} from \"../../index\";\nimport {updateActiveContext} from \"../../store/general/actionCreators\";\nimport * as _ from \"lodash\";\nimport {EditorContext} from \"./EditorContext\";\nimport {PopupContext} from \"./PopupContext\";\nimport {GeneralSelector} from \"../../store/selectors/GeneralSelector\";\n\nexport class ContextManager {\n    private static activeCombo: string[] = [];\n    private static actions: HotKeyAction[] = [];\n    private static contextHistory: ContextType[] = [];\n\n    public static getActiveCombo(): string[] {\n        return ContextManager.activeCombo;\n    }\n\n    public static init(): void {\n        window.addEventListener(\"keydown\", ContextManager.onDown);\n        window.addEventListener(\"keyup\", ContextManager.onUp);\n    }\n\n    public static switchCtx(context: ContextType): void {\n        const activeCtx: ContextType = GeneralSelector.getActiveContext();\n\n        if (activeCtx !== context) {\n            ContextManager.contextHistory.push(activeCtx);\n            ContextManager.updateCtx(context);\n        }\n    }\n\n    private static updateCtx(context: ContextType): void {\n        store.dispatch(updateActiveContext(context));\n        switch (context) {\n            case ContextType.EDITOR:\n                ContextManager.actions = EditorContext.getActions();\n                break;\n            case ContextType.POPUP:\n                ContextManager.actions = PopupContext.getActions();\n                break;\n            default:\n                ContextManager.actions = [];\n        }\n    }\n\n    public static restoreCtx(): void {\n        ContextManager.updateCtx(ContextManager.contextHistory.pop());\n    }\n\n    private static onDown(event: KeyboardEvent): void {\n        const keyCode: string = ContextManager.getKeyCodeFromEvent(event);\n        if (!ContextManager.isInCombo(keyCode)) {\n            ContextManager.addToCombo(keyCode);\n            ContextManager.execute(event);\n        }\n    }\n\n    private static onUp(event: KeyboardEvent): void {\n        const keyCode: string = ContextManager.getKeyCodeFromEvent(event);\n        ContextManager.removeFromCombo(keyCode);\n    }\n\n    private static execute(event: KeyboardEvent): void {\n        for (let i = 0; i < ContextManager.actions.length; i++) {\n            const hotKey: HotKeyAction = ContextManager.actions[i];\n            if (ContextManager.matchCombo(ContextManager.activeCombo, hotKey.keyCombo)) {\n                hotKey.action(event);\n            }\n        }\n    }\n\n    private static isInCombo(keyCode: string): boolean {\n        return ContextManager.activeCombo.indexOf(keyCode) >= 0;\n    }\n\n    private static addToCombo(keyCode: string): void {\n        ContextManager.activeCombo.push(keyCode);\n    }\n\n    private static removeFromCombo(keyCode: string): void {\n        const index: number = ContextManager.activeCombo.indexOf(keyCode);\n        if (index >= 0) {\n            ContextManager.activeCombo.splice(index, 1);\n        }\n    }\n\n    private static getKeyCodeFromEvent(event: KeyboardEvent): string {\n        return event.key;\n    }\n\n    private static matchCombo(combo1: string[], combo2: string[]): boolean {\n        return _.isEmpty(_.xor(combo1, combo2))\n    }\n}","import { Cookies } from 'react-cookie';\n\nconst HOST = 'http://47.99.138.248';\n\nconst cookies = new Cookies();\nexport function makeRequest(method: string, url: string) {\n  return new Promise(function(resolve, reject) {\n    let xhr = new XMLHttpRequest();\n    xhr.open(method, url);\n    xhr.responseType = 'blob';\n    xhr.onload = function() {\n      if (this.status >= 200 && this.status < 300) {\n        resolve(xhr.response);\n      } else {\n        reject({\n          status: this.status,\n          statusText: xhr.statusText,\n        });\n      }\n    };\n    xhr.onerror = function() {\n      reject({\n        status: this.status,\n        statusText: xhr.statusText,\n      });\n    };\n    xhr.send();\n  });\n}\n\nexport function postData(url: string, data: object): Promise<any> {\n  // Default options are marked with *\n  return fetch(HOST + url, {\n    body: JSON.stringify(data), // must match 'Content-Type' header\n    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n    mode: 'cors',\n    // credentials: 'same-origin', // include, same-origin, *omit\n    headers: {\n      Authorization: cookies.get('token'),\n      'content-type': 'application/json',\n    },\n    method: 'POST', // *GET, POST, PUT, DELETE, etc.\n  }).then(response => response.json()); // parses response to JSON\n}\n\nexport function getData(url: string): Promise<any> {\n  // Default options are marked with *\n  return fetch(HOST + url, {\n    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n    mode: 'cors',\n    // credentials: 'same-origin', // include, same-origin, *omit\n    headers: {\n      'content-type': 'application/json',\n      Authorization: cookies.get('token'),\n    },\n    method: 'GET', // *GET, POST, PUT, DELETE, etc.\n  }).then(response => response.json()); // parses response to JSON\n}\n","export enum ProjectType {\n    IMAGE_RECOGNITION = \"IMAGE_RECOGNITION\",\n    OBJECT_DETECTION = \"OBJECT_DETECTION\"\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { LabelType } from '../../../../data/enums/LabelType';\nimport { ISize } from '../../../../interfaces/ISize';\nimport { AppState } from '../../../../store';\nimport {\n  updateActiveImageIndex,\n  updateActiveLabelId,\n  updateActiveLabelType,\n  updateGroupList,\n  updateActiveGroupIndex,\n  updateLabelIndexByInfo,\n} from '../../../../store/editor/actionCreators';\nimport { ImageData } from '../../../../store/editor/types';\nimport { VirtualList } from '../../../Common/VirtualList/VirtualList';\nimport ImagePreview from '../ImagePreview/ImagePreview';\nimport './ImagesList.scss';\nimport { ContextManager } from '../../../../logic/context/ContextManager';\nimport { ContextType } from '../../../../data/enums/ContextType';\nimport { EditorSelector } from '../../../../store/selectors/EditorSelector';\nimport { EditorActions } from '../../../../logic/actions/EditorActions';\nimport { RenderEngineUtil } from '../../../../utils/RenderEngineUtil';\nimport { EditorModel } from '../../../../staticModels/EditorModel';\nimport { postData } from '../../../../utils/HttpUtils';\nimport { store } from 'react-notifications-component';\n\ninterface IProps {\n  activeImageIndex: number;\n  imagesData: ImageData[];\n  updateActiveImageIndex: (activeImageIndex: number) => any;\n  updateActiveLabelId: (activeLabelId: string) => any;\n  updateActiveLabelType: (activeLabelType: LabelType) => any;\n  activeLabelType: LabelType;\n  updateGroupList: (groupName: string) => any;\n  updateActiveGroupIndex: (groupIndex: number) => any;\n  updateLabelIndexByInfo: (\n    imageIndex: number,\n    groupIndex: number,\n    labelPointIndex: number,\n    labelIndex: number,\n    checked: boolean\n  ) => any;\n}\n\ninterface IState {\n  size: ISize;\n}\n\nclass ImagesList extends React.Component<IProps, IState> {\n  private imagesListRef: HTMLDivElement;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      size: null,\n    };\n  }\n\n  public componentDidMount(): void {\n    this.updateListSize();\n    window.addEventListener('resize', this.updateListSize);\n  }\n\n  public componentWillUnmount(): void {\n    window.removeEventListener('resize', this.updateListSize);\n  }\n\n  private updateListSize = () => {\n    if (!this.imagesListRef) return;\n\n    const listBoundingBox = this.imagesListRef.getBoundingClientRect();\n    this.setState({\n      size: {\n        width: listBoundingBox.width,\n        height: listBoundingBox.height,\n      },\n    });\n  };\n\n  private onClickHandler = (index: number) => {\n    // console.log(this.props.activeLabelType);\n    this.props.updateActiveImageIndex(index);\n    this.props.updateActiveLabelType(this.props.activeLabelType);\n    this.props.updateActiveLabelId(null);\n    //remote request\n    const activeImageIndex = this.props.activeImageIndex;\n    console.log(this.props.imagesData[activeImageIndex]);\n    const data = {\n      id: this.props.imagesData[activeImageIndex].fileData.name,\n      point: JSON.stringify(this.props.imagesData[activeImageIndex].groupList),\n    };\n\n    postData('/mark/sign/mark', data).then(resJson => {\n      if (resJson.status !== 200) {\n        store.addNotification({\n          title: '服务器保存出错,请联系开发人员 @tuguang , @chaihang',\n          message: resJson.message,\n          type: 'warning',\n          insert: 'top',\n          container: 'top-center',\n          animationIn: ['animated', 'fadeIn'],\n          animationOut: ['animated', 'fadeOut'],\n          dismiss: {\n            duration: 1000,\n          },\n        });\n      } else {\n        store.addNotification({\n          message: '保存成功',\n          type: 'success',\n          insert: 'top',\n          container: 'top-center',\n          animationIn: ['animated', 'fadeIn'],\n          animationOut: ['animated', 'fadeOut'],\n          dismiss: {\n            duration: 500,\n          },\n        });\n      }\n    });\n  };\n\n  private renderImagePreview = (\n    index: number,\n    isScrolling: boolean,\n    isVisible: boolean,\n    style: React.CSSProperties\n  ) => {\n    return (\n      <ImagePreview\n        key={index}\n        index={index}\n        style={style}\n        size={{ width: 150, height: 150 }}\n        isScrolling={isScrolling}\n        isChecked={\n          this.props.imagesData[index].groupList.some(item => item.labelRects.length > 0) ||\n          this.props.imagesData[index].groupList.some(item => item.labelPoints.length > 0) ||\n          this.props.imagesData[index].groupList.some(item => item.labelPolygons.length > 0)\n        }\n        imageData={this.props.imagesData[index]}\n        onClick={() => this.onClickHandler(index)}\n        isSelected={this.props.activeImageIndex === index}\n      />\n    );\n  };\n\n  public render() {\n    const { size } = this.state;\n    return (\n      <div\n        className=\"ImagesList\"\n        ref={ref => (this.imagesListRef = ref)}\n        onClick={() => ContextManager.switchCtx(ContextType.LEFT_NAVBAR)}\n      >\n        {!!size && (\n          <VirtualList\n            size={size}\n            childSize={{ width: 150, height: 150 }}\n            childCount={this.props.imagesData.length}\n            childRender={this.renderImagePreview}\n            overScanHeight={200}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  updateActiveImageIndex,\n  updateActiveLabelId,\n  updateActiveLabelType,\n  updateLabelIndexByInfo,\n  updateActiveGroupIndex,\n  updateGroupList,\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  activeImageIndex: state.editor.activeImageIndex,\n  imagesData: state.editor.imagesData,\n  activeLabelType:\n    state.editor.imagesData[EditorSelector.getActiveImageIndex()].groupList[EditorSelector.getActiveGroupIndex()]\n      .activeLabelType,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ImagesList);\n","import { LabelType } from \"../enums/LabelType\";\n\nexport interface ILabelToolkit {\n  labelType: LabelType;\n  headerText: string;\n  imageSrc: string;\n  imageAlt: string;\n}\n\nexport const LabelToolkitData: ILabelToolkit[] = [\n  {\n    labelType: LabelType.NAME,\n    headerText: \"图像识别\",\n    imageSrc: \"ico/object.png\",\n    imageAlt: \"object\",\n  },\n  {\n    labelType: LabelType.RECTANGLE,\n    headerText: \"矩形\",\n    imageSrc: \"ico/rectangle.png\",\n    imageAlt: \"rectangle\",\n  },\n  {\n    labelType: LabelType.POINT,\n    headerText: \"点\",\n    imageSrc: \"ico/point.png\",\n    imageAlt: \"point\",\n  },\n  {\n    labelType: LabelType.POLYGON,\n    headerText: \"多边形\",\n    imageSrc: \"ico/polygon.png\",\n    imageAlt: \"polygon\",\n  },\n];\n","import * as React from 'react';\nimport {ISize} from \"../../../interfaces/ISize\";\nimport './ImageButton.scss';\nimport classNames from \"classnames\";\n\ninterface Props {\n    size:ISize,\n    padding?:number;\n    image:string,\n    imageAlt:string,\n    href?:string\n    onClick?:() => any;\n    style?:React.CSSProperties\n    isActive?:boolean;\n    isDisabled?:boolean;\n    externalClassName?:string;\n}\n\nexport const ImageButton = (props:Props) => {\n    const {size, padding, image, imageAlt, href, onClick, style, isActive, isDisabled, externalClassName} = props;\n    const imagePadding:number = !!padding ? padding : 10;\n\n    const onClickHandler = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n        event.stopPropagation();\n        !!onClick && onClick();\n    };\n\n    const buttonStyle:React.CSSProperties = {\n        ...style,\n        width: size.width,\n        height: size.height\n    };\n\n    const imageStyle:React.CSSProperties = {\n        maxWidth: size.width - imagePadding,\n        maxHeight: size.height - imagePadding\n    };\n\n    const getClassName = () => {\n        return classNames(\n            \"ImageButton\",\n            externalClassName,\n            {\n                \"active\": isActive,\n                \"disabled\": isDisabled,\n            }\n        );\n    };\n    \n    return(\n        <div className={getClassName()} style={buttonStyle} onClick={onClickHandler}>\n            {!!href && <a href={href} style={imageStyle} target=\"_blank\" rel=\"noopener noreferrer\">\n                <img\n                    draggable={false}\n                    alt={imageAlt}\n                    src={image}\n                    style={imageStyle}\n                />\n            </a>}\n            {!href && <img\n                draggable={false}\n                alt={imageAlt}\n                src={image}\n                style={imageStyle}\n            />}\n        </div>\n    );\n};","import React from \"react\";\nimport { ISize } from \"../../../../interfaces/ISize\";\nimport \"./LabelInputField.scss\";\nimport classNames from \"classnames\";\nimport { ImageButton } from \"../../../Common/ImageButton/ImageButton\";\nimport { IRect } from \"../../../../interfaces/IRect\";\nimport { IPoint } from \"../../../../interfaces/IPoint\";\nimport { RectUtil } from \"../../../../utils/RectUtil\";\nimport { AppState } from \"../../../../store\";\nimport { connect } from \"react-redux\";\nimport {\n  updateActiveLabelId,\n  updateHighlightedLabelId,\n  findNextAvailableLabelIndex,\n} from \"../../../../store/editor/actionCreators\";\nimport Scrollbars from \"react-custom-scrollbars\";\n\ninterface IProps {\n  size: ISize;\n  isActive: boolean;\n  isHighlighted: boolean;\n  id: string;\n  index: number;\n  value: string;\n  checked: boolean;\n  options: string[];\n  onDelete: (id: string) => any;\n  onCheck: (id: string) => any;\n  onSelectLabel: (labelRectId: string, labelNameIndex: number) => any;\n  updateHighlightedLabelId: (highlightedLabelId: string) => any;\n  updateActiveLabelId: (highlightedLabelId: string) => any;\n  findNextAvailableLabelIndex: () => any;\n}\n\ninterface IState {\n  animate: boolean;\n  isOpen: boolean;\n}\n\nclass LabelInputField extends React.Component<IProps, IState> {\n  private dropdownOptionHeight: number = 30;\n  private dropdownOptionCount: number = 6;\n  private dropdownMargin: number = 4;\n  private dropdownLabel: HTMLDivElement;\n  private dropdown: HTMLDivElement;\n\n  public constructor(props) {\n    super(props);\n    this.state = {\n      animate: false,\n      isOpen: false,\n    };\n  }\n\n  public componentDidMount(): void {\n    requestAnimationFrame(() => {\n      this.setState({ animate: true });\n    });\n  }\n\n  private getClassName() {\n    return classNames(\"LabelInputField\", {\n      loaded: this.state.animate,\n      active: this.props.isActive,\n      highlighted: this.props.isHighlighted,\n    });\n  }\n\n  private openDropdown = () => {\n    this.setState({ isOpen: true });\n    window.addEventListener(\"mousedown\", this.closeDropdown);\n  };\n\n  private closeDropdown = (event: MouseEvent) => {\n    const mousePosition: IPoint = { x: event.clientX, y: event.clientY };\n    const clientRect = this.dropdown.getBoundingClientRect();\n    const dropDownRect: IRect = {\n      x: clientRect.left,\n      y: clientRect.top,\n      width: clientRect.width,\n      height: clientRect.height,\n    };\n\n    if (!RectUtil.isPointInside(dropDownRect, mousePosition)) {\n      this.setState({ isOpen: false });\n      window.removeEventListener(\"mousedown\", this.closeDropdown);\n    }\n  };\n\n  private getDropdownStyle = (): React.CSSProperties => {\n    const clientRect = this.dropdownLabel.getBoundingClientRect();\n    const height: number = Math.min(this.props.options.length, this.dropdownOptionCount) * this.dropdownOptionHeight;\n    const style = {\n      width: clientRect.width,\n      height: height,\n      left: clientRect.left,\n    };\n\n    if ((window.innerHeight * 2) / 3 < clientRect.top)\n      return Object.assign(style, { top: clientRect.top - this.dropdownMargin - height });\n    else return Object.assign(style, { top: clientRect.bottom + this.dropdownMargin });\n  };\n\n  private getDropdownOptions = () => {\n    const onClick = (index: number, event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n      this.setState({ isOpen: false });\n      window.removeEventListener(\"mousedown\", this.closeDropdown);\n      this.props.onSelectLabel(this.props.id, index);\n      this.props.updateHighlightedLabelId(null);\n      this.props.updateActiveLabelId(this.props.id);\n      this.props.findNextAvailableLabelIndex();\n      event.stopPropagation();\n    };\n\n    return this.props.options.map((option: string, index: number) => {\n      return (\n        <div\n          className=\"DropdownOption\"\n          key={option}\n          style={{ height: this.dropdownOptionHeight }}\n          onClick={event => onClick(index, event)}\n        >\n          {option}\n        </div>\n      );\n    });\n  };\n\n  private mouseEnterHandler = () => {\n    this.props.updateHighlightedLabelId(this.props.id);\n  };\n\n  private mouseLeaveHandler = () => {\n    this.props.updateHighlightedLabelId(null);\n  };\n\n  private onClickHandler = () => {\n    this.props.updateActiveLabelId(this.props.id);\n  };\n\n  public render() {\n    const { size, id, value, onDelete, onCheck, checked } = this.props;\n\n    return (\n      <div\n        className={this.getClassName()}\n        style={{\n          width: size.width,\n          height: size.height,\n        }}\n        key={id}\n        onMouseEnter={this.mouseEnterHandler}\n        onMouseLeave={this.mouseLeaveHandler}\n        onClick={this.onClickHandler}\n      >\n        <div\n          className=\"LabelInputFieldWrapper\"\n          style={{\n            width: size.width,\n            height: size.height,\n          }}\n        >\n          <div className=\"Marker\" />\n          <div className=\"Content\">\n            <div className=\"ContentWrapper\">\n              <div className=\"DropdownLabel\" ref={ref => (this.dropdownLabel = ref)} onClick={this.openDropdown}>\n                {value ? value : \"选择一个标签\"}\n              </div>\n              {this.state.isOpen && (\n                <div className=\"Dropdown\" style={this.getDropdownStyle()} ref={ref => (this.dropdown = ref)}>\n                  <Scrollbars>\n                    <div>{this.getDropdownOptions()}</div>\n                  </Scrollbars>\n                </div>\n              )}\n            </div>\n            <span className=\"describeText\">被遮挡</span>\n            <input type=\"checkbox\" onClick={() => onCheck(id)} checked={checked} onChange={() => {}} />\n\n            <div className=\"ContentWrapper\">\n              <ImageButton\n                externalClassName={\"trash\"}\n                image={\"ico/trash.png\"}\n                imageAlt={\"remove_rect\"}\n                size={{ width: 30, height: 30 }}\n                onClick={() => onDelete(id)}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  updateHighlightedLabelId,\n  updateActiveLabelId,\n  findNextAvailableLabelIndex,\n};\n\nconst mapStateToProps = (state: AppState) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LabelInputField);\n","import React from \"react\";\nimport \"./EmptyLabelList.scss\";\nimport { AppState } from \"../../../../store\";\nimport { connect } from \"react-redux\";\nimport { EditorSelector } from \"../../../../store/selectors/EditorSelector\";\n\ninterface IProps {\n  firstLabelCreatedFlag: boolean;\n  labelBefore: string;\n  labelAfter: string;\n}\n\nconst EmptyLabelList: React.FC<IProps> = ({ firstLabelCreatedFlag, labelBefore, labelAfter }) => {\n  const before = (\n    <>\n      <img draggable={false} alt={\"lets_start\"} src={\"img/rocket.png\"} />\n      <p className=\"extraBold\">{labelBefore}</p>\n    </>\n  );\n\n  const after = (\n    <>\n      <img draggable={false} alt={\"no_labels\"} src={\"img/box-opened.png\"} />\n      <p className=\"extraBold\">{labelAfter}</p>\n    </>\n  );\n\n  return <div className=\"EmptyLabelList\">{!firstLabelCreatedFlag ? before : after}</div>;\n};\n\nconst mapDispatchToProps = {};\n\nconst mapStateToProps = (state: AppState) => ({\n  firstLabelCreatedFlag: EditorSelector.getFirstLabelCreatedFlag(),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EmptyLabelList);\n","import React from \"react\";\nimport { ISize } from \"../../../../interfaces/ISize\";\nimport Scrollbars from \"react-custom-scrollbars\";\nimport { ImageData, LabelRect } from \"../../../../store/editor/types\";\nimport \"./RectLabelsList.scss\";\nimport {\n  updateActiveLabelId,\n  updateActiveLabelNameIndex,\n  updateImageDataById,\n} from \"../../../../store/editor/actionCreators\";\nimport { AppState } from \"../../../../store\";\nimport { connect } from \"react-redux\";\nimport * as _ from \"lodash\";\nimport LabelInputField from \"../LabelInputField/LabelInputField\";\nimport EmptyLabelList from \"../EmptyLabelList/EmptyLabelList\";\nimport { EditorSelector } from \"../../../../store/selectors/EditorSelector\";\nimport produce from \"immer\";\n\ninterface IProps {\n  size: ISize;\n  imageData: ImageData;\n  updateImageDataById: (id: string, newImageData: ImageData) => any;\n  activeLabelId: string;\n  highlightedLabelId: string;\n  updateActiveLabelNameIndex: (activeLabelIndex: number) => any;\n  labelNames: string[];\n  updateActiveLabelId: (activeLabelId: string) => any;\n}\n\nconst RectLabelsList: React.FC<IProps> = ({\n  size,\n  imageData,\n  updateImageDataById,\n  labelNames,\n  updateActiveLabelNameIndex,\n  activeLabelId,\n  highlightedLabelId,\n  updateActiveLabelId,\n}) => {\n  const labelRects = EditorSelector.getActiveImageData().groupList[EditorSelector.getActiveGroupIndex()].labelRects;\n\n  const labelInputFieldHeight = 40;\n  const listStyle: React.CSSProperties = {\n    width: size.width,\n    height: size.height,\n  };\n  const listStyleContent: React.CSSProperties = {\n    width: size.width,\n    height: labelRects.length * labelInputFieldHeight,\n  };\n\n  const deleteRectLabelById = (labelRectId: string) => {\n    const newImageData = produce(imageData, draft => {\n      draft.groupList[imageData.activeGroupIndex].labelRects = labelRects.filter((currentLabel: LabelRect) => {\n        return currentLabel.id !== labelRectId;\n      });\n    });\n    updateImageDataById(imageData.id, newImageData);\n  };\n\n  const checkRectLabelById = (labelRectId: string) => {\n    const newImageData = produce(imageData, draft => {\n      draft.groupList[imageData.activeGroupIndex].labelRects = labelRects.map((currentLabel: LabelRect) => {\n        return currentLabel.id !== labelRectId ? currentLabel : { ...currentLabel, checked: !currentLabel.checked };\n      });\n    });\n    updateImageDataById(imageData.id, newImageData);\n  };\n\n  const updateRectLabel = (labelRectId: string, labelNameIndex: number) => {\n    const newImageData = produce(imageData, draft => {\n      draft.groupList[imageData.activeGroupIndex].labelRects = labelRects.map((labelRect: LabelRect) => {\n        if (labelRect.id === labelRectId) {\n          return {\n            ...labelRect,\n            labelIndex: labelNameIndex,\n          };\n        } else {\n          return labelRect;\n        }\n      });\n    });\n    updateImageDataById(imageData.id, newImageData);\n    updateActiveLabelNameIndex(labelNameIndex);\n  };\n\n  const onClickHandler = () => {\n    updateActiveLabelId(null);\n  };\n\n  const getChildren = () => {\n    return labelRects.map((labelRect: LabelRect, labelIndex: number) => {\n      return (\n        <LabelInputField\n          size={{\n            width: size.width,\n            height: labelInputFieldHeight,\n          }}\n          isActive={labelRect.id === activeLabelId}\n          index={labelIndex}\n          isHighlighted={labelRect.id === highlightedLabelId}\n          id={labelRect.id}\n          key={labelRect.id}\n          onDelete={deleteRectLabelById}\n          onCheck={checkRectLabelById}\n          value={labelRect.labelIndex !== null ? labelNames[labelRect.labelIndex] : null}\n          options={labelNames}\n          onSelectLabel={updateRectLabel}\n          checked={labelRect.checked}\n        />\n      );\n    });\n  };\n\n  return (\n    <div className=\"RectLabelsList\" style={listStyle} onClickCapture={onClickHandler}>\n      {labelRects.length === 0 ? (\n        <EmptyLabelList labelBefore={\"标记第一个矩形\"} labelAfter={\"这张图片还没有标注\"} />\n      ) : (\n        <Scrollbars>\n          <div className=\"RectLabelsListContent\" style={listStyleContent}>\n            {getChildren()}\n          </div>\n        </Scrollbars>\n      )}\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {\n  updateImageDataById,\n  updateActiveLabelNameIndex,\n  updateActiveLabelId,\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  activeLabelId: EditorSelector.getActiveLabelId(),\n  highlightedLabelId: EditorSelector.getHighlightedLabelId(),\n  labelNames: state.editor.labelNames,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RectLabelsList);\n","import React from 'react';\nimport { ISize } from '../../../../interfaces/ISize';\nimport Scrollbars from 'react-custom-scrollbars';\nimport { ImageData, LabelPoint } from '../../../../store/editor/types';\nimport './PointLabelsList.scss';\nimport {\n  updateActiveLabelId,\n  updateActiveLabelNameIndex,\n  updateImageDataById,\n  findNextAvailableLabelIndex,\n} from '../../../../store/editor/actionCreators';\nimport { AppState } from '../../../../store';\nimport { connect } from 'react-redux';\nimport * as _ from 'lodash';\nimport LabelInputField from '../LabelInputField/LabelInputField';\nimport EmptyLabelList from '../EmptyLabelList/EmptyLabelList';\nimport { EditorSelector } from '../../../../store/selectors/EditorSelector';\nimport produce from 'immer';\nimport { store as storeNF } from 'react-notifications-component';\n\ninterface IProps {\n  size: ISize;\n  imageData: ImageData;\n  updateImageDataById: (id: string, newImageData: ImageData) => any;\n  activeLabelId: string;\n  highlightedLabelId: string;\n  updateActiveLabelNameIndex: (activeLabelIndex: number) => any;\n  labelNames: string[];\n  updateActiveLabelId: (activeLabelId: string) => any;\n  findNextAvailableLabelIndex: () => any;\n}\n\nconst PointLabelsList: React.FC<IProps> = ({\n  size,\n  imageData,\n  updateImageDataById,\n  labelNames,\n  updateActiveLabelNameIndex,\n  activeLabelId,\n  highlightedLabelId,\n  updateActiveLabelId,\n  findNextAvailableLabelIndex,\n}) => {\n  const labelPoints = EditorSelector.getActiveImageData().groupList[EditorSelector.getActiveGroupIndex()].labelPoints;\n  const labelInputFieldHeight = 40;\n  const listStyle: React.CSSProperties = {\n    width: size.width,\n    height: size.height,\n  };\n  const listStyleContent: React.CSSProperties = {\n    width: size.width,\n    height: labelPoints.length * labelInputFieldHeight,\n  };\n\n  const deletePointLabelById = (labelPointId: string) => {\n    const newImageData = produce(imageData, draft => {\n      draft.groupList[imageData.activeGroupIndex].labelPoints = labelPoints.filter((currentLabel: LabelPoint) => {\n        return currentLabel.id !== labelPointId;\n      });\n    });\n    updateImageDataById(imageData.id, newImageData);\n    findNextAvailableLabelIndex();\n  };\n\n  const checkPointLabelById = (labelPointId: string) => {\n    const newImageData = produce(imageData, draft => {\n      draft.groupList[imageData.activeGroupIndex].labelPoints = labelPoints.map((currentLabel: LabelPoint) => {\n        return currentLabel.id !== labelPointId ? currentLabel : { ...currentLabel, checked: !currentLabel.checked };\n      });\n    });\n    updateImageDataById(imageData.id, newImageData);\n  };\n\n  const updatePointLabel = (labelPointId: string, labelNameIndex: number) => {\n    let alreadyFlag: boolean = false;\n    const newImageData = produce(imageData, draft => {\n      draft.groupList[imageData.activeGroupIndex].labelPoints = labelPoints.map((currentLabel: LabelPoint) => {\n        if (currentLabel.id === labelPointId) {\n          const alreadyHasIndex = draft.groupList[imageData.activeGroupIndex].labelPoints.some(\n            ele => ele.labelIndex === labelNameIndex\n          );\n          if (alreadyHasIndex) {\n            // console.log(\"labelNameIndex\", labelNameIndex);\n            storeNF.addNotification({\n              message: '已经标记过这个部位了',\n              type: 'warning',\n              insert: 'top',\n              container: 'top-center',\n              animationIn: ['animated', 'fadeIn'],\n              animationOut: ['animated', 'fadeOut'],\n              dismiss: {\n                duration: 1000,\n              },\n            });\n            alreadyFlag = true;\n            return currentLabel;\n          }\n          return {\n            ...currentLabel,\n            labelIndex: labelNameIndex,\n          };\n        }\n        return currentLabel;\n      });\n    });\n    updateImageDataById(imageData.id, newImageData);\n    !alreadyFlag && updateActiveLabelNameIndex(labelNameIndex);\n  };\n\n  const onClickHandler = () => {\n    updateActiveLabelId(null);\n  };\n\n  const getChildren = () => {\n    return labelPoints.map((labelPoint: LabelPoint, labelIndex: number) => {\n      return (\n        <LabelInputField\n          size={{\n            width: size.width,\n            height: labelInputFieldHeight,\n          }}\n          isActive={labelPoint.id === activeLabelId}\n          isHighlighted={labelPoint.id === highlightedLabelId}\n          id={labelPoint.id}\n          key={labelPoint.id}\n          onDelete={deletePointLabelById}\n          value={labelPoint.labelIndex !== null ? labelNames[labelPoint.labelIndex] : null}\n          options={labelNames}\n          onSelectLabel={updatePointLabel}\n          onCheck={checkPointLabelById}\n          checked={labelPoint.checked}\n          index={labelIndex}\n        />\n      );\n    });\n  };\n\n  return (\n    <div className=\"PointLabelsList\" style={listStyle} onClickCapture={onClickHandler}>\n      {labelPoints.length === 0 ? (\n        <EmptyLabelList labelBefore={'\b标记第一个点'} labelAfter={'这张图片还没有标注'} />\n      ) : (\n        <Scrollbars>\n          <div className=\"PointLabelsListContent\" style={listStyleContent}>\n            {getChildren()}\n          </div>\n        </Scrollbars>\n      )}\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {\n  updateImageDataById,\n  updateActiveLabelNameIndex,\n  updateActiveLabelId,\n  findNextAvailableLabelIndex,\n};\n\nconst mapStateToProps = (state: AppState) => {\n  return {\n    activeLabelId: EditorSelector.getActiveLabelId(),\n    highlightedLabelId: EditorSelector.getHighlightedLabelId(),\n    labelNames: state.editor.labelNames,\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PointLabelsList);\n","import React from \"react\";\nimport { ISize } from \"../../../../interfaces/ISize\";\nimport Scrollbars from \"react-custom-scrollbars\";\nimport { ImageData, LabelPolygon } from \"../../../../store/editor/types\";\nimport \"./PolygonLabelsList.scss\";\nimport {\n  updateActiveLabelId,\n  updateActiveLabelNameIndex,\n  updateImageDataById,\n} from \"../../../../store/editor/actionCreators\";\nimport { AppState } from \"../../../../store\";\nimport { connect } from \"react-redux\";\nimport * as _ from \"lodash\";\nimport LabelInputField from \"../LabelInputField/LabelInputField\";\nimport EmptyLabelList from \"../EmptyLabelList/EmptyLabelList\";\nimport { EditorSelector } from \"../../../../store/selectors/EditorSelector\";\nimport produce from \"immer\";\n\ninterface IProps {\n  size: ISize;\n  imageData: ImageData;\n  updateImageDataById: (id: string, newImageData: ImageData) => any;\n  activeLabelId: string;\n  highlightedLabelId: string;\n  updateActiveLabelNameIndex: (activeLabelIndex: number) => any;\n  labelNames: string[];\n  updateActiveLabelId: (activeLabelId: string) => any;\n}\n\nconst PolygonLabelsList: React.FC<IProps> = ({\n  size,\n  imageData,\n  updateImageDataById,\n  labelNames,\n  updateActiveLabelNameIndex,\n  activeLabelId,\n  highlightedLabelId,\n  updateActiveLabelId,\n}) => {\n  const labelPolygons = EditorSelector.getActiveImageData().groupList[EditorSelector.getActiveGroupIndex()]\n    .labelPolygons;\n  const labelInputFieldHeight = 40;\n  const listStyle: React.CSSProperties = {\n    width: size.width,\n    height: size.height,\n  };\n  const listStyleContent: React.CSSProperties = {\n    width: size.width,\n    height: labelPolygons.length * labelInputFieldHeight,\n  };\n\n  const deletePolygonLabelById = (labelPolygonId: string) => {\n    const newImageData = produce(imageData, draft => {\n      draft.groupList[imageData.activeGroupIndex].labelPolygons = labelPolygons.filter((currentLabel: LabelPolygon) => {\n        return currentLabel.id !== labelPolygonId;\n      });\n    });\n    updateImageDataById(imageData.id, newImageData);\n  };\n\n  const checkPolygonLabelById = (labelPolygonId: string) => {\n    const newImageData = produce(imageData, draft => {\n      draft.groupList[imageData.activeGroupIndex].labelPolygons = labelPolygons.map((currentLabel: LabelPolygon) => {\n        return currentLabel.id !== labelPolygonId ? currentLabel : { ...currentLabel, checked: !currentLabel.checked };\n      });\n    });\n    updateImageDataById(imageData.id, newImageData);\n  };\n\n  const updatePolygonLabel = (labelPolygonId: string, labelNameIndex: number) => {\n    const newImageData = produce(imageData, draft => {\n      draft.groupList[imageData.activeGroupIndex].labelPolygons = labelPolygons.map((currentLabel: LabelPolygon) => {\n        if (currentLabel.id === labelPolygonId) {\n          return {\n            ...currentLabel,\n            labelIndex: labelNameIndex,\n          };\n        } else {\n          return currentLabel;\n        }\n      });\n    });\n    updateImageDataById(imageData.id, newImageData);\n    updateActiveLabelNameIndex(labelNameIndex);\n  };\n\n  const onClickHandler = () => {\n    updateActiveLabelId(null);\n  };\n\n  const getChildren = () => {\n    return labelPolygons.map((labelPolygon: LabelPolygon, labelIndex: number) => {\n      return (\n        <LabelInputField\n          size={{\n            width: size.width,\n            height: labelInputFieldHeight,\n          }}\n          isActive={labelPolygon.id === activeLabelId}\n          isHighlighted={labelPolygon.id === highlightedLabelId}\n          id={labelPolygon.id}\n          index={labelIndex}\n          key={labelPolygon.id}\n          onDelete={deletePolygonLabelById}\n          value={labelPolygon.labelIndex !== null ? labelNames[labelPolygon.labelIndex] : null}\n          options={labelNames}\n          onSelectLabel={updatePolygonLabel}\n          onCheck={checkPolygonLabelById}\n          checked={labelPolygon.checked}\n        />\n      );\n    });\n  };\n\n  return (\n    <div className=\"PolygonLabelsList\" style={listStyle} onClickCapture={onClickHandler}>\n      {labelPolygons.length === 0 ? (\n        <EmptyLabelList labelBefore={\"标注第一个多边形\"} labelAfter={\"这张图片还没有标注\"} />\n      ) : (\n        <Scrollbars>\n          <div className=\"PolygonLabelsListContent\" style={listStyleContent}>\n            {getChildren()}\n          </div>\n        </Scrollbars>\n      )}\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {\n  updateImageDataById,\n  updateActiveLabelNameIndex,\n  updateActiveLabelId,\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  activeLabelId: EditorSelector.getActiveLabelId(),\n  highlightedLabelId: EditorSelector.getHighlightedLabelId(),\n  labelNames: state.editor.labelNames,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PolygonLabelsList);\n","import * as React from 'react';\nimport './TextButton.scss';\nimport classNames from 'classnames';\n\ninterface IProps {\n  key?: string;\n  label: any;\n  onClick?: () => any;\n  style?: React.CSSProperties;\n  isActive?: boolean;\n  isDisabled?: boolean;\n  externalClassName?: string;\n}\n\nexport const TextButton = (props: IProps) => {\n  const { key, label, onClick, style, isActive, isDisabled, externalClassName } = props;\n\n  const getClassName = () => {\n    return classNames('TextButton', externalClassName, {\n      active: isActive,\n      disabled: isDisabled,\n    });\n  };\n\n  const onClickHandler = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    event.stopPropagation();\n    !!onClick && onClick();\n  };\n\n  return (\n    <div className={getClassName()} onClick={onClickHandler} key={key} style={style}>\n      {label}\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./LabelsToolkit.scss\";\nimport { ImageData } from \"../../../../store/editor/types\";\nimport {\n  updateActiveLabelId,\n  updateActiveLabelType,\n  updateImageDataById,\n  updateGroupList,\n  updateActiveGroupIndex,\n  deleteGroupList,\n} from \"../../../../store/editor/actionCreators\";\nimport { AppState } from \"../../../../store\";\nimport { connect } from \"react-redux\";\nimport { LabelType } from \"../../../../data/enums/LabelType\";\nimport { ProjectType } from \"../../../../data/enums/ProjectType\";\nimport { ISize } from \"../../../../interfaces/ISize\";\nimport classNames from \"classnames\";\nimport * as _ from \"lodash\";\nimport { ILabelToolkit, LabelToolkitData } from \"../../../../data/info/LabelToolkitData\";\nimport { Settings } from \"../../../../settings/Settings\";\nimport RectLabelsList from \"../RectLabelsList/RectLabelsList\";\nimport PointLabelsList from \"../PointLabelsList/PointLabelsList\";\nimport PolygonLabelsList from \"../PolygonLabelsList/PolygonLabelsList\";\nimport { ContextManager } from \"../../../../logic/context/ContextManager\";\nimport { ContextType } from \"../../../../data/enums/ContextType\";\nimport Scrollbars from \"react-custom-scrollbars\";\nimport { GroupType } from \"../../../../store/editor/types\";\nimport { EditorSelector } from \"../../../../store/selectors/EditorSelector\";\nimport { TextButton } from \"../../../Common/TextButton/TextButton\";\n\ninterface IProps {\n  activeImageIndex: number;\n  activeLabelType: LabelType;\n  imagesData: ImageData[];\n  projectType: ProjectType;\n  groupList: GroupType[];\n  activeGroupIndex: number;\n  updateImageDataById: (id: string, newImageData: ImageData) => any;\n  updateActiveLabelType: (activeLabelType: LabelType) => any;\n  updateActiveLabelId: (highlightedLabelId: string) => any;\n  updateGroupList: (groupName: string) => any;\n  updateActiveGroupIndex: (groupIndex: number) => any;\n  deleteGroupList: (groupIndex: number) => any;\n}\n\ninterface IState {\n  size: ISize;\n  activeLabelType: LabelType;\n}\n\nclass LabelsToolkit extends React.Component<IProps, IState> {\n  private labelsToolkitRef: HTMLDivElement;\n  private readonly tabs: LabelType[];\n\n  constructor(props) {\n    super(props);\n\n    this.tabs = props.projectType === ProjectType.IMAGE_RECOGNITION ? [LabelType.NAME] : [LabelType.POINT];\n    // : [LabelType.RECTANGLE, LabelType.POINT, LabelType.POLYGON];\n\n    const activeTab: LabelType = props.activeLabelType ? props.activeLabelType : this.tabs[0];\n\n    this.state = {\n      size: null,\n      activeLabelType: activeTab,\n    };\n    props.updateActiveLabelType(activeTab);\n  }\n\n  public componentDidMount(): void {\n    this.updateToolkitSize();\n    window.addEventListener(\"resize\", this.updateToolkitSize);\n  }\n\n  public componentWillUnmount(): void {\n    window.removeEventListener(\"resize\", this.updateToolkitSize);\n  }\n\n  private updateToolkitSize = () => {\n    if (!this.labelsToolkitRef) return;\n\n    const listBoundingBox = this.labelsToolkitRef.getBoundingClientRect();\n    this.setState({\n      size: {\n        width: listBoundingBox.width,\n        height: listBoundingBox.height,\n      },\n    });\n  };\n\n  private headerClickHandler = (activeTab: LabelType) => {\n    this.setState({ activeLabelType: activeTab });\n    this.props.updateActiveLabelType(activeTab);\n    this.props.updateActiveLabelId(null);\n  };\n\n  private renderChildren = (currentGroupIndex: number) => {\n    const { activeLabelType, size } = this.state;\n    const { activeImageIndex, imagesData, activeGroupIndex } = this.props;\n    return this.tabs.reduce((children, labelType: LabelType, index: number) => {\n      const isActive: boolean = labelType === activeLabelType && activeGroupIndex === currentGroupIndex;\n      const tabData: ILabelToolkit = _.find(LabelToolkitData, { labelType });\n      // const activeTabContentHeight: number = size.height - this.tabs.length * Settings.TOOLKIT_TAB_HEIGHT_PX - 50 - 50;\n      const activeTabContentHeight = 300;\n      const getClassName = (baseClass: string) =>\n        classNames(baseClass, {\n          active: isActive,\n        });\n\n      const header = (\n        <div\n          key={\"Header_\" + index}\n          className={getClassName(\"Header\")}\n          onClick={() => this.headerClickHandler(labelType)}\n          style={{ height: Settings.TOOLKIT_TAB_HEIGHT_PX }}\n        >\n          <div className=\"Marker\" />\n          <div className=\"HeaderGroupWrapper\">\n            <img draggable={false} className=\"Ico\" src={tabData.imageSrc} alt={tabData.imageAlt} />\n            {tabData.headerText}\n          </div>\n          <div className=\"HeaderGroupWrapper\">\n            <img draggable={false} className=\"Arrow\" src={\"ico/down.png\"} alt={\"down_arrow\"} />\n          </div>\n        </div>\n      );\n\n      const content = (\n        <div\n          key={\"Content_\" + index}\n          className={getClassName(\"Content\")}\n          style={{ height: isActive ? activeTabContentHeight : 0 }}\n        >\n          {labelType === LabelType.RECTANGLE && (\n            <RectLabelsList\n              size={{\n                width: size.width - 20,\n                height: activeTabContentHeight - 20,\n              }}\n              imageData={imagesData[activeImageIndex]}\n            />\n          )}\n          {labelType === LabelType.POINT && (\n            <PointLabelsList\n              size={{\n                width: size.width - 20,\n                height: activeTabContentHeight - 20,\n              }}\n              imageData={imagesData[activeImageIndex]}\n            />\n          )}\n          {labelType === LabelType.POLYGON && (\n            <PolygonLabelsList\n              size={{\n                width: size.width - 20,\n                height: activeTabContentHeight - 20,\n              }}\n              imageData={imagesData[activeImageIndex]}\n            />\n          )}\n        </div>\n      );\n\n      children.push([header, content]);\n      return children;\n    }, []);\n  };\n\n  private buttonOnClickHandle = () => {\n    this.props.updateGroupList(`group-${this.props.groupList.length + 1}`);\n  };\n  private renderChildrenWrapper = () => {\n    const { groupList, activeGroupIndex } = this.props;\n    return groupList\n      .map((groupName, idx) => (\n        <div className=\"LabelsToolkitWrapper\" key={`LabelsToolkitWrapper_` + idx}>\n          <div\n            className={idx === activeGroupIndex ? \"active pDiv\" : \"pDiv\"}\n            onClick={() => {\n              this.props.updateActiveGroupIndex(idx);\n              this.headerClickHandler(this.state.activeLabelType);\n            }}\n          >\n            {`person-` + idx}\n            {idx !== activeGroupIndex ? (\n              <TextButton\n                label=\"删除\"\n                externalClassName=\"buttonClass\"\n                onClick={() => this.props.deleteGroupList(idx)}\n              ></TextButton>\n            ) : null}\n          </div>\n          {idx === activeGroupIndex && this.renderChildren(idx)}\n        </div>\n      ))\n      .concat(\n        <div className=\"addButton\" key=\"button\">\n          <button style={{ width: \"30%\" }} onClick={this.buttonOnClickHandle}>\n            添加 +{\" \"}\n          </button>\n        </div>\n      );\n  };\n  public render() {\n    return (\n      <div\n        className=\"LabelsToolkit\"\n        ref={ref => (this.labelsToolkitRef = ref)}\n        onClick={() => ContextManager.switchCtx(ContextType.RIGHT_NAVBAR)}\n      >\n        <Scrollbars>{this.state.size && this.renderChildrenWrapper()}</Scrollbars>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  updateImageDataById,\n  updateActiveLabelType,\n  updateActiveLabelId,\n  updateGroupList,\n  updateActiveGroupIndex,\n  deleteGroupList,\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  activeImageIndex: state.editor.activeImageIndex,\n  activeLabelType: EditorSelector.getActiveLabelType(),\n  imagesData: state.editor.imagesData,\n  projectType: state.editor.projectType,\n  groupList: EditorSelector.getActiveImageData().groupList,\n  activeGroupIndex: EditorSelector.getActiveGroupIndex(),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LabelsToolkit);\n","import React from 'react';\nimport classNames from 'classnames';\nimport './SideNavigationBar.scss';\nimport {Direction} from \"../../../data/enums/Direction\";\n\ninterface IProps {\n    direction: Direction\n    isOpen: boolean;\n    isWithContext?: boolean;\n    renderCompanion?: () => any;\n    renderContent?: () => any;\n}\n\nexport const SideNavigationBar: React.FC<IProps> = (props) => {\n    const {direction, isOpen, isWithContext, renderContent, renderCompanion} = props;\n\n    const getClassName = () => {\n        return classNames(\n            \"SideNavigationBar\",\n            {\n                \"left\": direction === Direction.LEFT,\n                \"right\": direction === Direction.RIGHT,\n                \"with-context\": isWithContext,\n                \"closed\": !isOpen\n            }\n        );\n    };\n\n    return (\n        <div className={getClassName()}>\n            <div className=\"CompanionBar\">\n                {renderCompanion && renderCompanion()}\n            </div>\n            {isOpen && <div className=\"NavigationBarContentWrapper\">\n                {renderContent && renderContent()}\n            </div>}\n        </div>\n    );\n};","import * as React from \"react\";\nimport classNames from \"classnames\";\nimport './VerticalEditorButton.scss';\n\ninterface IProps {\n    key?:string;\n    label:string;\n    onClick?:() => any;\n    style?:React.CSSProperties;\n    isActive?:boolean;\n    isDisabled?:boolean;\n    image?:string,\n    imageAlt?:string,\n}\n\nexport const VerticalEditorButton = (props:IProps) => {\n\n    const { key, label, onClick, style, isActive, isDisabled, image, imageAlt} = props;\n\n    const getClassName = () => {\n        return classNames(\n            \"VerticalEditorButton\",\n            {\n                \"active\": isActive,\n                \"disabled\": isDisabled\n            }\n        );\n    };\n\n    return(\n        <div\n            className={getClassName()}\n            onClick={!!onClick ? onClick : undefined}\n            key={key}\n            style={style}\n        >\n            {image && <img \n                draggable={false}\n                alt={imageAlt} \n                src={image}\n            />}\n            {label}\n        </div>\n    )\n};","import {CustomCursorStyle} from \"../data/enums/CustomCursorStyle\";\nimport classNames from \"classnames\";\n\nexport class EditorUtil {\n    public static getIndicator = (cursorStyle: CustomCursorStyle): string => {\n        switch (cursorStyle) {\n            case CustomCursorStyle.ADD:\n                return \"ico/plus.png\";\n            case CustomCursorStyle.RESIZE:\n                return \"ico/resize.png\";\n            case CustomCursorStyle.CLOSE:\n                return \"ico/close.png\";\n            case CustomCursorStyle.MOVE:\n                return \"ico/move.png\";\n            case CustomCursorStyle.CANCEL:\n                return \"ico/cancel.png\";\n            default:\n                return null;\n        }\n    };\n\n    public static getCursorStyle = (cursorStyle: CustomCursorStyle) => {\n        return classNames(\n            \"Cursor\", {\n                \"move\": cursorStyle === CustomCursorStyle.MOVE,\n                \"add\": cursorStyle === CustomCursorStyle.ADD,\n                \"resize\": cursorStyle === CustomCursorStyle.RESIZE,\n                \"close\": cursorStyle === CustomCursorStyle.CLOSE,\n                \"cancel\": cursorStyle === CustomCursorStyle.CANCEL,\n            }\n        );\n    };\n}","export enum AcceptedFileType {\n    IMAGE = 'image/jpeg, image/png',\n    TEXT = 'text/plain'\n}","import React from 'react';\nimport './Editor.scss';\nimport { ISize } from '../../../interfaces/ISize';\nimport { ImageData } from '../../../store/editor/types';\nimport { FileUtil } from '../../../utils/FileUtil';\nimport { AppState } from '../../../store';\nimport { connect } from 'react-redux';\nimport { updateImageDataById } from '../../../store/editor/actionCreators';\nimport { ImageRepository } from '../../../logic/imageRepository/ImageRepository';\nimport { LabelType } from '../../../data/enums/LabelType';\nimport { PopupWindowType } from '../../../data/enums/PopupWindowType';\nimport { CanvasUtil } from '../../../utils/CanvasUtil';\nimport { CustomCursorStyle } from '../../../data/enums/CustomCursorStyle';\nimport { ImageLoadManager } from '../../../logic/imageRepository/ImageLoadManager';\nimport { EventType } from '../../../data/enums/EventType';\nimport { EditorData } from '../../../data/EditorData';\nimport { EditorModel } from '../../../staticModels/EditorModel';\nimport { EditorActions } from '../../../logic/actions/EditorActions';\nimport { EditorUtil } from '../../../utils/EditorUtil';\nimport { ContextManager } from '../../../logic/context/ContextManager';\nimport { ContextType } from '../../../data/enums/ContextType';\nimport { loadDataFromLocalStorge } from '../../../store/editor/actionCreators';\n\nimport { EditorSelector } from '../../../store/selectors/EditorSelector';\nimport produce from 'immer';\n\ninterface IProps {\n  size: ISize;\n  imageData: ImageData;\n  activeLabelType: LabelType;\n  updateImageDataById: (id: string, newImageData: ImageData) => any;\n  activePopupType: PopupWindowType;\n  activeLabelId: string;\n  customCursorStyle: CustomCursorStyle;\n  loadDataFromLocalStorge: () => any;\n}\n\nclass Editor extends React.Component<IProps, {}> {\n  // =================================================================================================================\n  // LIFE CYCLE\n  // =================================================================================================================\n\n  public componentDidMount(): void {\n    this.mountEventListeners();\n\n    const { imageData, activeLabelType } = this.props;\n    ContextManager.switchCtx(ContextType.EDITOR);\n    EditorActions.mountRenderEngines(activeLabelType);\n    ImageLoadManager.addAndRun(this.loadImage(imageData));\n  }\n\n  public componentWillUnmount(): void {\n    this.unmountEventListeners();\n  }\n\n  public componentDidUpdate(prevProps: Readonly<IProps>, prevState: Readonly<{}>, snapshot?: any): void {\n    const { imageData, activeLabelType } = this.props;\n    prevProps.imageData.id !== imageData.id && ImageLoadManager.addAndRun(this.loadImage(imageData));\n    prevProps.activeLabelType !== activeLabelType && EditorActions.swapSupportRenderingEngine(activeLabelType);\n    this.updateModelAndRender();\n  }\n\n  // =================================================================================================================\n  // EVENT HANDLERS\n  // =================================================================================================================\n\n  private mountEventListeners() {\n    window.addEventListener(EventType.MOUSE_MOVE, this.update);\n    window.addEventListener(EventType.MOUSE_UP, this.update);\n    EditorModel.canvas.addEventListener(EventType.MOUSE_DOWN, this.update);\n  }\n\n  private unmountEventListeners() {\n    window.removeEventListener(EventType.MOUSE_MOVE, this.update);\n    window.removeEventListener(EventType.MOUSE_UP, this.update);\n    EditorModel.canvas.removeEventListener(EventType.MOUSE_DOWN, this.update);\n  }\n\n  // =================================================================================================================\n  // LOAD IMAGE\n  // =================================================================================================================\n\n  private loadImage = async (imageData: ImageData): Promise<any> => {\n    if (imageData.loadStatus) {\n      EditorActions.setActiveImage(ImageRepository.getById(imageData.id));\n      this.updateModelAndRender();\n    } else {\n      if (!EditorModel.isLoading) {\n        EditorActions.setLoadingStatus(true);\n        const saveLoadedImagePartial = (image: HTMLImageElement) => this.saveLoadedImage(image, imageData);\n        FileUtil.loadImage(imageData.fileData, saveLoadedImagePartial, this.handleLoadImageError);\n      }\n    }\n  };\n\n  private saveLoadedImage = (image: HTMLImageElement, imageData: ImageData) => {\n    const newImageData = produce(imageData, draft => {\n      draft.loadStatus = true;\n    });\n    this.props.updateImageDataById(imageData.id, newImageData);\n    ImageRepository.store(newImageData.id, image);\n    EditorActions.setActiveImage(image);\n    EditorActions.setLoadingStatus(false);\n    this.updateModelAndRender();\n  };\n\n  private handleLoadImageError = () => {\n    console.log('handleLoadImageError');\n  };\n\n  // =================================================================================================================\n  // HELPER METHODS\n  // =================================================================================================================\n\n  private updateModelAndRender = () => {\n    EditorActions.resizeCanvas(this.props.size);\n    EditorActions.calculateAllCharacteristics();\n    EditorActions.fullRender();\n  };\n\n  private update = (event: MouseEvent) => {\n    const editorData: EditorData = EditorActions.getEditorData(event);\n    EditorModel.mousePositionOnCanvas = CanvasUtil.getMousePositionOnCanvasFromEvent(event, EditorModel.canvas);\n    EditorModel.primaryRenderingEngine.update(editorData);\n    EditorModel.supportRenderingEngine && EditorModel.supportRenderingEngine.update(editorData);\n    !this.props.activePopupType && EditorActions.updateMousePositionIndicator(event);\n    EditorActions.fullRender();\n  };\n\n  public render() {\n    return (\n      <div className=\"Editor\">\n        <canvas\n          className=\"ImageCanvas\"\n          ref={ref => (EditorModel.canvas = ref)}\n          draggable={false}\n          onContextMenu={(event: React.MouseEvent<HTMLCanvasElement>) => event.preventDefault()}\n        />\n        <div\n          className=\"MousePositionIndicator\"\n          ref={ref => (EditorModel.mousePositionIndicator = ref)}\n          draggable={false}\n        />\n        <div\n          className={EditorUtil.getCursorStyle(this.props.customCursorStyle)}\n          ref={ref => (EditorModel.cursor = ref)}\n          draggable={false}\n        >\n          <img draggable={false} alt={'indicator'} src={EditorUtil.getIndicator(this.props.customCursorStyle)} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  updateImageDataById,\n  loadDataFromLocalStorge,\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  activeLabelType:\n    state.editor.imagesData[EditorSelector.getActiveImageIndex()].groupList[EditorSelector.getActiveGroupIndex()]\n      .activeLabelType || LabelType.POINT,\n  activePopupType: state.general.activePopupType,\n  activeLabelId:\n    state.editor.imagesData[EditorSelector.getActiveImageIndex()].groupList[EditorSelector.getActiveGroupIndex()]\n      .activeLabelId,\n  customCursorStyle: state.general.customCursorStyle,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Editor);\n","import React from \"react\";\nimport \"./BottomNavigationBar.scss\";\nimport { ImageData } from \"../../../store/editor/types\";\nimport { updateActiveImageIndex } from \"../../../store/editor/actionCreators\";\nimport { AppState } from \"../../../store\";\nimport { connect } from \"react-redux\";\nimport { ImageButton } from \"../../Common/ImageButton/ImageButton\";\nimport { ISize } from \"../../../interfaces/ISize\";\nimport { ContextType } from \"../../../data/enums/ContextType\";\nimport classNames from \"classnames\";\n\ninterface IProps {\n  size: ISize;\n  imageData: ImageData;\n  totalImageCount: number;\n  activeImageIndex: number;\n  activeContext: ContextType;\n  updateActiveImageIndex: (activeImageIndex: number) => any;\n}\n\nconst BottomNavigationBar: React.FC<IProps> = ({\n  size,\n  imageData,\n  totalImageCount,\n  activeImageIndex,\n  activeContext,\n  updateActiveImageIndex,\n}) => {\n  const minWidth: number = 400;\n  const viewPreviousImage = () => {\n    if (activeImageIndex > 0) {\n      updateActiveImageIndex(activeImageIndex - 1);\n    }\n  };\n\n  const viewNextImage = () => {\n    if (activeImageIndex < totalImageCount - 1) {\n      updateActiveImageIndex(activeImageIndex + 1);\n    }\n  };\n\n  const getImageCounter = () => {\n    return activeImageIndex + 1 + \" / \" + totalImageCount;\n  };\n\n  const getClassName = () => {\n    return classNames(\"BottomNavigationBar\", {\n      \"with-context\": activeContext === ContextType.EDITOR,\n    });\n  };\n\n  return (\n    <div className={getClassName()}>\n      <ImageButton\n        image={\"ico/left.png\"}\n        imageAlt={\"previous\"}\n        size={{ width: 25, height: 25 }}\n        onClick={viewPreviousImage}\n        isDisabled={activeImageIndex === 0}\n        externalClassName={\"left\"}\n      />\n      {size.width > minWidth ? (\n        <div className=\"CurrentImageName\"> {imageData.fileData.name} </div>\n      ) : (\n        <div className=\"CurrentImageCount\"> {getImageCounter()} </div>\n      )}\n      <ImageButton\n        image={\"ico/right.png\"}\n        imageAlt={\"next\"}\n        size={{ width: 25, height: 25 }}\n        onClick={viewNextImage}\n        isDisabled={activeImageIndex === totalImageCount - 1}\n        externalClassName={\"right\"}\n      />\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {\n  updateActiveImageIndex,\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  activeImageIndex: state.editor.activeImageIndex,\n  activeContext: state.general.activeContext,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BottomNavigationBar);\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Direction } from '../../../data/enums/Direction';\nimport { ISize } from '../../../interfaces/ISize';\nimport { Settings } from '../../../settings/Settings';\nimport { AppState } from '../../../store';\nimport { ImageData } from '../../../store/editor/types';\nimport ImagesList from '../SideNavigationBar/ImagesList/ImagesList';\nimport LabelsToolkit from '../SideNavigationBar/LabelsToolkit/LabelsToolkit';\nimport { SideNavigationBar } from '../SideNavigationBar/SideNavigationBar';\nimport { VerticalEditorButton } from '../VerticalEditorButton/VerticalEditorButton';\nimport './EditorContainer.scss';\nimport Editor from '../Editor/Editor';\nimport BottomNavigationBar from '../BottomNavigationBar/BottomNavigationBar';\nimport { ContextManager } from '../../../logic/context/ContextManager';\nimport { ContextType } from '../../../data/enums/ContextType';\nimport {\n  updateGroupList,\n  updateActiveGroupIndex,\n  updateActiveLabelNameIndex,\n  updateLabelIndexByInfo,\n  updateActiveImageIndex,\n} from '../../../store/editor/actionCreators';\nimport { LabelType } from '../../../data/enums/LabelType';\nimport { EditorModel } from '../../../staticModels/EditorModel';\nimport { RenderEngineUtil } from '../../../utils/RenderEngineUtil';\nimport { EditorActions } from '../../../logic/actions/EditorActions';\nimport { EditorSelector } from '../../../store/selectors/EditorSelector';\n// import {RenderEngineUtil} from '../'\n\ninterface IProps {\n  windowSize: ISize;\n  activeImageIndex: number;\n  imagesData: ImageData[];\n  activeContext: ContextType;\n  editor: any;\n  updateGroupList: (groupName: string) => any;\n  updateActiveGroupIndex: (groupIndex: number) => any;\n  updateActiveLabelNameIndex: (labelNameIndex: number) => any;\n  updateLabelIndexByInfo: (\n    imageIndex: number,\n    groupIndex: number,\n    labelPointIndex: number,\n    labelIndex: number,\n    checked: boolean\n  ) => any;\n  updateActiveImageIndex: (imageIndex: number) => any;\n}\n\nconst EditorContainer: React.FC<IProps> = ({\n  windowSize,\n  activeImageIndex,\n  imagesData,\n  activeContext,\n  editor,\n  updateGroupList,\n  updateActiveGroupIndex,\n  updateLabelIndexByInfo,\n}) => {\n  const [leftTabStatus, setLeftTabStatus] = useState(true);\n  const [rightTabStatus, setRightTabStatus] = useState(true);\n  const calculateEditorSize = (): ISize => {\n    if (windowSize) {\n      const leftTabWidth = leftTabStatus\n        ? Settings.SIDE_NAVIGATION_BAR_WIDTH_OPEN_PX\n        : Settings.SIDE_NAVIGATION_BAR_WIDTH_CLOSED_PX;\n      const rightTabWidth = rightTabStatus\n        ? Settings.SIDE_NAVIGATION_BAR_WIDTH_OPEN_PX\n        : Settings.SIDE_NAVIGATION_BAR_WIDTH_CLOSED_PX;\n      return {\n        width: windowSize.width - leftTabWidth - rightTabWidth,\n        height: windowSize.height - Settings.TOP_NAVIGATION_BAR_HEIGHT_PX - Settings.BOTTOM_NAVIGATION_BAR_HEIGHT_PX,\n      };\n    } else return null;\n  };\n\n  const leftSideBarButtonOnClick = () => {\n    if (!leftTabStatus) ContextManager.switchCtx(ContextType.LEFT_NAVBAR);\n    else if (leftTabStatus && activeContext === ContextType.LEFT_NAVBAR) ContextManager.restoreCtx();\n\n    setLeftTabStatus(!leftTabStatus);\n  };\n\n  const leftSideBarCompanionRender = () => {\n    return (\n      <>\n        <VerticalEditorButton\n          label=\"Images\"\n          image={'/ico/files.png'}\n          imageAlt={'images'}\n          onClick={leftSideBarButtonOnClick}\n          isActive={leftTabStatus}\n        />\n      </>\n    );\n  };\n\n  const leftSideBarRender = () => {\n    return <ImagesList />;\n  };\n\n  const rightSideBarButtonOnClick = () => {\n    if (!rightTabStatus) ContextManager.switchCtx(ContextType.RIGHT_NAVBAR);\n    else if (rightTabStatus && activeContext === ContextType.RIGHT_NAVBAR) ContextManager.restoreCtx();\n\n    setRightTabStatus(!rightTabStatus);\n  };\n\n  const rightSideBarCompanionRender = () => {\n    return (\n      <>\n        <VerticalEditorButton\n          label=\"Labels\"\n          image={'/ico/tags.png'}\n          imageAlt={'labels'}\n          onClick={rightSideBarButtonOnClick}\n          isActive={rightTabStatus}\n        />\n      </>\n    );\n  };\n\n  const rightSideBarRender = () => {\n    return <LabelsToolkit />;\n  };\n\n  useEffect(() => {\n    return;\n    // setTimeout(() => {\n    //   localStorage.setItem(\n    //     'offsetHeight',\n    //     (document.getElementsByClassName('TopNavigationBar')[0] as any).offsetHeight\n    //   );\n    //   localStorage.setItem(\n    //     'offsetWidth',\n    //     (document.getElementsByClassName('SideNavigationBar left')[0] as any).offsetWidth\n    //   );\n    //   const editorData = EditorActions.getEditorData();\n    //   const offsetWidth = localStorage.getItem('offsetWidth');\n    //   const offsetHeight = localStorage.getItem('offsetHeight');\n    //   // const newIndexs: number[] = [];\n    //   // [].slice\n    //   //   .call(document.getElementsByClassName('ImagePreview'))\n    //   //   .forEach(r => newIndexs.push(+r.getAttribute('data-index')));\n    //   // const showImageIndexs: number[] = (window as any).showImageIndexs || [];\n    //   // const showImagesData = imagesData.filter((itme, idx) => newIndexs.includes(idx));\n    //   imagesData.forEach((imageData, imageIndex) => {\n    //     console.log('activeImageIndex', imageIndex);\n    //     const localData: ImageData = JSON.parse(localStorage.getItem(imageData.fileData.name));\n    //     // updateActiveImageIndex(imageIndex);\n    //     const evt_click = new MouseEvent('click', {\n    //       bubbles: true,\n    //       view: window,\n    //     });\n    //     document.querySelectorAll('.VirtualListContent .ImagePreview')[imageIndex].dispatchEvent(evt_click);\n    //     if (localData) {\n    //       localData.groupList.forEach((item, groupIndex) => {\n    //         if (groupIndex !== 0) {\n    //           updateGroupList(`person-${groupIndex}`);\n    //           updateActiveGroupIndex(groupIndex);\n    //         }\n    //         item.labelPoints.forEach((labelPoint, labelPointIndex) => {\n    //           const point = RenderEngineUtil.transferPointFromImageToCanvas(labelPoint.point, editorData);\n    //           const evt_up = new MouseEvent('mouseup', {\n    //             bubbles: true,\n    //             view: window,\n    //             clientX: point.x + +offsetWidth,\n    //             clientY: point.y + +offsetHeight,\n    //           });\n    //           const evt_down = new MouseEvent('mousedown', {\n    //             bubbles: true,\n    //             view: window,\n    //             clientX: point.x + +offsetWidth,\n    //             clientY: point.y + +offsetHeight,\n    //           });\n    //           EditorModel.canvas.dispatchEvent(evt_up);\n    //           EditorModel.canvas.dispatchEvent(evt_down);\n    //           console.log(imageIndex, groupIndex, labelPointIndex, labelPoint.labelIndex);\n    //           updateLabelIndexByInfo(\n    //             imageIndex,\n    //             groupIndex,\n    //             labelPointIndex,\n    //             labelPoint.labelIndex,\n    //             labelPoint.checked\n    //           );\n    //         });\n    //       });\n    //     }\n    //   });\n    // }, 1000);\n  }, []);\n  return (\n    <div className=\"EditorContainer\">\n      <SideNavigationBar\n        direction={Direction.LEFT}\n        isOpen={leftTabStatus}\n        isWithContext={activeContext === ContextType.LEFT_NAVBAR}\n        renderCompanion={leftSideBarCompanionRender}\n        renderContent={leftSideBarRender}\n      />\n      <div className=\"EditorWrapper\" onMouseDown={() => ContextManager.switchCtx(ContextType.EDITOR)}>\n        <Editor size={calculateEditorSize()} imageData={imagesData[activeImageIndex]} />\n        <BottomNavigationBar\n          imageData={imagesData[activeImageIndex]}\n          size={calculateEditorSize()}\n          totalImageCount={imagesData.length}\n        />\n      </div>\n      <SideNavigationBar\n        direction={Direction.RIGHT}\n        isOpen={rightTabStatus}\n        isWithContext={activeContext === ContextType.RIGHT_NAVBAR}\n        renderCompanion={rightSideBarCompanionRender}\n        renderContent={rightSideBarRender}\n      />\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {\n  updateGroupList,\n  updateActiveGroupIndex,\n  updateActiveLabelNameIndex,\n  updateLabelIndexByInfo,\n  updateActiveImageIndex,\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  windowSize: state.general.windowSize,\n  activeImageIndex: state.editor.activeImageIndex,\n  imagesData: state.editor.imagesData,\n  activeContext: state.general.activeContext,\n  editor: state.editor,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EditorContainer);\n","import React from \"react\";\nimport \"./StateBar.scss\";\nimport { ImageData } from \"../../../store/editor/types\";\nimport { AppState } from \"../../../store\";\nimport { connect } from \"react-redux\";\nimport { LabelType } from \"../../../data/enums/LabelType\";\nimport { EditorSelector } from \"../../../store/selectors/EditorSelector\";\n\ninterface IProps {\n  imagesData: ImageData[];\n  activeLabelType: LabelType;\n}\n\nconst StateBar: React.FC<IProps> = ({ imagesData, activeLabelType }) => {\n  const pointLabeledImages = imagesData.reduce((currentCount: number, currentImage: ImageData) => {\n    return currentCount + (currentImage.groupList[currentImage.activeGroupIndex].labelPoints.length > 0 ? 1 : 0);\n  }, 0);\n\n  const rectLabeledImages = imagesData.reduce((currentCount: number, currentImage: ImageData) => {\n    return currentCount + (currentImage.groupList[currentImage.activeGroupIndex].labelRects.length > 0 ? 1 : 0);\n  }, 0);\n\n  const polygonLabeledImages = imagesData.reduce((currentCount: number, currentImage: ImageData) => {\n    return currentCount + (currentImage.groupList[currentImage.activeGroupIndex].labelPolygons.length > 0 ? 1 : 0);\n  }, 0);\n\n  const getProgress = () => {\n    switch (activeLabelType) {\n      case LabelType.POINT:\n        return (100 * pointLabeledImages) / imagesData.length;\n      case LabelType.RECTANGLE:\n        return (100 * rectLabeledImages) / imagesData.length;\n      case LabelType.POLYGON:\n        return (100 * polygonLabeledImages) / imagesData.length;\n      default:\n        return 0;\n    }\n  };\n\n  return (\n    <div className=\"StateBar\">\n      <div style={{ width: getProgress() + \"%\" }} className=\"done\" />\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {};\n\nconst mapStateToProps = (state: AppState) => ({\n  imagesData: state.editor.imagesData,\n  activeLabelType: EditorSelector.getActiveLabelType(),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(StateBar);\n","import React from 'react'\nimport classNames from 'classnames'\nimport './UnderlineTextButton.scss'\n\ninterface IProps {\n  under?: boolean\n  over?: boolean\n  active?: boolean\n  key?: string\n  label: string\n  onClick?: () => any\n  style?: React.CSSProperties\n}\n\nexport const UnderlineTextButton = (props: IProps) => {\n  const { under, over, active, key, label, onClick, style } = props;\n\n  const getClassName = () => {\n    return classNames('UnderlineTextButton', {\n      under: under,\n      over: over,\n      active: active,\n    })\n  };\n\n  return (\n    <div\n      className={getClassName()}\n      onClick={!!onClick ? onClick : undefined}\n      key={key}\n      style={style}\n    >\n      {label}\n    </div>\n  )\n};\n","import React from 'react';\nimport './TextInput.scss';\n\ninterface IProps {\n    key: string;\n    label?: string;\n    isPassword: boolean;\n    onChange?: (event: React.ChangeEvent<HTMLInputElement>) => any;\n    onFocus?: (event: React.FocusEvent<HTMLInputElement>) => any;\n    inputStyle?: React.CSSProperties;\n    labelStyle?: React.CSSProperties;\n    barStyle?: React.CSSProperties;\n    value?: string;\n}\n\nconst TextInput = (props: IProps) => {\n\n    const {\n        key,\n        label,\n        isPassword,\n        onChange,\n        onFocus,\n        inputStyle,\n        labelStyle,\n        barStyle,\n        value\n    } = props;\n\n    const getInputType = () => {\n        return isPassword ? \"password\" : \"text\";\n    };\n\n    return (\n        <div className=\"TextInput\">\n            <input\n                value={!!value ? value : undefined}\n                type={getInputType()}\n                id={key}\n                style={inputStyle}\n                onChange={onChange ? onChange : undefined}\n                onFocus={onFocus ? onFocus : undefined}\n            />\n            {!!label && <label\n                htmlFor={key}\n                style={labelStyle}\n            >\n                {label}\n            </label>}\n            <div\n                className=\"Bar\"\n                style={barStyle}\n            />\n        </div>\n    );\n};\n\nexport default TextInput;","import React from \"react\";\nimport \"./TopNavigationBar.scss\";\nimport StateBar from \"../StateBar/StateBar\";\nimport { UnderlineTextButton } from \"../../Common/UnderlineTextButton/UnderlineTextButton\";\nimport { PopupWindowType } from \"../../../data/enums/PopupWindowType\";\nimport { AppState } from \"../../../store\";\nimport { connect } from \"react-redux\";\nimport { updateActivePopupType } from \"../../../store/general/actionCreators\";\nimport TextInput from \"../../Common/TextInput/TextInput\";\nimport { updateProjectName } from \"../../../store/editor/actionCreators\";\nimport { ImageButton } from \"../../Common/ImageButton/ImageButton\";\nimport { Settings } from \"../../../settings/Settings\";\n\ninterface IProps {\n  updateActivePopupType: (activePopupType: PopupWindowType) => any;\n  updateProjectName: (projectName: string) => any;\n  projectName: string;\n}\n\nconst TopNavigationBar: React.FC<IProps> = ({ updateActivePopupType, updateProjectName, projectName }) => {\n  const onFocus = (event: React.FocusEvent<HTMLInputElement>) => {\n    event.target.setSelectionRange(0, event.target.value.length);\n  };\n\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.value.toLowerCase().replace(\" \", \"-\");\n    updateProjectName(value);\n  };\n\n  return (\n    <div className=\"TopNavigationBar\">\n      <StateBar />\n      <div className=\"TopNavigationBarWrapper\">\n        <div>\n          <div\n            className=\"Header\"\n            // onClick={() => updateActivePopupType(PopupWindowType.EXIT_PROJECT)}\n          >\n            {/* <img draggable={false} alt={\"make-sense\"} src={\"/make-sense-ico-transparent.png\"} />\n            Make Sense */}\n          </div>\n        </div>\n        <div className=\"NavigationBarGroupWrapper\">\n          <div className=\"ProjectName\">项目名称:</div>\n          <TextInput key={\"ProjectName\"} isPassword={false} value={projectName} onChange={onChange} onFocus={onFocus} />\n        </div>\n        <div className=\"NavigationBarGroupWrapper\">\n          <UnderlineTextButton\n            label={\"导入更多图片\"}\n            under={true}\n            onClick={() => updateActivePopupType(PopupWindowType.LOAD_IMAGES)}\n          />\n          <UnderlineTextButton\n            label={\"导出标注\"}\n            under={true}\n            onClick={() => updateActivePopupType(PopupWindowType.EXPORT_LABELS)}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {\n  updateActivePopupType,\n  updateProjectName,\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  projectName: state.editor.projectName,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TopNavigationBar);\n","import React from \"react\";\nimport \"./EditorView.scss\";\nimport EditorContainer from \"./EditorContainer/EditorContainer\";\nimport { PopupWindowType } from \"../../data/enums/PopupWindowType\";\nimport { AppState } from \"../../store\";\nimport { connect } from \"react-redux\";\nimport classNames from \"classnames\";\nimport TopNavigationBar from \"./TopNavigationBar/TopNavigationBar\";\n\ninterface IProps {\n  activePopupType: PopupWindowType;\n}\n\nconst EditorView: React.FC<IProps> = ({ activePopupType }) => {\n  const getClassName = () => {\n    return classNames(\"EditorView\", {\n      withPopup: !!activePopupType,\n    });\n  };\n\n  return (\n    <div className={getClassName()}>\n      <TopNavigationBar />\n      <EditorContainer />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  activePopupType: state.general.activePopupType,\n});\n\nexport default connect(mapStateToProps)(EditorView);\n","import {Settings} from \"../../settings/Settings\";\n\nexport interface ISocialMedia {\n    displayName:string;\n    imageSrc:string;\n    imageAlt:string;\n    href:string;\n    tooltipMessage:string;\n}\n\nexport const SocialMediaData: ISocialMedia[] = [\n    {\n        displayName: \"Github\",\n        imageSrc: \"/img/github-logo.png\",\n        imageAlt: \"GitHub Logo\",\n        href: Settings.GITHUB_URL,\n        tooltipMessage: \"Show me some love on GitHub\",\n    },\n    {\n        displayName: \"Medium\",\n        imageSrc: \"/img/medium-logo.png\",\n        imageAlt: \"Medium Logo\",\n        href: Settings.MEDIUM_URL,\n        tooltipMessage: \"Read my AI content on Medium\",\n    },\n    {\n        displayName: \"Patreon\",\n        imageSrc: \"/img/patreon-logo.png\",\n        imageAlt: \"Patreon Logo\",\n        href: Settings.PATREON_URL,\n        tooltipMessage: \"Support MakeSense on Patreon and help it grow\"\n    },\n];","export interface IEditorFeature {\n  displayText: string;\n  imageSrc: string;\n  imageAlt: string;\n}\n\nexport const EditorFeatureData: IEditorFeature[] = [\n  {\n    displayText: \"不需要额外安装，仅仅打开浏览器就可以开始工作\",\n    imageSrc: \"img/online.png\",\n    imageAlt: \"online\",\n  },\n  {\n    displayText: \"我们不存储你的图片\",\n    imageSrc: \"img/private.png\",\n    imageAlt: \"private\",\n  },\n  {\n    displayText: \"支持点、矩形、多边形标注\",\n    imageSrc: \"img/labels.png\",\n    imageAlt: \"labels\",\n  },\n  {\n    displayText: \"支持导出标注数据\",\n    imageSrc: \"img/file.png\",\n    imageAlt: \"file\",\n  },\n  {\n    displayText: \"支持裁剪和调整大小\",\n    imageSrc: \"img/crop.png\",\n    imageAlt: \"crop\",\n  },\n];\n","import React, { useEffect, useState } from \"react\";\nimport \"./GenericYesNoPopup.scss\";\nimport { TextButton } from \"../../Common/TextButton/TextButton\";\nimport { ContextManager } from \"../../../logic/context/ContextManager\";\nimport { ContextType } from \"../../../data/enums/ContextType\";\n\ninterface IProps {\n  title: string;\n  renderContent: () => any;\n  acceptLabel: string;\n  onAccept: () => any;\n  skipAcceptButton?: boolean;\n  disableAcceptButton?: boolean;\n  rejectLabel: string;\n  onReject: () => any;\n  skipRejectButton?: boolean;\n  disableRejectButton?: boolean;\n}\n\nexport const GenericYesNoPopup: React.FC<IProps> = ({\n  title,\n  renderContent,\n  acceptLabel,\n  onAccept,\n  skipAcceptButton,\n  disableAcceptButton,\n  rejectLabel,\n  onReject,\n  skipRejectButton,\n  disableRejectButton,\n}) => {\n  const [status, setMountStatus] = useState(false);\n  useEffect(() => {\n    if (!status) {\n      ContextManager.switchCtx(ContextType.POPUP);\n      setMountStatus(true);\n    }\n  }, [status]);\n\n  return (\n    <div className=\"GenericYesNoPopup\">\n      <div className=\"Header\">{title}</div>\n      <div className=\"Content\">{renderContent()}</div>\n      <div className=\"Footer\">\n        {!skipRejectButton && (\n          <TextButton\n            label={!!rejectLabel ? rejectLabel : \"不, 谢谢\"}\n            onClick={onReject}\n            externalClassName={\"reject\"}\n            isDisabled={disableRejectButton}\n          />\n        )}\n        {!skipAcceptButton && (\n          <TextButton\n            label={!!acceptLabel ? acceptLabel : \"好的\"}\n            onClick={onAccept}\n            externalClassName={\"accept\"}\n            isDisabled={disableAcceptButton}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './LoginPopup.scss';\nimport { GenericYesNoPopup } from '../GenericYesNoPopup/GenericYesNoPopup';\nimport {\n  updateActiveImageIndex,\n  updateActiveLabelNameIndex,\n  updateFirstLabelCreatedFlag,\n  updateImageData,\n  updateLabelNamesList,\n  updateProjectType,\n  addImageData,\n} from '../../../store/editor/actionCreators';\nimport { AppState } from '../../../store';\nimport { connect } from 'react-redux';\nimport { ProjectType } from '../../../data/enums/ProjectType';\nimport { ImageData } from '../../../store/editor/types';\nimport { PopupActions } from '../../../logic/actions/PopupActions';\nimport TextInput from '../../Common/TextInput/TextInput';\nimport { store } from 'react-notifications-component';\nimport { useCookies, Cookies } from 'react-cookie';\nimport uuidv1 from 'uuid/v1';\n\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { LabelType } from '../../../data/enums/LabelType';\nimport { makeRequest, postData, getData } from '../../../utils/HttpUtils';\n\ninterface IProps {\n  updateActiveImageIndex: (activeImageIndex: number) => any;\n  updateProjectType: (projectType: ProjectType) => any;\n  updateActiveLabelNameIndex: (activeLabelIndex: number) => any;\n  updateLabelNamesList: (labelNames: string[]) => any;\n  updateImageData: (imageData: ImageData[]) => any;\n  updateFirstLabelCreatedFlag: (firstLabelCreatedFlag: boolean) => any;\n  addImageData: (imageData: ImageData[]) => any;\n}\n\nconst ExitProjectPopup: React.FC<IProps> = props => {\n  const {\n    updateActiveLabelNameIndex,\n    updateLabelNamesList,\n    updateProjectType,\n    updateActiveImageIndex,\n    updateImageData,\n    updateFirstLabelCreatedFlag,\n    addImageData,\n  } = props;\n\n  const [cookies, setCookie, removeCookie] = useCookies(['token']);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isLogin, setIsLogin] = useState(false);\n  const [dirList, setDirList] = useState([]);\n  const [selectDirName, setSelectDirName] = useState('');\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const onChangeUsername = val => {\n    setUsername(val.target.value);\n  };\n\n  const onChangePassword = val => {\n    setPassword(val.target.value);\n  };\n\n  const renderContent = () => {\n    return (\n      <div className=\"ExitProjectPopupContent\">\n        <div className=\"Message\">\n          {!isLogin ? (\n            <>\n              用户名： <TextInput key=\"username\" isPassword={false} onChange={onChangeUsername} />\n              密码： <TextInput key=\"password\" isPassword={true} onChange={onChangePassword} />\n            </>\n          ) : (\n            <Scrollbars style={{ width: '100%', height: 300, fontSize: 18 }}>\n              {dirList.map((item, idx) => {\n                return (\n                  <p\n                    style={{ cursor: 'point' }}\n                    onClick={() => onSelectDir(item)}\n                    key={item}\n                    className={selectDirName === item ? 'active' : ''}\n                  >\n                    {item}\n                  </p>\n                );\n              })}\n            </Scrollbars>\n          )}\n        </div>\n      </div>\n    );\n  };\n  const onSelectDir = dirName => {\n    setSelectDirName(dirName);\n\n    postData('/mark/sign/picList', {\n      dir: dirName, // 文件夹名称\n      pageNo: 1, // 分页参数\n      pageSize: 999999, // 分页参数\n    }).then(resJson => {\n      if (resJson.status === 200) {\n        importImagesDataFromHttp(resJson.data.rows);\n      }\n    });\n  };\n\n  const importImagesDataFromHttp = (urlAry: any[]) => {\n    let imagesData = [];\n    let number = 0;\n    setIsLoaded(false);\n    urlAry.forEach(async (data, idx) => {\n      let blob = await makeRequest('get', data.url);\n      var file = new File([blob as any], data.id);\n      const reader = new FileReader();\n      reader.onabort = () => console.log('file reading was aborted');\n      reader.onerror = () => console.log('file reading has failed');\n      reader.onload = () => {\n        var image = new Image();\n        image.src = reader.result as any;\n        image.onload = function(img) {\n          (file as any).width = (this as any).width;\n          (file as any).height = (this as any).height;\n          const groupListData = data.point\n            ? JSON.parse(data.point)\n            : [\n                {\n                  activeLabelNameIndex: 0,\n                  activeLabelType: LabelType.POINT,\n                  activeLabelId: null,\n                  highlightedLabelId: null,\n                  firstLabelCreatedFlag: false,\n                  labelRects: [],\n                  labelPoints: [],\n                  labelPolygons: [],\n                },\n              ];\n          var tempImageData = {\n            activeGroupIndex: 0,\n            fileData: file,\n            groupList: groupListData,\n            id: uuidv1(),\n            loadStatus: false,\n          };\n          imagesData.push(tempImageData);\n          number++;\n          if (number === urlAry.length) {\n            imagesData.sort(function(a, b) {\n              return +a.fileData.name - +b.fileData.name;\n            });\n            addImageData(imagesData);\n            setIsLoaded(true);\n          }\n        };\n      };\n      reader.readAsDataURL(file);\n    });\n  };\n  const onAccept = () => {\n    postData('/mark/igt/login', {\n      username,\n      password,\n    }).then(function(res) {\n      if (res.status !== 200) {\n        store.addNotification({\n          title: '登录出错',\n          message: res.message,\n          type: 'warning',\n          insert: 'top',\n          container: 'top-center',\n          animationIn: ['animated', 'fadeIn'],\n          animationOut: ['animated', 'fadeOut'],\n          dismiss: {\n            duration: 1000,\n            // onScreen: true,\n          },\n        });\n      } else {\n        setCookie('token', res.data);\n        store.addNotification({\n          message: '登录成功',\n          type: 'success',\n          insert: 'top',\n          container: 'top-center',\n          animationIn: ['animated', 'fadeIn'],\n          animationOut: ['animated', 'fadeOut'],\n          dismiss: {\n            duration: 1000,\n            // onScreen: true,\n          },\n        });\n        getData('/mark/sign/getDir').then(data => {\n          if (data.status === 200) {\n            setDirList(data.data);\n          }\n        });\n        setIsLogin(true);\n      }\n    });\n    // getData('http://47.99.138.248/mark/sign/init').then(function(myJson) {\n    //   console.log(myJson);\n    // });\n    PopupActions.close();\n  };\n\n  const onReject = () => {};\n  const onStart = () => {\n    PopupActions.close();\n    updateProjectType(ProjectType.OBJECT_DETECTION);\n  };\n  return (\n    <GenericYesNoPopup\n      title={!isLogin ? '登录' : '选择文件夹'}\n      renderContent={renderContent}\n      acceptLabel={!isLogin ? '登录' : '开始标记'}\n      onAccept={!isLogin ? onAccept : onStart}\n      skipRejectButton={true}\n      rejectLabel={' '}\n      onReject={() => {}}\n      disableAcceptButton={(isLogin && !selectDirName) || (isLogin && !isLoaded)}\n    />\n  );\n};\n\nconst mapDispatchToProps = {\n  updateActiveLabelNameIndex,\n  updateLabelNamesList,\n  updateProjectType,\n  updateActiveImageIndex,\n  updateImageData,\n  updateFirstLabelCreatedFlag,\n  addImageData,\n};\n\nconst mapStateToProps = (state: AppState) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ExitProjectPopup);\n","import React, { useState } from 'react';\nimport './MainView.scss';\nimport { TextButton } from '../Common/TextButton/TextButton';\nimport classNames from 'classnames';\nimport { ISize } from '../../interfaces/ISize';\nimport { ImageButton } from '../Common/ImageButton/ImageButton';\nimport { ISocialMedia, SocialMediaData } from '../../data/info/SocialMediaData';\nimport { EditorFeatureData, IEditorFeature } from '../../data/info/EditorFeatureData';\nimport { Tooltip } from '@material-ui/core';\nimport Fade from '@material-ui/core/Fade';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ImagesDropZone from './ImagesDropZone/ImagesDropZone';\nimport 'react-notifications-component/dist/theme.css';\nimport LoginPopup from '../PopupView/LoginPopup/LoginPopup';\n\nconst MainView: React.FC = () => {\n  const [projectInProgress, setProjectInProgress] = useState(false);\n  const [projectCanceled, setProjectCanceled] = useState(false);\n\n  const startProject = () => {\n    setProjectInProgress(true);\n  };\n  const jumpToRegular = () => {\n    window.location.href = 'https://uglyspoon.github.io/regular/';\n  };\n\n  const endProject = () => {\n    setProjectInProgress(false);\n    setProjectCanceled(true);\n  };\n\n  const getClassName = () => {\n    return classNames('MainView', {\n      InProgress: projectInProgress,\n      Canceled: !projectInProgress && projectCanceled,\n    });\n  };\n\n  const DarkTooltip = withStyles(theme => ({\n    tooltip: {\n      backgroundColor: '#171717',\n      color: '#ffffff',\n      boxShadow: theme.shadows[1],\n      fontSize: 11,\n      maxWidth: 120,\n    },\n  }))(Tooltip);\n\n  const getSocialMediaButtons = (size: ISize) => {\n    return SocialMediaData.map((data: ISocialMedia, index: number) => {\n      return (\n        <DarkTooltip\n          key={index}\n          disableFocusListener\n          title={data.tooltipMessage}\n          TransitionComponent={Fade}\n          TransitionProps={{ timeout: 600 }}\n          placement=\"left\"\n        >\n          <div>\n            <ImageButton size={size} image={data.imageSrc} imageAlt={data.imageAlt} href={data.href} />\n          </div>\n        </DarkTooltip>\n      );\n    });\n  };\n\n  const getEditorFeatureTiles = () => {\n    return EditorFeatureData.map((data: IEditorFeature) => {\n      return (\n        <div className=\"EditorFeaturesTiles\" key={data.displayText}>\n          <div className=\"EditorFeaturesTilesWrapper\">\n            <img draggable={false} alt={data.imageAlt} src={data.imageSrc} />\n            <div className=\"EditorFeatureLabel\">{data.displayText}</div>\n          </div>\n        </div>\n      );\n    });\n  };\n\n  return (\n    <div className={getClassName()}>\n      <div className=\"Slider\" id=\"lower\">\n        <div className=\"TriangleVertical\">\n          <div className=\"TriangleVerticalContent\" />\n        </div>\n      </div>\n\n      <div className=\"Slider\" id=\"upper\">\n        <div className=\"TriangleVertical\">\n          <div className=\"TriangleVerticalContent\" />\n        </div>\n      </div>\n\n      <div className=\"LeftColumn\">\n        <div className={'LogoWrapper'}>\n          {/* <img draggable={false} alt={\"main-logo\"} src={\"img/main-image-color.png\"} /> */}\n          {/* <div /> */}\n        </div>\n        <div className=\"EditorFeaturesWrapper\">{getEditorFeatureTiles()}</div>\n        <div className=\"TriangleVertical\">\n          <div className=\"TriangleVerticalContent\" />\n        </div>\n        {projectInProgress && <TextButton label={'返回'} onClick={endProject} />}\n      </div>\n      <div className=\"RightColumn\">\n        <div />\n        {/* <ImagesDropZone /> */}\n        {projectInProgress && <LoginPopup />}\n        {/* <div className=\"SocialMediaWrapper\">{getSocialMediaButtons({ width: 30, height: 30 })}</div> */}\n        <div className=\"SocialMediaWrapper\"></div>\n        <TextButton label={'常规标记'} onClick={jumpToRegular} />\n        {!projectInProgress && <TextButton label={'关节标记'} onClick={startProject} />}\n      </div>\n    </div>\n  );\n};\n\nexport default MainView;\n","import React, { useState } from \"react\";\nimport \"./LoadLabelNamesPopup.scss\";\nimport { AppState } from \"../../../store\";\nimport { connect } from \"react-redux\";\nimport {\n  updateActiveLabelNameIndex,\n  updateLabelNamesList,\n} from \"../../../store/editor/actionCreators\";\nimport { GenericYesNoPopup } from \"../GenericYesNoPopup/GenericYesNoPopup\";\nimport { PopupWindowType } from \"../../../data/enums/PopupWindowType\";\nimport { updateActivePopupType } from \"../../../store/general/actionCreators\";\nimport { useDropzone } from \"react-dropzone\";\nimport { FileUtil } from \"../../../utils/FileUtil\";\nimport { AcceptedFileType } from \"../../../data/enums/AcceptedFileType\";\nimport { PopupActions } from \"../../../logic/actions/PopupActions\";\n\ninterface IProps {\n  updateActiveLabelNameIndex: (activeLabelIndex: number) => any;\n  updateLabelNamesList: (labelNames: string[]) => any;\n  updateActivePopupType: (activePopupType: PopupWindowType) => any;\n}\n\nconst LoadLabelNamesPopup: React.FC<IProps> = ({\n  updateActiveLabelNameIndex,\n  updateLabelNamesList,\n  updateActivePopupType,\n}) => {\n  const [labelsList, setLabelsList] = useState([]);\n  const [invalidFileLoadedStatus, setInvalidFileLoadedStatus] = useState(false);\n\n  const { acceptedFiles, getRootProps, getInputProps } = useDropzone({\n    accept: AcceptedFileType.TEXT,\n    multiple: false,\n    onDrop: acceptedFiles => {\n      if (acceptedFiles.length === 1) {\n        FileUtil.loadLabelsList(acceptedFiles[0], onSuccess, onFailure);\n      }\n    },\n  });\n\n  const onSuccess = (labelsList: string[]) => {\n    setLabelsList(labelsList);\n    setInvalidFileLoadedStatus(false);\n  };\n\n  const onFailure = () => {\n    setInvalidFileLoadedStatus(true);\n  };\n\n  const onAccept = () => {\n    if (labelsList.length > 0) {\n      updateActiveLabelNameIndex(0);\n      updateLabelNamesList(labelsList);\n      PopupActions.close();\n    }\n  };\n\n  const onReject = () => {\n    updateActivePopupType(PopupWindowType.INSERT_LABEL_NAMES);\n  };\n\n  const getDropZoneContent = () => {\n    if (invalidFileLoadedStatus)\n      return (\n        <>\n          <input {...getInputProps()} />\n          <img draggable={false} alt={\"upload\"} src={\"img/box-opened.png\"} />\n          <p className=\"extraBold\">导入文件未成功！</p>\n          <p className=\"extraBold\">请再试一次</p>\n        </>\n      );\n    else if (acceptedFiles.length === 0)\n      return (\n        <>\n          <input {...getInputProps()} />\n          <img draggable={false} alt={\"upload\"} src={\"img/box-opened.png\"} />\n          <p className=\"extraBold\">拖拽文件到这里</p>\n          <p>或</p>\n          <p className=\"extraBold\">点击此处选择导入</p>\n        </>\n      );\n    else if (labelsList.length === 1)\n      return (\n        <>\n          <img draggable={false} alt={\"uploaded\"} src={\"img/box-closed.png\"} />\n          <p className=\"extraBold\">已导入了一个标签</p>\n        </>\n      );\n    else\n      return (\n        <>\n          <img draggable={false} alt={\"uploaded\"} src={\"img/box-closed.png\"} />\n          <p className=\"extraBold\"> 已导入了{labelsList.length}个标签</p>\n        </>\n      );\n  };\n\n  const renderContent = () => {\n    return (\n      <div className=\"LoadLabelsPopupContent\">\n        <div className=\"Message\">\n          选择一个你准备好的.txt格式的文本文件，注意每个标签应该另起一行\n        </div>\n        <div {...getRootProps({ className: \"DropZone\" })}>{getDropZoneContent()}</div>\n      </div>\n    );\n  };\n\n  return (\n    <GenericYesNoPopup\n      title={\"导入标签列表文件\"}\n      renderContent={renderContent}\n      acceptLabel={\"开始\"}\n      onAccept={onAccept}\n      disableAcceptButton={labelsList.length === 0}\n      rejectLabel={\"返回\"}\n      onReject={onReject}\n    />\n  );\n};\n\nconst mapDispatchToProps = {\n  updateActiveLabelNameIndex,\n  updateLabelNamesList,\n  updateActivePopupType,\n};\n\nconst mapStateToProps = (state: AppState) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoadLabelNamesPopup);\n","export enum ExportFormatType {\n  YOLO = \"YOLO\",\n  COCO = \"COCO\",\n  CSV = \"CSV\",\n  VOC = \"VOC\",\n  VGG_JSON = \"VGG_JSON\",\n  JSON = \"JSON\",\n}\n","export class XMLSanitizerUtil {\n    public static sanitize(input: string): string {\n        return input\n            .replace('<', '&lt;')\n            .replace('>', '&gt;')\n            .replace('&', '&amp;')\n            .replace(\"'\", '&#39;')\n            .replace(\"/\", '&#x2F;')\n    }\n}","import {EditorSelector} from \"../store/selectors/EditorSelector\";\nimport moment from 'moment';\n\nexport class ExporterUtil {\n    public static getExportFileName(): string {\n        const projectName: string = EditorSelector.getProjectName();\n        const date: string = moment().format('YYYYMMDDhhmmss');\n        return `labels_${projectName}_${date}`\n    }\n}","import { ExportFormatType } from \"../../data/enums/ExportFormatType\";\nimport { ImageData, LabelRect } from \"../../store/editor/types\";\nimport { ImageRepository } from \"../imageRepository/ImageRepository\";\nimport JSZip from \"jszip\";\nimport { saveAs } from \"file-saver\";\nimport { EditorSelector } from \"../../store/selectors/EditorSelector\";\nimport { XMLSanitizerUtil } from \"../../utils/XMLSanitizerUtil\";\nimport { ExporterUtil } from \"../../utils/ExporterUtil\";\n\nexport class RectLabelsExporter {\n  public static export(exportFormatType: ExportFormatType): void {\n    switch (exportFormatType) {\n      case ExportFormatType.YOLO:\n        RectLabelsExporter.exportAsYOLO();\n        break;\n      case ExportFormatType.VOC:\n        RectLabelsExporter.exportAsVOC();\n        break;\n      case ExportFormatType.CSV:\n        RectLabelsExporter.exportAsCSV();\n        break;\n      default:\n        return;\n    }\n  }\n\n  private static exportAsYOLO(): void {\n    let zip = new JSZip();\n    EditorSelector.getImagesData().forEach((imageData: ImageData) => {\n      const fileContent: string = RectLabelsExporter.wrapRectLabelsIntoYOLO(imageData);\n      if (fileContent) {\n        const fileName: string = imageData.fileData.name.replace(/\\.[^/.]+$/, \".txt\");\n        try {\n          zip.file(fileName, fileContent);\n        } catch (error) {\n          // TODO\n          throw new Error(error);\n        }\n      }\n    });\n\n    try {\n      zip.generateAsync({ type: \"blob\" }).then(function(content) {\n        saveAs(content, `${ExporterUtil.getExportFileName()}.zip`);\n      });\n    } catch (error) {\n      // TODO\n      throw new Error(error);\n    }\n  }\n\n  private static wrapRectLabelsIntoYOLO(imageData: ImageData): string {\n    if (imageData.groupList[imageData.activeGroupIndex].labelRects.length === 0 || !imageData.loadStatus) return null;\n\n    const image: HTMLImageElement = ImageRepository.getById(imageData.id);\n    const labelRectsString: string[] = imageData.groupList[imageData.activeGroupIndex].labelRects.map(\n      (labelRect: LabelRect) => {\n        const labelFields = [\n          labelRect.labelIndex + \"\",\n          ((labelRect.rect.x + labelRect.rect.width / 2) / image.width).toFixed(6) + \"\",\n          ((labelRect.rect.y + labelRect.rect.height / 2) / image.height).toFixed(6) + \"\",\n          (labelRect.rect.width / image.width).toFixed(6) + \"\",\n          (labelRect.rect.height / image.height).toFixed(6) + \"\",\n        ];\n        return labelFields.join(\" \");\n      }\n    );\n    return labelRectsString.join(\"\\n\");\n  }\n\n  private static exportAsVOC(): void {\n    let zip = new JSZip();\n    EditorSelector.getImagesData().forEach((imageData: ImageData) => {\n      const fileContent: string = RectLabelsExporter.wrapImageIntoVOC(imageData);\n      if (fileContent) {\n        const fileName: string = imageData.fileData.name.replace(/\\.[^/.]+$/, \".xml\");\n        try {\n          zip.file(fileName, fileContent);\n        } catch (error) {\n          // TODO\n          throw new Error(error);\n        }\n      }\n    });\n\n    try {\n      zip.generateAsync({ type: \"blob\" }).then(function(content) {\n        saveAs(content, `${ExporterUtil.getExportFileName()}.zip`);\n      });\n    } catch (error) {\n      // TODO\n      throw new Error(error);\n    }\n  }\n\n  private static wrapRectLabelsIntoVOC(imageData: ImageData): string {\n    if (imageData.groupList[imageData.activeGroupIndex].labelRects.length === 0 || !imageData.loadStatus) return null;\n\n    const labelNamesList: string[] = EditorSelector.getLabelNames();\n    const labelRectsString: string[] = imageData.groupList[imageData.activeGroupIndex].labelRects.map(\n      (labelRect: LabelRect) => {\n        const labelFields = [\n          `\\t<object>`,\n          `\\t\\t<name>${labelNamesList[labelRect.labelIndex]}</name>`,\n          `\\t\\t<pose>Unspecified</pose>`,\n          `\\t\\t<truncated>Unspecified</truncated>`,\n          `\\t\\t<difficult>Unspecified</difficult>`,\n          `\\t\\t<bndbox>`,\n          `\\t\\t\\t<xmin>${Math.round(labelRect.rect.x)}</xmin>`,\n          `\\t\\t\\t<ymin>${Math.round(labelRect.rect.y)}</ymin>`,\n          `\\t\\t\\t<xmax>${Math.round(labelRect.rect.x + labelRect.rect.width)}</xmax>`,\n          `\\t\\t\\t<ymax>${Math.round(labelRect.rect.y + labelRect.rect.height)}</ymax>`,\n          `\\t\\t</bndbox>`,\n          `\\t</object>`,\n        ];\n        return labelFields.join(\"\\n\");\n      }\n    );\n    return labelRectsString.join(\"\\n\");\n  }\n\n  private static wrapImageIntoVOC(imageData: ImageData): string {\n    const labels: string = RectLabelsExporter.wrapRectLabelsIntoVOC(imageData);\n    const projectName: string = XMLSanitizerUtil.sanitize(EditorSelector.getProjectName());\n\n    if (labels) {\n      const image: HTMLImageElement = ImageRepository.getById(imageData.id);\n      return [\n        `<annotation>`,\n        `\\t<folder>${projectName}</folder>`,\n        `\\t<filename>${imageData.fileData.name}</filename>`,\n        `\\t<path>/${projectName}/${imageData.fileData.name}</path>`,\n        `\\t<source>`,\n        `\\t\\t<database>Unspecified</database>`,\n        `\\t</source>`,\n        `\\t<size>`,\n        `\\t\\t<width>${image.width}</width>`,\n        `\\t\\t<height>${image.height}</height>`,\n        `\\t\\t<depth>3</depth>`,\n        `\\t</size>`,\n        labels,\n        `</annotation>`,\n      ].join(\"\\n\");\n    }\n    return null;\n  }\n\n  private static exportAsCSV(): void {\n    const content: string = EditorSelector.getImagesData()\n      .map((imageData: ImageData) => {\n        return RectLabelsExporter.wrapRectLabelsIntoCSV(imageData);\n      })\n      .filter((imageLabelData: string) => {\n        return !!imageLabelData;\n      })\n      .join(\"\\n\");\n\n    const blob = new Blob([content], { type: \"text/plain;charset=utf-8\" });\n    try {\n      saveAs(blob, `${ExporterUtil.getExportFileName()}.csv`);\n    } catch (error) {\n      // TODO\n      throw new Error(error);\n    }\n  }\n\n  private static wrapRectLabelsIntoCSV(imageData: ImageData): string {\n    if (imageData.groupList[imageData.activeGroupIndex].labelRects.length === 0 || !imageData.loadStatus) return null;\n\n    const image: HTMLImageElement = ImageRepository.getById(imageData.id);\n    const labelNamesList: string[] = EditorSelector.getLabelNames();\n    const labelRectsString: string[] = imageData.groupList[imageData.activeGroupIndex].labelRects.map(\n      (labelRect: LabelRect) => {\n        const labelFields = [\n          labelNamesList[labelRect.labelIndex],\n          Math.round(labelRect.rect.x) + \"\",\n          Math.round(labelRect.rect.y) + \"\",\n          Math.round(labelRect.rect.width) + \"\",\n          Math.round(labelRect.rect.height) + \"\",\n          imageData.fileData.name,\n          image.width + \"\",\n          image.height + \"\",\n        ];\n        return labelFields.join(\",\");\n      }\n    );\n    return labelRectsString.join(\"\\n\");\n  }\n}\n","import { IExportFormat } from \"../../interfaces/IExportFormat\";\nimport { ExportFormatType } from \"../enums/ExportFormatType\";\n\nexport const AllExportFormatData: IExportFormat[] = [\n  {\n    type: ExportFormatType.JSON,\n    label: \"JSON格式文件\",\n  },\n];\n","import { ExportFormatType } from \"../enums/ExportFormatType\";\nimport { IExportFormat } from \"../../interfaces/IExportFormat\";\n\nexport const PointExportFormatData: IExportFormat[] = [\n  {\n    type: ExportFormatType.CSV,\n    label: \"单一的CSV文件\",\n  },\n];\n","import { ExportFormatType } from \"../../data/enums/ExportFormatType\";\nimport { ImageData, LabelPoint } from \"../../store/editor/types\";\nimport { saveAs } from \"file-saver\";\nimport { ImageRepository } from \"../imageRepository/ImageRepository\";\nimport { EditorSelector } from \"../../store/selectors/EditorSelector\";\nimport { ExporterUtil } from \"../../utils/ExporterUtil\";\n\nexport class PointLabelsExporter {\n  public static export(exportFormatType: ExportFormatType): void {\n    switch (exportFormatType) {\n      case ExportFormatType.CSV:\n        PointLabelsExporter.exportAsCSV();\n        break;\n      default:\n        return;\n    }\n  }\n\n  private static exportAsCSV(): void {\n    const content: string = EditorSelector.getImagesData()\n      .map((imageData: ImageData) => {\n        return PointLabelsExporter.wrapRectLabelsIntoCSV(imageData);\n      })\n      .filter((imageLabelData: string) => {\n        return !!imageLabelData;\n      })\n      .join(\"\\n\");\n\n    const blob = new Blob([content], { type: \"text/plain;charset=utf-8\" });\n    try {\n      saveAs(blob, `${ExporterUtil.getExportFileName()}.csv`);\n    } catch (error) {\n      // TODO\n      throw new Error(error);\n    }\n  }\n\n  private static wrapRectLabelsIntoCSV(imageData: ImageData): string {\n    if (imageData.groupList[imageData.activeGroupIndex].labelPoints.length === 0 || !imageData.loadStatus) return null;\n\n    const image: HTMLImageElement = ImageRepository.getById(imageData.id);\n    const labelNamesList: string[] = EditorSelector.getLabelNames();\n    const labelRectsString: string[] = imageData.groupList[imageData.activeGroupIndex].labelPoints.map(\n      (labelPoint: LabelPoint) => {\n        const labelFields = [\n          labelNamesList[labelPoint.labelIndex],\n          Math.round(labelPoint.point.x) + \"\",\n          Math.round(labelPoint.point.y) + \"\",\n          imageData.fileData.name,\n          image.width + \"\",\n          image.height + \"\",\n        ];\n        return labelFields.join(\",\");\n      }\n    );\n    return labelRectsString.join(\"\\n\");\n  }\n}\n","import { ExportFormatType } from \"../../data/enums/ExportFormatType\";\nimport { IPoint } from \"../../interfaces/IPoint\";\nimport { VGGFileData, VGGObject, VGGRegionsData } from \"../../data/VGG/JSON\";\nimport { ImageData, LabelPolygon, GroupType, LabelPoint } from \"../../store/editor/types\";\nimport { EditorSelector } from \"../../store/selectors/EditorSelector\";\nimport { saveAs } from \"file-saver\";\nimport { ExporterUtil } from \"../../utils/ExporterUtil\";\n\nexport class AllLabelsExporter {\n  public static export(exportFormatType: ExportFormatType): void {\n    switch (exportFormatType) {\n      case ExportFormatType.JSON:\n        AllLabelsExporter.exportAsJson();\n        break;\n      default:\n        return;\n    }\n  }\n\n  private static exportAsJson(): void {\n    const imagesData: ImageData[] = EditorSelector.getImagesData();\n    const labelNames: string[] = EditorSelector.getLabelNames();\n    const content: string = JSON.stringify(AllLabelsExporter.mapImagesDataToVGGObject(imagesData, labelNames));\n    const blob = new Blob([content], { type: \"text/plain;charset=utf-8\" });\n    try {\n      saveAs(blob, `${ExporterUtil.getExportFileName()}.json`);\n    } catch (error) {\n      // TODO\n      throw new Error(error);\n    }\n  }\n\n  private static mapImagesDataToVGGObject(imagesData: ImageData[], labelNames: string[]): VGGObject {\n    return imagesData.reduce((data: VGGObject, image: ImageData) => {\n      const fileData: VGGFileData = AllLabelsExporter.mapImageDataToVGGFileData(image, labelNames);\n      if (!!fileData) {\n        data[image.fileData.name] = fileData;\n      }\n      return data;\n    }, {});\n  }\n\n  private static mapImageDataToVGGFileData(imageData: ImageData, labelNames: string[]): VGGFileData {\n    let regionsDataArray: VGGRegionsData[][] = AllLabelsExporter.mapImageDataToVGG(imageData, labelNames);\n    if (!regionsDataArray) return null;\n\n    const orderArray: string[] = labelNames;\n    const tempArray = [];\n    regionsDataArray.forEach(item => {\n      item = Object.values(item);\n      orderArray.forEach((ele, idx) => {\n        if (!item.some(r => r.label === ele)) {\n          item.push({\n            label: ele,\n            type: \"point\",\n            is_checked: null,\n            all_points: null,\n          });\n        }\n      });\n      const temp = item.sort((a, b) => {\n        return orderArray.indexOf(a.label as any) - orderArray.indexOf(b.label as any);\n      });\n      tempArray.push(temp);\n    });\n\n    const peopleDataArray = tempArray.map((personData, idx) => {\n      let result = [];\n      personData.forEach((item, idx) => {\n        if (item.all_points) {\n          result.push(item.all_points[0], item.all_points[1], item.is_checked);\n        } else {\n          result.push(-1, -1, -1);\n        }\n      });\n      return {\n        pose_keypoints_2d: result,\n      };\n    });\n    return {\n      // size: imageData.fileData.size,\n      label_name: labelNames,\n      width: (imageData.fileData as any).width,\n      height: (imageData.fileData as any).height,\n      // image_name: imageData.fileData.name,\n      people: peopleDataArray,\n    };\n  }\n\n  public static mapImageDataToVGG(imageData: ImageData, labelNames: string[]): VGGRegionsData[][] {\n    if (\n      !imageData.loadStatus ||\n      !imageData.groupList[imageData.activeGroupIndex].labelPoints ||\n      !imageData.groupList[imageData.activeGroupIndex].labelPoints.length ||\n      !labelNames ||\n      !labelNames.length\n    )\n      return null;\n\n    // const validPolygonLabelsArray: Array<LabelPolygon[]> = AllLabelsExporter.getValidPolygonLabelsArray(imageData);\n\n    // let polygonsData = [];\n    // if (validPolygonLabelsArray.length) {\n    //   polygonsData = validPolygonLabelsArray.map((validLabels: LabelPolygon[]) => {\n    //     return validLabels.reduce((data: VGGRegionsData, label: LabelPolygon, index: number) => {\n    //       data[`${index}`] = {\n    //         all_points: AllLabelsExporter.mapPolygonToVGG(label.vertices),\n    //         label: labelNames[label.labelIndex],\n    //         is_checked: label.checked ? \"1\" : \"0\",\n    //         type: \"polygon\",\n    //       };\n    //       return data;\n    //     }, {});\n    //   });\n    // }\n\n    const validPointLabelsArray: Array<LabelPoint[]> = AllLabelsExporter.getValidPointLabelsArray(imageData);\n    let pointsData = [];\n    if (validPointLabelsArray.length) {\n      pointsData = validPointLabelsArray.map((validLabels: LabelPoint[]) => {\n        return validLabels.reduce((data: VGGRegionsData, label: LabelPoint, index: number) => {\n          data[`${index}`] = {\n            all_points: [label.point.x, label.point.y],\n            label: labelNames[label.labelIndex],\n            is_checked: label.checked ? 1 : 0,\n            type: \"point\",\n          };\n          return data;\n        }, {});\n      });\n    }\n    return pointsData;\n  }\n\n  public static getValidPolygonLabelsArray(imageData: ImageData): LabelPolygon[][] {\n    return imageData.groupList.map((group: GroupType) => {\n      return group.labelPolygons.filter((label: LabelPolygon) => label.labelIndex !== null && !!label.vertices.length);\n    });\n  }\n\n  public static getValidPointLabelsArray(imageData: ImageData): LabelPoint[][] {\n    return imageData.groupList.map((group: GroupType) => {\n      return group.labelPoints.filter((label: LabelPoint) => label.labelIndex !== null && !!label.point);\n    });\n  }\n\n  public static getValidPolygonLabels(imageData: ImageData): LabelPolygon[] {\n    return imageData.groupList[imageData.activeGroupIndex].labelPolygons.filter(\n      (label: LabelPolygon) => label.labelIndex !== null && !!label.vertices.length\n    );\n  }\n\n  public static mapPolygonToVGG(path: IPoint[]): string[] {\n    if (!path || !path.length) return null;\n    const all_points: string[] = path\n      .map((point: IPoint) => `(${point.x}, ${point.y})`)\n      .concat(`(${path[0].x}, ${path[0].y})`);\n    return all_points;\n  }\n}\n","import { IExportFormat } from \"../../interfaces/IExportFormat\";\nimport { ExportFormatType } from \"../enums/ExportFormatType\";\n\nexport const PolygonExportFormatData: IExportFormat[] = [\n  {\n    type: ExportFormatType.VGG_JSON,\n    label: \"VGG JSON格式文件\",\n  },\n];\n","import { ExportFormatType } from \"../../data/enums/ExportFormatType\";\nimport { IPoint } from \"../../interfaces/IPoint\";\nimport { VGGFileData, VGGObject, VGGPolygon, VGGRegionsData } from \"../../data/VGG/IVGG\";\nimport { ImageData, LabelPolygon } from \"../../store/editor/types\";\nimport { EditorSelector } from \"../../store/selectors/EditorSelector\";\nimport { saveAs } from \"file-saver\";\nimport { ExporterUtil } from \"../../utils/ExporterUtil\";\n\nexport class PolygonLabelsExporter {\n  public static export(exportFormatType: ExportFormatType): void {\n    switch (exportFormatType) {\n      case ExportFormatType.VGG_JSON:\n        PolygonLabelsExporter.exportAsVGGJson();\n        break;\n      default:\n        return;\n    }\n  }\n\n  private static exportAsVGGJson(): void {\n    const imagesData: ImageData[] = EditorSelector.getImagesData();\n    const labelNames: string[] = EditorSelector.getLabelNames();\n    const content: string = JSON.stringify(PolygonLabelsExporter.mapImagesDataToVGGObject(imagesData, labelNames));\n    const blob = new Blob([content], { type: \"text/plain;charset=utf-8\" });\n    try {\n      saveAs(blob, `${ExporterUtil.getExportFileName()}.json`);\n    } catch (error) {\n      // TODO\n      throw new Error(error);\n    }\n  }\n\n  private static mapImagesDataToVGGObject(imagesData: ImageData[], labelNames: string[]): VGGObject {\n    return imagesData.reduce((data: VGGObject, image: ImageData) => {\n      const fileData: VGGFileData = PolygonLabelsExporter.mapImageDataToVGGFileData(image, labelNames);\n      if (!!fileData) {\n        data[image.fileData.name] = fileData;\n      }\n      return data;\n    }, {});\n  }\n\n  private static mapImageDataToVGGFileData(imageData: ImageData, labelNames: string[]): VGGFileData {\n    const regionsData: VGGRegionsData = PolygonLabelsExporter.mapImageDataToVGG(imageData, labelNames);\n    if (!regionsData) return null;\n    return {\n      fileref: \"\",\n      size: imageData.fileData.size,\n      filename: imageData.fileData.name,\n      base64_img_data: \"\",\n      file_attributes: {},\n      regions: regionsData,\n    };\n  }\n\n  public static mapImageDataToVGG(imageData: ImageData, labelNames: string[]): VGGRegionsData {\n    if (\n      !imageData.loadStatus ||\n      !imageData.groupList[imageData.activeGroupIndex].labelPolygons ||\n      !imageData.groupList[imageData.activeGroupIndex].labelPolygons.length ||\n      !labelNames ||\n      !labelNames.length\n    )\n      return null;\n\n    const validLabels: LabelPolygon[] = PolygonLabelsExporter.getValidPolygonLabels(imageData);\n\n    if (!validLabels.length) return null;\n\n    return validLabels.reduce((data: VGGRegionsData, label: LabelPolygon, index: number) => {\n      data[`${index}`] = {\n        shape_attributes: PolygonLabelsExporter.mapPolygonToVGG(label.vertices),\n        region_attributes: {\n          label: labelNames[label.labelIndex],\n        },\n      };\n      return data;\n    }, {});\n  }\n\n  public static getValidPolygonLabels(imageData: ImageData): LabelPolygon[] {\n    return imageData.groupList[imageData.activeGroupIndex].labelPolygons.filter(\n      (label: LabelPolygon) => label.labelIndex !== null && !!label.vertices.length\n    );\n  }\n\n  public static mapPolygonToVGG(path: IPoint[]): VGGPolygon {\n    if (!path || !path.length) return null;\n\n    const all_points_x: number[] = path.map((point: IPoint) => point.x).concat(path[0].x);\n    const all_points_y: number[] = path.map((point: IPoint) => point.y).concat(path[0].y);\n    return {\n      name: \"polygon\",\n      all_points_x,\n      all_points_y,\n    };\n  }\n}\n","import { ExportFormatType } from \"../enums/ExportFormatType\";\nimport { IExportFormat } from \"../../interfaces/IExportFormat\";\n\nexport const RectExportFormatData: IExportFormat[] = [\n  {\n    type: ExportFormatType.YOLO,\n    label: \"YOLO 格式的zip包\",\n  },\n  {\n    type: ExportFormatType.VOC,\n    label: \"XML 格式的zip包\",\n  },\n  {\n    type: ExportFormatType.CSV,\n    label: \"单一的CSV文件\",\n  },\n];\n","import React, { useState } from \"react\";\nimport \"./ExportLabelPopup.scss\";\nimport { GenericYesNoPopup } from \"../GenericYesNoPopup/GenericYesNoPopup\";\nimport { AppState } from \"../../../store\";\nimport { connect } from \"react-redux\";\nimport { ExportFormatType } from \"../../../data/enums/ExportFormatType\";\nimport { RectLabelsExporter } from \"../../../logic/export/RectLabelsExporter\";\nimport { LabelType } from \"../../../data/enums/LabelType\";\nimport { ImageButton } from \"../../Common/ImageButton/ImageButton\";\nimport { IExportFormat } from \"../../../interfaces/IExportFormat\";\nimport { AllExportFormatData } from \"../../../data/export/AllExportFormatData\";\nimport { PointExportFormatData } from \"../../../data/export/PointExportFormatData\";\nimport { PointLabelsExporter } from \"../../../logic/export/PointLabelsExport\";\nimport { AllLabelsExporter } from \"../../../logic/export/AllLabelsExport\";\nimport { PolygonExportFormatData } from \"../../../data/export/PolygonExportFormatData\";\nimport { PolygonLabelsExporter } from \"../../../logic/export/PolygonLabelsExporter\";\nimport { PopupActions } from \"../../../logic/actions/PopupActions\";\nimport { RectExportFormatData } from \"../../../data/export/RectExportFormatData\";\n\nconst ExportLabelPopup: React.FC = () => {\n  const [exportLabelType, setExportLabelType] = useState(LabelType.ALL);\n  const [exportFormatType, setExportFormatType] = useState(null);\n\n  const onAccept = () => {\n    if (!exportFormatType) return;\n    switch (exportLabelType) {\n      case LabelType.RECTANGLE:\n        RectLabelsExporter.export(exportFormatType);\n        break;\n      case LabelType.POINT:\n        PointLabelsExporter.export(exportFormatType);\n        break;\n      case LabelType.POLYGON:\n        PolygonLabelsExporter.export(exportFormatType);\n        break;\n      case LabelType.ALL:\n        AllLabelsExporter.export(exportFormatType);\n        break;\n    }\n    PopupActions.close();\n  };\n\n  const onReject = () => {\n    PopupActions.close();\n  };\n\n  const onSelect = (exportFormatType: ExportFormatType) => {\n    setExportFormatType(exportFormatType);\n  };\n\n  const getOptions = (exportFormatData: IExportFormat[]) => {\n    return exportFormatData.map((entry: IExportFormat) => {\n      return (\n        <div className=\"OptionsItem\" onClick={() => onSelect(entry.type)} key={entry.type}>\n          {entry.type === exportFormatType ? (\n            <img draggable={false} src={\"ico/checkbox-checked.png\"} alt={\"checked\"} />\n          ) : (\n            <img draggable={false} src={\"ico/checkbox-unchecked.png\"} alt={\"unchecked\"} />\n          )}\n          {entry.label}\n        </div>\n      );\n    });\n  };\n\n  const renderContent = () => {\n    return (\n      <div className=\"ExportLabelPopupContent\">\n        <div className=\"LeftContainer\">\n          <ImageButton\n            image={\"ico/all.png\"}\n            imageAlt={\"all\"}\n            size={{ width: 40, height: 40 }}\n            padding={20}\n            onClick={() => {\n              setExportLabelType(LabelType.ALL);\n              setExportFormatType(null);\n            }}\n            isActive={exportLabelType === LabelType.ALL}\n          />\n          {/* <ImageButton\n            image={\"ico/rectangle.png\"}\n            imageAlt={\"rectangle\"}\n            size={{ width: 40, height: 40 }}\n            padding={20}\n            onClick={() => {\n              setExportLabelType(LabelType.RECTANGLE);\n              setExportFormatType(null);\n            }}\n            isActive={exportLabelType === LabelType.RECTANGLE}\n          />\n          <ImageButton\n            image={\"ico/point.png\"}\n            imageAlt={\"point\"}\n            size={{ width: 40, height: 40 }}\n            padding={20}\n            onClick={() => {\n              setExportLabelType(LabelType.POINT);\n              setExportFormatType(null);\n            }}\n            isActive={exportLabelType === LabelType.POINT}\n          />\n          <ImageButton\n            image={\"ico/polygon.png\"}\n            imageAlt={\"polygon\"}\n            size={{ width: 40, height: 40 }}\n            padding={20}\n            onClick={() => {\n              setExportLabelType(LabelType.POLYGON);\n              setExportFormatType(null);\n            }}\n            isActive={exportLabelType === LabelType.POLYGON}\n          /> */}\n        </div>\n        <div className=\"RightContainer\">\n          <div className=\"Message\">选择标注类型和导出文件格式</div>\n          <div className=\"Options\">\n            {exportLabelType === LabelType.ALL && getOptions(AllExportFormatData)}\n            {exportLabelType === LabelType.RECTANGLE && getOptions(RectExportFormatData)}\n            {exportLabelType === LabelType.POINT && getOptions(PointExportFormatData)}\n            {exportLabelType === LabelType.POLYGON && getOptions(PolygonExportFormatData)}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <GenericYesNoPopup\n      title={\"导出标注\"}\n      renderContent={renderContent}\n      acceptLabel={\"导出\"}\n      onAccept={onAccept}\n      rejectLabel={\"取消\"}\n      onReject={onReject}\n    />\n  );\n};\n\nconst mapDispatchToProps = {};\n\nconst mapStateToProps = (state: AppState) => ({\n  imagesData: state.editor.imagesData,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ExportLabelPopup);\n","import React, { useState } from \"react\";\nimport \"./InsertLabelNamesPopup.scss\";\nimport { GenericYesNoPopup } from \"../GenericYesNoPopup/GenericYesNoPopup\";\nimport { PopupWindowType } from \"../../../data/enums/PopupWindowType\";\nimport { updateActiveLabelNameIndex, updateLabelNamesList } from \"../../../store/editor/actionCreators\";\nimport { updateActivePopupType } from \"../../../store/general/actionCreators\";\nimport { AppState } from \"../../../store\";\nimport { connect } from \"react-redux\";\nimport Scrollbars from \"react-custom-scrollbars\";\nimport TextInput from \"../../Common/TextInput/TextInput\";\nimport { ImageButton } from \"../../Common/ImageButton/ImageButton\";\nimport uuidv1 from \"uuid/v1\";\nimport { PopupActions } from \"../../../logic/actions/PopupActions\";\n\ninterface IProps {\n  updateActiveLabelNameIndex: (activeLabelIndex: number) => any;\n  updateLabelNamesList: (labelNames: string[]) => any;\n  updateActivePopupType: (activePopupType: PopupWindowType) => any;\n}\n\nconst InsertLabelNamesPopup: React.FC<IProps> = ({\n  updateActiveLabelNameIndex,\n  updateLabelNamesList,\n  updateActivePopupType,\n}) => {\n  const [labelNames, setLabelNames] = useState({});\n\n  const addHandle = () => {\n    const newLabelNames = { ...labelNames, [uuidv1()]: \"\" };\n    setLabelNames(newLabelNames);\n  };\n\n  const deleteHandle = (key: string) => {\n    const newLabelNames = { ...labelNames };\n    delete newLabelNames[key];\n    setLabelNames(newLabelNames);\n  };\n\n  const labelInputs = Object.keys(labelNames).map((key: string) => {\n    return (\n      <div className=\"LabelEntry\" key={key}>\n        <TextInput\n          key={key}\n          isPassword={false}\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => onChange(key, event.target.value)}\n          label={\"标注名称\"}\n        />\n        <ImageButton\n          image={\"ico/trash.png\"}\n          imageAlt={\"remove_label\"}\n          size={{ width: 30, height: 30 }}\n          onClick={() => deleteHandle(key)}\n        />\n      </div>\n    );\n  });\n\n  const onChange = (key: string, value: string) => {\n    const newLabelNames = { ...labelNames, [key]: value };\n    setLabelNames(newLabelNames);\n  };\n\n  const onAccept = () => {\n    const labelNamesList: string[] = extractLabelNamesList();\n    if (labelNamesList.length > 0) {\n      updateLabelNamesList(labelNamesList);\n      PopupActions.close();\n    }\n  };\n\n  const extractLabelNamesList = (): string[] => {\n    const labelNameList: string[] = Object.values(labelNames).filter(value => !!value) as string[];\n    // const defaultLabelList: string[] = [\n    //   \"头顶\",\n    //   \"左手心\",\n    //   \"右手心\",\n    //   \"左脚跟\",\n    //   \"左脚尖\",\n    //   \"右脚跟\",\n    //   \"右脚尖\",\n    // ];\n\n    // return defaultLabelList.concat(labelNameList);\n    return labelNameList;\n  };\n\n  const onReject = () => {\n    updateActivePopupType(PopupWindowType.LOAD_LABEL_NAMES);\n  };\n\n  const renderContent = () => {\n    return (\n      <div className=\"InsertLabelNamesPopup\">\n        <div className=\"LeftContainer\">\n          <ImageButton\n            image={\"ico/plus.png\"}\n            imageAlt={\"plus\"}\n            size={{ width: 40, height: 40 }}\n            padding={25}\n            onClick={addHandle}\n          />\n        </div>\n        <div className=\"RightContainer\">\n          <div className=\"Message\">在你开始之前，请创建一个即将用在你项目内的标签列表，点击左边的 + 号添加新标签</div>\n          <div className=\"LabelsContainer\">\n            {Object.keys(labelNames).length !== 0 ? (\n              <Scrollbars>\n                <div className=\"InsertLabelNamesPopupContent\">{labelInputs}</div>\n              </Scrollbars>\n            ) : (\n              <div className=\"EmptyList\" onClick={addHandle}>\n                <img draggable={false} alt={\"upload\"} src={\"img/type-writer.png\"} />\n                <p className=\"extraBold\">当前项目标签列表为空</p>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <GenericYesNoPopup\n      title={\"创建标签列表\"}\n      renderContent={renderContent}\n      acceptLabel={\"开始标注\"}\n      onAccept={onAccept}\n      disableAcceptButton={extractLabelNamesList().length === 0}\n      rejectLabel={\"从文件载入\"}\n      onReject={onReject}\n    />\n  );\n};\n\nconst mapDispatchToProps = {\n  updateActiveLabelNameIndex,\n  updateLabelNamesList,\n  updateActivePopupType,\n};\n\nconst mapStateToProps = (state: AppState) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(InsertLabelNamesPopup);\n","import React from \"react\";\nimport \"./ExitProjectPopup.scss\";\nimport { GenericYesNoPopup } from \"../GenericYesNoPopup/GenericYesNoPopup\";\nimport {\n  updateActiveImageIndex,\n  updateActiveLabelNameIndex,\n  updateFirstLabelCreatedFlag,\n  updateImageData,\n  updateLabelNamesList,\n  updateProjectType,\n} from \"../../../store/editor/actionCreators\";\nimport { AppState } from \"../../../store\";\nimport { connect } from \"react-redux\";\nimport { ProjectType } from \"../../../data/enums/ProjectType\";\nimport { ImageData } from \"../../../store/editor/types\";\nimport { PopupActions } from \"../../../logic/actions/PopupActions\";\n\ninterface IProps {\n  updateActiveImageIndex: (activeImageIndex: number) => any;\n  updateProjectType: (projectType: ProjectType) => any;\n  updateActiveLabelNameIndex: (activeLabelIndex: number) => any;\n  updateLabelNamesList: (labelNames: string[]) => any;\n  updateImageData: (imageData: ImageData[]) => any;\n  updateFirstLabelCreatedFlag: (firstLabelCreatedFlag: boolean) => any;\n}\n\nconst ExitProjectPopup: React.FC<IProps> = props => {\n  const {\n    updateActiveLabelNameIndex,\n    updateLabelNamesList,\n    updateProjectType,\n    updateActiveImageIndex,\n    updateImageData,\n    updateFirstLabelCreatedFlag,\n  } = props;\n\n  const renderContent = () => {\n    return (\n      <div className=\"ExitProjectPopupContent\">\n        <div className=\"Message\">\n          Are you sure you want to leave the editor? You will permanently lose all your progress.\n        </div>\n      </div>\n    );\n  };\n\n  const onAccept = () => {\n    updateActiveLabelNameIndex(null);\n    updateLabelNamesList([]);\n    updateProjectType(null);\n    updateActiveImageIndex(null);\n    updateImageData([]);\n    updateFirstLabelCreatedFlag(false);\n    PopupActions.close();\n  };\n\n  const onReject = () => {\n    PopupActions.close();\n  };\n\n  return (\n    <GenericYesNoPopup\n      title={\"Exit project\"}\n      renderContent={renderContent}\n      acceptLabel={\"Exit\"}\n      onAccept={onAccept}\n      rejectLabel={\"Back\"}\n      onReject={onReject}\n    />\n  );\n};\n\nconst mapDispatchToProps = {\n  updateActiveLabelNameIndex,\n  updateLabelNamesList,\n  updateProjectType,\n  updateActiveImageIndex,\n  updateImageData,\n  updateFirstLabelCreatedFlag,\n};\n\nconst mapStateToProps = (state: AppState) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ExitProjectPopup);\n","import React, { useCallback } from \"react\";\nimport \"./LoadMoreImagesPopup.scss\";\nimport { AppState } from \"../../../store\";\nimport { connect } from \"react-redux\";\nimport { addImageData } from \"../../../store/editor/actionCreators\";\nimport { GenericYesNoPopup } from \"../GenericYesNoPopup/GenericYesNoPopup\";\nimport { useDropzone } from \"react-dropzone\";\nimport { FileUtil } from \"../../../utils/FileUtil\";\nimport { ImageData } from \"../../../store/editor/types\";\nimport { AcceptedFileType } from \"../../../data/enums/AcceptedFileType\";\nimport { PopupActions } from \"../../../logic/actions/PopupActions\";\n\ninterface IProps {\n  addImageData: (imageData: ImageData[]) => any;\n}\n\nconst LoadMoreImagesPopup: React.FC<IProps> = ({ addImageData }) => {\n  const onDrop = useCallback(acceptedFiles => {\n    acceptedFiles.forEach(file => {\n      const reader = new FileReader();\n      reader.onabort = () => console.log(\"file reading was aborted\");\n      reader.onerror = () => console.log(\"file reading has failed\");\n      reader.onload = () => {\n        var image = new Image();\n        image.src = reader.result as any;\n        image.onload = function(img) {\n          file.width = (this as any).width;\n          file.height = (this as any).height;\n        };\n      };\n      reader.readAsDataURL(file);\n    });\n  }, []);\n\n  const { acceptedFiles, getRootProps, getInputProps } = useDropzone({\n    accept: AcceptedFileType.IMAGE,\n    onDrop,\n  });\n\n  const onAccept = () => {\n    if (acceptedFiles.length > 0) {\n      addImageData(acceptedFiles.map((fileData: File) => FileUtil.mapFileDataToImageData(fileData)));\n      PopupActions.close();\n    }\n  };\n\n  const onReject = () => {\n    PopupActions.close();\n  };\n\n  const getDropZoneContent = () => {\n    if (acceptedFiles.length === 0)\n      return (\n        <>\n          <input {...getInputProps()} />\n          <img draggable={false} alt={\"upload\"} src={\"img/box-opened.png\"} />\n          <p className=\"extraBold\">拖拽到这里</p>\n          <p>或</p>\n          <p className=\"extraBold\">点击导入</p>\n        </>\n      );\n    else if (acceptedFiles.length === 1)\n      return (\n        <>\n          <img draggable={false} alt={\"uploaded\"} src={\"img/box-closed.png\"} />\n          <p className=\"extraBold\">导入了 1 张新图片 </p>\n        </>\n      );\n    else\n      return (\n        <>\n          <img draggable={false} key={1} alt={\"uploaded\"} src={\"img/box-closed.png\"} />\n          <p key={2} className=\"extraBold\">\n            导入了 {acceptedFiles.length} 张新图片\n          </p>\n        </>\n      );\n  };\n\n  const renderContent = () => {\n    return (\n      <div className=\"LoadMoreImagesPopupContent\">\n        <div {...getRootProps({ className: \"DropZone\" })}>{getDropZoneContent()}</div>\n      </div>\n    );\n  };\n\n  return (\n    <GenericYesNoPopup\n      title={\"导入更多图片\"}\n      renderContent={renderContent}\n      acceptLabel={\"载入\"}\n      disableAcceptButton={acceptedFiles.length < 1}\n      onAccept={onAccept}\n      rejectLabel={\"取消\"}\n      onReject={onReject}\n    />\n  );\n};\n\nconst mapDispatchToProps = {\n  addImageData,\n};\n\nconst mapStateToProps = (state: AppState) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoadMoreImagesPopup);\n","import React from \"react\";\nimport \"./PopupView.scss\";\nimport { PopupWindowType } from \"../../data/enums/PopupWindowType\";\nimport { AppState } from \"../../store\";\nimport { connect } from \"react-redux\";\nimport LoadLabelsPopup from \"./LoadLabelNamesPopup/LoadLabelNamesPopup\";\nimport ExportLabelPopup from \"./ExportLabelsPopup/ExportLabelPopup\";\nimport InsertLabelNamesPopup from \"./InsertLabelNamesPopup/InsertLabelNamesPopup\";\nimport ExitProjectPopup from \"./ExitProjectPopup/ExitProjectPopup\";\nimport LoadMoreImagesPopup from \"./LoadMoreImagesPopup/LoadMoreImagesPopup\";\n\ninterface IProps {\n  activePopupType: PopupWindowType;\n}\n\nconst PopupView: React.FC<IProps> = ({ activePopupType }) => {\n  const selectPopup = () => {\n    switch (activePopupType) {\n      case PopupWindowType.LOAD_LABEL_NAMES:\n        return <LoadLabelsPopup />;\n      case PopupWindowType.EXPORT_LABELS:\n        return <ExportLabelPopup />;\n      case PopupWindowType.INSERT_LABEL_NAMES:\n        return <InsertLabelNamesPopup />;\n      case PopupWindowType.EXIT_PROJECT:\n        return <ExitProjectPopup />;\n      case PopupWindowType.LOAD_IMAGES:\n        return <LoadMoreImagesPopup />;\n      default:\n        return null;\n    }\n  };\n\n  return activePopupType && <div className=\"PopupView\">{selectPopup()}</div>;\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  activePopupType: state.general.activePopupType,\n});\n\nexport default connect(mapStateToProps)(PopupView);\n","import React, {useState} from 'react';\nimport './MobileMainView.scss';\nimport Scrollbars from 'react-custom-scrollbars';\nimport {ISize} from \"../../interfaces/ISize\";\nimport {AppState} from \"../../store\";\nimport {connect} from \"react-redux\";\nimport classNames from 'classnames'\nimport {EditorFeatureData, IEditorFeature} from \"../../data/info/EditorFeatureData\";\nimport {ISocialMedia, SocialMediaData} from \"../../data/info/SocialMediaData\";\nimport {ImageButton} from \"../Common/ImageButton/ImageButton\";\n\ninterface IProps {\n    size: ISize;\n}\n\nconst MobileMainView: React.FC<IProps> = ({size}) => {\n    const scrollPositionThreshold: number = 350;\n    const [scrollPosition, setScrollPosition] = useState(0);\n\n    const getClassName = () => {\n        return classNames('MobileTopNavigationBar', {\n            Hide: scrollPosition < scrollPositionThreshold,\n            Show: scrollPosition >= scrollPositionThreshold,\n        })\n    };\n\n    const onScroll = (value) => {\n        setScrollPosition(value.scrollTop);\n    };\n\n    const getEditorFeatureTiles = (features: IEditorFeature[]) => {\n        return features.map((data:IEditorFeature) => {\n            return <div\n                className=\"EditorFeaturesTiles\"\n                key={data.displayText}\n            >\n                <div\n                    className=\"EditorFeaturesTilesWrapper\"\n                >\n                    <img\n                        draggable={false}\n                        alt={data.imageAlt}\n                        src={data.imageSrc}\n                    />\n                    <div className=\"EditorFeatureLabel\">\n                        {data.displayText}\n                    </div>\n                </div>\n            </div>\n        });\n    };\n\n    const getSocialMediaButtons = (size:ISize) => {\n        return SocialMediaData.map((data:ISocialMedia, index: number) => {\n            return <ImageButton\n                key={index}\n                size={size}\n                image={data.imageSrc}\n                imageAlt={data.imageAlt}\n                href={data.href}\n            />\n        });\n    };\n\n    const topNavigationBar = <div className={getClassName()}>\n        <div className=\"NavigationBarGroupWrapper\">\n            <div className=\"Header\">\n                <img\n                    draggable={false}\n                    alt={\"make-sense\"}\n                    src={\"/make-sense-ico-transparent.png\"}\n                />\n                Make Sense\n            </div>\n        </div>\n        <div className=\"TriangleHorizontal Bottom\">\n            <div className=\"TriangleHorizontalContent\"/>\n        </div>\n    </div>;\n\n    const firstStage = <div className=\"FirstStage\">\n        <img\n            draggable={false}\n            alt={\"main-logo\"}\n            src={\"img/main-image-color.png\"}\n        />\n        <div className=\"TriangleHorizontal Bottom\">\n            <div className=\"TriangleHorizontalContent\"/>\n        </div>\n    </div>;\n\n    const secondStage = <div className=\"SecondStage\">\n        {getEditorFeatureTiles(EditorFeatureData.slice(0, 3))}\n    </div>;\n\n    const thirdStage = <div className=\"ThirdStage\">\n        {getEditorFeatureTiles(EditorFeatureData.slice(3, 6))}\n        <div className=\"TriangleHorizontal Top\">\n            <div className=\"TriangleHorizontalContent\"/>\n        </div>\n        <div className=\"TriangleHorizontal Bottom\">\n            <div className=\"TriangleHorizontalContent\"/>\n        </div>\n    </div>;\n\n    const fourthStage = <div className=\"FourthStage\">\n        <div className=\"Message\">\n            Due to the small size of the screen we do not support our editor on mobile devices. Check what you missed and visit us from a desktop.\n        </div>\n        <div className=\"SocialMediaWrapper\">\n            {getSocialMediaButtons({width: 40, height: 40})}\n        </div>\n    </div>;\n\n    return(<div className=\"MobileMainView\">\n        {topNavigationBar}\n        <Scrollbars\n            onScrollFrame={onScroll}\n        >\n            <div\n                className=\"MobileMainViewContent\"\n                style={{width: size.width}}\n            >\n                {firstStage}\n                {secondStage}\n                {thirdStage}\n                {fourthStage}\n            </div>\n        </Scrollbars>\n    </div>)\n};\n\nconst mapDispatchToProps = {};\n\nconst mapStateToProps = (state: AppState) => ({\n    size: state.general.windowSize\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(MobileMainView);","import React from 'react';\nimport './SizeItUpView.scss';\nimport {Settings} from \"../../settings/Settings\";\n\nexport const SizeItUpView: React.FC = () => {\n    return(<div className=\"SizeItUpView\">\n        <p className=\"extraBold\">Ops... This window is to tight for me!</p>\n        <img\n            draggable={false}\n            alt={\"small_window\"}\n            src={\"img/small_window.png\"}\n        />\n        <p className=\"extraBold\">Please... make it at least {Settings.EDITOR_MIN_WIDTH} x {Settings.EDITOR_MIN_HEIGHT} px.</p>\n    </div>)\n};","import React from 'react';\nimport './App.scss';\nimport EditorView from './views/EditorView/EditorView';\nimport MainView from './views/MainView/MainView';\nimport { ProjectType } from './data/enums/ProjectType';\nimport { AppState } from './store';\nimport { connect } from 'react-redux';\nimport PopupView from './views/PopupView/PopupView';\nimport MobileMainView from './views/MobileMainView/MobileMainView';\nimport { ISize } from './interfaces/ISize';\nimport { Settings } from './settings/Settings';\nimport { SizeItUpView } from './views/SizeItUpView/SizeItUpView';\nimport { PlatformModel } from './staticModels/PlatformModel';\nimport ReactNotification from 'react-notifications-component';\n\ninterface IProps {\n  projectType: ProjectType;\n  windowSize: ISize;\n}\n\nconst App: React.FC<IProps> = ({ projectType, windowSize }) => {\n  const selectRoute = () => {\n    if (!!PlatformModel.mobileDeviceData.manufacturer && !!PlatformModel.mobileDeviceData.os) return <MobileMainView />;\n    if (!projectType) return <MainView />;\n    else {\n      if (windowSize.height < Settings.EDITOR_MIN_HEIGHT || windowSize.width < Settings.EDITOR_MIN_WIDTH) {\n        return <SizeItUpView />;\n      } else {\n        return <EditorView />;\n      }\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {selectRoute()}\n      <PopupView />\n      <ReactNotification />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  projectType: state.editor.projectType,\n  windowSize: state.general.windowSize,\n});\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { EditorActionTypes, EditorState, ImageData } from './types';\nimport { Action } from '../Actions';\nimport produce from 'immer';\nimport { LabelType } from '../../data/enums/LabelType';\nimport { EditorActions } from '../../logic/actions/EditorActions';\nimport { EditorModel } from '../../staticModels/EditorModel';\n\nconst initialState: EditorState = {\n  activeImageIndex: 0,\n  projectName: 'my_project',\n  imagesData: [],\n  projectType: null,\n  labelNames: ['左手心', '右手心', '左脚跟', '左脚尖', '右脚跟', '右脚尖'],\n};\n\nexport function editorReducer(state = initialState, action: EditorActionTypes): EditorState {\n  const activeImageIndex = state.activeImageIndex;\n  const activeGroupIndex = state.imagesData[activeImageIndex]\n    ? state.imagesData[activeImageIndex].activeGroupIndex\n    : undefined;\n  const result = produce(state, draft => {\n    switch (action.type) {\n      case Action.UPDATE_PROJECT_TYPE:\n        draft.projectType = action.payload.projectType;\n        break;\n      case Action.UPDATE_PROJECT_NAME:\n        draft.projectName = action.payload.projectName;\n        break;\n      case Action.UPDATE_ACTIVE_IMAGE_INDEX:\n        draft.activeImageIndex = action.payload.activeImageIndex;\n        break;\n      case Action.UPDATE_ACTIVE_LABEL_NAME_INDEX:\n        draft.imagesData[activeImageIndex].groupList[activeGroupIndex].activeLabelNameIndex =\n          action.payload.activeLabelNameIndex;\n        break;\n      case Action.UPDATE_LABEL_INDEX_BY_INFO:\n        const { imageIndex, groupIndex, labelPointIndex, labelIndex, labelCheckd } = action.payload;\n        if (!draft.imagesData[imageIndex].groupList[groupIndex].labelPoints[labelPointIndex]) {\n          break;\n        }\n        draft.imagesData[imageIndex].groupList[groupIndex].labelPoints[labelPointIndex].labelIndex = labelIndex;\n        draft.imagesData[imageIndex].groupList[groupIndex].labelPoints[labelPointIndex].checked = labelCheckd;\n        break;\n      case Action.UPDATE_ACTIVE_LABEL_ID:\n        draft.imagesData[activeImageIndex].groupList[activeGroupIndex].activeLabelId = action.payload.activeLabelId;\n        break;\n      case Action.UPDATE_HIGHLIGHTED_LABEL_ID:\n        draft.imagesData[activeImageIndex].groupList[activeGroupIndex].highlightedLabelId =\n          action.payload.highlightedLabelId;\n        break;\n      case Action.UPDATE_ACTIVE_LABEL_TYPE:\n        draft.imagesData[activeImageIndex].groupList[activeGroupIndex].activeLabelType = action.payload.activeLabelType;\n        break;\n      case Action.UPDATE_IMAGE_DATA_BY_ID:\n        //filter TODO\n        draft.imagesData = state.imagesData.map((imageData: ImageData) =>\n          imageData.id === action.payload.id ? action.payload.newImageData : imageData\n        );\n        // draft.imagesData.forEach((item, idx) => {\n        //   if (item.groupList.some(ele => !!ele.activeLabelId)) {\n        //     localStorage.setItem(item.fileData.name, JSON.stringify(item));\n        //   }\n        // });\n        break;\n      case Action.ADD_IMAGES_DATA:\n        const addImagesData = action.payload.imageData;\n        draft.imagesData = draft.imagesData.concat(addImagesData);\n\n        break;\n      case Action.LOAD_DATA_FROM_LOCALSTORGE:\n        draft.imagesData.forEach((item, idx) => {\n          if (localStorage.getItem(item.fileData.name)) {\n            const newData = JSON.parse(localStorage.getItem(item.fileData.name));\n            newData.fileData = draft.imagesData[idx].fileData;\n            draft.imagesData[idx] = newData;\n            // console.log(JSON.parse(localStorage.getItem(item.fileData.name)));\n          }\n        });\n        break;\n      case Action.UPDATE_IMAGES_DATA:\n        draft.imagesData = action.payload.imageData;\n        break;\n      case Action.UPDATE_LABEL_NAMES_LIST:\n        draft.labelNames = action.payload.labelNames;\n        break;\n      case Action.UPDATE_FIRST_LABEL_CREATED_FLAG:\n        draft.imagesData[activeImageIndex].groupList[activeGroupIndex].firstLabelCreatedFlag =\n          action.payload.firstLabelCreatedFlag;\n        break;\n      case Action.UPDATE_GROUP_LIST:\n        draft.imagesData[activeImageIndex].groupList.push({\n          activeLabelNameIndex: 0,\n          activeLabelType: LabelType.POINT,\n          activeLabelId: null,\n          highlightedLabelId: null,\n          firstLabelCreatedFlag: false,\n          labelRects: [],\n          labelPoints: [],\n          labelPolygons: [],\n        });\n        break;\n      case Action.DELETE_GROUP_LIST:\n        const newGroupList = draft.imagesData[activeImageIndex].groupList.filter(\n          (_, idx) => idx !== action.payload.groupIndex\n        );\n        const activeGroup = draft.imagesData[activeImageIndex].groupList[activeGroupIndex];\n\n        const newActiveGroupIndex = newGroupList.findIndex(item => item === activeGroup);\n        draft.imagesData[activeImageIndex].activeGroupIndex = newActiveGroupIndex;\n        draft.imagesData[activeImageIndex].groupList = newGroupList;\n        break;\n      case Action.UPDATE_ACTIVE_GROUP_INDEX:\n        draft.imagesData[activeImageIndex].activeGroupIndex = action.payload.groupIndex;\n        break;\n      case Action.FIND_NEXT_AVAILABLE_LABEL_INDEX:\n        const allIndex = [...Array(draft.labelNames.length)].map((v, k) => k);\n        const existedLabelIndexs = draft.imagesData[activeImageIndex].groupList[activeGroupIndex].labelPoints.map(\n          ele => ele.labelIndex\n        );\n\n        const difference = existedLabelIndexs\n          .concat(allIndex)\n          .filter(v => !existedLabelIndexs.includes(v) || !allIndex.includes(v));\n        draft.imagesData[activeImageIndex].groupList[activeGroupIndex].activeLabelNameIndex = difference.length\n          ? difference[0]\n          : 0;\n        break;\n    }\n  });\n  return result;\n}\n","import {GeneralActionTypes, GeneralState} from \"./types\";\nimport {Action} from \"../Actions\";\nimport {CustomCursorStyle} from \"../../data/enums/CustomCursorStyle\";\n\nconst initialState: GeneralState = {\n    windowSize: null,\n    activePopupType: null,\n    customCursorStyle: CustomCursorStyle.DEFAULT,\n    activeContext: null\n};\n\nexport function generalReducer(\n    state = initialState,\n    action: GeneralActionTypes\n): GeneralState {\n    switch (action.type) {\n        case Action.UPDATE_WINDOW_SIZE: {\n            return {\n                ...state,\n                windowSize: action.payload.windowSize\n            }\n        }\n        case Action.UPDATE_ACTIVE_POPUP_TYPE: {\n            return {\n                ...state,\n                activePopupType: action.payload.activePopupType\n            }\n        }\n        case Action.UPDATE_CUSTOM_CURSOR_STYLE: {\n            return {\n                ...state,\n                customCursorStyle: action.payload.customCursorStyle\n            }\n        }\n        case Action.UPDATE_CONTEXT: {\n            return {\n                ...state,\n                activeContext: action.payload.activeContext\n            }\n        }\n        default:\n            return state;\n    }\n}","import { combineReducers } from \"redux\";\nimport { editorReducer } from \"./editor/reducer\";\nimport { generalReducer } from \"./general/reducer\";\n\nexport const rootReducer = combineReducers({\n  general: generalReducer,\n  editor: editorReducer,\n});\n\nexport type AppState = ReturnType<typeof rootReducer>;\n","import {MobileDeviceData} from \"../data/MobileDeviceData\";\nimport MobileDetect from 'mobile-detect'\n\nexport class PlatformUtil {\n    public static getMobileDeviceData(userAgent: string): MobileDeviceData {\n        const mobileDetect = new MobileDetect(userAgent);\n        return {\n            manufacturer: mobileDetect.mobile(),\n            browser: mobileDetect.userAgent(),\n            os: mobileDetect.os()\n        }\n    }\n\n    public static isMac(userAgent: string): boolean {\n        return !!userAgent.toLowerCase().match(\"mac\");\n    }\n\n    public static isSafari(userAgent: string): boolean {\n        return !!userAgent.toLowerCase().match(\"safari\");\n    }\n\n    public static isFirefox(userAgent: string): boolean {\n        return !!userAgent.toLowerCase().match(\"firefox\");\n    }\n}","import { updateWindowSize } from \"../../store/general/actionCreators\";\nimport { ContextManager } from \"../context/ContextManager\";\nimport { store } from \"../../index\";\nimport { PlatformUtil } from \"../../utils/PlatformUtil\";\nimport { PlatformModel } from \"../../staticModels/PlatformModel\";\n\nexport class AppInitializer {\n  public static inti(): void {\n    AppInitializer.handleResize();\n    AppInitializer.detectDeviceParams();\n    window.addEventListener(\"resize\", AppInitializer.handleResize);\n    ContextManager.init();\n  }\n\n  private static handleResize = () => {\n    store.dispatch(\n      updateWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      })\n    );\n  };\n\n  private static detectDeviceParams = () => {\n    const userAgent: string = window.navigator.userAgent;\n    PlatformModel.mobileDeviceData = PlatformUtil.getMobileDeviceData(userAgent);\n    PlatformModel.isMac = PlatformUtil.isMac(userAgent);\n    PlatformModel.isSafari = PlatformUtil.isSafari(userAgent);\n    PlatformModel.isFirefox = PlatformUtil.isFirefox(userAgent);\n  };\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './configureStore';\nimport { Provider } from 'react-redux';\nimport { AppInitializer } from './logic/initializer/AppInitializer';\n\nexport const store = configureStore();\nAppInitializer.inti();\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root') || document.createElement('div') // fix for testing purposes\n);\n\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from \"redux\";\nimport { rootReducer } from \"./store\";\nimport logger from \"redux-logger\";\n\nexport default function configureStore() {\n  return createStore(\n    rootReducer\n    // applyMiddleware(logger)\n    // @ts-ignore\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  );\n}\n"],"sourceRoot":""}