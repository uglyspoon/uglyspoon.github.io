{"version":3,"sources":["data/enums/Direction.ts","data/enums/PopupWindowType.ts","settings/Settings.ts","store/Actions.ts","store/editor/actionCreators.ts","utils/VirtualListUtil.ts","utils/NumberUtil.ts","utils/RectUtil.ts","views/Common/VirtualList/VirtualList.tsx","logic/imageRepository/ImageLoadManager.ts","logic/imageRepository/ImageRepository.ts","utils/FileUtil.ts","data/enums/ContextType.ts","views/EditorView/SideNavigationBar/ImagePreview/ImagePreview.tsx","store/general/actionCreators.ts","data/enums/LabelType.ts","staticModels/EditorModel.ts","utils/UnitUtil.ts","data/enums/CustomCursorStyle.ts","utils/DrawUtil.ts","utils/PointUtil.ts","settings/RenderEngineConfig.ts","store/selectors/EditorSelector.ts","data/enums/EventType.ts","utils/MouseEventUtil.ts","logic/render/BaseRenderEngine.ts","utils/RenderEngineUtil.ts","logic/render/RectRenderEngine.ts","utils/CanvasUtil.ts","logic/render/PointRenderEngine.ts","utils/LineUtil.ts","logic/render/PolygonRenderEngine.ts","logic/render/PrimaryEditorRenderEngine.ts","logic/actions/EditorActions.ts","logic/context/BaseContext.ts","staticModels/PlatformModel.ts","logic/actions/ImageActions.ts","logic/context/EditorContext.ts","store/selectors/GeneralSelector.ts","logic/actions/PopupActions.ts","logic/context/PopupContext.ts","logic/context/ContextManager.ts","data/enums/ProjectType.ts","views/EditorView/SideNavigationBar/ImagesList/ImagesList.tsx","data/info/LabelToolkitData.ts","views/Common/ImageButton/ImageButton.tsx","views/EditorView/SideNavigationBar/LabelInputField/LabelInputField.tsx","views/EditorView/SideNavigationBar/EmptyLabelList/EmptyLabelList.tsx","views/EditorView/SideNavigationBar/RectLabelsList/RectLabelsList.tsx","views/EditorView/SideNavigationBar/PointLabelsList/PointLabelsList.tsx","views/EditorView/SideNavigationBar/PolygonLabelsList/PolygonLabelsList.tsx","views/EditorView/SideNavigationBar/LabelsToolkit/LabelsToolkit.tsx","views/EditorView/SideNavigationBar/SideNavigationBar.tsx","views/EditorView/VerticalEditorButton/VerticalEditorButton.tsx","utils/EditorUtil.ts","data/enums/AcceptedFileType.ts","views/EditorView/Editor/Editor.tsx","views/EditorView/BottomNavigationBar/BottomNavigationBar.tsx","views/EditorView/EditorContainer/EditorContainer.tsx","views/EditorView/StateBar/StateBar.tsx","views/Common/UnderlineTextButton/UnderlineTextButton.tsx","views/Common/TextInput/TextInput.tsx","views/EditorView/TopNavigationBar/TopNavigationBar.tsx","views/EditorView/EditorView.tsx","views/Common/TextButton/TextButton.tsx","data/info/SocialMediaData.ts","data/info/EditorFeatureData.ts","views/MainView/ImagesDropZone/ImagesDropZone.tsx","data/enums/ExportFormatType.ts","views/MainView/MainView.tsx","views/PopupView/GenericYesNoPopup/GenericYesNoPopup.tsx","views/PopupView/LoadLabelNamesPopup/LoadLabelNamesPopup.tsx","utils/XMLSanitizerUtil.ts","utils/ExporterUtil.ts","logic/export/RectLabelsExporter.ts","data/export/AllExportFormatData.ts","data/export/PointExportFormatData.ts","logic/export/PointLabelsExport.ts","logic/export/AllLabelsExport.ts","data/export/PolygonExportFormatData.ts","logic/export/PolygonLabelsExporter.ts","data/export/RectExportFormatData.ts","views/PopupView/ExportLabelsPopup/ExportLabelPopup.tsx","views/PopupView/InsertLabelNamesPopup/InsertLabelNamesPopup.tsx","views/PopupView/ExitProjectPopup/ExitProjectPopup.tsx","views/PopupView/LoadMoreImagesPopup/LoadMoreImagesPopup.tsx","views/PopupView/PopupView.tsx","views/MobileMainView/MobileMainView.tsx","views/SizeItUpView/SizeItUpView.tsx","App.tsx","serviceWorker.ts","store/editor/reducer.ts","store/general/reducer.ts","store/index.ts","utils/PlatformUtil.ts","logic/initializer/AppInitializer.ts","index.tsx","configureStore.ts"],"names":["Direction","PopupWindowType","Settings","Object","classCallCheck","this","GITHUB_URL","MEDIUM_URL","PATREON_URL","TOP_NAVIGATION_BAR_HEIGHT_PX","BOTTOM_NAVIGATION_BAR_HEIGHT_PX","SIDE_NAVIGATION_BAR_WIDTH_CLOSED_PX","SIDE_NAVIGATION_BAR_WIDTH_OPEN_PX","TOOLKIT_TAB_HEIGHT_PX","EDITOR_MIN_WIDTH","EDITOR_MIN_HEIGHT","PRIMARY_COLOR","SECONDARY_COLOR","DARK_THEME_FIRST_COLOR","DARK_THEME_SECOND_COLOR","DARK_THEME_THIRD_COLOR","DARK_THEME_FORTH_COLOR","CANVAS_PADDING_WIDTH_PX","CROSS_HAIR_THICKNESS_PX","CROSS_HAIR_COLOR","RESIZE_HANDLE_DIMENSION_PX","RESIZE_HANDLE_HOVER_DIMENSION_PX","CLOSEABLE_POPUPS","LOAD_IMAGES","Action","updateProjectType","projectType","type","UPDATE_PROJECT_TYPE","payload","updateActiveImageIndex","activeImageIndex","UPDATE_ACTIVE_IMAGE_INDEX","updateActiveLabelNameIndex","activeLabelNameIndex","UPDATE_ACTIVE_LABEL_NAME_INDEX","updateActiveLabelId","activeLabelId","UPDATE_ACTIVE_LABEL_ID","updateHighlightedLabelId","highlightedLabelId","UPDATE_HIGHLIGHTED_LABEL_ID","updateImageDataById","id","newImageData","UPDATE_IMAGE_DATA_BY_ID","addImageData","imageData","ADD_IMAGES_DATA","updateLabelNamesList","labelNames","UPDATE_LABEL_NAMES_LIST","updateFirstLabelCreatedFlag","firstLabelCreatedFlag","UPDATE_FIRST_LABEL_CREATED_FLAG","VirtualListUtil","createClass","key","value","listSize","childSize","childCount","columnCount","Math","floor","width","height","ceil","gridSize","sizeFromGrid","max","calculateGridSize","horizontalMargin","calculateContentSize","anchors","i","rowCount","anchor","x","y","push","NumberUtil","min","RectUtil","rect","r1","r2","point","centerPoint","size","_objectSpread","containerRect","ratio","getRatio","innerRectHeight","innerRectWidth","inputRect","rectAnchor","delta","RIGHT","BOTTOM_RIGHT","BOTTOM","TOP_RIGHT","TOP","TOP_LEFT","LEFT","BOTTOM_LEFT","scale","position","isPointInside","snapValueToRange","VirtualList","_React$Component","props","_this","possibleConstructorReturn","getPrototypeOf","call","contentSize","childAnchors","scrollbars","calculate","calculateAnchorPoints","getVirtualListStyle","getVirtualListContentStyle","onScrollStart","setState","isScrolling","onScrollStop","onScroll","values","viewportRect","scrollLeft","scrollTop","getChildren","_this$state","state","_this$props","overScanHeight","overScan","viewportRectWithOverScan","reduce","children","index","childRect","assign","isVisible","intersect","childStyle","left","top","concat","childRender","inherits","_this$props2","nextProps","nextState","nextContext","getValues","_this2","displayContent","react_default","a","createElement","className","style","lib_default","ref","onScrollFrame","autoHide","React","Component","ImageLoadManager","fx","queue","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","abrupt","sent","stop","setTimeout","runQueue","add","run","_runQueue","_callee2","_context2","isRunning","runTasks","apply","arguments","_runTasks","_callee3","_context3","length","shift","ImageRepository","uuid","image","repository","FileUtil","fileData","uuidv1","loadStatus","activeGroupIndex","groupList","labelRects","labelPoints","labelPolygons","activeLabelType","onSuccess","onFailure","Promise","resolve","reject","url","URL","createObjectURL","Image","src","onload","onerror","reader","FileReader","readAsText","onloadend","evt","contents","target","result","split","ContextType","ImagePreview","isLoading","loadImage","_ref","saveLoadedImagePartial","getById","saveLoadedImage","handleLoadImageError","_x","_x2","ImagePreview_objectSpread","store","getStyle","imageRect","imageRatio","imagePosition","fitInsideRectWithRatio","getClassName","classNames","selected","isSelected","addAndRun","isChecked","onClick","undefined","draggable","alt","dist","sizeUnit","color","loading","mapDispatchToProps","connect","updateActivePopupType","activePopupType","UPDATE_ACTIVE_POPUP_TYPE","updateCustomCursorStyle","customCursorStyle","UPDATE_CUSTOM_CURSOR_STYLE","LabelType","EditorModel","canvas","mousePositionIndicator","cursor","primaryRenderingEngine","supportRenderingEngine","imageRectOnCanvas","imageScale","mousePositionOnCanvas","CustomCursorStyle","UnitUtil","angleDeg","PI","angleRad","DrawUtil","getContext","clearRect","startPoint","endPoint","thickness","ctx","save","strokeStyle","lineWidth","lineCap","beginPath","moveTo","lineTo","stroke","restore","fillStyle","fill","fillRect","globalCompositeOperation","anchorPoint","radius","startAngleRad","deg2rad","endAngleRad","arc","startAngleDeg","endAngleDeg","closePath","text","textSize","bold","align","textAlign","textBaseline","font","fillText","round","random","hex","alpha","r","parseInt","slice","g","b","PointUtil","p1","p2","factor","sqrt","pow","RenderEngineConfig","lineThickness","lineActiveColor","lineInactiveColor","anchorSize","anchorHoverSize","suggestedAnchorDetectionSize","activeAnchorColor","inactiveAnchorColor","EventType","EditorSelector","getState","editor","projectName","imagesData","getActiveImageIndex","getActiveGroupIndex","getImagesData","getActiveLabelId","_","find","getActiveImageData","map","ele","labelIndex","MouseEventUtil","event","MOUSE_DOWN","MOUSE_UP","MOUSE_MOVE","BaseRenderEngine","labelType","data","getEventType","mouseMoveHandler","mouseUpHandler","mouseDownHandler","RenderEngineUtil","activeImageRectOnCanvas","RenderEngineUtil_objectSpread","canvasSize","polygon","transferPointFromImageToCanvas","multiply","activeImageScale","transferPointFromCanvasToImage","subtract","translate","scaleRect","dispatch","DEFAULT","CANCEL","setValueBetweenPixels","topLeft","bottomRight","topLeftBetweenPixels","setPointBetweenPixels","bottomRightBetweenPixels","RectRenderEngine","_BaseRenderEngine","config","startCreateRectPoint","startResizeRectAnchor","isMouseOverImage","isMouseOverCanvas","rectUnderMouse","getRectUnderMouse","calculateRectRelativeToActiveImage","anchorUnderMouse","getAnchorUnderMouseByRect","startRectResize","getHighlightedLabelId","startRectCreation","mousePositionSnapped","snapPointToRect","equals","minX","minY","maxX","maxY","addRectLabel","activeLabelRect","getActiveRectLabel","startAnchorPosition","resizeRect","scaledRect","produce","draft","labelRect","RectRenderEngine_objectSpread","endRectTransformation","activeLabelIndex","getActiveLabelNameIndex","checked","RECTANGLE","forEach","drawActiveRect","drawInactiveRect","drawCurrentlyCreatedRect","updateCursorStyle","mousePosition","activeRect","activeRectBetweenPixels","setRectBetweenPixels","drawRect","rectOnImage","transferRectFromCanvasToImage","renderRect","endAnchorPositionSnapped","isActive","_this3","rectBetweenPixels","lineColor","mapRectToAnchors","center","handleRect","getRectWithCenterAndSize","handleRectBetweenPixels","drawRectWithFill","getAnchorUnderMouse","MOVE","wrapDefaultCursorStyleInCancel","activeRectLabel","isMouseOverRectEdges","outerRectDelta","outerRect","expand","innerRectDelta","innerRect","rectAnchors","anchorRect","activatedAnchor","CanvasUtil","canvasRect","getBoundingClientRect","clientX","clientY","PointRenderEngine","transformInProgress","addPointLabel","labelsLength","getLabelNameLength","existedLabelIndexs","getAllPointLabelIndex","allIndex","toConsumableArray","Array","v","k","difference","filter","includes","indexOf","splice","labelPoint","alert","POINT","getLabelPointUnderMouse","pointOnCanvas","pointBetweenPixels","pointOnImage","isInProgress","activeLabelPoint","getActivePointLabel","pointSnapped","PointRenderEngine_objectSpread","renderPoint","handleColor","getSize","LineUtil","l","p","start","end","abs","PolygonRenderEngine","activePath","resizeAnchorIndex","suggestedAnchorPositionOnCanvas","suggestedAnchorIndexInPolygon","POLYGON","isCreationInProgress","isMouseOverAnchor","addLabelAndFinishCreation","updateActivelyCreatedLabel","polygonUnderMouse","getPolygonUnderMouse","anchorIndex","vertices","indexUnderMouse","anchorOnCanvas","startExistingLabelResize","addSuggestedAnchorToPolygonLabel","isResizeInProgress","endExistingLabelResize","labelPolygon","pathOnCanvas","transferPolygonFromImageToCanvas","linesOnCanvas","mapPointsToLines","j","isMouseOverLine","getCenter","discardSuggestedPoint","drawExistingLabels","drawActivelyCreatedLabel","drawActivelyResizeLabel","drawSuggestedAnchor","CLOSE","ADD","standardizedPoints","path","lines","drawPolygonWithFill","hexToRGB","line","drawLine","mapPointsToAnchors","_this4","activeLabelPolygon","getActivePolygonLabel","snappedMousePosition","polygonOnCanvas","drawPolygon","_this5","_this6","suggestedAnchorRect","polygonOnImage","transferPolygonFromCanvasToImage","addPolygonLabel","finishLabelCreation","labelId","applyResizeToPolygonLabel","_this7","activeLabel","PolygonRenderEngine_objectSpread","_this8","newAnchorPositionOnImage","arr","newItem","mouse","hoverReach","getDistanceFromLine","points","_this9","PrimaryEditorRenderEngine","drawImage","EditorActions","mountSupportRenderingEngine","clearCanvas","render","getEditorData","status","activeKeyCombo","ContextManager","getActiveCombo","canvasPaddingWidth","calculateImageRect","calculateImageScale","display","getMousePositionOnCanvasFromEvent","EditorActions_objectSpread","innerHTML","resizeCanvas","newCanvasSize","BaseContext","actions","PlatformModel","mobileDeviceData","isMac","isSafari","isFirefox","ImageActions","currentImageIndex","imageCount","EditorContext","_BaseContext","keyCombo","action","editorData","fullRender","cancelLabelCreation","getPreviousImage","getNextImage","GeneralSelector","general","activeContext","PopupActions","restoreCtx","PopupContext","popupType","getActivePopupType","close","activeCombo","window","addEventListener","onDown","onUp","context","activeCtx","getActiveContext","contextHistory","updateCtx","UPDATE_CONTEXT","EDITOR","getActions","POPUP","pop","keyCode","getKeyCodeFromEvent","isInCombo","addToCombo","execute","removeFromCombo","hotKey","matchCombo","combo1","combo2","ProjectType","ImagesList","imagesListRef","updateListSize","listBoundingBox","onClickHandler","renderImagePreview","SideNavigationBar_ImagePreview_ImagePreview","some","item","removeEventListener","switchCtx","LEFT_NAVBAR","VirtualList_VirtualList","LabelToolkitData","NAME","headerText","imageSrc","imageAlt","ImageButton","padding","href","isDisabled","externalClassName","imagePadding","buttonStyle","ImageButton_objectSpread","imageStyle","maxWidth","maxHeight","react","active","disabled","stopPropagation","rel","LabelInputField","dropdownOptionHeight","dropdownOptionCount","dropdownMargin","dropdownLabel","dropdown","openDropdown","isOpen","closeDropdown","clientRect","dropDownRect","getDropdownStyle","options","innerHeight","bottom","getDropdownOptions","option","onSelectLabel","mouseEnterHandler","mouseLeaveHandler","animate","requestAnimationFrame","loaded","highlighted","isHighlighted","onDelete","onCheck","onMouseEnter","onMouseLeave","onChange","ImageButton_ImageButton_ImageButton","getFirstLabelCreatedFlag","labelBefore","labelAfter","before","Fragment","after","listStyle","listStyleContent","deleteRectLabelById","labelRectId","currentLabel","checkRectLabelById","RectLabelsList_objectSpread","updateRectLabel","labelNameIndex","onClickCapture","SideNavigationBar_EmptyLabelList_EmptyLabelList","SideNavigationBar_LabelInputField_LabelInputField","deletePointLabelById","labelPointId","checkPointLabelById","PointLabelsList_objectSpread","updatePointLabel","alreadyFlag","deletePolygonLabelById","labelPolygonId","checkPolygonLabelById","PolygonLabelsList_objectSpread","updatePolygonLabel","LabelsToolkit","labelsToolkitRef","tabs","updateToolkitSize","headerClickHandler","activeTab","updateActiveLabelType","renderChildren","currentGroupIndex","tabData","baseClass","header","content","SideNavigationBar_RectLabelsList_RectLabelsList","activeTabContentHeight","SideNavigationBar_PointLabelsList_PointLabelsList","SideNavigationBar_PolygonLabelsList_PolygonLabelsList","buttonOnClickHandle","updateGroupList","renderChildrenWrapper","groupName","idx","updateActiveGroupIndex","IMAGE_RECOGNITION","RIGHT_NAVBAR","UPDATE_ACTIVE_LABEL_TYPE","UPDATE_GROUP_LIST","groupIndex","UPDATE_ACTIVE_GROUP_INDEX","getActiveLabelType","SideNavigationBar","direction","isWithContext","renderContent","renderCompanion","right","with-context","closed","VerticalEditorButton","label","EditorUtil","getIndicator","cursorStyle","RESIZE","getCursorStyle","move","resize","cancel","AcceptedFileType","Editor","setActiveImage","updateModelAndRender","setLoadingStatus","console","log","calculateAllCharacteristics","update","updateMousePositionIndicator","mountEventListeners","mountRenderEngines","unmountEventListeners","prevProps","prevState","snapshot","swapSupportRenderingEngine","onContextMenu","preventDefault","totalImageCount","name","windowSize","_useState","useState","_useState2","slicedToArray","leftTabStatus","setLeftTabStatus","_useState3","_useState4","rightTabStatus","setRightTabStatus","calculateEditorSize","leftTabWidth","rightTabWidth","leftSideBarButtonOnClick","rightSideBarButtonOnClick","SideNavigationBar_SideNavigationBar_SideNavigationBar","VerticalEditorButton_VerticalEditorButton_VerticalEditorButton","SideNavigationBar_ImagesList_ImagesList","onMouseDown","EditorView_Editor_Editor","EditorView_BottomNavigationBar_BottomNavigationBar","SideNavigationBar_LabelsToolkit_LabelsToolkit","pointLabeledImages","currentCount","currentImage","rectLabeledImages","polygonLabeledImages","getProgress","UnderlineTextButton","under","over","TextInput","isPassword","onFocus","inputStyle","labelStyle","barStyle","htmlFor","updateProjectName","UPDATE_PROJECT_NAME","EditorView_StateBar_StateBar","Common_TextInput_TextInput","toLowerCase","replace","setSelectionRange","UnderlineTextButton_UnderlineTextButton_UnderlineTextButton","EXPORT_LABELS","withPopup","EditorView_TopNavigationBar_TopNavigationBar","EditorView_EditorContainer_EditorContainer","TextButton","SocialMediaData","displayName","tooltipMessage","EditorFeatureData","displayText","ExportFormatType","_useDropzone","useDropzone","accept","IMAGE","acceptedFiles","getRootProps","getInputProps","TextButton_TextButton_TextButton","OBJECT_DETECTION","mapFileDataToImageData","MainView","projectInProgress","setProjectInProgress","projectCanceled","setProjectCanceled","withStyles","theme","tooltip","backgroundColor","boxShadow","shadows","fontSize","Tooltip","InProgress","Canceled","MainView_ImagesDropZone_ImagesDropZone","location","GenericYesNoPopup","title","acceptLabel","onAccept","skipAcceptButton","disableAcceptButton","rejectLabel","onReject","skipRejectButton","disableRejectButton","setMountStatus","useEffect","labelsList","setLabelsList","invalidFileLoadedStatus","setInvalidFileLoadedStatus","TEXT","multiple","onDrop","loadLabelsList","GenericYesNoPopup_GenericYesNoPopup_GenericYesNoPopup","INSERT_LABEL_NAMES","XMLSanitizerUtil","input","ExporterUtil","getProjectName","date","moment","format","RectLabelsExporter","exportFormatType","YOLO","exportAsYOLO","VOC","exportAsVOC","CSV","exportAsCSV","zip","JSZip","fileContent","wrapRectLabelsIntoYOLO","fileName","file","error","Error","generateAsync","then","saveAs","getExportFileName","toFixed","join","wrapImageIntoVOC","labelNamesList","getLabelNames","labels","wrapRectLabelsIntoVOC","sanitize","wrapRectLabelsIntoCSV","imageLabelData","blob","Blob","AllExportFormatData","JSON","PointExportFormatData","PointLabelsExporter","AllLabelsExporter","exportAsJson","stringify","mapImagesDataToVGGObject","mapImageDataToVGGFileData","regionsDataArray","mapImageDataToVGG","orderArray","tempArray","is_checked","all_points","temp","sort","peopleDataArray","personData","pose_keypoints_2d","image_name","people","validPointLabelsArray","getValidPointLabelsArray","pointsData","validLabels","group","PolygonExportFormatData","VGG_JSON","PolygonLabelsExporter","exportAsVGGJson","regionsData","fileref","filename","base64_img_data","file_attributes","regions","getValidPolygonLabels","shape_attributes","mapPolygonToVGG","region_attributes","all_points_x","all_points_y","RectExportFormatData","ALL","exportLabelType","setExportLabelType","setExportFormatType","getOptions","exportFormatData","entry","export","setLabelNames","addHandle","newLabelNames","InsertLabelNamesPopup_objectSpread","defineProperty","labelInputs","keys","deleteHandle","extractLabelNamesList","LOAD_LABEL_NAMES","updateImageData","UPDATE_IMAGES_DATA","PopupView_LoadLabelNamesPopup_LoadLabelNamesPopup","PopupView_ExportLabelsPopup_ExportLabelPopup","PopupView_InsertLabelNamesPopup_InsertLabelNamesPopup","EXIT_PROJECT","PopupView_ExitProjectPopup_ExitProjectPopup","PopupView_LoadMoreImagesPopup_LoadMoreImagesPopup","selectPopup","scrollPosition","setScrollPosition","getEditorFeatureTiles","features","topNavigationBar","Hide","Show","firstStage","secondStage","thirdStage","fourthStage","getSocialMediaButtons","SizeItUpView","manufacturer","os","views_MobileMainView_MobileMainView","SizeItUpView_SizeItUpView_SizeItUpView","views_EditorView_EditorView","views_MainView_MainView","views_PopupView_PopupView","Boolean","hostname","match","initialState","rootReducer","combineReducers","UPDATE_WINDOW_SIZE","reducer_objectSpread","PlatformUtil","userAgent","mobileDetect","MobileDetect","mobile","browser","AppInitializer","handleResize","detectDeviceParams","init","innerWidth","navigator","getMobileDeviceData","__webpack_require__","d","__webpack_exports__","createStore","inti","ReactDOM","es","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0f34e30e.chunk.js","sourcesContent":["export enum Direction {\n    TOP = \"TOP\",\n    BOTTOM = \"BOTTOM\",\n    LEFT = \"LEFT\",\n    RIGHT = \"RIGHT\",\n    TOP_RIGHT = \"TOP_RIGHT\",\n    TOP_LEFT = \"TOP_LEFT\",\n    BOTTOM_RIGHT = \"BOTTOM_RIGHT\",\n    BOTTOM_LEFT = \"BOTTOM_LEFT\",\n    CENTER = \"CENTER\"\n}","export enum PopupWindowType {\n    LOAD_LABEL_NAMES = \"LOAD_LABEL_NAMES\",\n    LOAD_IMAGES = \"LOAD_IMAGES\",\n    EXPORT_LABELS = \"EXPORT_LABELS\",\n    INSERT_LABEL_NAMES = 'INSERT_LABEL_NAMES',\n    EXIT_PROJECT = 'EXIT_PROJECT'\n}","import { PopupWindowType } from \"../data/enums/PopupWindowType\";\n\nexport class Settings {\n  public static readonly GITHUB_URL: string = \"https://github.com/SkalskiP\";\n  public static readonly MEDIUM_URL: string = \"https://medium.com/@piotr.skalski92\";\n  public static readonly PATREON_URL: string = \"https://www.patreon.com/make_sense\";\n\n  public static readonly TOP_NAVIGATION_BAR_HEIGHT_PX: number = 35;\n  public static readonly BOTTOM_NAVIGATION_BAR_HEIGHT_PX: number = 45 + 1;\n  public static readonly SIDE_NAVIGATION_BAR_WIDTH_CLOSED_PX: number = 20 + 1;\n  public static readonly SIDE_NAVIGATION_BAR_WIDTH_OPEN_PX: number =\n    Settings.SIDE_NAVIGATION_BAR_WIDTH_CLOSED_PX + 300 + 1;\n  public static readonly TOOLKIT_TAB_HEIGHT_PX: number = 40;\n\n  public static readonly EDITOR_MIN_WIDTH: number = 900;\n  public static readonly EDITOR_MIN_HEIGHT: number = 500;\n\n  public static readonly PRIMARY_COLOR: string = \"#2af598\";\n  public static readonly SECONDARY_COLOR: string = \"#009efd\";\n\n  public static readonly DARK_THEME_FIRST_COLOR: string = \"#171717\";\n  public static readonly DARK_THEME_SECOND_COLOR: string = \"#C9FF2F\";\n  public static readonly DARK_THEME_THIRD_COLOR: string = \"#4c4c4c\";\n  public static readonly DARK_THEME_FORTH_COLOR: string = \"#252f35\";\n\n  public static readonly CANVAS_PADDING_WIDTH_PX: number = 20;\n  public static readonly CROSS_HAIR_THICKNESS_PX: number = 1;\n  public static readonly CROSS_HAIR_COLOR: string = \"#fff\";\n\n  public static readonly RESIZE_HANDLE_DIMENSION_PX: number = 6;\n  public static readonly RESIZE_HANDLE_HOVER_DIMENSION_PX = 16;\n\n  public static readonly CLOSEABLE_POPUPS: PopupWindowType[] = [\n    PopupWindowType.LOAD_IMAGES,\n    PopupWindowType.LOAD_IMAGES,\n    PopupWindowType.LOAD_IMAGES,\n  ];\n}\n","export enum Action {\n  UPDATE_PROJECT_TYPE = \"@@UPDATE_PROJECT_TYPE\",\n  UPDATE_PROJECT_NAME = \"@@UPDATE_PROJECT_NAME\",\n  UPDATE_ACTIVE_IMAGE_INDEX = \"@@UPDATE_ACTIVE_IMAGE_INDEX\",\n  UPDATE_IMAGE_DATA_BY_ID = \"@@UPDATE_IMAGE_DATA_BY_ID\",\n  UPDATE_GROUP_DATA_BY_INDEX = \"@@UPDATE_GROUP_DATA_BY_INDEX\",\n  ADD_IMAGES_DATA = \"@@ADD_IMAGES_DATA\",\n  UPDATE_IMAGES_DATA = \"@@UPDATE_IMAGES_DATA\",\n  UPDATE_WINDOW_SIZE = \"@@UPDATE_WINDOW_SIZE\",\n  UPDATE_ACTIVE_POPUP_TYPE = \"@@UPDATE_ACTIVE_POPUP_TYPE\",\n  UPDATE_ACTIVE_LABEL_NAME_INDEX = \"@@UPDATE_ACTIVE_LABEL_NAME_INDEX\",\n  UPDATE_ACTIVE_LABEL_TYPE = \"@@UPDATE_ACTIVE_LABEL_TYPE\",\n  UPDATE_ACTIVE_LABEL_ID = \"@@UPDATE_ACTIVE_LABEL_ID\",\n  UPDATE_HIGHLIGHTED_LABEL_ID = \"@@UPDATE_HIGHLIGHTED_LABEL_ID\",\n  UPDATE_LABEL_NAMES_LIST = \"@@UPDATE_LABEL_NAMES_LIST\",\n  UPDATE_FIRST_LABEL_CREATED_FLAG = \"@@UPDATE_FIRST_LABEL_CREATED_FLAG\",\n  UPDATE_CUSTOM_CURSOR_STYLE = \"@@UPDATE_CUSTOM_CURSOR_STYLE\",\n  UPDATE_CONTEXT = \"@@UPDATE_CONTEXT\",\n  UPDATE_GROUP_LIST = \"@@UPDATE_GROUP_LIST\",\n  UPDATE_ACTIVE_GROUP_INDEX = \"@@UPDATE_ACTIVE_GROUP_INDEX\",\n}\n","import { ProjectType } from \"../../data/enums/ProjectType\";\nimport { EditorActionTypes, ImageData } from \"./types\";\nimport { Action } from \"../Actions\";\nimport { LabelType } from \"../../data/enums/LabelType\";\n\nexport function updateProjectType(projectType: ProjectType): EditorActionTypes {\n  return {\n    type: Action.UPDATE_PROJECT_TYPE,\n    payload: {\n      projectType,\n    },\n  };\n}\n\nexport function updateProjectName(projectName: string): EditorActionTypes {\n  return {\n    type: Action.UPDATE_PROJECT_NAME,\n    payload: {\n      projectName,\n    },\n  };\n}\n\nexport function updateActiveImageIndex(activeImageIndex: number): EditorActionTypes {\n  return {\n    type: Action.UPDATE_ACTIVE_IMAGE_INDEX,\n    payload: {\n      activeImageIndex,\n    },\n  };\n}\n\nexport function updateActiveLabelNameIndex(activeLabelNameIndex: number): EditorActionTypes {\n  return {\n    type: Action.UPDATE_ACTIVE_LABEL_NAME_INDEX,\n    payload: {\n      activeLabelNameIndex,\n    },\n  };\n}\n\nexport function updateActiveLabelId(activeLabelId: string): EditorActionTypes {\n  return {\n    type: Action.UPDATE_ACTIVE_LABEL_ID,\n    payload: {\n      activeLabelId,\n    },\n  };\n}\n\nexport function updateHighlightedLabelId(highlightedLabelId: string): EditorActionTypes {\n  return {\n    type: Action.UPDATE_HIGHLIGHTED_LABEL_ID,\n    payload: {\n      highlightedLabelId,\n    },\n  };\n}\n\nexport function updateActiveLabelType(activeLabelType: LabelType): EditorActionTypes {\n  return {\n    type: Action.UPDATE_ACTIVE_LABEL_TYPE,\n    payload: {\n      activeLabelType,\n    },\n  };\n}\n\nexport function updateImageDataById(id: string, newImageData: ImageData): EditorActionTypes {\n  return {\n    type: Action.UPDATE_IMAGE_DATA_BY_ID,\n    payload: {\n      id,\n      newImageData,\n    },\n  };\n}\n\nexport function addImageData(imageData: ImageData[]): EditorActionTypes {\n  return {\n    type: Action.ADD_IMAGES_DATA,\n    payload: {\n      imageData,\n    },\n  };\n}\n\nexport function updateImageData(imageData: ImageData[]): EditorActionTypes {\n  return {\n    type: Action.UPDATE_IMAGES_DATA,\n    payload: {\n      imageData,\n    },\n  };\n}\n\nexport function updateLabelNamesList(labelNames: string[]) {\n  return {\n    type: Action.UPDATE_LABEL_NAMES_LIST,\n    payload: {\n      labelNames,\n    },\n  };\n}\n\nexport function updateFirstLabelCreatedFlag(firstLabelCreatedFlag: boolean) {\n  return {\n    type: Action.UPDATE_FIRST_LABEL_CREATED_FLAG,\n    payload: {\n      firstLabelCreatedFlag,\n    },\n  };\n}\n\nexport function updateGroupList(groupName: string) {\n  return {\n    type: Action.UPDATE_GROUP_LIST,\n    payload: {\n      groupName,\n    },\n  };\n}\nexport function updateActiveGroupIndex(groupIndex: number) {\n  return {\n    type: Action.UPDATE_ACTIVE_GROUP_INDEX,\n    payload: {\n      groupIndex,\n    },\n  };\n}\n","import {ISize} from \"../interfaces/ISize\";\nimport {IPoint} from \"../interfaces/IPoint\";\n\nexport class VirtualListUtil {\n    public static calculateGridSize(listSize: ISize, childSize: ISize, childCount: number): ISize {\n        const columnCount: number = Math.floor(listSize.width / childSize.width);\n        const rowCount: number = Math.ceil(childCount / columnCount);\n        return {width: columnCount, height: rowCount};\n    }\n\n    public static calculateContentSize(listSize: ISize, childSize: ISize, gridSize: ISize): ISize {\n        const sizeFromGrid:ISize = {\n            width: childSize.width * gridSize.width,\n            height: childSize.height * gridSize.height\n        };\n\n        return {\n            width: Math.max(listSize.width, sizeFromGrid.width),\n            height: sizeFromGrid.height\n        }\n    }\n\n    public static calculateAnchorPoints(listSize: ISize, childSize: ISize, childCount: number): IPoint[] {\n        const gridSize: ISize = VirtualListUtil.calculateGridSize(listSize, childSize, childCount);\n        const contentWrapperSize: ISize = VirtualListUtil.calculateContentSize(listSize, childSize, gridSize);\n        const horizontalMargin = (contentWrapperSize.width - gridSize.width * childSize.width) / (gridSize.width + 1);\n\n        let anchors = [];\n        for (let i = 0; i < childCount; i++) {\n            const rowCount: number = Math.floor(i / gridSize.width);\n            const columnCount: number = i % gridSize.width;\n\n            const anchor: IPoint = {\n                x: rowCount * horizontalMargin + columnCount * childSize.width,\n                y: rowCount * childSize.height\n            };\n            anchors.push(anchor);\n        }\n        return anchors;\n    }\n}","export class NumberUtil {\n    public static snapValueToRange(value: number, min: number, max: number): number {\n        if (value < min)\n            return min;\n        if (value > max)\n            return max;\n\n        return value;\n    }\n}","import {IRect} from \"../interfaces/IRect\";\nimport {IPoint} from \"../interfaces/IPoint\";\nimport {ISize} from \"../interfaces/ISize\";\nimport {RectAnchor} from \"../data/RectAnchor\";\nimport {NumberUtil} from \"./NumberUtil\";\nimport {Direction} from \"../data/enums/Direction\";\n\nexport class RectUtil {\n    public static getRatio(rect: IRect): number {\n        if (!rect) return null;\n\n        return rect.width/rect.height\n    }\n\n    public static intersect(r1: IRect, r2: IRect) {\n        if (!r1 || !r2) return null;\n        return !(\n            r2.x > r1.x + r1.width ||\n            r2.x + r2.width < r1.x ||\n            r2.y > r1.y + r1.height ||\n            r2.y + r2.height < r1.y\n        );\n    }\n\n    public static isPointInside(rect: IRect, point: IPoint): boolean {\n        if (!rect || !point) return null;\n        return (\n            rect.x < point.x &&\n            rect.x + rect.width > point.x &&\n            rect.y < point.y &&\n            rect.y + rect.height > point.y\n        )\n    }\n\n    public static getRectWithCenterAndSize(centerPoint: IPoint, size: ISize): IRect {\n        return {\n            x: centerPoint.x - 0.5 * size.width,\n            y: centerPoint.y - 0.5 * size.height,\n            ...size\n        }\n    }\n\n    public static fitInsideRectWithRatio(containerRect: IRect, ratio: number): IRect {\n        const containerRectRatio = RectUtil.getRatio(containerRect);\n        if (containerRectRatio < ratio) {\n            const innerRectHeight = containerRect.width / ratio;\n            return {\n                x: containerRect.x,\n                y: containerRect.y + (containerRect.height - innerRectHeight) / 2,\n                width: containerRect.width,\n                height: innerRectHeight\n            }\n        }\n        else {\n            const innerRectWidth = containerRect.height * ratio;\n            return {\n                x: containerRect.x + (containerRect.width - innerRectWidth) / 2,\n                y: containerRect.y,\n                width: innerRectWidth,\n                height: containerRect.height\n            }\n        }\n    }\n\n    public static resizeRect(inputRect: IRect, rectAnchor: Direction, delta): IRect {\n        const rect: IRect = {...inputRect};\n        switch (rectAnchor) {\n            case Direction.RIGHT:\n                rect.width += delta.x;\n                break;\n            case Direction.BOTTOM_RIGHT:\n                rect.width += delta.x;\n                rect.height += delta.y;\n                break;\n            case Direction.BOTTOM:\n                rect.height += delta.y;\n                break;\n            case Direction.TOP_RIGHT:\n                rect.width += delta.x;\n                rect.y += delta.y;\n                rect.height -= delta.y;\n                break;\n            case Direction.TOP:\n                rect.y += delta.y;\n                rect.height -= delta.y;\n                break;\n            case Direction.TOP_LEFT:\n                rect.x += delta.x;\n                rect.width -= delta.x;\n                rect.y += delta.y;\n                rect.height -= delta.y;\n                break;\n            case Direction.LEFT:\n                rect.x += delta.x;\n                rect.width -= delta.x;\n                break;\n            case Direction.BOTTOM_LEFT:\n                rect.x += delta.x;\n                rect.width -= delta.x;\n                rect.height += delta.y;\n                break;\n        }\n\n        if (rect.width < 0)  {\n            rect.x = rect.x + rect.width;\n            rect.width = - rect.width;\n        }\n\n        if (rect.height < 0)  {\n            rect.y = rect.y + rect.height;\n            rect.height = - rect.height;\n        }\n\n        return rect;\n    }\n\n    public static translate(rect: IRect, delta: IPoint): IRect {\n        return {\n            ...rect,\n            x: rect.x + delta.x,\n            y: rect.y + delta.y\n        }\n    }\n\n    public static expand(rect: IRect, delta: IPoint): IRect {\n        return {\n            x: rect.x - delta.x,\n            y: rect.y - delta.y,\n            width: rect.width + 2 * delta.x,\n            height: rect.height + 2 * delta.y\n        }\n    }\n\n    public static scaleRect(rect:IRect, scale: number): IRect {\n        return {\n            x: rect.x * scale,\n            y: rect.y * scale,\n            width: rect.width * scale,\n            height: rect.height * scale\n        }\n    }\n\n    public static mapRectToAnchors(rect: IRect): RectAnchor[] {\n        return [\n            {type: Direction.TOP_LEFT, position: {x: rect.x, y: rect.y}},\n            {type: Direction.TOP, position: {x: rect.x + 0.5 * rect.width, y: rect.y}},\n            {type: Direction.TOP_RIGHT, position: {x: rect.x + rect.width, y: rect.y}},\n            {type: Direction.LEFT, position: {x: rect.x, y: rect.y + 0.5 * rect.height}},\n            {type: Direction.RIGHT, position: {x: rect.x + rect.width, y: rect.y + 0.5 * rect.height}},\n            {type: Direction.BOTTOM_LEFT, position: {x: rect.x, y: rect.y + rect.height}},\n            {type: Direction.BOTTOM, position: {x: rect.x + 0.5 * rect.width, y: rect.y + rect.height}},\n            {type: Direction.BOTTOM_RIGHT, position: {x: rect.x + rect.width, y: rect.y + rect.height}}\n        ]\n    }\n\n    public static snapPointToRect(point: IPoint, rect: IRect): IPoint {\n        if (RectUtil.isPointInside(rect, point))\n            return point;\n\n        return {\n            x: NumberUtil.snapValueToRange(point.x, rect.x, rect.x + rect.width),\n            y: NumberUtil.snapValueToRange(point.y, rect.y, rect.y + rect.height)\n        }\n    }\n}","import React from 'react';\nimport {ISize} from \"../../../interfaces/ISize\";\nimport {IRect} from \"../../../interfaces/IRect\";\nimport Scrollbars from 'react-custom-scrollbars';\nimport {VirtualListUtil} from \"../../../utils/VirtualListUtil\";\nimport {IPoint} from \"../../../interfaces/IPoint\";\nimport {RectUtil} from \"../../../utils/RectUtil\";\n\ninterface IProps {\n    size: ISize;\n    childCount: number;\n    childSize: ISize;\n    childRender: (index: number, isScrolling: boolean, isVisible: boolean, style: React.CSSProperties) => any;\n    overScanHeight?: number;\n}\n\ninterface IState {\n    viewportRect: IRect;\n    isScrolling: boolean;\n}\n\nexport class VirtualList extends React.Component<IProps, IState> {\n    private gridSize: ISize;\n    private contentSize: ISize;\n    private childAnchors: IPoint[];\n    private scrollbars: Scrollbars;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewportRect: null,\n            isScrolling: false\n        };\n    }\n\n    public componentDidMount(): void {\n        const {size, childSize, childCount} = this.props;\n        this.calculate(size, childSize, childCount);\n        this.setState({\n            viewportRect: {\n                x: 0,\n                y: 0,\n                width: this.props.size.width,\n                height: this.props.size.height\n            }\n        });\n    }\n\n    public componentWillUpdate(nextProps: Readonly<IProps>, nextState: Readonly<IState>, nextContext: any): void {\n        const {size, childSize, childCount} = nextProps;\n        if (this.props.size.height !== size.height || this.props.size.width !== size.width ||\n            this.props.childCount !== childCount) {\n            this.calculate(size, childSize, childCount);\n            this.setState({\n                viewportRect: {\n                    x: this.scrollbars.getValues().scrollLeft,\n                    y: this.scrollbars.getValues().scrollTop,\n                    width: size.width,\n                    height: size.height\n                }\n            });\n        }\n    }\n\n    private calculate = (size: ISize, childSize: ISize, childCount: number) => {\n        this.gridSize = VirtualListUtil.calculateGridSize(size, childSize, childCount);\n        this.contentSize = VirtualListUtil.calculateContentSize(size, childSize, this.gridSize);\n        this.childAnchors = VirtualListUtil.calculateAnchorPoints(size, childSize, childCount);\n    };\n\n    private getVirtualListStyle = ():React.CSSProperties => {\n        return {\n            position: \"relative\",\n            width: this.props.size.width,\n            height: this.props.size.height,\n        }\n    };\n\n    private getVirtualListContentStyle = ():React.CSSProperties => {\n        return {\n            width: this.contentSize.width,\n            height: this.contentSize.height,\n        }\n    };\n\n    private onScrollStart = () => {\n        this.setState({isScrolling: true});\n    };\n\n    private onScrollStop = () => {\n        this.setState({isScrolling: false});\n    };\n\n    private onScroll = (values) => {\n        this.setState({\n            viewportRect: {\n                x: values.scrollLeft,\n                y: values.scrollTop,\n                width: this.props.size.width,\n                height: this.props.size.height\n            }\n        });\n    };\n\n    private getChildren = () => {\n        const {viewportRect, isScrolling} = this.state;\n        const {overScanHeight, childSize} = this.props;\n        const overScan: number = !!overScanHeight ? overScanHeight : 0;\n\n        const viewportRectWithOverScan:IRect = {\n            x: viewportRect.x,\n            y: viewportRect.y - overScan,\n            width: viewportRect.width,\n            height: viewportRect.height + 2 * overScan\n        };\n\n        return this.childAnchors.reduce((children, anchor: IPoint, index: number) => {\n            const childRect = Object.assign(anchor, childSize);\n            const isVisible = RectUtil.intersect(viewportRectWithOverScan, childRect);\n\n            if (isVisible) {\n                const childStyle: React.CSSProperties = {\n                    position: \"absolute\",\n                    left: anchor.x,\n                    top: anchor.y,\n                    width: childSize.width,\n                    height: childSize.height\n                };\n\n                return children.concat(this.props.childRender(index, isScrolling, isVisible, childStyle))\n            }\n            else {\n                return children;\n            }\n        }, [])\n    };\n\n    public render() {\n        const displayContent = !!this.props.size && !!this.props.childSize && !!this.gridSize;\n\n        return(\n            <div\n                className=\"VirtualList\"\n                style={this.getVirtualListStyle()}\n            >\n                <Scrollbars\n                    ref={ref => this.scrollbars = ref}\n                    onScrollFrame={this.onScroll}\n                    onScrollStart={this.onScrollStart}\n                    onScrollStop={this.onScrollStop}\n                    autoHide={true}\n                >\n                    {displayContent && <div\n                        className=\"VirtualListContent\"\n                        style={this.getVirtualListContentStyle()}\n                    >\n                        {this.getChildren()}\n                    </div>}\n                </Scrollbars>\n            </div>\n        )\n    }\n}","export class ImageLoadManager {\n\n\tprivate static queue: (() => Promise<any>)[] = [];\n\tprivate static isRunning: boolean = false;\n\n\tpublic static add(fx: Promise<any>) {\n\t\tImageLoadManager.queue.push(async () => await fx);\n\t}\n\n\tpublic static run() {\n\t\tsetTimeout(() => ImageLoadManager.runQueue(), 10);\n\t}\n\n\tpublic static addAndRun(fx: Promise<any>) {\n\t\tImageLoadManager.add(fx);\n\t\tImageLoadManager.run();\n\t}\n\n\tpublic static async runQueue() {\n\t\tif (!ImageLoadManager.isRunning) {\n\t\t\tImageLoadManager.isRunning = true;\n\t\t\tawait ImageLoadManager.runTasks();\n\t\t\tImageLoadManager.isRunning = false;\n\t\t}\n\t}\n\n\tprivate static async runTasks() {\n\t\twhile (ImageLoadManager.queue.length > 0) {\n\t\t\tconst fx = ImageLoadManager.queue.shift();\n\t\t\tawait fx();\n\t\t}\n\t}\n}","export type ImageMap = { [s: string]: HTMLImageElement; };\n\nexport class ImageRepository {\n    private static repository: ImageMap = {};\n\n    public static store(uuid: string, image: HTMLImageElement): string {\n        ImageRepository.repository[uuid] = image;\n        return uuid;\n    }\n\n    public static getById(uuid: string): HTMLImageElement {\n        return ImageRepository.repository[uuid];\n    }\n}","import uuidv1 from \"uuid/v1\";\nimport { ImageData } from \"../store/editor/types\";\n\nexport class FileUtil {\n  public static mapFileDataToImageData(fileData: File): ImageData {\n    return {\n      id: uuidv1(),\n      fileData: fileData,\n      loadStatus: false,\n      activeGroupIndex: 0,\n      groupList: [\n        {\n          labelRects: [],\n          labelPoints: [],\n          labelPolygons: [],\n          activeLabelNameIndex: 0,\n          activeLabelType: null,\n          activeLabelId: null,\n          highlightedLabelId: null,\n          firstLabelCreatedFlag: false,\n        },\n      ],\n    };\n  }\n\n  public static loadImage(\n    fileData: File,\n    onSuccess: (image: HTMLImageElement) => any,\n    onFailure: () => any\n  ): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const url = URL.createObjectURL(fileData);\n      const image = new Image();\n      image.src = url;\n      image.onload = () => {\n        onSuccess(image);\n        resolve();\n      };\n      image.onerror = () => {\n        onFailure();\n        reject();\n      };\n    });\n  }\n\n  public static loadLabelsList(fileData: File, onSuccess: (labels: string[]) => any, onFailure: () => any) {\n    const reader = new FileReader();\n    reader.readAsText(fileData);\n    reader.onloadend = function(evt: any) {\n      const contents: string = evt.target.result;\n      onSuccess(contents.split(/[\\r\\n]/));\n    };\n    reader.onerror = () => onFailure();\n  }\n}\n","export enum ContextType {\n    EDITOR = \"EDITOR\",\n    LEFT_NAVBAR = \"LEFT_NAVBAR\",\n    RIGHT_NAVBAR = \"RIGHT_NAVBAR\",\n    POPUP = \"POPUP\",\n    DROPDOWN = \"DROPDOWN\"\n}","import classNames from \"classnames\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { ClipLoader } from \"react-spinners\";\nimport { ImageLoadManager } from \"../../../../logic/imageRepository/ImageLoadManager\";\nimport { IRect } from \"../../../../interfaces/IRect\";\nimport { ISize } from \"../../../../interfaces/ISize\";\nimport { ImageRepository } from \"../../../../logic/imageRepository/ImageRepository\";\nimport { Settings } from \"../../../../settings/Settings\";\nimport { AppState } from \"../../../../store\";\nimport { updateImageDataById } from \"../../../../store/editor/actionCreators\";\nimport { ImageData } from \"../../../../store/editor/types\";\nimport { FileUtil } from \"../../../../utils/FileUtil\";\nimport { RectUtil } from \"../../../../utils/RectUtil\";\nimport \"./ImagePreview.scss\";\n\ninterface IProps {\n  imageData: ImageData;\n  style: React.CSSProperties;\n  size: ISize;\n  isScrolling?: boolean;\n  isChecked?: boolean;\n  onClick?: () => any;\n  isSelected?: boolean;\n  updateImageDataById: (id: string, newImageData: ImageData) => any;\n}\n\ninterface IState {\n  image: HTMLImageElement;\n}\n\nclass ImagePreview extends React.Component<IProps, IState> {\n  private isLoading: boolean = false;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      image: null,\n    };\n  }\n\n  public componentDidMount(): void {\n    ImageLoadManager.addAndRun(this.loadImage(this.props.imageData, this.props.isScrolling));\n  }\n\n  public componentWillUpdate(nextProps: Readonly<IProps>, nextState: Readonly<IState>, nextContext: any): void {\n    if (this.props.imageData.id !== nextProps.imageData.id) {\n      if (nextProps.imageData.loadStatus) {\n        ImageLoadManager.addAndRun(this.loadImage(nextProps.imageData, nextProps.isScrolling));\n      } else {\n        this.setState({ image: null });\n      }\n    }\n\n    if (this.props.isScrolling && !nextProps.isScrolling) {\n      ImageLoadManager.addAndRun(this.loadImage(nextProps.imageData, false));\n    }\n  }\n\n  shouldComponentUpdate(nextProps: Readonly<IProps>, nextState: Readonly<IState>, nextContext: any): boolean {\n    return (\n      this.props.imageData.id !== nextProps.imageData.id ||\n      this.state.image !== nextState.image ||\n      this.props.isSelected !== nextProps.isSelected ||\n      this.props.isChecked !== nextProps.isChecked\n    );\n  }\n\n  private loadImage = async (imageData: ImageData, isScrolling: boolean) => {\n    if (imageData.loadStatus) {\n      const image = ImageRepository.getById(imageData.id);\n      if (this.state.image !== image) {\n        this.setState({ image });\n      }\n    } else if (!isScrolling || !this.isLoading) {\n      this.isLoading = true;\n      const saveLoadedImagePartial = (image: HTMLImageElement) => this.saveLoadedImage(image, imageData);\n      await FileUtil.loadImage(imageData.fileData, saveLoadedImagePartial, this.handleLoadImageError);\n    }\n  };\n\n  private saveLoadedImage = (image: HTMLImageElement, imageData: ImageData) => {\n    this.props.updateImageDataById(imageData.id, { ...imageData, loadStatus: true });\n    ImageRepository.store(imageData.id, image);\n    if (imageData.id === this.props.imageData.id) {\n      this.setState({ image });\n      this.isLoading = false;\n    }\n  };\n\n  private getStyle = () => {\n    const { size } = this.props;\n\n    const containerRect: IRect = {\n      x: 0.15 * size.width,\n      y: 0.15 * size.height,\n      width: 0.7 * size.width,\n      height: 0.7 * size.height,\n    };\n\n    const imageRect: IRect = {\n      x: 0,\n      y: 0,\n      width: this.state.image.width,\n      height: this.state.image.height,\n    };\n\n    const imageRatio = RectUtil.getRatio(imageRect);\n    const imagePosition: IRect = RectUtil.fitInsideRectWithRatio(containerRect, imageRatio);\n\n    return {\n      width: imagePosition.width,\n      height: imagePosition.height,\n      left: imagePosition.x,\n      top: imagePosition.y,\n    };\n  };\n\n  private handleLoadImageError = () => {};\n\n  private getClassName = () => {\n    return classNames(\"ImagePreview\", {\n      selected: this.props.isSelected,\n    });\n  };\n\n  public render() {\n    const { isChecked, style, onClick } = this.props;\n\n    return (\n      <div className={this.getClassName()} style={style} onClick={onClick ? onClick : undefined}>\n        {!!this.state.image ? (\n          [\n            <div className=\"Foreground\" key={\"Foreground\"} style={this.getStyle()}>\n              <img\n                className=\"Image\"\n                draggable={false}\n                src={this.state.image.src}\n                alt={this.state.image.alt}\n                style={{ ...this.getStyle(), left: 0, top: 0 }}\n              />\n              {isChecked && (\n                <img className=\"CheckBox\" draggable={false} src={\"ico/checkbox-checked-color.png\"} alt={\"checkbox\"} />\n              )}\n            </div>,\n            <div className=\"Background\" key={\"Background\"} style={this.getStyle()} />,\n          ]\n        ) : (\n          <ClipLoader sizeUnit={\"px\"} size={30} color={Settings.SECONDARY_COLOR} loading={true} />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  updateImageDataById,\n};\n\nconst mapStateToProps = (state: AppState) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ImagePreview);\n","import {ISize} from \"../../interfaces/ISize\";\nimport {GeneralActionTypes} from \"./types\";\nimport {Action} from \"../Actions\";\nimport {PopupWindowType} from \"../../data/enums/PopupWindowType\";\nimport {CustomCursorStyle} from \"../../data/enums/CustomCursorStyle\";\nimport {ContextType} from \"../../data/enums/ContextType\";\n\nexport function updateWindowSize(windowSize: ISize): GeneralActionTypes {\n    return {\n        type: Action.UPDATE_WINDOW_SIZE,\n        payload: {\n            windowSize,\n        },\n    };\n}\n\nexport function updateActivePopupType(activePopupType: PopupWindowType): GeneralActionTypes {\n    return {\n        type: Action.UPDATE_ACTIVE_POPUP_TYPE,\n        payload: {\n            activePopupType,\n        }\n    }\n}\n\nexport function updateCustomCursorStyle(customCursorStyle: CustomCursorStyle): GeneralActionTypes {\n    return {\n        type: Action.UPDATE_CUSTOM_CURSOR_STYLE,\n        payload: {\n            customCursorStyle,\n        }\n    }\n}\n\nexport function updateActiveContext(activeContext: ContextType): GeneralActionTypes {\n    return {\n        type: Action.UPDATE_CONTEXT,\n        payload: {\n            activeContext,\n        },\n    };\n}","export enum LabelType {\n  NAME = \"NAME\",\n  POINT = \"POINT\",\n  RECTANGLE = \"RECTANGLE\",\n  POLYGON = \"POLYGON\",\n  ALL = \"ALL\",\n}\n","import { PrimaryEditorRenderEngine } from \"../logic/render/PrimaryEditorRenderEngine\";\nimport { BaseRenderEngine } from \"../logic/render/BaseRenderEngine\";\nimport { IRect } from \"../interfaces/IRect\";\nimport { IPoint } from \"../interfaces/IPoint\";\n\nexport class EditorModel {\n  public static canvas: HTMLCanvasElement;\n  public static mousePositionIndicator: HTMLDivElement;\n  public static cursor: HTMLDivElement;\n  public static primaryRenderingEngine: PrimaryEditorRenderEngine;\n  public static supportRenderingEngine: BaseRenderEngine;\n  public static image: HTMLImageElement;\n  public static imageRectOnCanvas: IRect;\n  public static imageScale: number; // Image / Canvas\n  public static mousePositionOnCanvas: IPoint;\n  public static isLoading: boolean = false;\n}\n","export class UnitUtil {\n\n    public static deg2rad(angleDeg:number) {\n        return(angleDeg * Math.PI/180);\n    }\n\n    public static rad2deg(angleRad:number) {\n        return(angleRad * 180/Math.PI);\n    }\n}","export enum CustomCursorStyle {\n    DEFAULT = \"DEFAULT\",\n    MOVE = \"MOVE\",\n    RESIZE = \"RESIZE\",\n    ADD = \"ADD\",\n    CANCEL = \"CANCEL\",\n    CLOSE = \"CLOSE\"\n}","import { IPoint } from \"../interfaces/IPoint\";\nimport { IRect } from \"../interfaces/IRect\";\nimport { UnitUtil } from \"./UnitUtil\";\n\nexport class DrawUtil {\n  public static clearCanvas(canvas: HTMLCanvasElement): void {\n    let ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n  }\n\n  public static drawLine(\n    canvas: HTMLCanvasElement,\n    startPoint: IPoint,\n    endPoint: IPoint,\n    color: string = \"#111111\",\n    thickness: number = 1\n  ): void {\n    let ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = thickness;\n    ctx.lineCap = \"round\";\n    ctx.beginPath();\n    ctx.moveTo(startPoint.x, startPoint.y);\n    ctx.lineTo(endPoint.x + 1, endPoint.y + 1);\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  public static drawRect(\n    canvas: HTMLCanvasElement,\n    rect: IRect,\n    color: string = \"#fff\",\n    thickness: number = 1\n  ): void {\n    let ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = thickness;\n    ctx.beginPath();\n    ctx.rect(rect.x, rect.y, rect.width, rect.height);\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  public static drawRectWithFill(\n    canvas: HTMLCanvasElement,\n    rect: IRect,\n    color: string = \"#ADCC53\"\n  ): void {\n    let ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\n    ctx.save();\n    ctx.fillStyle = color;\n    ctx.beginPath();\n    ctx.rect(rect.x, rect.y, rect.width, rect.height);\n    ctx.fill();\n    ctx.restore();\n  }\n\n  public static shadeEverythingButRect(\n    canvas: HTMLCanvasElement,\n    rect: IRect,\n    color: string = \"rgba(0, 0, 0, 0.7)\"\n  ): void {\n    let ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\n    ctx.save();\n    ctx.fillStyle = color;\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    ctx.globalCompositeOperation = \"destination-out\";\n    ctx.fillRect(rect.x, rect.y, rect.width, rect.height);\n    ctx.restore();\n  }\n\n  public static drawCircleWithFill(\n    canvas: HTMLCanvasElement,\n    anchorPoint: IPoint,\n    radius: number,\n    color: string = \"#ffffff\"\n  ): void {\n    const ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\n    ctx.save();\n    const startAngleRad = UnitUtil.deg2rad(0);\n    const endAngleRad = UnitUtil.deg2rad(360);\n    ctx.fillStyle = color;\n    ctx.beginPath();\n    ctx.arc(anchorPoint.x, anchorPoint.y, radius, startAngleRad, endAngleRad, false);\n    ctx.fill();\n    ctx.restore();\n  }\n\n  public static drawCircle(\n    canvas: HTMLCanvasElement,\n    anchorPoint: IPoint,\n    radius: number,\n    startAngleDeg: number,\n    endAngleDeg: number,\n    thickness: number = 20,\n    color: string = \"#ffffff\"\n  ): void {\n    let ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\n    let startAngleRad = UnitUtil.deg2rad(startAngleDeg);\n    let endAngleRad = UnitUtil.deg2rad(endAngleDeg);\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = thickness;\n    ctx.beginPath();\n    ctx.arc(anchorPoint.x, anchorPoint.y, radius, startAngleRad, endAngleRad, false);\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  public static drawPolygon(\n    canvas: HTMLCanvasElement,\n    anchors: IPoint[],\n    color: string = \"#fff\",\n    thickness: number = 1\n  ): void {\n    let ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = thickness;\n    ctx.beginPath();\n    ctx.moveTo(anchors[0].x, anchors[0].y);\n    for (let i = 1; i < anchors.length; i++) {\n      ctx.lineTo(anchors[i].x, anchors[i].y);\n    }\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  public static drawPolygonWithFill(\n    canvas: HTMLCanvasElement,\n    anchors: IPoint[],\n    color: string = \"#fff\"\n  ): void {\n    let ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\n    ctx.save();\n    ctx.fillStyle = color;\n    ctx.beginPath();\n    ctx.moveTo(anchors[0].x, anchors[0].y);\n    for (let i = 1; i < anchors.length; i++) {\n      ctx.lineTo(anchors[i].x, anchors[i].y);\n    }\n    ctx.closePath();\n    ctx.fill();\n    ctx.restore();\n  }\n\n  public static drawText(\n    canvas: HTMLCanvasElement,\n    text: string,\n    textSize: number,\n    anchorPoint: IPoint,\n    color: string = \"#ffffff\",\n    bold: boolean = false,\n    align: string = \"center\"\n  ): void {\n    let ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\n    ctx.save();\n    ctx.fillStyle = color;\n    ctx.textAlign = align as CanvasTextAlign;\n    ctx.textBaseline = \"middle\";\n    ctx.font = (bold ? \"bold \" : \"\") + textSize + \"px Arial\";\n    ctx.fillText(text, anchorPoint.x, anchorPoint.y);\n    ctx.restore();\n  }\n\n  public static getRandomRGBColor(): string {\n    return (\n      \"rgb(\" +\n      Math.round(Math.random() * 255) +\n      \",\" +\n      Math.round(Math.random() * 255) +\n      \",\" +\n      Math.round(Math.random() * 255) +\n      \")\"\n    );\n  }\n\n  public static hexToRGB(hex: string, alpha: number): string {\n    const r = parseInt(hex.slice(1, 3), 16);\n    const g = parseInt(hex.slice(3, 5), 16);\n    const b = parseInt(hex.slice(5, 7), 16);\n\n    if (alpha) {\n      return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\n    } else {\n      return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\n    }\n  }\n}\n","import {IPoint} from \"../interfaces/IPoint\";\n\nexport class PointUtil {\n    public static equals(p1: IPoint, p2: IPoint): boolean {\n        return p1.x === p2.x && p1.y === p2.y;\n    }\n\n    public static add(p1: IPoint, p2: IPoint): IPoint {\n        return {\n            x: p1.x + p2.x,\n            y: p1.y + p2.y\n        }\n    }\n\n    public static subtract(p1: IPoint, p2: IPoint): IPoint {\n        return {\n            x: p1.x - p2.x,\n            y: p1.y - p2.y\n        }\n    }\n\n    public static multiply(p1: IPoint, factor: number) {\n        return {\n            x: p1.x * factor,\n            y: p1.y * factor\n        }\n    }\n\n    public static getEuclidianDistance(p1: IPoint, p2: IPoint): number {\n        return Math.sqrt(Math.pow((p1.x - p2.x), 2) + Math.pow((p1.y - p2.y), 2));\n    }\n}","import {ISize} from \"../interfaces/ISize\";\nimport {Settings} from \"./Settings\";\n\nexport class RenderEngineConfig {\n    public readonly lineThickness: number = 2;\n    public readonly lineActiveColor: string = Settings.PRIMARY_COLOR;\n    public readonly lineInactiveColor: string = \"#fff\";\n    public readonly anchorSize: ISize = {\n        width: Settings.RESIZE_HANDLE_DIMENSION_PX,\n        height: Settings.RESIZE_HANDLE_DIMENSION_PX\n    };\n    public readonly anchorHoverSize: ISize = {\n        width: Settings.RESIZE_HANDLE_HOVER_DIMENSION_PX,\n        height: Settings.RESIZE_HANDLE_HOVER_DIMENSION_PX\n    };\n    public readonly suggestedAnchorDetectionSize: ISize = {\n        width: 100,\n        height: 100\n    };\n    public readonly activeAnchorColor: string = Settings.SECONDARY_COLOR;\n    public readonly inactiveAnchorColor: string = Settings.DARK_THEME_SECOND_COLOR;\n}","import { store } from \"../..\";\nimport { ImageData, LabelPoint, LabelPolygon, LabelRect } from \"../editor/types\";\nimport _ from \"lodash\";\nimport { LabelType } from \"../../data/enums/LabelType\";\n\nexport class EditorSelector {\n  public static getProjectName(): string {\n    return store.getState().editor.projectName;\n  }\n\n  public static getLabelNames(): string[] {\n    return store.getState().editor.labelNames;\n  }\n\n  public static getActiveImageIndex(): number {\n    return store.getState().editor.activeImageIndex;\n  }\n\n  public static getActiveGroupIndex(): number {\n    return store.getState().editor.imagesData[this.getActiveImageIndex()].activeGroupIndex;\n  }\n\n  public static getActiveLabelNameIndex(): number {\n    return store.getState().editor.imagesData[this.getActiveImageIndex()].groupList[this.getActiveGroupIndex()]\n      .activeLabelNameIndex;\n  }\n  public static getLabelNameLength(): number {\n    return store.getState().editor.labelNames.length;\n  }\n\n  public static getImagesData(): ImageData[] {\n    return store.getState().editor.imagesData;\n  }\n\n  public static getActiveImageData(): ImageData | null {\n    let activeImageIndex: number | null = EditorSelector.getActiveImageIndex();\n\n    if (activeImageIndex === null) return null;\n\n    let imagesData: ImageData[] = EditorSelector.getImagesData();\n    return imagesData[activeImageIndex];\n  }\n\n  public static getActiveLabelId(): string | null {\n    return store.getState().editor.imagesData[this.getActiveImageIndex()].groupList[this.getActiveGroupIndex()]\n      .activeLabelId;\n  }\n\n  public static getHighlightedLabelId(): string | null {\n    return store.getState().editor.imagesData[this.getActiveImageIndex()].groupList[this.getActiveGroupIndex()]\n      .highlightedLabelId;\n  }\n\n  public static getActiveRectLabel(): LabelRect | null {\n    let activeLabelId: string | null = EditorSelector.getActiveLabelId();\n    let activeGroupIndex: number | null = EditorSelector.getActiveGroupIndex();\n\n    if (activeLabelId === null) return null;\n\n    return _.find(EditorSelector.getActiveImageData().groupList[activeGroupIndex].labelRects, {\n      id: activeLabelId,\n    });\n  }\n\n  public static getActivePointLabel(): LabelPoint | null {\n    let activeLabelId: string | null = EditorSelector.getActiveLabelId();\n    let activeGroupIndex: number | null = EditorSelector.getActiveGroupIndex();\n\n    if (activeLabelId === null) return null;\n\n    return _.find(EditorSelector.getActiveImageData().groupList[activeGroupIndex].labelPoints, {\n      id: activeLabelId,\n    });\n  }\n\n  public static getAllPointLabelIndex(): number[] {\n    //  let activeLabelId: string | null = EditorSelector.getActiveLabelId();\n    let activeGroupIndex: number | null = EditorSelector.getActiveGroupIndex();\n\n    const indexs = EditorSelector.getActiveImageData().groupList[activeGroupIndex].labelPoints.map(\n      ele => ele.labelIndex\n    );\n    return indexs;\n  }\n\n  public static getActivePolygonLabel(): LabelPolygon | null {\n    let activeLabelId: string | null = EditorSelector.getActiveLabelId();\n    let activeGroupIndex: number | null = EditorSelector.getActiveGroupIndex();\n\n    if (activeLabelId === null) return null;\n\n    return _.find(EditorSelector.getActiveImageData().groupList[activeGroupIndex].labelPolygons, {\n      id: activeLabelId,\n    });\n  }\n\n  public static getActiveLabelType(): LabelType {\n    return EditorSelector.getActiveImageData().groupList[EditorSelector.getActiveGroupIndex()].activeLabelType;\n  }\n\n  public static getFirstLabelCreatedFlag(): boolean {\n    return EditorSelector.getActiveImageData().groupList[EditorSelector.getActiveGroupIndex()].firstLabelCreatedFlag;\n  }\n}\n","export enum EventType {\n    MOUSE_UP = \"mouseup\",\n    MOUSE_DOWN = \"mousedown\",\n    MOUSE_MOVE = \"mousemove\",\n    KEY_DOWN = \"keydown\",\n    KEY_UP = \"keyup\"\n}","import {EventType} from \"../data/enums/EventType\";\n\nexport class MouseEventUtil {\n    public static getEventType(event: Event): EventType | null {\n        if (!event) return null;\n\n        switch (event.type) {\n            case EventType.MOUSE_DOWN:\n                return EventType.MOUSE_DOWN;\n            case EventType.MOUSE_UP:\n                return EventType.MOUSE_UP;\n            case EventType.MOUSE_MOVE:\n                return EventType.MOUSE_MOVE;\n            default:\n                return null;\n        }\n    }\n}","import {EditorData} from \"../../data/EditorData\";\nimport {MouseEventUtil} from \"../../utils/MouseEventUtil\";\nimport {EventType} from \"../../data/enums/EventType\";\nimport {LabelType} from \"../../data/enums/LabelType\";\n\nexport abstract class BaseRenderEngine {\n    protected readonly canvas: HTMLCanvasElement;\n    public labelType: LabelType;\n\n    protected constructor(canvas: HTMLCanvasElement) {\n        this.canvas = canvas;\n    }\n\n    public update(data: EditorData): void {\n        if (!!data.event) {\n            switch (MouseEventUtil.getEventType(data.event)) {\n                case EventType.MOUSE_MOVE:\n                    this.mouseMoveHandler(data);\n                    break;\n                case EventType.MOUSE_UP:\n                    this.mouseUpHandler(data);\n                    break;\n                case EventType.MOUSE_DOWN:\n                    this.mouseDownHandler(data);\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n\n    protected abstract mouseDownHandler(data: EditorData): void;\n    protected abstract mouseMoveHandler(data: EditorData): void;\n    protected abstract mouseUpHandler(data: EditorData): void;\n\n    abstract render(data: EditorData): void;\n\n    abstract isInProgress(): boolean;\n}","import {EditorData} from \"../data/EditorData\";\nimport {RectUtil} from \"./RectUtil\";\nimport {store} from \"../index\";\nimport {CustomCursorStyle} from \"../data/enums/CustomCursorStyle\";\nimport {updateCustomCursorStyle} from \"../store/general/actionCreators\";\nimport {IPoint} from \"../interfaces/IPoint\";\nimport {PointUtil} from \"./PointUtil\";\nimport {IRect} from \"../interfaces/IRect\";\n\nexport class RenderEngineUtil {\n\n    public static isMouseOverImage(data: EditorData): boolean {\n        return RectUtil.isPointInside(data.activeImageRectOnCanvas, data.mousePositionOnCanvas);\n    }\n\n    public static isMouseOverCanvas(data: EditorData): boolean {\n        return RectUtil.isPointInside({x: 0, y: 0, ...data.canvasSize}, data.mousePositionOnCanvas);\n    }\n\n    public static transferPolygonFromImageToCanvas(polygon: IPoint[], data: EditorData): IPoint[] {\n        return polygon.map((point: IPoint) => RenderEngineUtil.transferPointFromImageToCanvas(point, data));\n    }\n\n    public static transferPointFromImageToCanvas(point: IPoint, data: EditorData): IPoint {\n        return PointUtil.add(PointUtil.multiply(point, 1/data.activeImageScale), data.activeImageRectOnCanvas);\n    }\n\n    public static transferPolygonFromCanvasToImage(polygon: IPoint[], data: EditorData): IPoint[] {\n        return polygon.map((point: IPoint) => RenderEngineUtil.transferPointFromCanvasToImage(point, data));\n    }\n\n    public static transferPointFromCanvasToImage(point: IPoint, data: EditorData): IPoint {\n        return PointUtil.multiply(PointUtil.subtract(point, data.activeImageRectOnCanvas), data.activeImageScale);\n    }\n\n    public static transferRectFromCanvasToImage(rect: IRect, data: EditorData): IRect {\n        return RectUtil.translate(RectUtil.scaleRect(rect, 1/data.activeImageScale), data.activeImageRectOnCanvas);\n    }\n\n    public static wrapDefaultCursorStyleInCancel(data: EditorData) {\n        if (RectUtil.isPointInside(data.activeImageRectOnCanvas, data.mousePositionOnCanvas)) {\n            store.dispatch(updateCustomCursorStyle(CustomCursorStyle.DEFAULT));\n        } else {\n            store.dispatch(updateCustomCursorStyle(CustomCursorStyle.CANCEL));\n        }\n    }\n\n    public static setValueBetweenPixels(value: number): number {\n        return Math.floor(value) + 0.5;\n    }\n\n    public static setPointBetweenPixels(point: IPoint): IPoint {\n        return {\n            x: RenderEngineUtil.setValueBetweenPixels(point.x),\n            y: RenderEngineUtil.setValueBetweenPixels(point.y)\n        }\n    }\n\n    public static setRectBetweenPixels(rect: IRect): IRect {\n        const topLeft: IPoint = {\n            x: rect.x,\n            y: rect.y\n        };\n        const bottomRight: IPoint = {\n            x: rect.x + rect.width,\n            y: rect.y + rect.height\n        };\n        const topLeftBetweenPixels = RenderEngineUtil.setPointBetweenPixels(topLeft);\n        const bottomRightBetweenPixels = RenderEngineUtil.setPointBetweenPixels(bottomRight);\n        return {\n            x: topLeftBetweenPixels.x,\n            y: topLeftBetweenPixels.y,\n            width: bottomRightBetweenPixels.x - topLeftBetweenPixels.x,\n            height: bottomRightBetweenPixels.y - topLeftBetweenPixels.y\n        }\n    }\n}","import { IPoint } from \"../../interfaces/IPoint\";\nimport { IRect } from \"../../interfaces/IRect\";\nimport { RectUtil } from \"../../utils/RectUtil\";\nimport { DrawUtil } from \"../../utils/DrawUtil\";\nimport { store } from \"../..\";\nimport { ImageData, LabelRect } from \"../../store/editor/types\";\nimport uuidv1 from \"uuid/v1\";\nimport {\n  updateActiveLabelId,\n  updateFirstLabelCreatedFlag,\n  updateHighlightedLabelId,\n  updateImageDataById,\n} from \"../../store/editor/actionCreators\";\nimport { PointUtil } from \"../../utils/PointUtil\";\nimport { RectAnchor } from \"../../data/RectAnchor\";\nimport { RenderEngineConfig } from \"../../settings/RenderEngineConfig\";\nimport { updateCustomCursorStyle } from \"../../store/general/actionCreators\";\nimport { CustomCursorStyle } from \"../../data/enums/CustomCursorStyle\";\nimport { EditorSelector } from \"../../store/selectors/EditorSelector\";\nimport { EditorData } from \"../../data/EditorData\";\nimport { BaseRenderEngine } from \"./BaseRenderEngine\";\nimport { RenderEngineUtil } from \"../../utils/RenderEngineUtil\";\nimport { LabelType } from \"../../data/enums/LabelType\";\nimport _ from \"lodash\";\nimport produce from \"immer\";\n\nexport class RectRenderEngine extends BaseRenderEngine {\n  private config: RenderEngineConfig = new RenderEngineConfig();\n\n  // =================================================================================================================\n  // STATE\n  // =================================================================================================================\n\n  private startCreateRectPoint: IPoint;\n  private startResizeRectAnchor: RectAnchor;\n\n  public constructor(canvas: HTMLCanvasElement) {\n    super(canvas);\n    this.labelType = LabelType.RECTANGLE;\n  }\n\n  // =================================================================================================================\n  // EVENT HANDLERS\n  // =================================================================================================================\n\n  public mouseDownHandler = (data: EditorData) => {\n    const isMouseOverImage: boolean = RenderEngineUtil.isMouseOverImage(data);\n    const isMouseOverCanvas: boolean = RenderEngineUtil.isMouseOverCanvas(data);\n    if (isMouseOverCanvas) {\n      const rectUnderMouse: LabelRect = this.getRectUnderMouse(\n        data.activeImageScale,\n        data.activeImageRectOnCanvas,\n        data.mousePositionOnCanvas\n      );\n      if (!!rectUnderMouse) {\n        const rect: IRect = this.calculateRectRelativeToActiveImage(rectUnderMouse.rect, data.activeImageScale);\n        const anchorUnderMouse: RectAnchor = this.getAnchorUnderMouseByRect(\n          rect,\n          data.mousePositionOnCanvas,\n          data.activeImageRectOnCanvas\n        );\n        if (!!anchorUnderMouse) {\n          store.dispatch(updateActiveLabelId(rectUnderMouse.id));\n          this.startRectResize(anchorUnderMouse);\n        } else {\n          if (!!EditorSelector.getHighlightedLabelId())\n            store.dispatch(updateActiveLabelId(EditorSelector.getHighlightedLabelId()));\n          else this.startRectCreation(data.mousePositionOnCanvas);\n        }\n      } else if (isMouseOverImage) {\n        this.startRectCreation(data.mousePositionOnCanvas);\n      }\n    }\n  };\n\n  public mouseUpHandler = (data: EditorData) => {\n    if (!!data.activeImageRectOnCanvas) {\n      const mousePositionSnapped: IPoint = RectUtil.snapPointToRect(\n        data.mousePositionOnCanvas,\n        data.activeImageRectOnCanvas\n      );\n\n      if (!!this.startCreateRectPoint && !PointUtil.equals(this.startCreateRectPoint, mousePositionSnapped)) {\n        const minX: number = Math.min(this.startCreateRectPoint.x, mousePositionSnapped.x);\n        const minY: number = Math.min(this.startCreateRectPoint.y, mousePositionSnapped.y);\n        const maxX: number = Math.max(this.startCreateRectPoint.x, mousePositionSnapped.x);\n        const maxY: number = Math.max(this.startCreateRectPoint.y, mousePositionSnapped.y);\n\n        const rect: IRect = {\n          x: (minX - data.activeImageRectOnCanvas.x) * data.activeImageScale,\n          y: (minY - data.activeImageRectOnCanvas.y) * data.activeImageScale,\n          width: (maxX - minX) * data.activeImageScale,\n          height: (maxY - minY) * data.activeImageScale,\n        };\n        this.addRectLabel(rect);\n      }\n\n      if (!!this.startResizeRectAnchor) {\n        const activeLabelRect: LabelRect = EditorSelector.getActiveRectLabel();\n        const rect: IRect = this.calculateRectRelativeToActiveImage(activeLabelRect.rect, data.activeImageScale);\n        const startAnchorPosition: IPoint = PointUtil.add(\n          this.startResizeRectAnchor.position,\n          data.activeImageRectOnCanvas\n        );\n        const delta: IPoint = PointUtil.subtract(mousePositionSnapped, startAnchorPosition);\n        const resizeRect: IRect = RectUtil.resizeRect(rect, this.startResizeRectAnchor.type, delta);\n        const scaledRect: IRect = RectUtil.scaleRect(resizeRect, data.activeImageScale);\n\n        const imageData = EditorSelector.getActiveImageData();\n        const activeGroupIndex = EditorSelector.getActiveGroupIndex();\n        const newImageData = produce(imageData, draft => {\n          draft.groupList[activeGroupIndex].labelRects = imageData.groupList[activeGroupIndex].labelRects.map(\n            (labelRect: LabelRect) => {\n              if (labelRect.id === activeLabelRect.id) {\n                return {\n                  ...labelRect,\n                  rect: scaledRect,\n                };\n              }\n              return labelRect;\n            }\n          );\n        });\n\n        store.dispatch(updateImageDataById(imageData.id, newImageData));\n      }\n    }\n    this.endRectTransformation();\n  };\n\n  public mouseMoveHandler = (data: EditorData) => {\n    if (!!data.activeImageRectOnCanvas && !!data.mousePositionOnCanvas) {\n      const isOverImage: boolean = RenderEngineUtil.isMouseOverImage(data);\n      if (isOverImage && !this.startResizeRectAnchor) {\n        const labelRect: LabelRect = this.getRectUnderMouse(\n          data.activeImageScale,\n          data.activeImageRectOnCanvas,\n          data.mousePositionOnCanvas\n        );\n        if (!!labelRect) {\n          if (EditorSelector.getHighlightedLabelId() !== labelRect.id) {\n            store.dispatch(updateHighlightedLabelId(labelRect.id));\n          }\n        } else {\n          if (EditorSelector.getHighlightedLabelId() !== null) {\n            store.dispatch(updateHighlightedLabelId(null));\n          }\n        }\n      }\n    }\n  };\n\n  // =================================================================================================================\n  // RENDERING\n  // =================================================================================================================\n\n  public render(data: EditorData) {\n    const activeLabelId: string = EditorSelector.getActiveLabelId();\n    const imageData: ImageData = EditorSelector.getActiveImageData();\n    const activeGroupIndex = EditorSelector.getActiveGroupIndex();\n\n    if (imageData) {\n      imageData.groupList[activeGroupIndex].labelRects.forEach((labelRect: LabelRect) => {\n        labelRect.id === activeLabelId\n          ? this.drawActiveRect(\n              labelRect,\n              data.mousePositionOnCanvas,\n              data.activeImageRectOnCanvas,\n              data.activeImageScale\n            )\n          : this.drawInactiveRect(labelRect, data);\n      });\n      this.drawCurrentlyCreatedRect(data.mousePositionOnCanvas, data.activeImageRectOnCanvas);\n      this.updateCursorStyle(data);\n    }\n  }\n\n  private drawCurrentlyCreatedRect(mousePosition: IPoint, imageRect: IRect) {\n    if (!!this.startCreateRectPoint) {\n      const mousePositionSnapped: IPoint = RectUtil.snapPointToRect(mousePosition, imageRect);\n      const activeRect: IRect = {\n        x: this.startCreateRectPoint.x,\n        y: this.startCreateRectPoint.y,\n        width: mousePositionSnapped.x - this.startCreateRectPoint.x,\n        height: mousePositionSnapped.y - this.startCreateRectPoint.y,\n      };\n      const activeRectBetweenPixels = RenderEngineUtil.setRectBetweenPixels(activeRect);\n      DrawUtil.drawRect(this.canvas, activeRectBetweenPixels, this.config.lineActiveColor, this.config.lineThickness);\n    }\n  }\n\n  private drawInactiveRect(labelRect: LabelRect, data: EditorData) {\n    const rectOnImage: IRect = RenderEngineUtil.transferRectFromCanvasToImage(labelRect.rect, data);\n    const highlightedLabelId: string = EditorSelector.getHighlightedLabelId();\n    this.renderRect(rectOnImage, labelRect.id === highlightedLabelId);\n  }\n\n  private drawActiveRect(labelRect: LabelRect, mousePosition: IPoint, imageRect: IRect, scale: number) {\n    let rect: IRect = this.calculateRectRelativeToActiveImage(labelRect.rect, scale);\n    if (!!this.startResizeRectAnchor) {\n      const startAnchorPosition: IPoint = PointUtil.add(this.startResizeRectAnchor.position, imageRect);\n      const endAnchorPositionSnapped: IPoint = RectUtil.snapPointToRect(mousePosition, imageRect);\n      const delta = PointUtil.subtract(endAnchorPositionSnapped, startAnchorPosition);\n      rect = RectUtil.resizeRect(rect, this.startResizeRectAnchor.type, delta);\n    }\n    const rectOnImage: IRect = RectUtil.translate(rect, imageRect);\n    this.renderRect(rectOnImage, true);\n  }\n\n  private renderRect(rectOnImage: IRect, isActive: boolean) {\n    const rectBetweenPixels = RenderEngineUtil.setRectBetweenPixels(rectOnImage);\n    const lineColor: string = isActive ? this.config.lineActiveColor : this.config.lineInactiveColor;\n    DrawUtil.drawRect(this.canvas, rectBetweenPixels, lineColor, this.config.lineThickness);\n    if (isActive) {\n      const handleCenters: IPoint[] = RectUtil.mapRectToAnchors(rectOnImage).map(\n        (rectAnchor: RectAnchor) => rectAnchor.position\n      );\n      handleCenters.forEach((center: IPoint) => {\n        const handleRect: IRect = RectUtil.getRectWithCenterAndSize(center, this.config.anchorSize);\n        const handleRectBetweenPixels: IRect = RenderEngineUtil.setRectBetweenPixels(handleRect);\n        DrawUtil.drawRectWithFill(this.canvas, handleRectBetweenPixels, this.config.activeAnchorColor);\n      });\n    }\n  }\n\n  private updateCursorStyle(data: EditorData) {\n    if (!!this.canvas && !!data.mousePositionOnCanvas) {\n      const rectAnchorUnderMouse: RectAnchor = this.getAnchorUnderMouse(\n        data.activeImageScale,\n        data.mousePositionOnCanvas,\n        data.activeImageRectOnCanvas\n      );\n      if (!!rectAnchorUnderMouse || !!this.startResizeRectAnchor) {\n        store.dispatch(updateCustomCursorStyle(CustomCursorStyle.MOVE));\n        return;\n      }\n      if (RenderEngineUtil.isMouseOverCanvas(data)) {\n        if (\n          !RectUtil.isPointInside(data.activeImageRectOnCanvas, data.mousePositionOnCanvas) &&\n          !!this.startCreateRectPoint\n        )\n          store.dispatch(updateCustomCursorStyle(CustomCursorStyle.MOVE));\n        else RenderEngineUtil.wrapDefaultCursorStyleInCancel(data);\n        this.canvas.style.cursor = \"none\";\n      } else {\n        this.canvas.style.cursor = \"default\";\n      }\n    }\n  }\n\n  // =================================================================================================================\n  // HELPERS\n  // =================================================================================================================\n\n  public isInProgress(): boolean {\n    return !!this.startCreateRectPoint || !!this.startResizeRectAnchor;\n  }\n\n  private calculateRectRelativeToActiveImage(rect: IRect, scale: number): IRect {\n    return RectUtil.scaleRect(rect, 1 / scale);\n  }\n\n  private addRectLabel = (rect: IRect) => {\n    const activeLabelIndex = EditorSelector.getActiveLabelNameIndex();\n    const imageData: ImageData = EditorSelector.getActiveImageData();\n    const labelRect: LabelRect = {\n      id: uuidv1(),\n      labelIndex: activeLabelIndex,\n      checked: false,\n      rect,\n    };\n    imageData.groupList[EditorSelector.getActiveGroupIndex()].labelRects.push(labelRect);\n    store.dispatch(updateImageDataById(imageData.id, imageData));\n    store.dispatch(updateFirstLabelCreatedFlag(true));\n    store.dispatch(updateActiveLabelId(labelRect.id));\n  };\n\n  private getRectUnderMouse(scale: number, imageRect: IRect, mousePosition: IPoint): LabelRect {\n    const activeRectLabel: LabelRect = EditorSelector.getActiveRectLabel();\n    if (!!activeRectLabel && this.isMouseOverRectEdges(activeRectLabel.rect, scale, imageRect, mousePosition)) {\n      return activeRectLabel;\n    }\n\n    const labelRects: LabelRect[] = EditorSelector.getActiveImageData().groupList[EditorSelector.getActiveGroupIndex()]\n      .labelRects;\n    for (let i = 0; i < labelRects.length; i++) {\n      if (this.isMouseOverRectEdges(labelRects[i].rect, scale, imageRect, mousePosition)) {\n        return labelRects[i];\n      }\n    }\n    return null;\n  }\n\n  private isMouseOverRectEdges(rect: IRect, scale: number, imageRect: IRect, mousePosition: IPoint): boolean {\n    const rectOnImage: IRect = RectUtil.translate(this.calculateRectRelativeToActiveImage(rect, scale), imageRect);\n\n    const outerRectDelta: IPoint = {\n      x: this.config.anchorHoverSize.width / 2,\n      y: this.config.anchorHoverSize.height / 2,\n    };\n    const outerRect: IRect = RectUtil.expand(rectOnImage, outerRectDelta);\n\n    const innerRectDelta: IPoint = {\n      x: -this.config.anchorHoverSize.width / 2,\n      y: -this.config.anchorHoverSize.height / 2,\n    };\n    const innerRect: IRect = RectUtil.expand(rectOnImage, innerRectDelta);\n\n    return RectUtil.isPointInside(outerRect, mousePosition) && !RectUtil.isPointInside(innerRect, mousePosition);\n  }\n\n  private getAnchorUnderMouseByRect(rect: IRect, mousePosition: IPoint, imageRect: IRect): RectAnchor {\n    const rectAnchors: RectAnchor[] = RectUtil.mapRectToAnchors(rect);\n    for (let i = 0; i < rectAnchors.length; i++) {\n      const anchorRect: IRect = RectUtil.translate(\n        RectUtil.getRectWithCenterAndSize(rectAnchors[i].position, this.config.anchorHoverSize),\n        imageRect\n      );\n      if (!!mousePosition && RectUtil.isPointInside(anchorRect, mousePosition)) {\n        return rectAnchors[i];\n      }\n    }\n    return null;\n  }\n\n  private getAnchorUnderMouse(scale: number, mousePosition: IPoint, imageRect: IRect): RectAnchor {\n    const labelRects: LabelRect[] = EditorSelector.getActiveImageData().groupList[EditorSelector.getActiveGroupIndex()]\n      .labelRects;\n    for (let i = 0; i < labelRects.length; i++) {\n      const rect: IRect = this.calculateRectRelativeToActiveImage(labelRects[i].rect, scale);\n      const rectAnchor = this.getAnchorUnderMouseByRect(rect, mousePosition, imageRect);\n      if (!!rectAnchor) return rectAnchor;\n    }\n    return null;\n  }\n\n  private startRectCreation(mousePosition: IPoint) {\n    this.startCreateRectPoint = mousePosition;\n    store.dispatch(updateActiveLabelId(null));\n  }\n\n  private startRectResize(activatedAnchor: RectAnchor) {\n    this.startResizeRectAnchor = activatedAnchor;\n  }\n\n  private endRectTransformation() {\n    this.startCreateRectPoint = null;\n    this.startResizeRectAnchor = null;\n  }\n}\n","import React from \"react\";\nimport {IPoint} from \"../interfaces/IPoint\";\nimport {IRect} from \"../interfaces/IRect\";\nimport {ISize} from \"../interfaces/ISize\";\n\nexport class CanvasUtil {\n    public static getMousePositionOnCanvasFromEvent(event: React.MouseEvent<HTMLCanvasElement, MouseEvent> | MouseEvent, canvas: HTMLCanvasElement): IPoint {\n        if (!!canvas && !!event) {\n            const canvasRect: ClientRect | DOMRect = canvas.getBoundingClientRect();\n            return {\n                x: event.clientX - canvasRect.left,\n                y: event.clientY - canvasRect.top\n            }\n        }\n        return null;\n    }\n\n    public static getClientRect(canvas: HTMLCanvasElement): IRect {\n        if (!!canvas) {\n            const canvasRect: ClientRect | DOMRect = canvas.getBoundingClientRect();\n            return {\n                x: canvasRect.left,\n                y: canvasRect.top,\n                width: canvasRect.width,\n                height: canvasRect.height\n            }\n        }\n        return null;\n    }\n\n    public static getSize(canvas: HTMLCanvasElement): ISize {\n        if (!!canvas) {\n            const canvasRect: ClientRect | DOMRect = canvas.getBoundingClientRect();\n            return {\n                width: canvasRect.width,\n                height: canvasRect.height\n            }\n        }\n        return null;\n    }\n}","import { IRect } from \"../../interfaces/IRect\";\nimport { RenderEngineConfig } from \"../../settings/RenderEngineConfig\";\nimport { IPoint } from \"../../interfaces/IPoint\";\nimport { CanvasUtil } from \"../../utils/CanvasUtil\";\nimport { store } from \"../../index\";\nimport { ImageData, LabelPoint } from \"../../store/editor/types\";\nimport uuidv1 from \"uuid/v1\";\nimport {\n  updateActiveLabelId,\n  updateFirstLabelCreatedFlag,\n  updateHighlightedLabelId,\n  updateImageDataById,\n  updateActiveLabelNameIndex,\n} from \"../../store/editor/actionCreators\";\nimport { RectUtil } from \"../../utils/RectUtil\";\nimport { DrawUtil } from \"../../utils/DrawUtil\";\nimport { updateCustomCursorStyle } from \"../../store/general/actionCreators\";\nimport { CustomCursorStyle } from \"../../data/enums/CustomCursorStyle\";\nimport { EditorSelector } from \"../../store/selectors/EditorSelector\";\nimport { EditorData } from \"../../data/EditorData\";\nimport { BaseRenderEngine } from \"./BaseRenderEngine\";\nimport { RenderEngineUtil } from \"../../utils/RenderEngineUtil\";\nimport { LabelType } from \"../../data/enums/LabelType\";\nimport produce from \"immer\";\n\nexport class PointRenderEngine extends BaseRenderEngine {\n  private config: RenderEngineConfig = new RenderEngineConfig();\n\n  // =================================================================================================================\n  // STATE\n  // =================================================================================================================\n\n  private transformInProgress: boolean = false;\n\n  public constructor(canvas: HTMLCanvasElement) {\n    super(canvas);\n    this.labelType = LabelType.POINT;\n  }\n\n  // =================================================================================================================\n  // EVENT HANDLERS\n  // =================================================================================================================\n\n  public mouseDownHandler(data: EditorData): void {\n    const isMouseOverImage: boolean = RenderEngineUtil.isMouseOverImage(data);\n    const isMouseOverCanvas: boolean = RenderEngineUtil.isMouseOverCanvas(data);\n\n    if (isMouseOverCanvas) {\n      const labelPoint: LabelPoint = this.getLabelPointUnderMouse(data.mousePositionOnCanvas, data);\n      if (!!labelPoint) {\n        const pointOnCanvas: IPoint = RenderEngineUtil.transferPointFromImageToCanvas(labelPoint.point, data);\n        const pointBetweenPixels = RenderEngineUtil.setPointBetweenPixels(pointOnCanvas);\n        const handleRect: IRect = RectUtil.getRectWithCenterAndSize(pointBetweenPixels, this.config.anchorHoverSize);\n        if (RectUtil.isPointInside(handleRect, data.mousePositionOnCanvas)) {\n          store.dispatch(updateActiveLabelId(labelPoint.id));\n          this.transformInProgress = true;\n          return;\n        } else {\n          store.dispatch(updateActiveLabelId(null));\n          const pointOnImage: IPoint = RenderEngineUtil.transferPointFromCanvasToImage(\n            data.mousePositionOnCanvas,\n            data\n          );\n          this.addPointLabel(pointOnImage);\n        }\n      } else if (isMouseOverImage) {\n        const pointOnImage: IPoint = RenderEngineUtil.transferPointFromCanvasToImage(data.mousePositionOnCanvas, data);\n        this.addPointLabel(pointOnImage);\n      }\n    }\n  }\n\n  public mouseUpHandler(data: EditorData): void {\n    if (this.isInProgress()) {\n      const activeLabelPoint: LabelPoint = EditorSelector.getActivePointLabel();\n      const pointSnapped: IPoint = RectUtil.snapPointToRect(data.mousePositionOnCanvas, data.activeImageRectOnCanvas);\n      const pointOnImage: IPoint = RenderEngineUtil.transferPointFromCanvasToImage(pointSnapped, data);\n      const imageData = EditorSelector.getActiveImageData();\n      const activeGroupIndex = EditorSelector.getActiveGroupIndex();\n      const newImageData = produce(imageData, draft => {\n        draft.groupList[activeGroupIndex].labelPoints = imageData.groupList[activeGroupIndex].labelPoints.map(\n          (labelPoint: LabelPoint) => {\n            if (labelPoint.id === activeLabelPoint.id) {\n              return {\n                ...labelPoint,\n                point: pointOnImage,\n              };\n            }\n            return labelPoint;\n          }\n        );\n      });\n\n      store.dispatch(updateImageDataById(imageData.id, newImageData));\n    }\n    this.transformInProgress = false;\n  }\n\n  public mouseMoveHandler(data: EditorData): void {\n    const isOverImage: boolean = RenderEngineUtil.isMouseOverImage(data);\n    if (isOverImage) {\n      const labelPoint: LabelPoint = this.getLabelPointUnderMouse(data.mousePositionOnCanvas, data);\n      if (!!labelPoint) {\n        if (EditorSelector.getHighlightedLabelId() !== labelPoint.id) {\n          store.dispatch(updateHighlightedLabelId(labelPoint.id));\n        }\n      } else {\n        if (EditorSelector.getHighlightedLabelId() !== null) {\n          store.dispatch(updateHighlightedLabelId(null));\n        }\n      }\n    }\n  }\n\n  // =================================================================================================================\n  // RENDERING\n  // =================================================================================================================\n\n  public render(data: EditorData): void {\n    const activeLabelId: string = EditorSelector.getActiveLabelId();\n    const highlightedLabelId: string = EditorSelector.getHighlightedLabelId();\n    const imageData: ImageData = EditorSelector.getActiveImageData();\n    if (imageData) {\n      const activeGroupIndex = EditorSelector.getActiveGroupIndex();\n      imageData.groupList[activeGroupIndex].labelPoints.forEach((labelPoint: LabelPoint) => {\n        if (labelPoint.id === activeLabelId) {\n          if (this.isInProgress()) {\n            const pointSnapped: IPoint = RectUtil.snapPointToRect(\n              data.mousePositionOnCanvas,\n              data.activeImageRectOnCanvas\n            );\n            const pointBetweenPixels: IPoint = RenderEngineUtil.setPointBetweenPixels(pointSnapped);\n            const handleRect: IRect = RectUtil.getRectWithCenterAndSize(pointBetweenPixels, this.config.anchorSize);\n            DrawUtil.drawRectWithFill(this.canvas, handleRect, this.config.activeAnchorColor);\n          } else {\n            this.renderPoint(labelPoint, true, data);\n          }\n        } else {\n          this.renderPoint(labelPoint, labelPoint.id === activeLabelId || labelPoint.id === highlightedLabelId, data);\n        }\n      });\n    }\n    this.updateCursorStyle(data);\n  }\n\n  private renderPoint(labelPoint: LabelPoint, isActive: boolean, data: EditorData) {\n    const pointOnImage: IPoint = RenderEngineUtil.transferPointFromImageToCanvas(labelPoint.point, data);\n    const pointBetweenPixels = RenderEngineUtil.setPointBetweenPixels(pointOnImage);\n    const handleRect: IRect = RectUtil.getRectWithCenterAndSize(pointBetweenPixels, this.config.anchorSize);\n    const handleColor: string = isActive ? this.config.activeAnchorColor : this.config.inactiveAnchorColor;\n    DrawUtil.drawRectWithFill(this.canvas, handleRect, handleColor);\n  }\n\n  private updateCursorStyle(data: EditorData) {\n    if (!!this.canvas && !!data.mousePositionOnCanvas) {\n      const labelPoint: LabelPoint = this.getLabelPointUnderMouse(data.mousePositionOnCanvas, data);\n      if (!!labelPoint) {\n        const pointOnCanvas: IPoint = RenderEngineUtil.transferPointFromImageToCanvas(labelPoint.point, data);\n        const pointBetweenPixels = RenderEngineUtil.setPointBetweenPixels(pointOnCanvas);\n        const handleRect: IRect = RectUtil.getRectWithCenterAndSize(pointBetweenPixels, this.config.anchorHoverSize);\n        if (RectUtil.isPointInside(handleRect, data.mousePositionOnCanvas)) {\n          store.dispatch(updateCustomCursorStyle(CustomCursorStyle.MOVE));\n          return;\n        }\n      } else if (this.isInProgress()) {\n        store.dispatch(updateCustomCursorStyle(CustomCursorStyle.MOVE));\n        return;\n      }\n\n      if (RectUtil.isPointInside({ x: 0, y: 0, ...CanvasUtil.getSize(this.canvas) }, data.mousePositionOnCanvas)) {\n        RenderEngineUtil.wrapDefaultCursorStyleInCancel(data);\n        this.canvas.style.cursor = \"none\";\n      } else {\n        this.canvas.style.cursor = \"default\";\n      }\n    }\n  }\n\n  // =================================================================================================================\n  // HELPERS\n  // =================================================================================================================\n\n  public isInProgress(): boolean {\n    return this.transformInProgress;\n  }\n\n  private getLabelPointUnderMouse(mousePosition: IPoint, data: EditorData): LabelPoint {\n    const activeGroupIndex = EditorSelector.getActiveGroupIndex();\n    const labelPoints: LabelPoint[] = EditorSelector.getActiveImageData().groupList[activeGroupIndex].labelPoints;\n    for (let i = 0; i < labelPoints.length; i++) {\n      const pointOnCanvas: IPoint = RenderEngineUtil.transferPointFromImageToCanvas(labelPoints[i].point, data);\n      const handleRect: IRect = RectUtil.getRectWithCenterAndSize(pointOnCanvas, this.config.anchorHoverSize);\n      if (RectUtil.isPointInside(handleRect, mousePosition)) {\n        return labelPoints[i];\n      }\n    }\n    return null;\n  }\n\n  private addPointLabel = (point: IPoint) => {\n    const activeLabelIndex = EditorSelector.getActiveLabelNameIndex();\n    const labelsLength = EditorSelector.getLabelNameLength();\n    const existedLabelIndexs = EditorSelector.getAllPointLabelIndex();\n    existedLabelIndexs.push(activeLabelIndex);\n    const allIndex = [...Array(labelsLength)].map((v, k) => k);\n\n    const difference = existedLabelIndexs\n      .concat(allIndex)\n      .filter(v => !existedLabelIndexs.includes(v) || !allIndex.includes(v));\n\n    if (difference.indexOf(null) !== -1) {\n      difference.splice(difference.indexOf(null), 1);\n    }\n    if (existedLabelIndexs.length - 1 === labelsLength) {\n      alert(\"已经添加全部的关节\");\n      return;\n    }\n    const imageData: ImageData = EditorSelector.getActiveImageData();\n    const labelPoint: LabelPoint = {\n      id: uuidv1(),\n      labelIndex: activeLabelIndex,\n      checked: false,\n      point,\n    };\n    const activeGroupIndex = EditorSelector.getActiveGroupIndex();\n\n    imageData.groupList[activeGroupIndex].labelPoints.push(labelPoint);\n    store.dispatch(updateImageDataById(imageData.id, imageData));\n    store.dispatch(updateFirstLabelCreatedFlag(true));\n    store.dispatch(updateActiveLabelId(labelPoint.id));\n    store.dispatch(updateActiveLabelNameIndex(difference.length ? difference[0] : null));\n  };\n}\n","import {ILine} from \"../interfaces/ILine\";\nimport {IPoint} from \"../interfaces/IPoint\";\n\nexport class LineUtil {\n    public static getDistanceFromLine(l: ILine, p: IPoint): number {\n        if (l.start.x !== l.end.x || l.start.y !== l.end.y) {\n            const nom: number = Math.abs((l.end.y - l.start.y) * p.x - (l.end.x - l.start.x) * p.y + l.end.x * l.start.y - l.end.y * l.start.x);\n            const denom: number = Math.sqrt(Math.pow(l.end.y - l.start.y, 2) + Math.pow(l.end.x - l.start.x, 2));\n            return nom / denom;\n        }\n        return null;\n    }\n\n    public static getCenter(l: ILine): IPoint {\n        return {\n            x: (l.start.x + l.end.x) / 2,\n            y: (l.start.y + l.end.y) / 2\n        }\n    }\n}","import { store } from \"../../index\";\nimport { RectUtil } from \"../../utils/RectUtil\";\nimport { updateCustomCursorStyle } from \"../../store/general/actionCreators\";\nimport { CustomCursorStyle } from \"../../data/enums/CustomCursorStyle\";\nimport { EditorData } from \"../../data/EditorData\";\nimport { BaseRenderEngine } from \"./BaseRenderEngine\";\nimport { RenderEngineConfig } from \"../../settings/RenderEngineConfig\";\nimport { IPoint } from \"../../interfaces/IPoint\";\nimport { ILine } from \"../../interfaces/ILine\";\nimport { DrawUtil } from \"../../utils/DrawUtil\";\nimport { IRect } from \"../../interfaces/IRect\";\nimport { ImageData, LabelPolygon } from \"../../store/editor/types\";\nimport { EditorSelector } from \"../../store/selectors/EditorSelector\";\nimport uuidv1 from \"uuid/v1\";\nimport {\n  updateActiveLabelId,\n  updateFirstLabelCreatedFlag,\n  updateHighlightedLabelId,\n  updateImageDataById,\n} from \"../../store/editor/actionCreators\";\nimport { LineUtil } from \"../../utils/LineUtil\";\nimport { MouseEventUtil } from \"../../utils/MouseEventUtil\";\nimport { EventType } from \"../../data/enums/EventType\";\nimport { RenderEngineUtil } from \"../../utils/RenderEngineUtil\";\nimport { LabelType } from \"../../data/enums/LabelType\";\nimport produce from \"immer\";\n\nexport class PolygonRenderEngine extends BaseRenderEngine {\n  private config: RenderEngineConfig = new RenderEngineConfig();\n\n  // =================================================================================================================\n  // STATE\n  // =================================================================================================================\n\n  private activePath: IPoint[] = [];\n  private resizeAnchorIndex: number = null;\n  private suggestedAnchorPositionOnCanvas: IPoint = null;\n  private suggestedAnchorIndexInPolygon: number = null;\n\n  public constructor(canvas: HTMLCanvasElement) {\n    super(canvas);\n    this.labelType = LabelType.POLYGON;\n  }\n\n  // =================================================================================================================\n  // EVENT HANDLERS\n  // =================================================================================================================\n\n  public update(data: EditorData): void {\n    if (!!data.event) {\n      switch (MouseEventUtil.getEventType(data.event)) {\n        case EventType.MOUSE_MOVE:\n          this.mouseMoveHandler(data);\n          break;\n        case EventType.MOUSE_UP:\n          this.mouseUpHandler(data);\n          break;\n        case EventType.MOUSE_DOWN:\n          this.mouseDownHandler(data);\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  public mouseDownHandler(data: EditorData): void {\n    const isMouseOverCanvas: boolean = RenderEngineUtil.isMouseOverCanvas(data);\n    if (isMouseOverCanvas) {\n      if (this.isCreationInProgress()) {\n        const isMouseOverStartAnchor: boolean = this.isMouseOverAnchor(data.mousePositionOnCanvas, this.activePath[0]);\n        if (isMouseOverStartAnchor) {\n          this.addLabelAndFinishCreation(data);\n        } else {\n          this.updateActivelyCreatedLabel(data);\n        }\n      } else {\n        const polygonUnderMouse: LabelPolygon = this.getPolygonUnderMouse(data);\n        if (!!polygonUnderMouse) {\n          const anchorIndex: number = polygonUnderMouse.vertices.reduce(\n            (indexUnderMouse: number, anchor: IPoint, index: number) => {\n              if (indexUnderMouse === null) {\n                const anchorOnCanvas: IPoint = RenderEngineUtil.transferPointFromImageToCanvas(anchor, data);\n                if (this.isMouseOverAnchor(data.mousePositionOnCanvas, anchorOnCanvas)) {\n                  return index;\n                }\n              }\n              return indexUnderMouse;\n            },\n            null\n          );\n\n          if (anchorIndex !== null) {\n            this.startExistingLabelResize(data, polygonUnderMouse.id, anchorIndex);\n          } else {\n            const isMouseOverNewAnchor: boolean = this.isMouseOverAnchor(\n              data.mousePositionOnCanvas,\n              this.suggestedAnchorPositionOnCanvas\n            );\n            if (isMouseOverNewAnchor) {\n              store.dispatch(updateActiveLabelId(polygonUnderMouse.id));\n              this.addSuggestedAnchorToPolygonLabel(data);\n            } else {\n              this.updateActivelyCreatedLabel(data);\n            }\n          }\n        } else {\n          this.updateActivelyCreatedLabel(data);\n        }\n      }\n    }\n  }\n\n  public mouseUpHandler(data: EditorData): void {\n    if (this.isResizeInProgress()) this.endExistingLabelResize(data);\n  }\n\n  public mouseMoveHandler(data: EditorData): void {\n    if (!!data.activeImageRectOnCanvas && !!data.mousePositionOnCanvas) {\n      const isOverImage: boolean = RenderEngineUtil.isMouseOverImage(data);\n      if (isOverImage && !this.isCreationInProgress()) {\n        const labelPolygon: LabelPolygon = this.getPolygonUnderMouse(data);\n        if (!!labelPolygon && !this.isResizeInProgress()) {\n          if (EditorSelector.getHighlightedLabelId() !== labelPolygon.id) {\n            store.dispatch(updateHighlightedLabelId(labelPolygon.id));\n          }\n          const pathOnCanvas: IPoint[] = RenderEngineUtil.transferPolygonFromImageToCanvas(labelPolygon.vertices, data);\n          const linesOnCanvas: ILine[] = this.mapPointsToLines(pathOnCanvas.concat(pathOnCanvas[0]));\n\n          for (let j = 0; j < linesOnCanvas.length; j++) {\n            if (this.isMouseOverLine(data.mousePositionOnCanvas, linesOnCanvas[j])) {\n              this.suggestedAnchorPositionOnCanvas = LineUtil.getCenter(linesOnCanvas[j]);\n              this.suggestedAnchorIndexInPolygon = j + 1;\n              break;\n            }\n          }\n        } else {\n          if (EditorSelector.getHighlightedLabelId() !== null) {\n            store.dispatch(updateHighlightedLabelId(null));\n            this.discardSuggestedPoint();\n          }\n        }\n      }\n    }\n  }\n\n  // =================================================================================================================\n  // RENDERING\n  // =================================================================================================================\n\n  public render(data: EditorData): void {\n    const imageData: ImageData = EditorSelector.getActiveImageData();\n    if (imageData) {\n      this.drawExistingLabels(data);\n      this.drawActivelyCreatedLabel(data);\n      this.drawActivelyResizeLabel(data);\n      this.updateCursorStyle(data);\n      this.drawSuggestedAnchor(data);\n    }\n  }\n\n  private updateCursorStyle(data: EditorData) {\n    if (!!this.canvas && !!data.mousePositionOnCanvas) {\n      const isMouseOverCanvas: boolean = RenderEngineUtil.isMouseOverCanvas(data);\n      if (isMouseOverCanvas) {\n        if (this.isCreationInProgress()) {\n          const isMouseOverStartAnchor: boolean = this.isMouseOverAnchor(\n            data.mousePositionOnCanvas,\n            this.activePath[0]\n          );\n          if (isMouseOverStartAnchor && this.activePath.length > 2)\n            store.dispatch(updateCustomCursorStyle(CustomCursorStyle.CLOSE));\n          else store.dispatch(updateCustomCursorStyle(CustomCursorStyle.DEFAULT));\n        } else {\n          const anchorUnderMouse: IPoint = this.getAnchorUnderMouse(data);\n          const isMouseOverNewAnchor: boolean = this.isMouseOverAnchor(\n            data.mousePositionOnCanvas,\n            this.suggestedAnchorPositionOnCanvas\n          );\n          if (!!isMouseOverNewAnchor) {\n            store.dispatch(updateCustomCursorStyle(CustomCursorStyle.ADD));\n          } else if (this.isResizeInProgress()) {\n            store.dispatch(updateCustomCursorStyle(CustomCursorStyle.MOVE));\n          } else if (!!anchorUnderMouse) {\n            store.dispatch(updateCustomCursorStyle(CustomCursorStyle.MOVE));\n          } else {\n            RenderEngineUtil.wrapDefaultCursorStyleInCancel(data);\n          }\n        }\n        this.canvas.style.cursor = \"none\";\n      } else {\n        this.canvas.style.cursor = \"default\";\n      }\n    }\n  }\n\n  private drawActivelyCreatedLabel(data: EditorData) {\n    const standardizedPoints: IPoint[] = this.activePath.map((point: IPoint) =>\n      RenderEngineUtil.setPointBetweenPixels(point)\n    );\n    const path = standardizedPoints.concat(data.mousePositionOnCanvas);\n    const lines: ILine[] = this.mapPointsToLines(path);\n\n    DrawUtil.drawPolygonWithFill(this.canvas, path, DrawUtil.hexToRGB(this.config.lineActiveColor, 0.2));\n    lines.forEach((line: ILine) => {\n      DrawUtil.drawLine(this.canvas, line.start, line.end, this.config.lineActiveColor, this.config.lineThickness);\n    });\n    this.mapPointsToAnchors(standardizedPoints).forEach((handleRect: IRect) => {\n      DrawUtil.drawRectWithFill(this.canvas, handleRect, this.config.activeAnchorColor);\n    });\n  }\n\n  private drawActivelyResizeLabel(data: EditorData) {\n    const activeLabelPolygon: LabelPolygon = EditorSelector.getActivePolygonLabel();\n    if (!!activeLabelPolygon && this.isResizeInProgress()) {\n      const snappedMousePosition: IPoint = RectUtil.snapPointToRect(\n        data.mousePositionOnCanvas,\n        data.activeImageRectOnCanvas\n      );\n      const polygonOnCanvas: IPoint[] = activeLabelPolygon.vertices.map((point: IPoint, index: number) => {\n        return index === this.resizeAnchorIndex\n          ? snappedMousePosition\n          : RenderEngineUtil.transferPointFromImageToCanvas(point, data);\n      });\n      this.drawPolygon(polygonOnCanvas, true);\n    }\n  }\n\n  private drawExistingLabels(data: EditorData) {\n    const activeLabelId: string = EditorSelector.getActiveLabelId();\n    const highlightedLabelId: string = EditorSelector.getHighlightedLabelId();\n    const imageData: ImageData = EditorSelector.getActiveImageData();\n    const activeGroupIndex = EditorSelector.getActiveGroupIndex();\n\n    imageData.groupList[activeGroupIndex].labelPolygons.forEach((labelPolygon: LabelPolygon) => {\n      const isActive: boolean = labelPolygon.id === activeLabelId || labelPolygon.id === highlightedLabelId;\n      const pathOnCanvas: IPoint[] = RenderEngineUtil.transferPolygonFromImageToCanvas(labelPolygon.vertices, data);\n      if (!(labelPolygon.id === activeLabelId && this.isResizeInProgress())) {\n        this.drawPolygon(pathOnCanvas, isActive);\n      }\n    });\n  }\n\n  private drawPolygon(polygon: IPoint[], isActive: boolean) {\n    const color: string = isActive ? this.config.lineActiveColor : this.config.lineInactiveColor;\n    const standardizedPoints: IPoint[] = polygon.map((point: IPoint) => RenderEngineUtil.setPointBetweenPixels(point));\n    if (isActive) {\n      DrawUtil.drawPolygonWithFill(this.canvas, standardizedPoints, DrawUtil.hexToRGB(color, 0.2));\n    }\n    DrawUtil.drawPolygon(this.canvas, standardizedPoints, color, this.config.lineThickness);\n    if (isActive) {\n      this.mapPointsToAnchors(standardizedPoints).forEach((handleRect: IRect) => {\n        DrawUtil.drawRectWithFill(this.canvas, handleRect, this.config.activeAnchorColor);\n      });\n    }\n  }\n\n  private drawSuggestedAnchor(data: EditorData) {\n    if (this.suggestedAnchorPositionOnCanvas) {\n      const suggestedAnchorRect: IRect = RectUtil.getRectWithCenterAndSize(\n        this.suggestedAnchorPositionOnCanvas,\n        this.config.suggestedAnchorDetectionSize\n      );\n      const isMouseOverSuggestedAnchor: boolean = RectUtil.isPointInside(\n        suggestedAnchorRect,\n        data.mousePositionOnCanvas\n      );\n\n      if (isMouseOverSuggestedAnchor) {\n        const handleRect = RectUtil.getRectWithCenterAndSize(\n          this.suggestedAnchorPositionOnCanvas,\n          this.config.anchorSize\n        );\n        DrawUtil.drawRectWithFill(this.canvas, handleRect, this.config.lineInactiveColor);\n      }\n    }\n  }\n\n  // =================================================================================================================\n  // CREATION\n  // =================================================================================================================\n\n  private updateActivelyCreatedLabel(data: EditorData) {\n    if (this.isCreationInProgress()) {\n      const mousePositionSnapped: IPoint = RectUtil.snapPointToRect(\n        data.mousePositionOnCanvas,\n        data.activeImageRectOnCanvas\n      );\n      this.activePath.push(mousePositionSnapped);\n    } else {\n      const isMouseOverImage: boolean = RectUtil.isPointInside(\n        data.activeImageRectOnCanvas,\n        data.mousePositionOnCanvas\n      );\n      if (isMouseOverImage) {\n        this.activePath.push(data.mousePositionOnCanvas);\n        store.dispatch(updateActiveLabelId(null));\n      }\n    }\n  }\n\n  public cancelLabelCreation() {\n    this.activePath = [];\n  }\n\n  private finishLabelCreation() {\n    this.activePath = [];\n  }\n\n  public addLabelAndFinishCreation(data: EditorData) {\n    if (this.isCreationInProgress() && this.activePath.length > 2) {\n      const polygonOnImage: IPoint[] = RenderEngineUtil.transferPolygonFromCanvasToImage(this.activePath, data);\n      this.addPolygonLabel(polygonOnImage);\n      this.finishLabelCreation();\n    }\n  }\n\n  private addPolygonLabel(polygon: IPoint[]) {\n    const activeLabelIndex = EditorSelector.getActiveLabelNameIndex();\n    const imageData: ImageData = EditorSelector.getActiveImageData();\n    const labelPolygon: LabelPolygon = {\n      id: uuidv1(),\n      labelIndex: activeLabelIndex,\n      checked: false,\n      vertices: polygon,\n    };\n    const activeGroupIndex = EditorSelector.getActiveGroupIndex();\n\n    imageData.groupList[activeGroupIndex].labelPolygons.push(labelPolygon);\n    store.dispatch(updateImageDataById(imageData.id, imageData));\n    store.dispatch(updateFirstLabelCreatedFlag(true));\n    store.dispatch(updateActiveLabelId(labelPolygon.id));\n  }\n\n  // =================================================================================================================\n  // TRANSFER\n  // =================================================================================================================\n\n  private startExistingLabelResize(data: EditorData, labelId: string, anchorIndex: number) {\n    store.dispatch(updateActiveLabelId(labelId));\n    this.resizeAnchorIndex = anchorIndex;\n  }\n\n  private endExistingLabelResize(data: EditorData) {\n    this.applyResizeToPolygonLabel(data);\n    this.resizeAnchorIndex = null;\n  }\n\n  private applyResizeToPolygonLabel(data: EditorData) {\n    const imageData: ImageData = EditorSelector.getActiveImageData();\n    const activeLabel: LabelPolygon = EditorSelector.getActivePolygonLabel();\n    const activeGroupIndex = EditorSelector.getActiveGroupIndex();\n    const newImageData = produce(imageData, draft => {\n      draft.groupList[activeGroupIndex].labelPolygons = imageData.groupList[activeGroupIndex].labelPolygons.map(\n        (polygon: LabelPolygon) => {\n          if (polygon.id !== activeLabel.id) {\n            return polygon;\n          } else {\n            return {\n              ...polygon,\n              vertices: polygon.vertices.map((value: IPoint, index: number) => {\n                if (index !== this.resizeAnchorIndex) {\n                  return value;\n                } else {\n                  const snappedMousePosition: IPoint = RectUtil.snapPointToRect(\n                    data.mousePositionOnCanvas,\n                    data.activeImageRectOnCanvas\n                  );\n                  return RenderEngineUtil.transferPointFromCanvasToImage(snappedMousePosition, data);\n                }\n              }),\n            };\n          }\n        }\n      );\n    });\n\n    store.dispatch(updateImageDataById(imageData.id, newImageData));\n    store.dispatch(updateActiveLabelId(activeLabel.id));\n  }\n\n  private discardSuggestedPoint(): void {\n    this.suggestedAnchorIndexInPolygon = null;\n    this.suggestedAnchorPositionOnCanvas = null;\n  }\n\n  // =================================================================================================================\n  // UPDATE\n  // =================================================================================================================\n\n  private addSuggestedAnchorToPolygonLabel(data: EditorData) {\n    const imageData: ImageData = EditorSelector.getActiveImageData();\n    const activeLabel: LabelPolygon = EditorSelector.getActivePolygonLabel();\n    const newAnchorPositionOnImage: IPoint = RenderEngineUtil.transferPointFromCanvasToImage(\n      this.suggestedAnchorPositionOnCanvas,\n      data\n    );\n    const insert = (arr, index, newItem) => [...arr.slice(0, index), newItem, ...arr.slice(index)];\n    const activeGroupIndex = EditorSelector.getActiveGroupIndex();\n\n    const newImageData: ImageData = produce(imageData, draft => {\n      draft.groupList[imageData.activeGroupIndex].labelPolygons = imageData.groupList[\n        activeGroupIndex\n      ].labelPolygons.map((polygon: LabelPolygon) => {\n        if (polygon.id !== activeLabel.id) {\n          return polygon;\n        } else {\n          return {\n            ...polygon,\n            vertices: insert(polygon.vertices, this.suggestedAnchorIndexInPolygon, newAnchorPositionOnImage),\n          };\n        }\n      });\n    });\n\n    store.dispatch(updateImageDataById(newImageData.id, newImageData));\n    this.startExistingLabelResize(data, activeLabel.id, this.suggestedAnchorIndexInPolygon);\n    this.discardSuggestedPoint();\n  }\n\n  // =================================================================================================================\n  // VALIDATORS\n  // =================================================================================================================\n\n  public isInProgress(): boolean {\n    return this.isCreationInProgress() || this.isResizeInProgress();\n  }\n\n  private isCreationInProgress(): boolean {\n    return this.activePath !== null && this.activePath.length !== 0;\n  }\n\n  private isResizeInProgress(): boolean {\n    return this.resizeAnchorIndex !== null;\n  }\n\n  private isMouseOverAnchor(mouse: IPoint, anchor: IPoint): boolean {\n    if (!mouse || !anchor) return null;\n    return RectUtil.isPointInside(RectUtil.getRectWithCenterAndSize(anchor, this.config.anchorSize), mouse);\n  }\n\n  private isMouseOverLine(mouse: IPoint, l: ILine): boolean {\n    const hoverReach: number = this.config.anchorHoverSize.width / 2;\n    const minX: number = Math.min(l.start.x, l.end.x);\n    const maxX: number = Math.max(l.start.x, l.end.x);\n    const minY: number = Math.min(l.start.y, l.end.y);\n    const maxY: number = Math.max(l.start.y, l.end.y);\n\n    return (\n      minX - hoverReach <= mouse.x &&\n      maxX + hoverReach >= mouse.x &&\n      (minY - hoverReach <= mouse.y && maxY + hoverReach >= mouse.y) &&\n      LineUtil.getDistanceFromLine(l, mouse) < hoverReach\n    );\n  }\n\n  // =================================================================================================================\n  // MAPPERS\n  // =================================================================================================================\n\n  private mapPointsToLines(points: IPoint[]): ILine[] {\n    const lines: ILine[] = [];\n    for (let i = 0; i < points.length - 1; i++) {\n      lines.push({ start: points[i], end: points[i + 1] });\n    }\n    return lines;\n  }\n\n  private mapPointsToAnchors(points: IPoint[]): IRect[] {\n    return points.map((point: IPoint) => RectUtil.getRectWithCenterAndSize(point, this.config.anchorSize));\n  }\n\n  // =================================================================================================================\n  // GETTERS\n  // =================================================================================================================\n\n  private getPolygonUnderMouse(data: EditorData): LabelPolygon {\n    const activeGroupIndex = EditorSelector.getActiveGroupIndex();\n    const labelPolygons: LabelPolygon[] = EditorSelector.getActiveImageData().groupList[activeGroupIndex].labelPolygons;\n    for (let i = 0; i < labelPolygons.length; i++) {\n      const pathOnCanvas: IPoint[] = RenderEngineUtil.transferPolygonFromImageToCanvas(labelPolygons[i].vertices, data);\n      const linesOnCanvas: ILine[] = this.mapPointsToLines(pathOnCanvas.concat(pathOnCanvas[0]));\n\n      for (let j = 0; j < linesOnCanvas.length; j++) {\n        if (this.isMouseOverLine(data.mousePositionOnCanvas, linesOnCanvas[j])) return labelPolygons[i];\n      }\n      for (let j = 0; j < pathOnCanvas.length; j++) {\n        if (this.isMouseOverAnchor(data.mousePositionOnCanvas, pathOnCanvas[j])) return labelPolygons[i];\n      }\n    }\n    return null;\n  }\n\n  private getAnchorUnderMouse(data: EditorData): IPoint {\n    const activeGroupIndex = EditorSelector.getActiveGroupIndex();\n\n    const labelPolygons: LabelPolygon[] = EditorSelector.getActiveImageData().groupList[activeGroupIndex].labelPolygons;\n    for (let i = 0; i < labelPolygons.length; i++) {\n      const pathOnCanvas: IPoint[] = RenderEngineUtil.transferPolygonFromImageToCanvas(labelPolygons[i].vertices, data);\n      for (let j = 0; j < pathOnCanvas.length; j++) {\n        if (this.isMouseOverAnchor(data.mousePositionOnCanvas, pathOnCanvas[j])) return pathOnCanvas[j];\n      }\n    }\n    return null;\n  }\n}\n","import {IRect} from \"../../interfaces/IRect\";\nimport {BaseRenderEngine} from \"./BaseRenderEngine\";\nimport {EditorData} from \"../../data/EditorData\";\n\nexport class PrimaryEditorRenderEngine extends BaseRenderEngine {\n\n    public constructor(canvas: HTMLCanvasElement) {\n        super(canvas);\n    }\n\n    // =================================================================================================================\n    // EVENT HANDLERS\n    // =================================================================================================================\n\n    public mouseMoveHandler(data: EditorData): void {}\n    public mouseDownHandler(data: EditorData): void {}\n    public mouseUpHandler(data: EditorData): void {}\n\n    // =================================================================================================================\n    // RENDERING\n    // =================================================================================================================\n\n    public render(data: EditorData): void {}\n\n    public drawImage(image: HTMLImageElement, imageRect: IRect) {\n        if (!!image && !!this.canvas) {\n            const ctx = this.canvas.getContext(\"2d\");\n            ctx.drawImage(image, imageRect.x, imageRect.y, imageRect.width, imageRect.height);\n        }\n    }\n\n    isInProgress(): boolean {\n        return false;\n    }\n}","import { LabelType } from \"../../data/enums/LabelType\";\nimport { EditorModel } from \"../../staticModels/EditorModel\";\nimport { RectRenderEngine } from \"../render/RectRenderEngine\";\nimport { PointRenderEngine } from \"../render/PointRenderEngine\";\nimport { PolygonRenderEngine } from \"../render/PolygonRenderEngine\";\nimport { IRect } from \"../../interfaces/IRect\";\nimport { Settings } from \"../../settings/Settings\";\nimport { RectUtil } from \"../../utils/RectUtil\";\nimport { EditorData } from \"../../data/EditorData\";\nimport { CanvasUtil } from \"../../utils/CanvasUtil\";\nimport { ISize } from \"../../interfaces/ISize\";\nimport React from \"react\";\nimport { IPoint } from \"../../interfaces/IPoint\";\nimport { DrawUtil } from \"../../utils/DrawUtil\";\nimport { PrimaryEditorRenderEngine } from \"../render/PrimaryEditorRenderEngine\";\nimport { ContextManager } from \"../context/ContextManager\";\n\nexport class EditorActions {\n  // =================================================================================================================\n  // RENDER ENGINES\n  // =================================================================================================================\n\n  public static mountSupportRenderingEngine(activeLabelType: LabelType) {\n    switch (activeLabelType) {\n      case LabelType.RECTANGLE:\n        EditorModel.supportRenderingEngine = new RectRenderEngine(EditorModel.canvas);\n        break;\n      case LabelType.POINT:\n        EditorModel.supportRenderingEngine = new PointRenderEngine(EditorModel.canvas);\n        break;\n      case LabelType.POLYGON:\n        EditorModel.supportRenderingEngine = new PolygonRenderEngine(EditorModel.canvas);\n        break;\n      default:\n        EditorModel.supportRenderingEngine = null;\n        break;\n    }\n  }\n\n  public static swapSupportRenderingEngine(activeLabelType: LabelType) {\n    EditorActions.mountSupportRenderingEngine(activeLabelType);\n  }\n\n  public static mountRenderEngines(activeLabelType: LabelType) {\n    EditorModel.primaryRenderingEngine = new PrimaryEditorRenderEngine(EditorModel.canvas);\n    EditorActions.mountSupportRenderingEngine(activeLabelType);\n  }\n\n  // =================================================================================================================\n  // RENDER\n  // =================================================================================================================\n\n  public static fullRender() {\n    DrawUtil.clearCanvas(EditorModel.canvas);\n    EditorModel.primaryRenderingEngine.drawImage(EditorModel.image, EditorModel.imageRectOnCanvas);\n    EditorModel.primaryRenderingEngine.render(EditorActions.getEditorData());\n    EditorModel.supportRenderingEngine && EditorModel.supportRenderingEngine.render(EditorActions.getEditorData());\n  }\n\n  // =================================================================================================================\n  // SETTERS\n  // =================================================================================================================\n\n  public static setLoadingStatus(status: boolean) {\n    EditorModel.isLoading = status;\n  }\n\n  public static setActiveImage(image: HTMLImageElement) {\n    EditorModel.image = image;\n  }\n\n  // =================================================================================================================\n  // GETTERS\n  // =================================================================================================================\n\n  public static getEditorData(event?: Event): EditorData {\n    return {\n      mousePositionOnCanvas: EditorModel.mousePositionOnCanvas,\n      canvasSize: CanvasUtil.getSize(EditorModel.canvas),\n      activeImageScale: EditorModel.imageScale,\n      activeImageRectOnCanvas: EditorModel.imageRectOnCanvas,\n      activeKeyCombo: ContextManager.getActiveCombo(),\n      event: event,\n    };\n  }\n\n  // =================================================================================================================\n  // CALCULATIONS\n  // =================================================================================================================\n\n  public static calculateImageRect(image: HTMLImageElement): IRect | null {\n    if (!!image) {\n      const canvasPaddingWidth: number = Settings.CANVAS_PADDING_WIDTH_PX;\n      const imageRect: IRect = { x: 0, y: 0, width: image.width, height: image.height };\n      const canvasRect: IRect = {\n        x: canvasPaddingWidth,\n        y: canvasPaddingWidth,\n        width: EditorModel.canvas.width - 2 * canvasPaddingWidth,\n        height: EditorModel.canvas.height - 2 * canvasPaddingWidth,\n      };\n      return RectUtil.fitInsideRectWithRatio(canvasRect, RectUtil.getRatio(imageRect));\n    }\n    return null;\n  }\n\n  public static calculateImageScale(image: HTMLImageElement): number | null {\n    if (!image || !EditorModel.imageRectOnCanvas) return null;\n\n    return image.width / EditorModel.imageRectOnCanvas.width;\n  }\n\n  // =================================================================================================================\n  // HELPERS\n  // =================================================================================================================\n\n  public static calculateAllCharacteristics() {\n    EditorModel.imageRectOnCanvas = EditorActions.calculateImageRect(EditorModel.image);\n    EditorModel.imageScale = EditorActions.calculateImageScale(EditorModel.image);\n  }\n\n  public static resizeCanvas = (newCanvasSize: ISize) => {\n    if (!!newCanvasSize && !!EditorModel.canvas) {\n      EditorModel.canvas.width = newCanvasSize.width;\n      EditorModel.canvas.height = newCanvasSize.height;\n    }\n  };\n\n  public static updateMousePositionIndicator(event: React.MouseEvent<HTMLCanvasElement, MouseEvent> | MouseEvent) {\n    if (!EditorModel.imageRectOnCanvas || !EditorModel.canvas) {\n      EditorModel.mousePositionIndicator.style.display = \"none\";\n      EditorModel.cursor.style.display = \"none\";\n      return;\n    }\n\n    const mousePositionOnCanvas: IPoint = CanvasUtil.getMousePositionOnCanvasFromEvent(event, EditorModel.canvas);\n    const canvasRect: IRect = { x: 0, y: 0, ...CanvasUtil.getSize(EditorModel.canvas) };\n    const isOverCanvas: boolean = RectUtil.isPointInside(canvasRect, mousePositionOnCanvas);\n\n    if (!isOverCanvas) {\n      EditorModel.mousePositionIndicator.style.display = \"none\";\n      EditorModel.cursor.style.display = \"none\";\n      return;\n    }\n\n    const isOverImage: boolean = RectUtil.isPointInside(EditorModel.imageRectOnCanvas, mousePositionOnCanvas);\n\n    if (isOverImage) {\n      const scale = EditorModel.imageScale;\n      const x: number = Math.round((mousePositionOnCanvas.x - EditorModel.imageRectOnCanvas.x) * scale);\n      const y: number = Math.round((mousePositionOnCanvas.y - EditorModel.imageRectOnCanvas.y) * scale);\n      const text: string = \"x: \" + x + \", y: \" + y;\n\n      EditorModel.mousePositionIndicator.innerHTML = text;\n      EditorModel.mousePositionIndicator.style.left = mousePositionOnCanvas.x + 15 + \"px\";\n      EditorModel.mousePositionIndicator.style.top = mousePositionOnCanvas.y + 15 + \"px\";\n      EditorModel.mousePositionIndicator.style.display = \"block\";\n    } else {\n      EditorModel.mousePositionIndicator.style.display = \"none\";\n    }\n\n    EditorModel.cursor.style.left = mousePositionOnCanvas.x + \"px\";\n    EditorModel.cursor.style.top = mousePositionOnCanvas.y + \"px\";\n    EditorModel.cursor.style.display = \"block\";\n  }\n}\n","import {HotKeyAction} from \"../../data/HotKeyAction\";\n\nexport class BaseContext {\n    public static actions: HotKeyAction[] = [];\n\n    public static getActions(): HotKeyAction[] {\n        return this.actions;\n    }\n}","import {MobileDeviceData} from \"../data/MobileDeviceData\";\n\nexport class PlatformModel {\n    public static mobileDeviceData: MobileDeviceData;\n    public static isMac: boolean;\n    public static isSafari: boolean;\n    public static isFirefox: boolean;\n}","import {EditorSelector} from \"../../store/selectors/EditorSelector\";\nimport {store} from \"../../index\";\nimport {updateActiveImageIndex} from \"../../store/editor/actionCreators\";\n\nexport class ImageActions {\n    public static getPreviousImage(): void {\n        const currentImageIndex: number = EditorSelector.getActiveImageIndex();\n        store.dispatch(updateActiveImageIndex(currentImageIndex - 1));\n    }\n\n    public static getNextImage(): void {\n        const currentImageIndex: number = EditorSelector.getActiveImageIndex();\n        store.dispatch(updateActiveImageIndex(currentImageIndex + 1));\n    }\n\n    public static getImageByIndex(index: number): void {\n        const imageCount: number = EditorSelector.getImagesData().length;\n\n        if (index < 0 || index > imageCount - 1)\n            return;\n        else\n            store.dispatch(updateActiveImageIndex(index));\n    }\n}","import {HotKeyAction} from \"../../data/HotKeyAction\";\nimport {EditorModel} from \"../../staticModels/EditorModel\";\nimport {LabelType} from \"../../data/enums/LabelType\";\nimport {EditorData} from \"../../data/EditorData\";\nimport {EditorActions} from \"../actions/EditorActions\";\nimport {PolygonRenderEngine} from \"../render/PolygonRenderEngine\";\nimport {BaseContext} from \"./BaseContext\";\nimport {PlatformModel} from \"../../staticModels/PlatformModel\";\nimport {ImageActions} from \"../actions/ImageActions\";\n\nexport class EditorContext extends BaseContext {\n    public static actions: HotKeyAction[] = [\n        {\n            keyCombo: [\"Enter\"],\n            action: (event: KeyboardEvent) => {\n                if (EditorModel.supportRenderingEngine && EditorModel.supportRenderingEngine.labelType === LabelType.POLYGON) {\n                    const editorData: EditorData = EditorActions.getEditorData();\n                    (EditorModel.supportRenderingEngine as PolygonRenderEngine).addLabelAndFinishCreation(editorData);\n                }\n                EditorActions.fullRender();\n            }\n        },\n        {\n            keyCombo: [\"Escape\"],\n            action: (event: KeyboardEvent) => {\n                if (EditorModel.supportRenderingEngine && EditorModel.supportRenderingEngine.labelType === LabelType.POLYGON)\n                    (EditorModel.supportRenderingEngine as PolygonRenderEngine).cancelLabelCreation();\n                EditorActions.fullRender();\n            }\n        },\n        {\n            keyCombo: PlatformModel.isMac ? [\"Meta\", \"ArrowLeft\"] : [\"Control\", \"ArrowLeft\"],\n            action: (event: KeyboardEvent) => {\n                ImageActions.getPreviousImage()\n            }\n        },\n        {\n            keyCombo: PlatformModel.isMac ? [\"Meta\", \"ArrowRight\"] : [\"Control\", \"ArrowRight\"],\n            action: (event: KeyboardEvent) => {\n                ImageActions.getNextImage();\n            }\n        }\n    ];\n}","import {store} from \"../..\";\nimport {PopupWindowType} from \"../../data/enums/PopupWindowType\";\nimport {ContextType} from \"../../data/enums/ContextType\";\n\nexport class GeneralSelector {\n    public static getActivePopupType(): PopupWindowType {\n        return store.getState().general.activePopupType;\n    }\n\n    public static getActiveContext(): ContextType {\n        return store.getState().general.activeContext;\n    }\n}","import {ContextManager} from \"../context/ContextManager\";\nimport {store} from \"../../index\";\nimport {updateActivePopupType} from \"../../store/general/actionCreators\";\n\nexport class PopupActions {\n    public static close() {\n        store.dispatch(updateActivePopupType(null));\n        ContextManager.restoreCtx();\n    }\n}","import {HotKeyAction} from \"../../data/HotKeyAction\";\nimport {PopupWindowType} from \"../../data/enums/PopupWindowType\";\nimport {GeneralSelector} from \"../../store/selectors/GeneralSelector\";\nimport {BaseContext} from \"./BaseContext\";\nimport {PopupActions} from \"../actions/PopupActions\";\nimport {Settings} from \"../../settings/Settings\";\n\nexport class PopupContext extends BaseContext {\n    public static actions: HotKeyAction[] = [\n        {\n            keyCombo: [\"Escape\"],\n            action: (event: KeyboardEvent) => {\n                const popupType: PopupWindowType = GeneralSelector.getActivePopupType();\n                const canBeClosed: boolean = Settings.CLOSEABLE_POPUPS.includes(popupType);\n                if (canBeClosed) {\n                    PopupActions.close();\n                }\n            }\n        }\n    ];\n}","import {ContextType} from \"../../data/enums/ContextType\";\nimport {HotKeyAction} from \"../../data/HotKeyAction\";\nimport {store} from \"../../index\";\nimport {updateActiveContext} from \"../../store/general/actionCreators\";\nimport * as _ from \"lodash\";\nimport {EditorContext} from \"./EditorContext\";\nimport {PopupContext} from \"./PopupContext\";\nimport {GeneralSelector} from \"../../store/selectors/GeneralSelector\";\n\nexport class ContextManager {\n    private static activeCombo: string[] = [];\n    private static actions: HotKeyAction[] = [];\n    private static contextHistory: ContextType[] = [];\n\n    public static getActiveCombo(): string[] {\n        return ContextManager.activeCombo;\n    }\n\n    public static init(): void {\n        window.addEventListener(\"keydown\", ContextManager.onDown);\n        window.addEventListener(\"keyup\", ContextManager.onUp);\n    }\n\n    public static switchCtx(context: ContextType): void {\n        const activeCtx: ContextType = GeneralSelector.getActiveContext();\n\n        if (activeCtx !== context) {\n            ContextManager.contextHistory.push(activeCtx);\n            ContextManager.updateCtx(context);\n        }\n    }\n\n    private static updateCtx(context: ContextType): void {\n        store.dispatch(updateActiveContext(context));\n        switch (context) {\n            case ContextType.EDITOR:\n                ContextManager.actions = EditorContext.getActions();\n                break;\n            case ContextType.POPUP:\n                ContextManager.actions = PopupContext.getActions();\n                break;\n            default:\n                ContextManager.actions = [];\n        }\n    }\n\n    public static restoreCtx(): void {\n        ContextManager.updateCtx(ContextManager.contextHistory.pop());\n    }\n\n    private static onDown(event: KeyboardEvent): void {\n        const keyCode: string = ContextManager.getKeyCodeFromEvent(event);\n        if (!ContextManager.isInCombo(keyCode)) {\n            ContextManager.addToCombo(keyCode);\n            ContextManager.execute(event);\n        }\n    }\n\n    private static onUp(event: KeyboardEvent): void {\n        const keyCode: string = ContextManager.getKeyCodeFromEvent(event);\n        ContextManager.removeFromCombo(keyCode);\n    }\n\n    private static execute(event: KeyboardEvent): void {\n        for (let i = 0; i < ContextManager.actions.length; i++) {\n            const hotKey: HotKeyAction = ContextManager.actions[i];\n            if (ContextManager.matchCombo(ContextManager.activeCombo, hotKey.keyCombo)) {\n                hotKey.action(event);\n            }\n        }\n    }\n\n    private static isInCombo(keyCode: string): boolean {\n        return ContextManager.activeCombo.indexOf(keyCode) >= 0;\n    }\n\n    private static addToCombo(keyCode: string): void {\n        ContextManager.activeCombo.push(keyCode);\n    }\n\n    private static removeFromCombo(keyCode: string): void {\n        const index: number = ContextManager.activeCombo.indexOf(keyCode);\n        if (index >= 0) {\n            ContextManager.activeCombo.splice(index, 1);\n        }\n    }\n\n    private static getKeyCodeFromEvent(event: KeyboardEvent): string {\n        return event.key;\n    }\n\n    private static matchCombo(combo1: string[], combo2: string[]): boolean {\n        return _.isEmpty(_.xor(combo1, combo2))\n    }\n}","export enum ProjectType {\n    IMAGE_RECOGNITION = \"IMAGE_RECOGNITION\",\n    OBJECT_DETECTION = \"OBJECT_DETECTION\"\n}","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { LabelType } from \"../../../../data/enums/LabelType\";\nimport { ISize } from \"../../../../interfaces/ISize\";\nimport { AppState } from \"../../../../store\";\nimport { updateActiveImageIndex, updateActiveLabelId } from \"../../../../store/editor/actionCreators\";\nimport { ImageData } from \"../../../../store/editor/types\";\nimport { VirtualList } from \"../../../Common/VirtualList/VirtualList\";\nimport ImagePreview from \"../ImagePreview/ImagePreview\";\nimport \"./ImagesList.scss\";\nimport { ContextManager } from \"../../../../logic/context/ContextManager\";\nimport { ContextType } from \"../../../../data/enums/ContextType\";\nimport { EditorSelector } from \"../../../../store/selectors/EditorSelector\";\n\ninterface IProps {\n  activeImageIndex: number;\n  imagesData: ImageData[];\n  updateActiveImageIndex: (activeImageIndex: number) => any;\n  updateActiveLabelId: (activeLabelId: string) => any;\n  activeLabelType: LabelType;\n}\n\ninterface IState {\n  size: ISize;\n}\n\nclass ImagesList extends React.Component<IProps, IState> {\n  private imagesListRef: HTMLDivElement;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      size: null,\n    };\n  }\n\n  public componentDidMount(): void {\n    this.updateListSize();\n    window.addEventListener(\"resize\", this.updateListSize);\n  }\n\n  public componentWillUnmount(): void {\n    window.removeEventListener(\"resize\", this.updateListSize);\n  }\n\n  private updateListSize = () => {\n    if (!this.imagesListRef) return;\n\n    const listBoundingBox = this.imagesListRef.getBoundingClientRect();\n    this.setState({\n      size: {\n        width: listBoundingBox.width,\n        height: listBoundingBox.height,\n      },\n    });\n  };\n\n  private onClickHandler = (index: number) => {\n    this.props.updateActiveImageIndex(index);\n    this.props.updateActiveLabelId(null);\n  };\n\n  private renderImagePreview = (\n    index: number,\n    isScrolling: boolean,\n    isVisible: boolean,\n    style: React.CSSProperties\n  ) => {\n    return (\n      <ImagePreview\n        key={index}\n        style={style}\n        size={{ width: 150, height: 150 }}\n        isScrolling={isScrolling}\n        isChecked={\n          this.props.imagesData[index].groupList.some(item => item.labelRects.length > 0) ||\n          this.props.imagesData[index].groupList.some(item => item.labelPoints.length > 0) ||\n          this.props.imagesData[index].groupList.some(item => item.labelPolygons.length > 0)\n        }\n        imageData={this.props.imagesData[index]}\n        onClick={() => this.onClickHandler(index)}\n        isSelected={this.props.activeImageIndex === index}\n      />\n    );\n  };\n\n  public render() {\n    const { size } = this.state;\n    return (\n      <div\n        className=\"ImagesList\"\n        ref={ref => (this.imagesListRef = ref)}\n        onClick={() => ContextManager.switchCtx(ContextType.LEFT_NAVBAR)}\n      >\n        {!!size && (\n          <VirtualList\n            size={size}\n            childSize={{ width: 150, height: 150 }}\n            childCount={this.props.imagesData.length}\n            childRender={this.renderImagePreview}\n            overScanHeight={200}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  updateActiveImageIndex,\n  updateActiveLabelId,\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  activeImageIndex: state.editor.activeImageIndex,\n  imagesData: state.editor.imagesData,\n  activeLabelType:\n    state.editor.imagesData[EditorSelector.getActiveImageIndex()].groupList[EditorSelector.getActiveGroupIndex()]\n      .activeLabelType,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ImagesList);\n","import { LabelType } from \"../enums/LabelType\";\n\nexport interface ILabelToolkit {\n  labelType: LabelType;\n  headerText: string;\n  imageSrc: string;\n  imageAlt: string;\n}\n\nexport const LabelToolkitData: ILabelToolkit[] = [\n  {\n    labelType: LabelType.NAME,\n    headerText: \"图像识别\",\n    imageSrc: \"ico/object.png\",\n    imageAlt: \"object\",\n  },\n  {\n    labelType: LabelType.RECTANGLE,\n    headerText: \"矩形\",\n    imageSrc: \"ico/rectangle.png\",\n    imageAlt: \"rectangle\",\n  },\n  {\n    labelType: LabelType.POINT,\n    headerText: \"点\",\n    imageSrc: \"ico/point.png\",\n    imageAlt: \"point\",\n  },\n  {\n    labelType: LabelType.POLYGON,\n    headerText: \"多边形\",\n    imageSrc: \"ico/polygon.png\",\n    imageAlt: \"polygon\",\n  },\n];\n","import * as React from 'react';\nimport {ISize} from \"../../../interfaces/ISize\";\nimport './ImageButton.scss';\nimport classNames from \"classnames\";\n\ninterface Props {\n    size:ISize,\n    padding?:number;\n    image:string,\n    imageAlt:string,\n    href?:string\n    onClick?:() => any;\n    style?:React.CSSProperties\n    isActive?:boolean;\n    isDisabled?:boolean;\n    externalClassName?:string;\n}\n\nexport const ImageButton = (props:Props) => {\n    const {size, padding, image, imageAlt, href, onClick, style, isActive, isDisabled, externalClassName} = props;\n    const imagePadding:number = !!padding ? padding : 10;\n\n    const onClickHandler = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n        event.stopPropagation();\n        !!onClick && onClick();\n    };\n\n    const buttonStyle:React.CSSProperties = {\n        ...style,\n        width: size.width,\n        height: size.height\n    };\n\n    const imageStyle:React.CSSProperties = {\n        maxWidth: size.width - imagePadding,\n        maxHeight: size.height - imagePadding\n    };\n\n    const getClassName = () => {\n        return classNames(\n            \"ImageButton\",\n            externalClassName,\n            {\n                \"active\": isActive,\n                \"disabled\": isDisabled,\n            }\n        );\n    };\n    \n    return(\n        <div className={getClassName()} style={buttonStyle} onClick={onClickHandler}>\n            {!!href && <a href={href} style={imageStyle} target=\"_blank\" rel=\"noopener noreferrer\">\n                <img\n                    draggable={false}\n                    alt={imageAlt}\n                    src={image}\n                    style={imageStyle}\n                />\n            </a>}\n            {!href && <img\n                draggable={false}\n                alt={imageAlt}\n                src={image}\n                style={imageStyle}\n            />}\n        </div>\n    );\n};","import React from \"react\";\nimport { ISize } from \"../../../../interfaces/ISize\";\nimport \"./LabelInputField.scss\";\nimport classNames from \"classnames\";\nimport { ImageButton } from \"../../../Common/ImageButton/ImageButton\";\nimport { IRect } from \"../../../../interfaces/IRect\";\nimport { IPoint } from \"../../../../interfaces/IPoint\";\nimport { RectUtil } from \"../../../../utils/RectUtil\";\nimport { AppState } from \"../../../../store\";\nimport { connect } from \"react-redux\";\nimport { updateActiveLabelId, updateHighlightedLabelId } from \"../../../../store/editor/actionCreators\";\nimport Scrollbars from \"react-custom-scrollbars\";\n\ninterface IProps {\n  size: ISize;\n  isActive: boolean;\n  isHighlighted: boolean;\n  id: string;\n  value: string;\n  checked: boolean;\n  options: string[];\n  onDelete: (id: string) => any;\n  onCheck: (id: string) => any;\n  onSelectLabel: (labelRectId: string, labelNameIndex: number) => any;\n  updateHighlightedLabelId: (highlightedLabelId: string) => any;\n  updateActiveLabelId: (highlightedLabelId: string) => any;\n}\n\ninterface IState {\n  animate: boolean;\n  isOpen: boolean;\n}\n\nclass LabelInputField extends React.Component<IProps, IState> {\n  private dropdownOptionHeight: number = 30;\n  private dropdownOptionCount: number = 6;\n  private dropdownMargin: number = 4;\n  private dropdownLabel: HTMLDivElement;\n  private dropdown: HTMLDivElement;\n\n  public constructor(props) {\n    super(props);\n    this.state = {\n      animate: false,\n      isOpen: false,\n    };\n  }\n\n  public componentDidMount(): void {\n    requestAnimationFrame(() => {\n      this.setState({ animate: true });\n    });\n  }\n\n  private getClassName() {\n    return classNames(\"LabelInputField\", {\n      loaded: this.state.animate,\n      active: this.props.isActive,\n      highlighted: this.props.isHighlighted,\n    });\n  }\n\n  private openDropdown = () => {\n    this.setState({ isOpen: true });\n    window.addEventListener(\"mousedown\", this.closeDropdown);\n  };\n\n  private closeDropdown = (event: MouseEvent) => {\n    const mousePosition: IPoint = { x: event.clientX, y: event.clientY };\n    const clientRect = this.dropdown.getBoundingClientRect();\n    const dropDownRect: IRect = {\n      x: clientRect.left,\n      y: clientRect.top,\n      width: clientRect.width,\n      height: clientRect.height,\n    };\n\n    if (!RectUtil.isPointInside(dropDownRect, mousePosition)) {\n      this.setState({ isOpen: false });\n      window.removeEventListener(\"mousedown\", this.closeDropdown);\n    }\n  };\n\n  private getDropdownStyle = (): React.CSSProperties => {\n    const clientRect = this.dropdownLabel.getBoundingClientRect();\n    const height: number = Math.min(this.props.options.length, this.dropdownOptionCount) * this.dropdownOptionHeight;\n    const style = {\n      width: clientRect.width,\n      height: height,\n      left: clientRect.left,\n    };\n\n    if ((window.innerHeight * 2) / 3 < clientRect.top)\n      return Object.assign(style, { top: clientRect.top - this.dropdownMargin - height });\n    else return Object.assign(style, { top: clientRect.bottom + this.dropdownMargin });\n  };\n\n  private getDropdownOptions = () => {\n    const onClick = (index: number, event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n      this.setState({ isOpen: false });\n      window.removeEventListener(\"mousedown\", this.closeDropdown);\n      this.props.onSelectLabel(this.props.id, index);\n      this.props.updateHighlightedLabelId(null);\n      this.props.updateActiveLabelId(this.props.id);\n      event.stopPropagation();\n    };\n\n    return this.props.options.map((option: string, index: number) => {\n      return (\n        <div\n          className=\"DropdownOption\"\n          key={option}\n          style={{ height: this.dropdownOptionHeight }}\n          onClick={event => onClick(index, event)}\n        >\n          {option}\n        </div>\n      );\n    });\n  };\n\n  private mouseEnterHandler = () => {\n    this.props.updateHighlightedLabelId(this.props.id);\n  };\n\n  private mouseLeaveHandler = () => {\n    this.props.updateHighlightedLabelId(null);\n  };\n\n  private onClickHandler = () => {\n    this.props.updateActiveLabelId(this.props.id);\n  };\n\n  public render() {\n    const { size, id, value, onDelete, onCheck, checked } = this.props;\n\n    return (\n      <div\n        className={this.getClassName()}\n        style={{\n          width: size.width,\n          height: size.height,\n        }}\n        key={id}\n        onMouseEnter={this.mouseEnterHandler}\n        onMouseLeave={this.mouseLeaveHandler}\n        onClick={this.onClickHandler}\n      >\n        <div\n          className=\"LabelInputFieldWrapper\"\n          style={{\n            width: size.width,\n            height: size.height,\n          }}\n        >\n          <div className=\"Marker\" />\n          <div className=\"Content\">\n            <div className=\"ContentWrapper\">\n              <div className=\"DropdownLabel\" ref={ref => (this.dropdownLabel = ref)} onClick={this.openDropdown}>\n                {value ? value : \"选择一个标签\"}\n              </div>\n              {this.state.isOpen && (\n                <div className=\"Dropdown\" style={this.getDropdownStyle()} ref={ref => (this.dropdown = ref)}>\n                  <Scrollbars>\n                    <div>{this.getDropdownOptions()}</div>\n                  </Scrollbars>\n                </div>\n              )}\n            </div>\n            <span className=\"describeText\">被遮挡</span>\n            <input type=\"checkbox\" onClick={() => onCheck(id)} checked={checked} onChange={() => {}} />\n\n            <div className=\"ContentWrapper\">\n              <ImageButton\n                externalClassName={\"trash\"}\n                image={\"ico/trash.png\"}\n                imageAlt={\"remove_rect\"}\n                size={{ width: 30, height: 30 }}\n                onClick={() => onDelete(id)}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  updateHighlightedLabelId,\n  updateActiveLabelId,\n};\n\nconst mapStateToProps = (state: AppState) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LabelInputField);\n","import React from \"react\";\nimport \"./EmptyLabelList.scss\";\nimport { AppState } from \"../../../../store\";\nimport { connect } from \"react-redux\";\nimport { EditorSelector } from \"../../../../store/selectors/EditorSelector\";\n\ninterface IProps {\n  firstLabelCreatedFlag: boolean;\n  labelBefore: string;\n  labelAfter: string;\n}\n\nconst EmptyLabelList: React.FC<IProps> = ({ firstLabelCreatedFlag, labelBefore, labelAfter }) => {\n  const before = (\n    <>\n      <img draggable={false} alt={\"lets_start\"} src={\"img/rocket.png\"} />\n      <p className=\"extraBold\">{labelBefore}</p>\n    </>\n  );\n\n  const after = (\n    <>\n      <img draggable={false} alt={\"no_labels\"} src={\"img/box-opened.png\"} />\n      <p className=\"extraBold\">{labelAfter}</p>\n    </>\n  );\n\n  return <div className=\"EmptyLabelList\">{!firstLabelCreatedFlag ? before : after}</div>;\n};\n\nconst mapDispatchToProps = {};\n\nconst mapStateToProps = (state: AppState) => ({\n  firstLabelCreatedFlag: EditorSelector.getFirstLabelCreatedFlag(),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EmptyLabelList);\n","import React from \"react\";\nimport { ISize } from \"../../../../interfaces/ISize\";\nimport Scrollbars from \"react-custom-scrollbars\";\nimport { ImageData, LabelRect } from \"../../../../store/editor/types\";\nimport \"./RectLabelsList.scss\";\nimport {\n  updateActiveLabelId,\n  updateActiveLabelNameIndex,\n  updateImageDataById,\n} from \"../../../../store/editor/actionCreators\";\nimport { AppState } from \"../../../../store\";\nimport { connect } from \"react-redux\";\nimport * as _ from \"lodash\";\nimport LabelInputField from \"../LabelInputField/LabelInputField\";\nimport EmptyLabelList from \"../EmptyLabelList/EmptyLabelList\";\nimport { EditorSelector } from \"../../../../store/selectors/EditorSelector\";\nimport produce from \"immer\";\n\ninterface IProps {\n  size: ISize;\n  imageData: ImageData;\n  updateImageDataById: (id: string, newImageData: ImageData) => any;\n  activeLabelId: string;\n  highlightedLabelId: string;\n  updateActiveLabelNameIndex: (activeLabelIndex: number) => any;\n  labelNames: string[];\n  updateActiveLabelId: (activeLabelId: string) => any;\n}\n\nconst RectLabelsList: React.FC<IProps> = ({\n  size,\n  imageData,\n  updateImageDataById,\n  labelNames,\n  updateActiveLabelNameIndex,\n  activeLabelId,\n  highlightedLabelId,\n  updateActiveLabelId,\n}) => {\n  const labelRects = EditorSelector.getActiveImageData().groupList[EditorSelector.getActiveGroupIndex()].labelRects;\n\n  const labelInputFieldHeight = 40;\n  const listStyle: React.CSSProperties = {\n    width: size.width,\n    height: size.height,\n  };\n  const listStyleContent: React.CSSProperties = {\n    width: size.width,\n    height: labelRects.length * labelInputFieldHeight,\n  };\n\n  const deleteRectLabelById = (labelRectId: string) => {\n    const newImageData = produce(imageData, draft => {\n      draft.groupList[imageData.activeGroupIndex].labelRects = labelRects.filter((currentLabel: LabelRect) => {\n        return currentLabel.id !== labelRectId;\n      });\n    });\n    updateImageDataById(imageData.id, newImageData);\n  };\n\n  const checkRectLabelById = (labelRectId: string) => {\n    const newImageData = produce(imageData, draft => {\n      draft.groupList[imageData.activeGroupIndex].labelRects = labelRects.map((currentLabel: LabelRect) => {\n        return currentLabel.id !== labelRectId ? currentLabel : { ...currentLabel, checked: !currentLabel.checked };\n      });\n    });\n    updateImageDataById(imageData.id, newImageData);\n  };\n\n  const updateRectLabel = (labelRectId: string, labelNameIndex: number) => {\n    const newImageData = produce(imageData, draft => {\n      draft.groupList[imageData.activeGroupIndex].labelRects = labelRects.map((labelRect: LabelRect) => {\n        if (labelRect.id === labelRectId) {\n          return {\n            ...labelRect,\n            labelIndex: labelNameIndex,\n          };\n        } else {\n          return labelRect;\n        }\n      });\n    });\n    updateImageDataById(imageData.id, newImageData);\n    updateActiveLabelNameIndex(labelNameIndex);\n  };\n\n  const onClickHandler = () => {\n    updateActiveLabelId(null);\n  };\n\n  const getChildren = () => {\n    return labelRects.map((labelRect: LabelRect) => {\n      return (\n        <LabelInputField\n          size={{\n            width: size.width,\n            height: labelInputFieldHeight,\n          }}\n          isActive={labelRect.id === activeLabelId}\n          isHighlighted={labelRect.id === highlightedLabelId}\n          id={labelRect.id}\n          key={labelRect.id}\n          onDelete={deleteRectLabelById}\n          onCheck={checkRectLabelById}\n          value={labelRect.labelIndex !== null ? labelNames[labelRect.labelIndex] : null}\n          options={labelNames}\n          onSelectLabel={updateRectLabel}\n          checked={labelRect.checked}\n        />\n      );\n    });\n  };\n\n  return (\n    <div className=\"RectLabelsList\" style={listStyle} onClickCapture={onClickHandler}>\n      {labelRects.length === 0 ? (\n        <EmptyLabelList labelBefore={\"标记第一个矩形\"} labelAfter={\"这张图片还没有标注\"} />\n      ) : (\n        <Scrollbars>\n          <div className=\"RectLabelsListContent\" style={listStyleContent}>\n            {getChildren()}\n          </div>\n        </Scrollbars>\n      )}\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {\n  updateImageDataById,\n  updateActiveLabelNameIndex,\n  updateActiveLabelId,\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  activeLabelId: EditorSelector.getActiveLabelId(),\n  highlightedLabelId: EditorSelector.getHighlightedLabelId(),\n  labelNames: state.editor.labelNames,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RectLabelsList);\n","import React from \"react\";\nimport { ISize } from \"../../../../interfaces/ISize\";\nimport Scrollbars from \"react-custom-scrollbars\";\nimport { ImageData, LabelPoint } from \"../../../../store/editor/types\";\nimport \"./PointLabelsList.scss\";\nimport {\n  updateActiveLabelId,\n  updateActiveLabelNameIndex,\n  updateImageDataById,\n} from \"../../../../store/editor/actionCreators\";\nimport { AppState } from \"../../../../store\";\nimport { connect } from \"react-redux\";\nimport * as _ from \"lodash\";\nimport LabelInputField from \"../LabelInputField/LabelInputField\";\nimport EmptyLabelList from \"../EmptyLabelList/EmptyLabelList\";\nimport { EditorSelector } from \"../../../../store/selectors/EditorSelector\";\nimport produce from \"immer\";\n\ninterface IProps {\n  size: ISize;\n  imageData: ImageData;\n  updateImageDataById: (id: string, newImageData: ImageData) => any;\n  activeLabelId: string;\n  highlightedLabelId: string;\n  updateActiveLabelNameIndex: (activeLabelIndex: number) => any;\n  labelNames: string[];\n  updateActiveLabelId: (activeLabelId: string) => any;\n}\n\nconst PointLabelsList: React.FC<IProps> = ({\n  size,\n  imageData,\n  updateImageDataById,\n  labelNames,\n  updateActiveLabelNameIndex,\n  activeLabelId,\n  highlightedLabelId,\n  updateActiveLabelId,\n}) => {\n  const labelPoints = EditorSelector.getActiveImageData().groupList[EditorSelector.getActiveGroupIndex()].labelPoints;\n  const labelInputFieldHeight = 40;\n  const listStyle: React.CSSProperties = {\n    width: size.width,\n    height: size.height,\n  };\n  const listStyleContent: React.CSSProperties = {\n    width: size.width,\n    height: labelPoints.length * labelInputFieldHeight,\n  };\n\n  const deletePointLabelById = (labelPointId: string) => {\n    const newImageData = produce(imageData, draft => {\n      draft.groupList[imageData.activeGroupIndex].labelPoints = labelPoints.filter((currentLabel: LabelPoint) => {\n        return currentLabel.id !== labelPointId;\n      });\n    });\n    updateImageDataById(imageData.id, newImageData);\n  };\n\n  const checkPointLabelById = (labelPointId: string) => {\n    const newImageData = produce(imageData, draft => {\n      draft.groupList[imageData.activeGroupIndex].labelPoints = labelPoints.map((currentLabel: LabelPoint) => {\n        return currentLabel.id !== labelPointId ? currentLabel : { ...currentLabel, checked: !currentLabel.checked };\n      });\n    });\n    updateImageDataById(imageData.id, newImageData);\n  };\n\n  const updatePointLabel = (labelPointId: string, labelNameIndex: number) => {\n    let alreadyFlag: boolean = false;\n    const newImageData = produce(imageData, draft => {\n      draft.groupList[imageData.activeGroupIndex].labelPoints = labelPoints.map((currentLabel: LabelPoint) => {\n        if (currentLabel.id === labelPointId) {\n          const alreadyHasIndex = draft.groupList[imageData.activeGroupIndex].labelPoints.some(\n            ele => ele.labelIndex === labelNameIndex\n          );\n          if (alreadyHasIndex) {\n            // console.log(\"labelNameIndex\", labelNameIndex);\n            alert(\"已经标记过这个部位了\");\n            alreadyFlag = true;\n            return currentLabel;\n          }\n          return {\n            ...currentLabel,\n            labelIndex: labelNameIndex,\n          };\n        }\n        return currentLabel;\n      });\n    });\n    updateImageDataById(imageData.id, newImageData);\n    !alreadyFlag && updateActiveLabelNameIndex(labelNameIndex);\n  };\n\n  const onClickHandler = () => {\n    updateActiveLabelId(null);\n  };\n\n  const getChildren = () => {\n    return labelPoints.map((labelPoint: LabelPoint) => {\n      return (\n        <LabelInputField\n          size={{\n            width: size.width,\n            height: labelInputFieldHeight,\n          }}\n          isActive={labelPoint.id === activeLabelId}\n          isHighlighted={labelPoint.id === highlightedLabelId}\n          id={labelPoint.id}\n          key={labelPoint.id}\n          onDelete={deletePointLabelById}\n          value={labelPoint.labelIndex !== null ? labelNames[labelPoint.labelIndex] : null}\n          options={labelNames}\n          onSelectLabel={updatePointLabel}\n          onCheck={checkPointLabelById}\n          checked={labelPoint.checked}\n        />\n      );\n    });\n  };\n\n  return (\n    <div className=\"PointLabelsList\" style={listStyle} onClickCapture={onClickHandler}>\n      {labelPoints.length === 0 ? (\n        <EmptyLabelList labelBefore={\"\b标记第一个点\"} labelAfter={\"这张图片还没有标注\"} />\n      ) : (\n        <Scrollbars>\n          <div className=\"PointLabelsListContent\" style={listStyleContent}>\n            {getChildren()}\n          </div>\n        </Scrollbars>\n      )}\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {\n  updateImageDataById,\n  updateActiveLabelNameIndex,\n  updateActiveLabelId,\n};\n\nconst mapStateToProps = (state: AppState) => {\n  return {\n    activeLabelId: EditorSelector.getActiveLabelId(),\n    highlightedLabelId: EditorSelector.getHighlightedLabelId(),\n    labelNames: state.editor.labelNames,\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PointLabelsList);\n","import React from \"react\";\nimport { ISize } from \"../../../../interfaces/ISize\";\nimport Scrollbars from \"react-custom-scrollbars\";\nimport { ImageData, LabelPolygon } from \"../../../../store/editor/types\";\nimport \"./PolygonLabelsList.scss\";\nimport {\n  updateActiveLabelId,\n  updateActiveLabelNameIndex,\n  updateImageDataById,\n} from \"../../../../store/editor/actionCreators\";\nimport { AppState } from \"../../../../store\";\nimport { connect } from \"react-redux\";\nimport * as _ from \"lodash\";\nimport LabelInputField from \"../LabelInputField/LabelInputField\";\nimport EmptyLabelList from \"../EmptyLabelList/EmptyLabelList\";\nimport { EditorSelector } from \"../../../../store/selectors/EditorSelector\";\nimport produce from \"immer\";\n\ninterface IProps {\n  size: ISize;\n  imageData: ImageData;\n  updateImageDataById: (id: string, newImageData: ImageData) => any;\n  activeLabelId: string;\n  highlightedLabelId: string;\n  updateActiveLabelNameIndex: (activeLabelIndex: number) => any;\n  labelNames: string[];\n  updateActiveLabelId: (activeLabelId: string) => any;\n}\n\nconst PolygonLabelsList: React.FC<IProps> = ({\n  size,\n  imageData,\n  updateImageDataById,\n  labelNames,\n  updateActiveLabelNameIndex,\n  activeLabelId,\n  highlightedLabelId,\n  updateActiveLabelId,\n}) => {\n  const labelPolygons = EditorSelector.getActiveImageData().groupList[EditorSelector.getActiveGroupIndex()]\n    .labelPolygons;\n  const labelInputFieldHeight = 40;\n  const listStyle: React.CSSProperties = {\n    width: size.width,\n    height: size.height,\n  };\n  const listStyleContent: React.CSSProperties = {\n    width: size.width,\n    height: labelPolygons.length * labelInputFieldHeight,\n  };\n\n  const deletePolygonLabelById = (labelPolygonId: string) => {\n    const newImageData = produce(imageData, draft => {\n      draft.groupList[imageData.activeGroupIndex].labelPolygons = labelPolygons.filter((currentLabel: LabelPolygon) => {\n        return currentLabel.id !== labelPolygonId;\n      });\n    });\n    updateImageDataById(imageData.id, newImageData);\n  };\n\n  const checkPolygonLabelById = (labelPolygonId: string) => {\n    const newImageData = produce(imageData, draft => {\n      draft.groupList[imageData.activeGroupIndex].labelPolygons = labelPolygons.map((currentLabel: LabelPolygon) => {\n        return currentLabel.id !== labelPolygonId ? currentLabel : { ...currentLabel, checked: !currentLabel.checked };\n      });\n    });\n    updateImageDataById(imageData.id, newImageData);\n  };\n\n  const updatePolygonLabel = (labelPolygonId: string, labelNameIndex: number) => {\n    const newImageData = produce(imageData, draft => {\n      draft.groupList[imageData.activeGroupIndex].labelPolygons = labelPolygons.map((currentLabel: LabelPolygon) => {\n        if (currentLabel.id === labelPolygonId) {\n          return {\n            ...currentLabel,\n            labelIndex: labelNameIndex,\n          };\n        } else {\n          return currentLabel;\n        }\n      });\n    });\n    updateImageDataById(imageData.id, newImageData);\n    updateActiveLabelNameIndex(labelNameIndex);\n  };\n\n  const onClickHandler = () => {\n    updateActiveLabelId(null);\n  };\n\n  const getChildren = () => {\n    return labelPolygons.map((labelPolygon: LabelPolygon) => {\n      return (\n        <LabelInputField\n          size={{\n            width: size.width,\n            height: labelInputFieldHeight,\n          }}\n          isActive={labelPolygon.id === activeLabelId}\n          isHighlighted={labelPolygon.id === highlightedLabelId}\n          id={labelPolygon.id}\n          key={labelPolygon.id}\n          onDelete={deletePolygonLabelById}\n          value={labelPolygon.labelIndex !== null ? labelNames[labelPolygon.labelIndex] : null}\n          options={labelNames}\n          onSelectLabel={updatePolygonLabel}\n          onCheck={checkPolygonLabelById}\n          checked={labelPolygon.checked}\n        />\n      );\n    });\n  };\n\n  return (\n    <div className=\"PolygonLabelsList\" style={listStyle} onClickCapture={onClickHandler}>\n      {labelPolygons.length === 0 ? (\n        <EmptyLabelList labelBefore={\"标注第一个多边形\"} labelAfter={\"这张图片还没有标注\"} />\n      ) : (\n        <Scrollbars>\n          <div className=\"PolygonLabelsListContent\" style={listStyleContent}>\n            {getChildren()}\n          </div>\n        </Scrollbars>\n      )}\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {\n  updateImageDataById,\n  updateActiveLabelNameIndex,\n  updateActiveLabelId,\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  activeLabelId: EditorSelector.getActiveLabelId(),\n  highlightedLabelId: EditorSelector.getHighlightedLabelId(),\n  labelNames: state.editor.labelNames,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PolygonLabelsList);\n","import React from \"react\";\nimport \"./LabelsToolkit.scss\";\nimport { ImageData } from \"../../../../store/editor/types\";\nimport {\n  updateActiveLabelId,\n  updateActiveLabelType,\n  updateImageDataById,\n  updateGroupList,\n  updateActiveGroupIndex,\n} from \"../../../../store/editor/actionCreators\";\nimport { AppState } from \"../../../../store\";\nimport { connect } from \"react-redux\";\nimport { LabelType } from \"../../../../data/enums/LabelType\";\nimport { ProjectType } from \"../../../../data/enums/ProjectType\";\nimport { ISize } from \"../../../../interfaces/ISize\";\nimport classNames from \"classnames\";\nimport * as _ from \"lodash\";\nimport { ILabelToolkit, LabelToolkitData } from \"../../../../data/info/LabelToolkitData\";\nimport { Settings } from \"../../../../settings/Settings\";\nimport RectLabelsList from \"../RectLabelsList/RectLabelsList\";\nimport PointLabelsList from \"../PointLabelsList/PointLabelsList\";\nimport PolygonLabelsList from \"../PolygonLabelsList/PolygonLabelsList\";\nimport { ContextManager } from \"../../../../logic/context/ContextManager\";\nimport { ContextType } from \"../../../../data/enums/ContextType\";\nimport Scrollbars from \"react-custom-scrollbars\";\nimport { GroupType } from \"../../../../store/editor/types\";\nimport { EditorSelector } from \"../../../../store/selectors/EditorSelector\";\n\ninterface IProps {\n  activeImageIndex: number;\n  activeLabelType: LabelType;\n  imagesData: ImageData[];\n  projectType: ProjectType;\n  groupList: GroupType[];\n  activeGroupIndex: number;\n  updateImageDataById: (id: string, newImageData: ImageData) => any;\n  updateActiveLabelType: (activeLabelType: LabelType) => any;\n  updateActiveLabelId: (highlightedLabelId: string) => any;\n  updateGroupList: (groupName: string) => any;\n  updateActiveGroupIndex: (groupIndex: number) => any;\n}\n\ninterface IState {\n  size: ISize;\n  activeLabelType: LabelType;\n}\n\nclass LabelsToolkit extends React.Component<IProps, IState> {\n  private labelsToolkitRef: HTMLDivElement;\n  private readonly tabs: LabelType[];\n\n  constructor(props) {\n    super(props);\n\n    this.tabs = props.projectType === ProjectType.IMAGE_RECOGNITION ? [LabelType.NAME] : [LabelType.POINT];\n    // : [LabelType.RECTANGLE, LabelType.POINT, LabelType.POLYGON];\n\n    const activeTab: LabelType = props.activeLabelType ? props.activeLabelType : this.tabs[0];\n\n    this.state = {\n      size: null,\n      activeLabelType: activeTab,\n    };\n    props.updateActiveLabelType(activeTab);\n  }\n\n  public componentDidMount(): void {\n    this.updateToolkitSize();\n    window.addEventListener(\"resize\", this.updateToolkitSize);\n  }\n\n  public componentWillUnmount(): void {\n    window.removeEventListener(\"resize\", this.updateToolkitSize);\n  }\n\n  private updateToolkitSize = () => {\n    if (!this.labelsToolkitRef) return;\n\n    const listBoundingBox = this.labelsToolkitRef.getBoundingClientRect();\n    this.setState({\n      size: {\n        width: listBoundingBox.width,\n        height: listBoundingBox.height,\n      },\n    });\n  };\n\n  private headerClickHandler = (activeTab: LabelType) => {\n    this.setState({ activeLabelType: activeTab });\n    this.props.updateActiveLabelType(activeTab);\n    this.props.updateActiveLabelId(null);\n  };\n\n  private renderChildren = (currentGroupIndex: number) => {\n    const { activeLabelType, size } = this.state;\n    const { activeImageIndex, imagesData, activeGroupIndex } = this.props;\n    return this.tabs.reduce((children, labelType: LabelType, index: number) => {\n      const isActive: boolean = labelType === activeLabelType && activeGroupIndex === currentGroupIndex;\n      const tabData: ILabelToolkit = _.find(LabelToolkitData, { labelType });\n      // const activeTabContentHeight: number = size.height - this.tabs.length * Settings.TOOLKIT_TAB_HEIGHT_PX - 50 - 50;\n      const activeTabContentHeight = 300;\n      const getClassName = (baseClass: string) =>\n        classNames(baseClass, {\n          active: isActive,\n        });\n\n      const header = (\n        <div\n          key={\"Header_\" + index}\n          className={getClassName(\"Header\")}\n          onClick={() => this.headerClickHandler(labelType)}\n          style={{ height: Settings.TOOLKIT_TAB_HEIGHT_PX }}\n        >\n          <div className=\"Marker\" />\n          <div className=\"HeaderGroupWrapper\">\n            <img draggable={false} className=\"Ico\" src={tabData.imageSrc} alt={tabData.imageAlt} />\n            {tabData.headerText}\n          </div>\n          <div className=\"HeaderGroupWrapper\">\n            <img draggable={false} className=\"Arrow\" src={\"ico/down.png\"} alt={\"down_arrow\"} />\n          </div>\n        </div>\n      );\n\n      const content = (\n        <div\n          key={\"Content_\" + index}\n          className={getClassName(\"Content\")}\n          style={{ height: isActive ? activeTabContentHeight : 0 }}\n        >\n          {labelType === LabelType.RECTANGLE && (\n            <RectLabelsList\n              size={{\n                width: size.width - 20,\n                height: activeTabContentHeight - 20,\n              }}\n              imageData={imagesData[activeImageIndex]}\n            />\n          )}\n          {labelType === LabelType.POINT && (\n            <PointLabelsList\n              size={{\n                width: size.width - 20,\n                height: activeTabContentHeight - 20,\n              }}\n              imageData={imagesData[activeImageIndex]}\n            />\n          )}\n          {labelType === LabelType.POLYGON && (\n            <PolygonLabelsList\n              size={{\n                width: size.width - 20,\n                height: activeTabContentHeight - 20,\n              }}\n              imageData={imagesData[activeImageIndex]}\n            />\n          )}\n        </div>\n      );\n\n      children.push([header, content]);\n      return children;\n    }, []);\n  };\n\n  private buttonOnClickHandle = () => {\n    this.props.updateGroupList(`group-${this.props.groupList.length + 1}`);\n  };\n  private renderChildrenWrapper = () => {\n    const { groupList, activeGroupIndex } = this.props;\n    return groupList\n      .map((groupName, idx) => (\n        <div className=\"LabelsToolkitWrapper\" key={`LabelsToolkitWrapper_` + idx}>\n          <p\n            className={idx === activeGroupIndex ? \"active\" : \"\"}\n            onClick={() => {\n              this.props.updateActiveGroupIndex(idx);\n              this.headerClickHandler(this.state.activeLabelType);\n            }}\n          >\n            {`person-` + idx}\n          </p>\n          {idx === activeGroupIndex && this.renderChildren(idx)}\n        </div>\n      ))\n      .concat(\n        <div className=\"addButton\" key=\"button\">\n          <button style={{ width: \"30%\" }} onClick={this.buttonOnClickHandle}>\n            添加 +{\" \"}\n          </button>\n        </div>\n      );\n  };\n  public render() {\n    return (\n      <div\n        className=\"LabelsToolkit\"\n        ref={ref => (this.labelsToolkitRef = ref)}\n        onClick={() => ContextManager.switchCtx(ContextType.RIGHT_NAVBAR)}\n      >\n        <Scrollbars>{this.state.size && this.renderChildrenWrapper()}</Scrollbars>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  updateImageDataById,\n  updateActiveLabelType,\n  updateActiveLabelId,\n  updateGroupList,\n  updateActiveGroupIndex,\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  activeImageIndex: state.editor.activeImageIndex,\n  activeLabelType: EditorSelector.getActiveLabelType(),\n  imagesData: state.editor.imagesData,\n  projectType: state.editor.projectType,\n  groupList: EditorSelector.getActiveImageData().groupList,\n  activeGroupIndex: EditorSelector.getActiveGroupIndex(),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LabelsToolkit);\n","import React from 'react';\nimport classNames from 'classnames';\nimport './SideNavigationBar.scss';\nimport {Direction} from \"../../../data/enums/Direction\";\n\ninterface IProps {\n    direction: Direction\n    isOpen: boolean;\n    isWithContext?: boolean;\n    renderCompanion?: () => any;\n    renderContent?: () => any;\n}\n\nexport const SideNavigationBar: React.FC<IProps> = (props) => {\n    const {direction, isOpen, isWithContext, renderContent, renderCompanion} = props;\n\n    const getClassName = () => {\n        return classNames(\n            \"SideNavigationBar\",\n            {\n                \"left\": direction === Direction.LEFT,\n                \"right\": direction === Direction.RIGHT,\n                \"with-context\": isWithContext,\n                \"closed\": !isOpen\n            }\n        );\n    };\n\n    return (\n        <div className={getClassName()}>\n            <div className=\"CompanionBar\">\n                {renderCompanion && renderCompanion()}\n            </div>\n            {isOpen && <div className=\"NavigationBarContentWrapper\">\n                {renderContent && renderContent()}\n            </div>}\n        </div>\n    );\n};","import * as React from \"react\";\nimport classNames from \"classnames\";\nimport './VerticalEditorButton.scss';\n\ninterface IProps {\n    key?:string;\n    label:string;\n    onClick?:() => any;\n    style?:React.CSSProperties;\n    isActive?:boolean;\n    isDisabled?:boolean;\n    image?:string,\n    imageAlt?:string,\n}\n\nexport const VerticalEditorButton = (props:IProps) => {\n\n    const { key, label, onClick, style, isActive, isDisabled, image, imageAlt} = props;\n\n    const getClassName = () => {\n        return classNames(\n            \"VerticalEditorButton\",\n            {\n                \"active\": isActive,\n                \"disabled\": isDisabled\n            }\n        );\n    };\n\n    return(\n        <div\n            className={getClassName()}\n            onClick={!!onClick ? onClick : undefined}\n            key={key}\n            style={style}\n        >\n            {image && <img \n                draggable={false}\n                alt={imageAlt} \n                src={image}\n            />}\n            {label}\n        </div>\n    )\n};","import {CustomCursorStyle} from \"../data/enums/CustomCursorStyle\";\nimport classNames from \"classnames\";\n\nexport class EditorUtil {\n    public static getIndicator = (cursorStyle: CustomCursorStyle): string => {\n        switch (cursorStyle) {\n            case CustomCursorStyle.ADD:\n                return \"ico/plus.png\";\n            case CustomCursorStyle.RESIZE:\n                return \"ico/resize.png\";\n            case CustomCursorStyle.CLOSE:\n                return \"ico/close.png\";\n            case CustomCursorStyle.MOVE:\n                return \"ico/move.png\";\n            case CustomCursorStyle.CANCEL:\n                return \"ico/cancel.png\";\n            default:\n                return null;\n        }\n    };\n\n    public static getCursorStyle = (cursorStyle: CustomCursorStyle) => {\n        return classNames(\n            \"Cursor\", {\n                \"move\": cursorStyle === CustomCursorStyle.MOVE,\n                \"add\": cursorStyle === CustomCursorStyle.ADD,\n                \"resize\": cursorStyle === CustomCursorStyle.RESIZE,\n                \"close\": cursorStyle === CustomCursorStyle.CLOSE,\n                \"cancel\": cursorStyle === CustomCursorStyle.CANCEL,\n            }\n        );\n    };\n}","export enum AcceptedFileType {\n    IMAGE = 'image/jpeg, image/png',\n    TEXT = 'text/plain'\n}","import React from \"react\";\nimport \"./Editor.scss\";\nimport { ISize } from \"../../../interfaces/ISize\";\nimport { ImageData } from \"../../../store/editor/types\";\nimport { FileUtil } from \"../../../utils/FileUtil\";\nimport { AppState } from \"../../../store\";\nimport { connect } from \"react-redux\";\nimport { updateImageDataById } from \"../../../store/editor/actionCreators\";\nimport { ImageRepository } from \"../../../logic/imageRepository/ImageRepository\";\nimport { LabelType } from \"../../../data/enums/LabelType\";\nimport { PopupWindowType } from \"../../../data/enums/PopupWindowType\";\nimport { CanvasUtil } from \"../../../utils/CanvasUtil\";\nimport { CustomCursorStyle } from \"../../../data/enums/CustomCursorStyle\";\nimport { ImageLoadManager } from \"../../../logic/imageRepository/ImageLoadManager\";\nimport { EventType } from \"../../../data/enums/EventType\";\nimport { EditorData } from \"../../../data/EditorData\";\nimport { EditorModel } from \"../../../staticModels/EditorModel\";\nimport { EditorActions } from \"../../../logic/actions/EditorActions\";\nimport { EditorUtil } from \"../../../utils/EditorUtil\";\nimport { ContextManager } from \"../../../logic/context/ContextManager\";\nimport { ContextType } from \"../../../data/enums/ContextType\";\n\nimport { EditorSelector } from \"../../../store/selectors/EditorSelector\";\n\ninterface IProps {\n  size: ISize;\n  imageData: ImageData;\n  activeLabelType: LabelType;\n  updateImageDataById: (id: string, newImageData: ImageData) => any;\n  activePopupType: PopupWindowType;\n  activeLabelId: string;\n  customCursorStyle: CustomCursorStyle;\n}\n\nclass Editor extends React.Component<IProps, {}> {\n  // =================================================================================================================\n  // LIFE CYCLE\n  // =================================================================================================================\n\n  public componentDidMount(): void {\n    this.mountEventListeners();\n\n    const { imageData, activeLabelType } = this.props;\n\n    ContextManager.switchCtx(ContextType.EDITOR);\n    EditorActions.mountRenderEngines(activeLabelType);\n    ImageLoadManager.addAndRun(this.loadImage(imageData));\n  }\n\n  public componentWillUnmount(): void {\n    this.unmountEventListeners();\n  }\n\n  public componentDidUpdate(prevProps: Readonly<IProps>, prevState: Readonly<{}>, snapshot?: any): void {\n    const { imageData, activeLabelType } = this.props;\n\n    prevProps.imageData.id !== imageData.id && ImageLoadManager.addAndRun(this.loadImage(imageData));\n    prevProps.activeLabelType !== activeLabelType && EditorActions.swapSupportRenderingEngine(activeLabelType);\n\n    this.updateModelAndRender();\n  }\n\n  // =================================================================================================================\n  // EVENT HANDLERS\n  // =================================================================================================================\n\n  private mountEventListeners() {\n    window.addEventListener(EventType.MOUSE_MOVE, this.update);\n    window.addEventListener(EventType.MOUSE_UP, this.update);\n    EditorModel.canvas.addEventListener(EventType.MOUSE_DOWN, this.update);\n  }\n\n  private unmountEventListeners() {\n    window.removeEventListener(EventType.MOUSE_MOVE, this.update);\n    window.removeEventListener(EventType.MOUSE_UP, this.update);\n    EditorModel.canvas.removeEventListener(EventType.MOUSE_DOWN, this.update);\n  }\n\n  // =================================================================================================================\n  // LOAD IMAGE\n  // =================================================================================================================\n\n  private loadImage = async (imageData: ImageData): Promise<any> => {\n    if (imageData.loadStatus) {\n      EditorActions.setActiveImage(ImageRepository.getById(imageData.id));\n      this.updateModelAndRender();\n    } else {\n      if (!EditorModel.isLoading) {\n        EditorActions.setLoadingStatus(true);\n        const saveLoadedImagePartial = (image: HTMLImageElement) => this.saveLoadedImage(image, imageData);\n        FileUtil.loadImage(imageData.fileData, saveLoadedImagePartial, this.handleLoadImageError);\n      }\n    }\n  };\n\n  private saveLoadedImage = (image: HTMLImageElement, imageData: ImageData) => {\n    imageData.loadStatus = true;\n    this.props.updateImageDataById(imageData.id, imageData);\n    ImageRepository.store(imageData.id, image);\n    EditorActions.setActiveImage(image);\n    EditorActions.setLoadingStatus(false);\n    this.updateModelAndRender();\n  };\n\n  private handleLoadImageError = () => {\n    console.log(\"handleLoadImageError\");\n  };\n\n  // =================================================================================================================\n  // HELPER METHODS\n  // =================================================================================================================\n\n  private updateModelAndRender = () => {\n    EditorActions.resizeCanvas(this.props.size);\n    EditorActions.calculateAllCharacteristics();\n    EditorActions.fullRender();\n  };\n\n  private update = (event: MouseEvent) => {\n    const editorData: EditorData = EditorActions.getEditorData(event);\n    EditorModel.mousePositionOnCanvas = CanvasUtil.getMousePositionOnCanvasFromEvent(event, EditorModel.canvas);\n    EditorModel.primaryRenderingEngine.update(editorData);\n    EditorModel.supportRenderingEngine && EditorModel.supportRenderingEngine.update(editorData);\n    !this.props.activePopupType && EditorActions.updateMousePositionIndicator(event);\n    EditorActions.fullRender();\n  };\n\n  public render() {\n    return (\n      <div className=\"Editor\">\n        <canvas\n          className=\"ImageCanvas\"\n          ref={ref => (EditorModel.canvas = ref)}\n          draggable={false}\n          onContextMenu={(event: React.MouseEvent<HTMLCanvasElement>) => event.preventDefault()}\n        />\n        <div\n          className=\"MousePositionIndicator\"\n          ref={ref => (EditorModel.mousePositionIndicator = ref)}\n          draggable={false}\n        />\n        <div\n          className={EditorUtil.getCursorStyle(this.props.customCursorStyle)}\n          ref={ref => (EditorModel.cursor = ref)}\n          draggable={false}\n        >\n          <img draggable={false} alt={\"indicator\"} src={EditorUtil.getIndicator(this.props.customCursorStyle)} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  updateImageDataById,\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  activeLabelType:\n    state.editor.imagesData[EditorSelector.getActiveImageIndex()].groupList[EditorSelector.getActiveGroupIndex()]\n      .activeLabelType,\n  activePopupType: state.general.activePopupType,\n  activeLabelId:\n    state.editor.imagesData[EditorSelector.getActiveImageIndex()].groupList[EditorSelector.getActiveGroupIndex()]\n      .activeLabelId,\n  customCursorStyle: state.general.customCursorStyle,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Editor);\n","import React from \"react\";\nimport \"./BottomNavigationBar.scss\";\nimport { ImageData } from \"../../../store/editor/types\";\nimport { updateActiveImageIndex } from \"../../../store/editor/actionCreators\";\nimport { AppState } from \"../../../store\";\nimport { connect } from \"react-redux\";\nimport { ImageButton } from \"../../Common/ImageButton/ImageButton\";\nimport { ISize } from \"../../../interfaces/ISize\";\nimport { ContextType } from \"../../../data/enums/ContextType\";\nimport classNames from \"classnames\";\n\ninterface IProps {\n  size: ISize;\n  imageData: ImageData;\n  totalImageCount: number;\n  activeImageIndex: number;\n  activeContext: ContextType;\n  updateActiveImageIndex: (activeImageIndex: number) => any;\n}\n\nconst BottomNavigationBar: React.FC<IProps> = ({\n  size,\n  imageData,\n  totalImageCount,\n  activeImageIndex,\n  activeContext,\n  updateActiveImageIndex,\n}) => {\n  const minWidth: number = 400;\n  const viewPreviousImage = () => {\n    if (activeImageIndex > 0) {\n      updateActiveImageIndex(activeImageIndex - 1);\n    }\n  };\n\n  const viewNextImage = () => {\n    if (activeImageIndex < totalImageCount - 1) {\n      updateActiveImageIndex(activeImageIndex + 1);\n    }\n  };\n\n  const getImageCounter = () => {\n    return activeImageIndex + 1 + \" / \" + totalImageCount;\n  };\n\n  const getClassName = () => {\n    return classNames(\"BottomNavigationBar\", {\n      \"with-context\": activeContext === ContextType.EDITOR,\n    });\n  };\n\n  return (\n    <div className={getClassName()}>\n      <ImageButton\n        image={\"ico/left.png\"}\n        imageAlt={\"previous\"}\n        size={{ width: 25, height: 25 }}\n        onClick={viewPreviousImage}\n        isDisabled={activeImageIndex === 0}\n        externalClassName={\"left\"}\n      />\n      {size.width > minWidth ? (\n        <div className=\"CurrentImageName\"> {imageData.fileData.name} </div>\n      ) : (\n        <div className=\"CurrentImageCount\"> {getImageCounter()} </div>\n      )}\n      <ImageButton\n        image={\"ico/right.png\"}\n        imageAlt={\"next\"}\n        size={{ width: 25, height: 25 }}\n        onClick={viewNextImage}\n        isDisabled={activeImageIndex === totalImageCount - 1}\n        externalClassName={\"right\"}\n      />\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {\n  updateActiveImageIndex,\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  activeImageIndex: state.editor.activeImageIndex,\n  activeContext: state.general.activeContext,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BottomNavigationBar);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Direction } from \"../../../data/enums/Direction\";\nimport { ISize } from \"../../../interfaces/ISize\";\nimport { Settings } from \"../../../settings/Settings\";\nimport { AppState } from \"../../../store\";\nimport { ImageData } from \"../../../store/editor/types\";\nimport ImagesList from \"../SideNavigationBar/ImagesList/ImagesList\";\nimport LabelsToolkit from \"../SideNavigationBar/LabelsToolkit/LabelsToolkit\";\nimport { SideNavigationBar } from \"../SideNavigationBar/SideNavigationBar\";\nimport { VerticalEditorButton } from \"../VerticalEditorButton/VerticalEditorButton\";\nimport \"./EditorContainer.scss\";\nimport Editor from \"../Editor/Editor\";\nimport BottomNavigationBar from \"../BottomNavigationBar/BottomNavigationBar\";\nimport { ContextManager } from \"../../../logic/context/ContextManager\";\nimport { ContextType } from \"../../../data/enums/ContextType\";\n\ninterface IProps {\n  windowSize: ISize;\n  activeImageIndex: number;\n  imagesData: ImageData[];\n  activeContext: ContextType;\n  editor: any;\n}\n\nconst EditorContainer: React.FC<IProps> = ({ windowSize, activeImageIndex, imagesData, activeContext, editor }) => {\n  const [leftTabStatus, setLeftTabStatus] = useState(true);\n  const [rightTabStatus, setRightTabStatus] = useState(true);\n  const calculateEditorSize = (): ISize => {\n    if (windowSize) {\n      const leftTabWidth = leftTabStatus\n        ? Settings.SIDE_NAVIGATION_BAR_WIDTH_OPEN_PX\n        : Settings.SIDE_NAVIGATION_BAR_WIDTH_CLOSED_PX;\n      const rightTabWidth = rightTabStatus\n        ? Settings.SIDE_NAVIGATION_BAR_WIDTH_OPEN_PX\n        : Settings.SIDE_NAVIGATION_BAR_WIDTH_CLOSED_PX;\n      return {\n        width: windowSize.width - leftTabWidth - rightTabWidth,\n        height: windowSize.height - Settings.TOP_NAVIGATION_BAR_HEIGHT_PX - Settings.BOTTOM_NAVIGATION_BAR_HEIGHT_PX,\n      };\n    } else return null;\n  };\n\n  const leftSideBarButtonOnClick = () => {\n    if (!leftTabStatus) ContextManager.switchCtx(ContextType.LEFT_NAVBAR);\n    else if (leftTabStatus && activeContext === ContextType.LEFT_NAVBAR) ContextManager.restoreCtx();\n\n    setLeftTabStatus(!leftTabStatus);\n  };\n\n  const leftSideBarCompanionRender = () => {\n    return (\n      <>\n        <VerticalEditorButton\n          label=\"Images\"\n          image={\"/ico/files.png\"}\n          imageAlt={\"images\"}\n          onClick={leftSideBarButtonOnClick}\n          isActive={leftTabStatus}\n        />\n      </>\n    );\n  };\n\n  const leftSideBarRender = () => {\n    return <ImagesList />;\n  };\n\n  const rightSideBarButtonOnClick = () => {\n    if (!rightTabStatus) ContextManager.switchCtx(ContextType.RIGHT_NAVBAR);\n    else if (rightTabStatus && activeContext === ContextType.RIGHT_NAVBAR) ContextManager.restoreCtx();\n\n    setRightTabStatus(!rightTabStatus);\n  };\n\n  const rightSideBarCompanionRender = () => {\n    return (\n      <>\n        <VerticalEditorButton\n          label=\"Labels\"\n          image={\"/ico/tags.png\"}\n          imageAlt={\"labels\"}\n          onClick={rightSideBarButtonOnClick}\n          isActive={rightTabStatus}\n        />\n      </>\n    );\n  };\n\n  const rightSideBarRender = () => {\n    return <LabelsToolkit />;\n  };\n\n  return (\n    <div className=\"EditorContainer\">\n      <SideNavigationBar\n        direction={Direction.LEFT}\n        isOpen={leftTabStatus}\n        isWithContext={activeContext === ContextType.LEFT_NAVBAR}\n        renderCompanion={leftSideBarCompanionRender}\n        renderContent={leftSideBarRender}\n      />\n      <div className=\"EditorWrapper\" onMouseDown={() => ContextManager.switchCtx(ContextType.EDITOR)}>\n        <Editor size={calculateEditorSize()} imageData={imagesData[activeImageIndex]} />\n        <BottomNavigationBar\n          imageData={imagesData[activeImageIndex]}\n          size={calculateEditorSize()}\n          totalImageCount={imagesData.length}\n        />\n      </div>\n      <SideNavigationBar\n        direction={Direction.RIGHT}\n        isOpen={rightTabStatus}\n        isWithContext={activeContext === ContextType.RIGHT_NAVBAR}\n        renderCompanion={rightSideBarCompanionRender}\n        renderContent={rightSideBarRender}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  windowSize: state.general.windowSize,\n  activeImageIndex: state.editor.activeImageIndex,\n  imagesData: state.editor.imagesData,\n  activeContext: state.general.activeContext,\n  editor: state.editor,\n});\n\nexport default connect(mapStateToProps)(EditorContainer);\n","import React from \"react\";\nimport \"./StateBar.scss\";\nimport { ImageData } from \"../../../store/editor/types\";\nimport { AppState } from \"../../../store\";\nimport { connect } from \"react-redux\";\nimport { LabelType } from \"../../../data/enums/LabelType\";\nimport { EditorSelector } from \"../../../store/selectors/EditorSelector\";\n\ninterface IProps {\n  imagesData: ImageData[];\n  activeLabelType: LabelType;\n}\n\nconst StateBar: React.FC<IProps> = ({ imagesData, activeLabelType }) => {\n  const pointLabeledImages = imagesData.reduce((currentCount: number, currentImage: ImageData) => {\n    return currentCount + (currentImage.groupList[currentImage.activeGroupIndex].labelPoints.length > 0 ? 1 : 0);\n  }, 0);\n\n  const rectLabeledImages = imagesData.reduce((currentCount: number, currentImage: ImageData) => {\n    return currentCount + (currentImage.groupList[currentImage.activeGroupIndex].labelRects.length > 0 ? 1 : 0);\n  }, 0);\n\n  const polygonLabeledImages = imagesData.reduce((currentCount: number, currentImage: ImageData) => {\n    return currentCount + (currentImage.groupList[currentImage.activeGroupIndex].labelPolygons.length > 0 ? 1 : 0);\n  }, 0);\n\n  const getProgress = () => {\n    switch (activeLabelType) {\n      case LabelType.POINT:\n        return (100 * pointLabeledImages) / imagesData.length;\n      case LabelType.RECTANGLE:\n        return (100 * rectLabeledImages) / imagesData.length;\n      case LabelType.POLYGON:\n        return (100 * polygonLabeledImages) / imagesData.length;\n      default:\n        return 0;\n    }\n  };\n\n  return (\n    <div className=\"StateBar\">\n      <div style={{ width: getProgress() + \"%\" }} className=\"done\" />\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {};\n\nconst mapStateToProps = (state: AppState) => ({\n  imagesData: state.editor.imagesData,\n  activeLabelType: EditorSelector.getActiveLabelType(),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(StateBar);\n","import React from 'react'\nimport classNames from 'classnames'\nimport './UnderlineTextButton.scss'\n\ninterface IProps {\n  under?: boolean\n  over?: boolean\n  active?: boolean\n  key?: string\n  label: string\n  onClick?: () => any\n  style?: React.CSSProperties\n}\n\nexport const UnderlineTextButton = (props: IProps) => {\n  const { under, over, active, key, label, onClick, style } = props;\n\n  const getClassName = () => {\n    return classNames('UnderlineTextButton', {\n      under: under,\n      over: over,\n      active: active,\n    })\n  };\n\n  return (\n    <div\n      className={getClassName()}\n      onClick={!!onClick ? onClick : undefined}\n      key={key}\n      style={style}\n    >\n      {label}\n    </div>\n  )\n};\n","import React from 'react';\nimport './TextInput.scss';\n\ninterface IProps {\n    key: string;\n    label?: string;\n    isPassword: boolean;\n    onChange?: (event: React.ChangeEvent<HTMLInputElement>) => any;\n    onFocus?: (event: React.FocusEvent<HTMLInputElement>) => any;\n    inputStyle?: React.CSSProperties;\n    labelStyle?: React.CSSProperties;\n    barStyle?: React.CSSProperties;\n    value?: string;\n}\n\nconst TextInput = (props: IProps) => {\n\n    const {\n        key,\n        label,\n        isPassword,\n        onChange,\n        onFocus,\n        inputStyle,\n        labelStyle,\n        barStyle,\n        value\n    } = props;\n\n    const getInputType = () => {\n        return isPassword ? \"password\" : \"text\";\n    };\n\n    return (\n        <div className=\"TextInput\">\n            <input\n                value={!!value ? value : undefined}\n                type={getInputType()}\n                id={key}\n                style={inputStyle}\n                onChange={onChange ? onChange : undefined}\n                onFocus={onFocus ? onFocus : undefined}\n            />\n            {!!label && <label\n                htmlFor={key}\n                style={labelStyle}\n            >\n                {label}\n            </label>}\n            <div\n                className=\"Bar\"\n                style={barStyle}\n            />\n        </div>\n    );\n};\n\nexport default TextInput;","import React from \"react\";\nimport \"./TopNavigationBar.scss\";\nimport StateBar from \"../StateBar/StateBar\";\nimport { UnderlineTextButton } from \"../../Common/UnderlineTextButton/UnderlineTextButton\";\nimport { PopupWindowType } from \"../../../data/enums/PopupWindowType\";\nimport { AppState } from \"../../../store\";\nimport { connect } from \"react-redux\";\nimport { updateActivePopupType } from \"../../../store/general/actionCreators\";\nimport TextInput from \"../../Common/TextInput/TextInput\";\nimport { updateProjectName } from \"../../../store/editor/actionCreators\";\nimport { ImageButton } from \"../../Common/ImageButton/ImageButton\";\nimport { Settings } from \"../../../settings/Settings\";\n\ninterface IProps {\n  updateActivePopupType: (activePopupType: PopupWindowType) => any;\n  updateProjectName: (projectName: string) => any;\n  projectName: string;\n}\n\nconst TopNavigationBar: React.FC<IProps> = ({\n  updateActivePopupType,\n  updateProjectName,\n  projectName,\n}) => {\n  const onFocus = (event: React.FocusEvent<HTMLInputElement>) => {\n    event.target.setSelectionRange(0, event.target.value.length);\n  };\n\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.value.toLowerCase().replace(\" \", \"-\");\n    updateProjectName(value);\n  };\n\n  return (\n    <div className=\"TopNavigationBar\">\n      <StateBar />\n      <div className=\"TopNavigationBarWrapper\">\n        <div>\n          <div\n            className=\"Header\"\n            // onClick={() => updateActivePopupType(PopupWindowType.EXIT_PROJECT)}\n          >\n            <img draggable={false} alt={\"make-sense\"} src={\"/make-sense-ico-transparent.png\"} />\n            Make Sense\n          </div>\n        </div>\n        <div className=\"NavigationBarGroupWrapper\">\n          <div className=\"ProjectName\">项目名称:</div>\n          <TextInput\n            key={\"ProjectName\"}\n            isPassword={false}\n            value={projectName}\n            onChange={onChange}\n            onFocus={onFocus}\n          />\n        </div>\n        <div className=\"NavigationBarGroupWrapper\">\n          <UnderlineTextButton\n            label={\"导入更多图片\"}\n            under={true}\n            onClick={() => updateActivePopupType(PopupWindowType.LOAD_IMAGES)}\n          />\n          <UnderlineTextButton\n            label={\"导出标注\"}\n            under={true}\n            onClick={() => updateActivePopupType(PopupWindowType.EXPORT_LABELS)}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {\n  updateActivePopupType,\n  updateProjectName,\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  projectName: state.editor.projectName,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TopNavigationBar);\n","import React from \"react\";\nimport \"./EditorView.scss\";\nimport EditorContainer from \"./EditorContainer/EditorContainer\";\nimport { PopupWindowType } from \"../../data/enums/PopupWindowType\";\nimport { AppState } from \"../../store\";\nimport { connect } from \"react-redux\";\nimport classNames from \"classnames\";\nimport TopNavigationBar from \"./TopNavigationBar/TopNavigationBar\";\n\ninterface IProps {\n  activePopupType: PopupWindowType;\n}\n\nconst EditorView: React.FC<IProps> = ({ activePopupType }) => {\n  const getClassName = () => {\n    return classNames(\"EditorView\", {\n      withPopup: !!activePopupType,\n    });\n  };\n\n  return (\n    <div className={getClassName()}>\n      <TopNavigationBar />\n      <EditorContainer />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  activePopupType: state.general.activePopupType,\n});\n\nexport default connect(mapStateToProps)(EditorView);\n","import * as React from 'react';\nimport './TextButton.scss';\nimport classNames from \"classnames\";\n\ninterface IProps {\n    key?:string;\n    label:string;\n    onClick?:() => any;\n    style?:React.CSSProperties;\n    isActive?:boolean;\n    isDisabled?:boolean;\n    externalClassName?:string;\n}\n\nexport const TextButton = (props:IProps) => {\n    const { key, label, onClick, style, isActive, isDisabled, externalClassName} = props;\n\n    const getClassName = () => {\n        return classNames(\n            \"TextButton\",\n            externalClassName,\n            {\n                \"active\": isActive,\n                \"disabled\": isDisabled\n            }\n        );\n    };\n\n    const onClickHandler = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n        event.stopPropagation();\n        !!onClick && onClick();\n    };\n\n    return(\n        <div\n            className={getClassName()}\n            onClick={onClickHandler}\n            key={key}\n            style={style}\n        >\n            {label}\n        </div>\n    )\n};","import {Settings} from \"../../settings/Settings\";\n\nexport interface ISocialMedia {\n    displayName:string;\n    imageSrc:string;\n    imageAlt:string;\n    href:string;\n    tooltipMessage:string;\n}\n\nexport const SocialMediaData: ISocialMedia[] = [\n    {\n        displayName: \"Github\",\n        imageSrc: \"/img/github-logo.png\",\n        imageAlt: \"GitHub Logo\",\n        href: Settings.GITHUB_URL,\n        tooltipMessage: \"Show me some love on GitHub\",\n    },\n    {\n        displayName: \"Medium\",\n        imageSrc: \"/img/medium-logo.png\",\n        imageAlt: \"Medium Logo\",\n        href: Settings.MEDIUM_URL,\n        tooltipMessage: \"Read my AI content on Medium\",\n    },\n    {\n        displayName: \"Patreon\",\n        imageSrc: \"/img/patreon-logo.png\",\n        imageAlt: \"Patreon Logo\",\n        href: Settings.PATREON_URL,\n        tooltipMessage: \"Support MakeSense on Patreon and help it grow\"\n    },\n];","export interface IEditorFeature {\n  displayText: string;\n  imageSrc: string;\n  imageAlt: string;\n}\n\nexport const EditorFeatureData: IEditorFeature[] = [\n  {\n    displayText: \"开源并且在GPLv3协议许可下免费使用\",\n    imageSrc: \"img/open-source.png\",\n    imageAlt: \"open-source\",\n  },\n  {\n    displayText: \"不需要额外安装，仅仅打开浏览器就可以开始工作\",\n    imageSrc: \"img/online.png\",\n    imageAlt: \"online\",\n  },\n  {\n    displayText: \"我们不存储你的图片\",\n    imageSrc: \"img/private.png\",\n    imageAlt: \"private\",\n  },\n  {\n    displayText: \"支持点、矩形、多边形标注\",\n    imageSrc: \"img/labels.png\",\n    imageAlt: \"labels\",\n  },\n  {\n    displayText: \"支持导出标注数据\",\n    imageSrc: \"img/file.png\",\n    imageAlt: \"file\",\n  },\n  {\n    displayText: \"支持裁剪和调整大小\",\n    imageSrc: \"img/crop.png\",\n    imageAlt: \"crop\",\n  },\n];\n","import React, { useEffect } from \"react\";\nimport \"./ImagesDropZone.scss\";\nimport { useDropzone } from \"react-dropzone\";\nimport { TextButton } from \"../../Common/TextButton/TextButton\";\nimport { ImageData } from \"../../../store/editor/types\";\nimport { connect } from \"react-redux\";\nimport { addImageData, updateActiveImageIndex, updateProjectType } from \"../../../store/editor/actionCreators\";\nimport { AppState } from \"../../../store\";\nimport { ProjectType } from \"../../../data/enums/ProjectType\";\nimport { FileUtil } from \"../../../utils/FileUtil\";\nimport { PopupWindowType } from \"../../../data/enums/PopupWindowType\";\nimport { updateActivePopupType } from \"../../../store/general/actionCreators\";\nimport { AcceptedFileType } from \"../../../data/enums/AcceptedFileType\";\n\ninterface IProps {\n  updateActiveImageIndex: (activeImageIndex: number) => any;\n  addImageData: (imageData: ImageData[]) => any;\n  updateProjectType: (projectType: ProjectType) => any;\n  updateActivePopupType: (activePopupType: PopupWindowType) => any;\n}\n\nconst ImagesDropZone: React.FC<IProps> = ({\n  updateActiveImageIndex,\n  addImageData,\n  updateProjectType,\n  updateActivePopupType,\n}) => {\n  const { acceptedFiles, getRootProps, getInputProps } = useDropzone({\n    accept: AcceptedFileType.IMAGE,\n  });\n\n  const startEditor = (projectType: ProjectType) => {\n    if (acceptedFiles.length > 0) {\n      updateProjectType(projectType);\n      updateActiveImageIndex(0);\n      addImageData(acceptedFiles.map((fileData: File) => FileUtil.mapFileDataToImageData(fileData)));\n      // updateActivePopupType(PopupWindowType.INSERT_LABEL_NAMES);\n    }\n  };\n\n  const getDropZoneContent = () => {\n    if (acceptedFiles.length === 0)\n      return (\n        <>\n          <input {...getInputProps()} />\n          <img draggable={false} alt={\"upload\"} src={\"img/box-opened.png\"} />\n          <p className=\"extraBold\">拖拽图片至此</p>\n          <p>或</p>\n          <p className=\"extraBold\">点击选取</p>\n        </>\n      );\n    else if (acceptedFiles.length === 1)\n      return (\n        <>\n          <img draggable={false} alt={\"uploaded\"} src={\"img/box-closed.png\"} />\n          <p className=\"extraBold\">已载入 1 张图片</p>\n        </>\n      );\n    else\n      return (\n        <>\n          <input {...getInputProps()} />\n          <img draggable={false} key={1} alt={\"uploaded\"} src={\"img/box-closed.png\"} />\n          <p key={2} className=\"extraBold\">\n            已载入 {acceptedFiles.length} 张图片\n          </p>\n        </>\n      );\n  };\n\n  return (\n    <div className=\"ImagesDropZone\">\n      <div {...getRootProps({ className: \"DropZone\" })}>{getDropZoneContent()}</div>\n      <div className=\"DropZoneButtons\">\n        {/* <TextButton label={\"\"} isDisabled={true} onClick={() => {}} /> */}\n        <TextButton\n          label={\"开始标记\"}\n          isDisabled={!acceptedFiles.length}\n          onClick={() => startEditor(ProjectType.OBJECT_DETECTION)}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {\n  updateActiveImageIndex,\n  addImageData,\n  updateProjectType,\n  updateActivePopupType,\n};\n\nconst mapStateToProps = (state: AppState) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ImagesDropZone);\n","export enum ExportFormatType {\n  YOLO = \"YOLO\",\n  COCO = \"COCO\",\n  CSV = \"CSV\",\n  VOC = \"VOC\",\n  VGG_JSON = \"VGG_JSON\",\n  JSON = \"JSON\",\n}\n","import React, { useState } from \"react\";\nimport \"./MainView.scss\";\nimport { TextButton } from \"../Common/TextButton/TextButton\";\nimport classNames from \"classnames\";\nimport { ISize } from \"../../interfaces/ISize\";\nimport { ImageButton } from \"../Common/ImageButton/ImageButton\";\nimport { ISocialMedia, SocialMediaData } from \"../../data/info/SocialMediaData\";\nimport { EditorFeatureData, IEditorFeature } from \"../../data/info/EditorFeatureData\";\nimport { Tooltip } from \"@material-ui/core\";\nimport Fade from \"@material-ui/core/Fade\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport ImagesDropZone from \"./ImagesDropZone/ImagesDropZone\";\n\nconst MainView: React.FC = () => {\n  const [projectInProgress, setProjectInProgress] = useState(false);\n  const [projectCanceled, setProjectCanceled] = useState(false);\n\n  const startProject = () => {\n    setProjectInProgress(true);\n  };\n  const jumpToRegular = () => {\n    window.location.href = \"https://uglyspoon.github.io/regular/\";\n  };\n\n  const endProject = () => {\n    setProjectInProgress(false);\n    setProjectCanceled(true);\n  };\n\n  const getClassName = () => {\n    return classNames(\"MainView\", {\n      InProgress: projectInProgress,\n      Canceled: !projectInProgress && projectCanceled,\n    });\n  };\n\n  const DarkTooltip = withStyles(theme => ({\n    tooltip: {\n      backgroundColor: \"#171717\",\n      color: \"#ffffff\",\n      boxShadow: theme.shadows[1],\n      fontSize: 11,\n      maxWidth: 120,\n    },\n  }))(Tooltip);\n\n  const getSocialMediaButtons = (size: ISize) => {\n    return SocialMediaData.map((data: ISocialMedia, index: number) => {\n      return (\n        <DarkTooltip\n          key={index}\n          disableFocusListener\n          title={data.tooltipMessage}\n          TransitionComponent={Fade}\n          TransitionProps={{ timeout: 600 }}\n          placement=\"left\"\n        >\n          <div>\n            <ImageButton size={size} image={data.imageSrc} imageAlt={data.imageAlt} href={data.href} />\n          </div>\n        </DarkTooltip>\n      );\n    });\n  };\n\n  const getEditorFeatureTiles = () => {\n    return EditorFeatureData.map((data: IEditorFeature) => {\n      return (\n        <div className=\"EditorFeaturesTiles\" key={data.displayText}>\n          <div className=\"EditorFeaturesTilesWrapper\">\n            <img draggable={false} alt={data.imageAlt} src={data.imageSrc} />\n            <div className=\"EditorFeatureLabel\">{data.displayText}</div>\n          </div>\n        </div>\n      );\n    });\n  };\n\n  return (\n    <div className={getClassName()}>\n      <div className=\"Slider\" id=\"lower\">\n        <div className=\"TriangleVertical\">\n          <div className=\"TriangleVerticalContent\" />\n        </div>\n      </div>\n\n      <div className=\"Slider\" id=\"upper\">\n        <div className=\"TriangleVertical\">\n          <div className=\"TriangleVerticalContent\" />\n        </div>\n      </div>\n\n      <div className=\"LeftColumn\">\n        <div className={\"LogoWrapper\"}>\n          <img draggable={false} alt={\"main-logo\"} src={\"img/main-image-color.png\"} />\n        </div>\n        <div className=\"EditorFeaturesWrapper\">{getEditorFeatureTiles()}</div>\n        <div className=\"TriangleVertical\">\n          <div className=\"TriangleVerticalContent\" />\n        </div>\n        {projectInProgress && <TextButton label={\"返回\"} onClick={endProject} />}\n      </div>\n      <div className=\"RightColumn\">\n        <div />\n        <ImagesDropZone />\n        {/* <div className=\"SocialMediaWrapper\">{getSocialMediaButtons({ width: 30, height: 30 })}</div> */}\n        <div className=\"SocialMediaWrapper\"></div>\n        <TextButton label={\"常规标记\"} onClick={jumpToRegular} />\n        {!projectInProgress && <TextButton label={\"关节标记\"} onClick={startProject} />}\n      </div>\n    </div>\n  );\n};\n\nexport default MainView;\n","import React, { useEffect, useState } from \"react\";\nimport \"./GenericYesNoPopup.scss\";\nimport { TextButton } from \"../../Common/TextButton/TextButton\";\nimport { ContextManager } from \"../../../logic/context/ContextManager\";\nimport { ContextType } from \"../../../data/enums/ContextType\";\n\ninterface IProps {\n  title: string;\n  renderContent: () => any;\n  acceptLabel: string;\n  onAccept: () => any;\n  skipAcceptButton?: boolean;\n  disableAcceptButton?: boolean;\n  rejectLabel: string;\n  onReject: () => any;\n  skipRejectButton?: boolean;\n  disableRejectButton?: boolean;\n}\n\nexport const GenericYesNoPopup: React.FC<IProps> = ({\n  title,\n  renderContent,\n  acceptLabel,\n  onAccept,\n  skipAcceptButton,\n  disableAcceptButton,\n  rejectLabel,\n  onReject,\n  skipRejectButton,\n  disableRejectButton,\n}) => {\n  const [status, setMountStatus] = useState(false);\n  useEffect(() => {\n    if (!status) {\n      ContextManager.switchCtx(ContextType.POPUP);\n      setMountStatus(true);\n    }\n  }, [status]);\n\n  return (\n    <div className=\"GenericYesNoPopup\">\n      <div className=\"Header\">{title}</div>\n      <div className=\"Content\">{renderContent()}</div>\n      <div className=\"Footer\">\n        {!skipRejectButton && (\n          <TextButton\n            label={!!rejectLabel ? rejectLabel : \"不, 谢谢\"}\n            onClick={onReject}\n            externalClassName={\"reject\"}\n            isDisabled={disableRejectButton}\n          />\n        )}\n        {!skipAcceptButton && (\n          <TextButton\n            label={!!acceptLabel ? acceptLabel : \"好的\"}\n            onClick={onAccept}\n            externalClassName={\"accept\"}\n            isDisabled={disableAcceptButton}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport \"./LoadLabelNamesPopup.scss\";\nimport { AppState } from \"../../../store\";\nimport { connect } from \"react-redux\";\nimport {\n  updateActiveLabelNameIndex,\n  updateLabelNamesList,\n} from \"../../../store/editor/actionCreators\";\nimport { GenericYesNoPopup } from \"../GenericYesNoPopup/GenericYesNoPopup\";\nimport { PopupWindowType } from \"../../../data/enums/PopupWindowType\";\nimport { updateActivePopupType } from \"../../../store/general/actionCreators\";\nimport { useDropzone } from \"react-dropzone\";\nimport { FileUtil } from \"../../../utils/FileUtil\";\nimport { AcceptedFileType } from \"../../../data/enums/AcceptedFileType\";\nimport { PopupActions } from \"../../../logic/actions/PopupActions\";\n\ninterface IProps {\n  updateActiveLabelNameIndex: (activeLabelIndex: number) => any;\n  updateLabelNamesList: (labelNames: string[]) => any;\n  updateActivePopupType: (activePopupType: PopupWindowType) => any;\n}\n\nconst LoadLabelNamesPopup: React.FC<IProps> = ({\n  updateActiveLabelNameIndex,\n  updateLabelNamesList,\n  updateActivePopupType,\n}) => {\n  const [labelsList, setLabelsList] = useState([]);\n  const [invalidFileLoadedStatus, setInvalidFileLoadedStatus] = useState(false);\n\n  const { acceptedFiles, getRootProps, getInputProps } = useDropzone({\n    accept: AcceptedFileType.TEXT,\n    multiple: false,\n    onDrop: acceptedFiles => {\n      if (acceptedFiles.length === 1) {\n        FileUtil.loadLabelsList(acceptedFiles[0], onSuccess, onFailure);\n      }\n    },\n  });\n\n  const onSuccess = (labelsList: string[]) => {\n    setLabelsList(labelsList);\n    setInvalidFileLoadedStatus(false);\n  };\n\n  const onFailure = () => {\n    setInvalidFileLoadedStatus(true);\n  };\n\n  const onAccept = () => {\n    if (labelsList.length > 0) {\n      updateActiveLabelNameIndex(0);\n      updateLabelNamesList(labelsList);\n      PopupActions.close();\n    }\n  };\n\n  const onReject = () => {\n    updateActivePopupType(PopupWindowType.INSERT_LABEL_NAMES);\n  };\n\n  const getDropZoneContent = () => {\n    if (invalidFileLoadedStatus)\n      return (\n        <>\n          <input {...getInputProps()} />\n          <img draggable={false} alt={\"upload\"} src={\"img/box-opened.png\"} />\n          <p className=\"extraBold\">导入文件未成功！</p>\n          <p className=\"extraBold\">请再试一次</p>\n        </>\n      );\n    else if (acceptedFiles.length === 0)\n      return (\n        <>\n          <input {...getInputProps()} />\n          <img draggable={false} alt={\"upload\"} src={\"img/box-opened.png\"} />\n          <p className=\"extraBold\">拖拽文件到这里</p>\n          <p>或</p>\n          <p className=\"extraBold\">点击此处选择导入</p>\n        </>\n      );\n    else if (labelsList.length === 1)\n      return (\n        <>\n          <img draggable={false} alt={\"uploaded\"} src={\"img/box-closed.png\"} />\n          <p className=\"extraBold\">已导入了一个标签</p>\n        </>\n      );\n    else\n      return (\n        <>\n          <img draggable={false} alt={\"uploaded\"} src={\"img/box-closed.png\"} />\n          <p className=\"extraBold\"> 已导入了{labelsList.length}个标签</p>\n        </>\n      );\n  };\n\n  const renderContent = () => {\n    return (\n      <div className=\"LoadLabelsPopupContent\">\n        <div className=\"Message\">\n          选择一个你准备好的.txt格式的文本文件，注意每个标签应该另起一行\n        </div>\n        <div {...getRootProps({ className: \"DropZone\" })}>{getDropZoneContent()}</div>\n      </div>\n    );\n  };\n\n  return (\n    <GenericYesNoPopup\n      title={\"导入标签列表文件\"}\n      renderContent={renderContent}\n      acceptLabel={\"开始\"}\n      onAccept={onAccept}\n      disableAcceptButton={labelsList.length === 0}\n      rejectLabel={\"返回\"}\n      onReject={onReject}\n    />\n  );\n};\n\nconst mapDispatchToProps = {\n  updateActiveLabelNameIndex,\n  updateLabelNamesList,\n  updateActivePopupType,\n};\n\nconst mapStateToProps = (state: AppState) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoadLabelNamesPopup);\n","export class XMLSanitizerUtil {\n    public static sanitize(input: string): string {\n        return input\n            .replace('<', '&lt;')\n            .replace('>', '&gt;')\n            .replace('&', '&amp;')\n            .replace(\"'\", '&#39;')\n            .replace(\"/\", '&#x2F;')\n    }\n}","import {EditorSelector} from \"../store/selectors/EditorSelector\";\nimport moment from 'moment';\n\nexport class ExporterUtil {\n    public static getExportFileName(): string {\n        const projectName: string = EditorSelector.getProjectName();\n        const date: string = moment().format('YYYYMMDDhhmmss');\n        return `labels_${projectName}_${date}`\n    }\n}","import { ExportFormatType } from \"../../data/enums/ExportFormatType\";\nimport { ImageData, LabelRect } from \"../../store/editor/types\";\nimport { ImageRepository } from \"../imageRepository/ImageRepository\";\nimport JSZip from \"jszip\";\nimport { saveAs } from \"file-saver\";\nimport { EditorSelector } from \"../../store/selectors/EditorSelector\";\nimport { XMLSanitizerUtil } from \"../../utils/XMLSanitizerUtil\";\nimport { ExporterUtil } from \"../../utils/ExporterUtil\";\n\nexport class RectLabelsExporter {\n  public static export(exportFormatType: ExportFormatType): void {\n    switch (exportFormatType) {\n      case ExportFormatType.YOLO:\n        RectLabelsExporter.exportAsYOLO();\n        break;\n      case ExportFormatType.VOC:\n        RectLabelsExporter.exportAsVOC();\n        break;\n      case ExportFormatType.CSV:\n        RectLabelsExporter.exportAsCSV();\n        break;\n      default:\n        return;\n    }\n  }\n\n  private static exportAsYOLO(): void {\n    let zip = new JSZip();\n    EditorSelector.getImagesData().forEach((imageData: ImageData) => {\n      const fileContent: string = RectLabelsExporter.wrapRectLabelsIntoYOLO(imageData);\n      if (fileContent) {\n        const fileName: string = imageData.fileData.name.replace(/\\.[^/.]+$/, \".txt\");\n        try {\n          zip.file(fileName, fileContent);\n        } catch (error) {\n          // TODO\n          throw new Error(error);\n        }\n      }\n    });\n\n    try {\n      zip.generateAsync({ type: \"blob\" }).then(function(content) {\n        saveAs(content, `${ExporterUtil.getExportFileName()}.zip`);\n      });\n    } catch (error) {\n      // TODO\n      throw new Error(error);\n    }\n  }\n\n  private static wrapRectLabelsIntoYOLO(imageData: ImageData): string {\n    if (imageData.groupList[imageData.activeGroupIndex].labelRects.length === 0 || !imageData.loadStatus) return null;\n\n    const image: HTMLImageElement = ImageRepository.getById(imageData.id);\n    const labelRectsString: string[] = imageData.groupList[imageData.activeGroupIndex].labelRects.map(\n      (labelRect: LabelRect) => {\n        const labelFields = [\n          labelRect.labelIndex + \"\",\n          ((labelRect.rect.x + labelRect.rect.width / 2) / image.width).toFixed(6) + \"\",\n          ((labelRect.rect.y + labelRect.rect.height / 2) / image.height).toFixed(6) + \"\",\n          (labelRect.rect.width / image.width).toFixed(6) + \"\",\n          (labelRect.rect.height / image.height).toFixed(6) + \"\",\n        ];\n        return labelFields.join(\" \");\n      }\n    );\n    return labelRectsString.join(\"\\n\");\n  }\n\n  private static exportAsVOC(): void {\n    let zip = new JSZip();\n    EditorSelector.getImagesData().forEach((imageData: ImageData) => {\n      const fileContent: string = RectLabelsExporter.wrapImageIntoVOC(imageData);\n      if (fileContent) {\n        const fileName: string = imageData.fileData.name.replace(/\\.[^/.]+$/, \".xml\");\n        try {\n          zip.file(fileName, fileContent);\n        } catch (error) {\n          // TODO\n          throw new Error(error);\n        }\n      }\n    });\n\n    try {\n      zip.generateAsync({ type: \"blob\" }).then(function(content) {\n        saveAs(content, `${ExporterUtil.getExportFileName()}.zip`);\n      });\n    } catch (error) {\n      // TODO\n      throw new Error(error);\n    }\n  }\n\n  private static wrapRectLabelsIntoVOC(imageData: ImageData): string {\n    if (imageData.groupList[imageData.activeGroupIndex].labelRects.length === 0 || !imageData.loadStatus) return null;\n\n    const labelNamesList: string[] = EditorSelector.getLabelNames();\n    const labelRectsString: string[] = imageData.groupList[imageData.activeGroupIndex].labelRects.map(\n      (labelRect: LabelRect) => {\n        const labelFields = [\n          `\\t<object>`,\n          `\\t\\t<name>${labelNamesList[labelRect.labelIndex]}</name>`,\n          `\\t\\t<pose>Unspecified</pose>`,\n          `\\t\\t<truncated>Unspecified</truncated>`,\n          `\\t\\t<difficult>Unspecified</difficult>`,\n          `\\t\\t<bndbox>`,\n          `\\t\\t\\t<xmin>${Math.round(labelRect.rect.x)}</xmin>`,\n          `\\t\\t\\t<ymin>${Math.round(labelRect.rect.y)}</ymin>`,\n          `\\t\\t\\t<xmax>${Math.round(labelRect.rect.x + labelRect.rect.width)}</xmax>`,\n          `\\t\\t\\t<ymax>${Math.round(labelRect.rect.y + labelRect.rect.height)}</ymax>`,\n          `\\t\\t</bndbox>`,\n          `\\t</object>`,\n        ];\n        return labelFields.join(\"\\n\");\n      }\n    );\n    return labelRectsString.join(\"\\n\");\n  }\n\n  private static wrapImageIntoVOC(imageData: ImageData): string {\n    const labels: string = RectLabelsExporter.wrapRectLabelsIntoVOC(imageData);\n    const projectName: string = XMLSanitizerUtil.sanitize(EditorSelector.getProjectName());\n\n    if (labels) {\n      const image: HTMLImageElement = ImageRepository.getById(imageData.id);\n      return [\n        `<annotation>`,\n        `\\t<folder>${projectName}</folder>`,\n        `\\t<filename>${imageData.fileData.name}</filename>`,\n        `\\t<path>/${projectName}/${imageData.fileData.name}</path>`,\n        `\\t<source>`,\n        `\\t\\t<database>Unspecified</database>`,\n        `\\t</source>`,\n        `\\t<size>`,\n        `\\t\\t<width>${image.width}</width>`,\n        `\\t\\t<height>${image.height}</height>`,\n        `\\t\\t<depth>3</depth>`,\n        `\\t</size>`,\n        labels,\n        `</annotation>`,\n      ].join(\"\\n\");\n    }\n    return null;\n  }\n\n  private static exportAsCSV(): void {\n    const content: string = EditorSelector.getImagesData()\n      .map((imageData: ImageData) => {\n        return RectLabelsExporter.wrapRectLabelsIntoCSV(imageData);\n      })\n      .filter((imageLabelData: string) => {\n        return !!imageLabelData;\n      })\n      .join(\"\\n\");\n\n    const blob = new Blob([content], { type: \"text/plain;charset=utf-8\" });\n    try {\n      saveAs(blob, `${ExporterUtil.getExportFileName()}.csv`);\n    } catch (error) {\n      // TODO\n      throw new Error(error);\n    }\n  }\n\n  private static wrapRectLabelsIntoCSV(imageData: ImageData): string {\n    if (imageData.groupList[imageData.activeGroupIndex].labelRects.length === 0 || !imageData.loadStatus) return null;\n\n    const image: HTMLImageElement = ImageRepository.getById(imageData.id);\n    const labelNamesList: string[] = EditorSelector.getLabelNames();\n    const labelRectsString: string[] = imageData.groupList[imageData.activeGroupIndex].labelRects.map(\n      (labelRect: LabelRect) => {\n        const labelFields = [\n          labelNamesList[labelRect.labelIndex],\n          Math.round(labelRect.rect.x) + \"\",\n          Math.round(labelRect.rect.y) + \"\",\n          Math.round(labelRect.rect.width) + \"\",\n          Math.round(labelRect.rect.height) + \"\",\n          imageData.fileData.name,\n          image.width + \"\",\n          image.height + \"\",\n        ];\n        return labelFields.join(\",\");\n      }\n    );\n    return labelRectsString.join(\"\\n\");\n  }\n}\n","import { IExportFormat } from \"../../interfaces/IExportFormat\";\nimport { ExportFormatType } from \"../enums/ExportFormatType\";\n\nexport const AllExportFormatData: IExportFormat[] = [\n  {\n    type: ExportFormatType.JSON,\n    label: \"JSON格式文件\",\n  },\n];\n","import { ExportFormatType } from \"../enums/ExportFormatType\";\nimport { IExportFormat } from \"../../interfaces/IExportFormat\";\n\nexport const PointExportFormatData: IExportFormat[] = [\n  {\n    type: ExportFormatType.CSV,\n    label: \"单一的CSV文件\",\n  },\n];\n","import { ExportFormatType } from \"../../data/enums/ExportFormatType\";\nimport { ImageData, LabelPoint } from \"../../store/editor/types\";\nimport { saveAs } from \"file-saver\";\nimport { ImageRepository } from \"../imageRepository/ImageRepository\";\nimport { EditorSelector } from \"../../store/selectors/EditorSelector\";\nimport { ExporterUtil } from \"../../utils/ExporterUtil\";\n\nexport class PointLabelsExporter {\n  public static export(exportFormatType: ExportFormatType): void {\n    switch (exportFormatType) {\n      case ExportFormatType.CSV:\n        PointLabelsExporter.exportAsCSV();\n        break;\n      default:\n        return;\n    }\n  }\n\n  private static exportAsCSV(): void {\n    const content: string = EditorSelector.getImagesData()\n      .map((imageData: ImageData) => {\n        return PointLabelsExporter.wrapRectLabelsIntoCSV(imageData);\n      })\n      .filter((imageLabelData: string) => {\n        return !!imageLabelData;\n      })\n      .join(\"\\n\");\n\n    const blob = new Blob([content], { type: \"text/plain;charset=utf-8\" });\n    try {\n      saveAs(blob, `${ExporterUtil.getExportFileName()}.csv`);\n    } catch (error) {\n      // TODO\n      throw new Error(error);\n    }\n  }\n\n  private static wrapRectLabelsIntoCSV(imageData: ImageData): string {\n    if (imageData.groupList[imageData.activeGroupIndex].labelPoints.length === 0 || !imageData.loadStatus) return null;\n\n    const image: HTMLImageElement = ImageRepository.getById(imageData.id);\n    const labelNamesList: string[] = EditorSelector.getLabelNames();\n    const labelRectsString: string[] = imageData.groupList[imageData.activeGroupIndex].labelPoints.map(\n      (labelPoint: LabelPoint) => {\n        const labelFields = [\n          labelNamesList[labelPoint.labelIndex],\n          Math.round(labelPoint.point.x) + \"\",\n          Math.round(labelPoint.point.y) + \"\",\n          imageData.fileData.name,\n          image.width + \"\",\n          image.height + \"\",\n        ];\n        return labelFields.join(\",\");\n      }\n    );\n    return labelRectsString.join(\"\\n\");\n  }\n}\n","import { ExportFormatType } from \"../../data/enums/ExportFormatType\";\nimport { IPoint } from \"../../interfaces/IPoint\";\nimport { VGGFileData, VGGObject, VGGRegionsData } from \"../../data/VGG/JSON\";\nimport { ImageData, LabelPolygon, GroupType, LabelPoint } from \"../../store/editor/types\";\nimport { EditorSelector } from \"../../store/selectors/EditorSelector\";\nimport { saveAs } from \"file-saver\";\nimport { ExporterUtil } from \"../../utils/ExporterUtil\";\n\nexport class AllLabelsExporter {\n  public static export(exportFormatType: ExportFormatType): void {\n    switch (exportFormatType) {\n      case ExportFormatType.JSON:\n        AllLabelsExporter.exportAsJson();\n        break;\n      default:\n        return;\n    }\n  }\n\n  private static exportAsJson(): void {\n    const imagesData: ImageData[] = EditorSelector.getImagesData();\n    const labelNames: string[] = EditorSelector.getLabelNames();\n    const content: string = JSON.stringify(AllLabelsExporter.mapImagesDataToVGGObject(imagesData, labelNames));\n    const blob = new Blob([content], { type: \"text/plain;charset=utf-8\" });\n    try {\n      saveAs(blob, `${ExporterUtil.getExportFileName()}.json`);\n    } catch (error) {\n      // TODO\n      throw new Error(error);\n    }\n  }\n\n  private static mapImagesDataToVGGObject(imagesData: ImageData[], labelNames: string[]): VGGObject {\n    return imagesData.reduce((data: VGGObject, image: ImageData) => {\n      const fileData: VGGFileData = AllLabelsExporter.mapImageDataToVGGFileData(image, labelNames);\n      if (!!fileData) {\n        data[image.fileData.name] = fileData;\n      }\n      return data;\n    }, {});\n  }\n\n  private static mapImageDataToVGGFileData(imageData: ImageData, labelNames: string[]): VGGFileData {\n    let regionsDataArray: VGGRegionsData[][] = AllLabelsExporter.mapImageDataToVGG(imageData, labelNames);\n    if (!regionsDataArray) return null;\n\n    const orderArray = [\"头顶\", \"左手心\", \"右手心\", \"左脚跟\", \"左脚尖\", \"右脚跟\", \"右脚尖\"];\n    const tempArray = [];\n    regionsDataArray.forEach(item => {\n      item = Object.values(item);\n      orderArray.forEach((ele, idx) => {\n        if (!item.some(r => r.label === ele)) {\n          item.push({\n            label: ele,\n            type: \"point\",\n            is_checked: null,\n            all_points: null,\n          });\n        }\n      });\n      const temp = item.sort((a, b) => {\n        return orderArray.indexOf(a.label as any) - orderArray.indexOf(b.label as any);\n      });\n      tempArray.push(temp);\n    });\n\n    const peopleDataArray = tempArray.map((personData, idx) => {\n      let result = [];\n      console.log(\"personData\", personData);\n      personData.forEach((item, idx) => {\n        if (item.all_points) {\n          result.push(item.all_points[0], item.all_points[1], item.is_checked);\n        } else {\n          result.push(-1, -1, -1);\n        }\n      });\n      return {\n        pose_keypoints_2d: result,\n      };\n    });\n\n    return {\n      size: imageData.fileData.size,\n      image_name: imageData.fileData.name,\n      people: peopleDataArray,\n    };\n  }\n\n  public static mapImageDataToVGG(imageData: ImageData, labelNames: string[]): VGGRegionsData[][] {\n    if (\n      !imageData.loadStatus ||\n      !imageData.groupList[imageData.activeGroupIndex].labelPoints ||\n      !imageData.groupList[imageData.activeGroupIndex].labelPoints.length ||\n      !labelNames ||\n      !labelNames.length\n    )\n      return null;\n\n    // const validPolygonLabelsArray: Array<LabelPolygon[]> = AllLabelsExporter.getValidPolygonLabelsArray(imageData);\n\n    // let polygonsData = [];\n    // if (validPolygonLabelsArray.length) {\n    //   polygonsData = validPolygonLabelsArray.map((validLabels: LabelPolygon[]) => {\n    //     return validLabels.reduce((data: VGGRegionsData, label: LabelPolygon, index: number) => {\n    //       data[`${index}`] = {\n    //         all_points: AllLabelsExporter.mapPolygonToVGG(label.vertices),\n    //         label: labelNames[label.labelIndex],\n    //         is_checked: label.checked ? \"1\" : \"0\",\n    //         type: \"polygon\",\n    //       };\n    //       return data;\n    //     }, {});\n    //   });\n    // }\n\n    const validPointLabelsArray: Array<LabelPoint[]> = AllLabelsExporter.getValidPointLabelsArray(imageData);\n    let pointsData = [];\n    if (validPointLabelsArray.length) {\n      pointsData = validPointLabelsArray.map((validLabels: LabelPoint[]) => {\n        return validLabels.reduce((data: VGGRegionsData, label: LabelPoint, index: number) => {\n          data[`${index}`] = {\n            all_points: [label.point.x, label.point.y],\n            label: labelNames[label.labelIndex],\n            is_checked: label.checked ? \"1\" : \"0\",\n            type: \"point\",\n          };\n          return data;\n        }, {});\n      });\n    }\n    console.log(\"pointsData\", pointsData);\n    return pointsData;\n  }\n\n  public static getValidPolygonLabelsArray(imageData: ImageData): LabelPolygon[][] {\n    return imageData.groupList.map((group: GroupType) => {\n      return group.labelPolygons.filter((label: LabelPolygon) => label.labelIndex !== null && !!label.vertices.length);\n    });\n  }\n\n  public static getValidPointLabelsArray(imageData: ImageData): LabelPoint[][] {\n    return imageData.groupList.map((group: GroupType) => {\n      return group.labelPoints.filter((label: LabelPoint) => label.labelIndex !== null && !!label.point);\n    });\n  }\n\n  public static getValidPolygonLabels(imageData: ImageData): LabelPolygon[] {\n    return imageData.groupList[imageData.activeGroupIndex].labelPolygons.filter(\n      (label: LabelPolygon) => label.labelIndex !== null && !!label.vertices.length\n    );\n  }\n\n  public static mapPolygonToVGG(path: IPoint[]): string[] {\n    if (!path || !path.length) return null;\n    const all_points: string[] = path\n      .map((point: IPoint) => `(${point.x}, ${point.y})`)\n      .concat(`(${path[0].x}, ${path[0].y})`);\n    return all_points;\n  }\n}\n","import { IExportFormat } from \"../../interfaces/IExportFormat\";\nimport { ExportFormatType } from \"../enums/ExportFormatType\";\n\nexport const PolygonExportFormatData: IExportFormat[] = [\n  {\n    type: ExportFormatType.VGG_JSON,\n    label: \"VGG JSON格式文件\",\n  },\n];\n","import { ExportFormatType } from \"../../data/enums/ExportFormatType\";\nimport { IPoint } from \"../../interfaces/IPoint\";\nimport { VGGFileData, VGGObject, VGGPolygon, VGGRegionsData } from \"../../data/VGG/IVGG\";\nimport { ImageData, LabelPolygon } from \"../../store/editor/types\";\nimport { EditorSelector } from \"../../store/selectors/EditorSelector\";\nimport { saveAs } from \"file-saver\";\nimport { ExporterUtil } from \"../../utils/ExporterUtil\";\n\nexport class PolygonLabelsExporter {\n  public static export(exportFormatType: ExportFormatType): void {\n    switch (exportFormatType) {\n      case ExportFormatType.VGG_JSON:\n        PolygonLabelsExporter.exportAsVGGJson();\n        break;\n      default:\n        return;\n    }\n  }\n\n  private static exportAsVGGJson(): void {\n    const imagesData: ImageData[] = EditorSelector.getImagesData();\n    const labelNames: string[] = EditorSelector.getLabelNames();\n    const content: string = JSON.stringify(PolygonLabelsExporter.mapImagesDataToVGGObject(imagesData, labelNames));\n    const blob = new Blob([content], { type: \"text/plain;charset=utf-8\" });\n    try {\n      saveAs(blob, `${ExporterUtil.getExportFileName()}.json`);\n    } catch (error) {\n      // TODO\n      throw new Error(error);\n    }\n  }\n\n  private static mapImagesDataToVGGObject(imagesData: ImageData[], labelNames: string[]): VGGObject {\n    return imagesData.reduce((data: VGGObject, image: ImageData) => {\n      const fileData: VGGFileData = PolygonLabelsExporter.mapImageDataToVGGFileData(image, labelNames);\n      if (!!fileData) {\n        data[image.fileData.name] = fileData;\n      }\n      return data;\n    }, {});\n  }\n\n  private static mapImageDataToVGGFileData(imageData: ImageData, labelNames: string[]): VGGFileData {\n    const regionsData: VGGRegionsData = PolygonLabelsExporter.mapImageDataToVGG(imageData, labelNames);\n    if (!regionsData) return null;\n    return {\n      fileref: \"\",\n      size: imageData.fileData.size,\n      filename: imageData.fileData.name,\n      base64_img_data: \"\",\n      file_attributes: {},\n      regions: regionsData,\n    };\n  }\n\n  public static mapImageDataToVGG(imageData: ImageData, labelNames: string[]): VGGRegionsData {\n    if (\n      !imageData.loadStatus ||\n      !imageData.groupList[imageData.activeGroupIndex].labelPolygons ||\n      !imageData.groupList[imageData.activeGroupIndex].labelPolygons.length ||\n      !labelNames ||\n      !labelNames.length\n    )\n      return null;\n\n    const validLabels: LabelPolygon[] = PolygonLabelsExporter.getValidPolygonLabels(imageData);\n\n    if (!validLabels.length) return null;\n\n    return validLabels.reduce((data: VGGRegionsData, label: LabelPolygon, index: number) => {\n      data[`${index}`] = {\n        shape_attributes: PolygonLabelsExporter.mapPolygonToVGG(label.vertices),\n        region_attributes: {\n          label: labelNames[label.labelIndex],\n        },\n      };\n      return data;\n    }, {});\n  }\n\n  public static getValidPolygonLabels(imageData: ImageData): LabelPolygon[] {\n    return imageData.groupList[imageData.activeGroupIndex].labelPolygons.filter(\n      (label: LabelPolygon) => label.labelIndex !== null && !!label.vertices.length\n    );\n  }\n\n  public static mapPolygonToVGG(path: IPoint[]): VGGPolygon {\n    if (!path || !path.length) return null;\n\n    const all_points_x: number[] = path.map((point: IPoint) => point.x).concat(path[0].x);\n    const all_points_y: number[] = path.map((point: IPoint) => point.y).concat(path[0].y);\n    return {\n      name: \"polygon\",\n      all_points_x,\n      all_points_y,\n    };\n  }\n}\n","import { ExportFormatType } from \"../enums/ExportFormatType\";\nimport { IExportFormat } from \"../../interfaces/IExportFormat\";\n\nexport const RectExportFormatData: IExportFormat[] = [\n  {\n    type: ExportFormatType.YOLO,\n    label: \"YOLO 格式的zip包\",\n  },\n  {\n    type: ExportFormatType.VOC,\n    label: \"XML 格式的zip包\",\n  },\n  {\n    type: ExportFormatType.CSV,\n    label: \"单一的CSV文件\",\n  },\n];\n","import React, { useState } from \"react\";\nimport \"./ExportLabelPopup.scss\";\nimport { GenericYesNoPopup } from \"../GenericYesNoPopup/GenericYesNoPopup\";\nimport { AppState } from \"../../../store\";\nimport { connect } from \"react-redux\";\nimport { ExportFormatType } from \"../../../data/enums/ExportFormatType\";\nimport { RectLabelsExporter } from \"../../../logic/export/RectLabelsExporter\";\nimport { LabelType } from \"../../../data/enums/LabelType\";\nimport { ImageButton } from \"../../Common/ImageButton/ImageButton\";\nimport { IExportFormat } from \"../../../interfaces/IExportFormat\";\nimport { AllExportFormatData } from \"../../../data/export/AllExportFormatData\";\nimport { PointExportFormatData } from \"../../../data/export/PointExportFormatData\";\nimport { PointLabelsExporter } from \"../../../logic/export/PointLabelsExport\";\nimport { AllLabelsExporter } from \"../../../logic/export/AllLabelsExport\";\nimport { PolygonExportFormatData } from \"../../../data/export/PolygonExportFormatData\";\nimport { PolygonLabelsExporter } from \"../../../logic/export/PolygonLabelsExporter\";\nimport { PopupActions } from \"../../../logic/actions/PopupActions\";\nimport { RectExportFormatData } from \"../../../data/export/RectExportFormatData\";\n\nconst ExportLabelPopup: React.FC = () => {\n  const [exportLabelType, setExportLabelType] = useState(LabelType.ALL);\n  const [exportFormatType, setExportFormatType] = useState(null);\n\n  const onAccept = () => {\n    if (!exportFormatType) return;\n    switch (exportLabelType) {\n      case LabelType.RECTANGLE:\n        RectLabelsExporter.export(exportFormatType);\n        break;\n      case LabelType.POINT:\n        PointLabelsExporter.export(exportFormatType);\n        break;\n      case LabelType.POLYGON:\n        PolygonLabelsExporter.export(exportFormatType);\n        break;\n      case LabelType.ALL:\n        AllLabelsExporter.export(exportFormatType);\n        break;\n    }\n    PopupActions.close();\n  };\n\n  const onReject = () => {\n    PopupActions.close();\n  };\n\n  const onSelect = (exportFormatType: ExportFormatType) => {\n    setExportFormatType(exportFormatType);\n  };\n\n  const getOptions = (exportFormatData: IExportFormat[]) => {\n    return exportFormatData.map((entry: IExportFormat) => {\n      return (\n        <div className=\"OptionsItem\" onClick={() => onSelect(entry.type)} key={entry.type}>\n          {entry.type === exportFormatType ? (\n            <img draggable={false} src={\"ico/checkbox-checked.png\"} alt={\"checked\"} />\n          ) : (\n            <img draggable={false} src={\"ico/checkbox-unchecked.png\"} alt={\"unchecked\"} />\n          )}\n          {entry.label}\n        </div>\n      );\n    });\n  };\n\n  const renderContent = () => {\n    return (\n      <div className=\"ExportLabelPopupContent\">\n        <div className=\"LeftContainer\">\n          <ImageButton\n            image={\"ico/all.png\"}\n            imageAlt={\"all\"}\n            size={{ width: 40, height: 40 }}\n            padding={20}\n            onClick={() => {\n              setExportLabelType(LabelType.ALL);\n              setExportFormatType(null);\n            }}\n            isActive={exportLabelType === LabelType.ALL}\n          />\n          {/* <ImageButton\n            image={\"ico/rectangle.png\"}\n            imageAlt={\"rectangle\"}\n            size={{ width: 40, height: 40 }}\n            padding={20}\n            onClick={() => {\n              setExportLabelType(LabelType.RECTANGLE);\n              setExportFormatType(null);\n            }}\n            isActive={exportLabelType === LabelType.RECTANGLE}\n          />\n          <ImageButton\n            image={\"ico/point.png\"}\n            imageAlt={\"point\"}\n            size={{ width: 40, height: 40 }}\n            padding={20}\n            onClick={() => {\n              setExportLabelType(LabelType.POINT);\n              setExportFormatType(null);\n            }}\n            isActive={exportLabelType === LabelType.POINT}\n          />\n          <ImageButton\n            image={\"ico/polygon.png\"}\n            imageAlt={\"polygon\"}\n            size={{ width: 40, height: 40 }}\n            padding={20}\n            onClick={() => {\n              setExportLabelType(LabelType.POLYGON);\n              setExportFormatType(null);\n            }}\n            isActive={exportLabelType === LabelType.POLYGON}\n          /> */}\n        </div>\n        <div className=\"RightContainer\">\n          <div className=\"Message\">选择标注类型和导出文件格式</div>\n          <div className=\"Options\">\n            {exportLabelType === LabelType.ALL && getOptions(AllExportFormatData)}\n            {exportLabelType === LabelType.RECTANGLE && getOptions(RectExportFormatData)}\n            {exportLabelType === LabelType.POINT && getOptions(PointExportFormatData)}\n            {exportLabelType === LabelType.POLYGON && getOptions(PolygonExportFormatData)}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <GenericYesNoPopup\n      title={\"导出标注\"}\n      renderContent={renderContent}\n      acceptLabel={\"导出\"}\n      onAccept={onAccept}\n      rejectLabel={\"取消\"}\n      onReject={onReject}\n    />\n  );\n};\n\nconst mapDispatchToProps = {};\n\nconst mapStateToProps = (state: AppState) => ({\n  imagesData: state.editor.imagesData,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ExportLabelPopup);\n","import React, { useState } from \"react\";\nimport \"./InsertLabelNamesPopup.scss\";\nimport { GenericYesNoPopup } from \"../GenericYesNoPopup/GenericYesNoPopup\";\nimport { PopupWindowType } from \"../../../data/enums/PopupWindowType\";\nimport { updateActiveLabelNameIndex, updateLabelNamesList } from \"../../../store/editor/actionCreators\";\nimport { updateActivePopupType } from \"../../../store/general/actionCreators\";\nimport { AppState } from \"../../../store\";\nimport { connect } from \"react-redux\";\nimport Scrollbars from \"react-custom-scrollbars\";\nimport TextInput from \"../../Common/TextInput/TextInput\";\nimport { ImageButton } from \"../../Common/ImageButton/ImageButton\";\nimport uuidv1 from \"uuid/v1\";\nimport { PopupActions } from \"../../../logic/actions/PopupActions\";\n\ninterface IProps {\n  updateActiveLabelNameIndex: (activeLabelIndex: number) => any;\n  updateLabelNamesList: (labelNames: string[]) => any;\n  updateActivePopupType: (activePopupType: PopupWindowType) => any;\n}\n\nconst InsertLabelNamesPopup: React.FC<IProps> = ({\n  updateActiveLabelNameIndex,\n  updateLabelNamesList,\n  updateActivePopupType,\n}) => {\n  const [labelNames, setLabelNames] = useState({});\n\n  const addHandle = () => {\n    const newLabelNames = { ...labelNames, [uuidv1()]: \"\" };\n    setLabelNames(newLabelNames);\n  };\n\n  const deleteHandle = (key: string) => {\n    const newLabelNames = { ...labelNames };\n    delete newLabelNames[key];\n    setLabelNames(newLabelNames);\n  };\n\n  const labelInputs = Object.keys(labelNames).map((key: string) => {\n    return (\n      <div className=\"LabelEntry\" key={key}>\n        <TextInput\n          key={key}\n          isPassword={false}\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => onChange(key, event.target.value)}\n          label={\"标注名称\"}\n        />\n        <ImageButton\n          image={\"ico/trash.png\"}\n          imageAlt={\"remove_label\"}\n          size={{ width: 30, height: 30 }}\n          onClick={() => deleteHandle(key)}\n        />\n      </div>\n    );\n  });\n\n  const onChange = (key: string, value: string) => {\n    const newLabelNames = { ...labelNames, [key]: value };\n    setLabelNames(newLabelNames);\n  };\n\n  const onAccept = () => {\n    const labelNamesList: string[] = extractLabelNamesList();\n    if (labelNamesList.length > 0) {\n      updateLabelNamesList(labelNamesList);\n      PopupActions.close();\n    }\n  };\n\n  const extractLabelNamesList = (): string[] => {\n    const labelNameList: string[] = Object.values(labelNames).filter(value => !!value) as string[];\n    // const defaultLabelList: string[] = [\n    //   \"头顶\",\n    //   \"左手心\",\n    //   \"右手心\",\n    //   \"左脚跟\",\n    //   \"左脚尖\",\n    //   \"右脚跟\",\n    //   \"右脚尖\",\n    // ];\n\n    // return defaultLabelList.concat(labelNameList);\n    return labelNameList;\n  };\n\n  const onReject = () => {\n    updateActivePopupType(PopupWindowType.LOAD_LABEL_NAMES);\n  };\n\n  const renderContent = () => {\n    return (\n      <div className=\"InsertLabelNamesPopup\">\n        <div className=\"LeftContainer\">\n          <ImageButton\n            image={\"ico/plus.png\"}\n            imageAlt={\"plus\"}\n            size={{ width: 40, height: 40 }}\n            padding={25}\n            onClick={addHandle}\n          />\n        </div>\n        <div className=\"RightContainer\">\n          <div className=\"Message\">在你开始之前，请创建一个即将用在你项目内的标签列表，点击左边的 + 号添加新标签</div>\n          <div className=\"LabelsContainer\">\n            {Object.keys(labelNames).length !== 0 ? (\n              <Scrollbars>\n                <div className=\"InsertLabelNamesPopupContent\">{labelInputs}</div>\n              </Scrollbars>\n            ) : (\n              <div className=\"EmptyList\" onClick={addHandle}>\n                <img draggable={false} alt={\"upload\"} src={\"img/type-writer.png\"} />\n                <p className=\"extraBold\">当前项目标签列表为空</p>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <GenericYesNoPopup\n      title={\"创建标签列表\"}\n      renderContent={renderContent}\n      acceptLabel={\"开始标注\"}\n      onAccept={onAccept}\n      disableAcceptButton={extractLabelNamesList().length === 0}\n      rejectLabel={\"从文件载入\"}\n      onReject={onReject}\n    />\n  );\n};\n\nconst mapDispatchToProps = {\n  updateActiveLabelNameIndex,\n  updateLabelNamesList,\n  updateActivePopupType,\n};\n\nconst mapStateToProps = (state: AppState) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(InsertLabelNamesPopup);\n","import React from \"react\";\nimport \"./ExitProjectPopup.scss\";\nimport { GenericYesNoPopup } from \"../GenericYesNoPopup/GenericYesNoPopup\";\nimport {\n  updateActiveImageIndex,\n  updateActiveLabelNameIndex,\n  updateFirstLabelCreatedFlag,\n  updateImageData,\n  updateLabelNamesList,\n  updateProjectType,\n} from \"../../../store/editor/actionCreators\";\nimport { AppState } from \"../../../store\";\nimport { connect } from \"react-redux\";\nimport { ProjectType } from \"../../../data/enums/ProjectType\";\nimport { ImageData } from \"../../../store/editor/types\";\nimport { PopupActions } from \"../../../logic/actions/PopupActions\";\n\ninterface IProps {\n  updateActiveImageIndex: (activeImageIndex: number) => any;\n  updateProjectType: (projectType: ProjectType) => any;\n  updateActiveLabelNameIndex: (activeLabelIndex: number) => any;\n  updateLabelNamesList: (labelNames: string[]) => any;\n  updateImageData: (imageData: ImageData[]) => any;\n  updateFirstLabelCreatedFlag: (firstLabelCreatedFlag: boolean) => any;\n}\n\nconst ExitProjectPopup: React.FC<IProps> = props => {\n  const {\n    updateActiveLabelNameIndex,\n    updateLabelNamesList,\n    updateProjectType,\n    updateActiveImageIndex,\n    updateImageData,\n    updateFirstLabelCreatedFlag,\n  } = props;\n\n  const renderContent = () => {\n    return (\n      <div className=\"ExitProjectPopupContent\">\n        <div className=\"Message\">\n          Are you sure you want to leave the editor? You will permanently lose all your progress.\n        </div>\n      </div>\n    );\n  };\n\n  const onAccept = () => {\n    updateActiveLabelNameIndex(null);\n    updateLabelNamesList([]);\n    updateProjectType(null);\n    updateActiveImageIndex(null);\n    updateImageData([]);\n    updateFirstLabelCreatedFlag(false);\n    PopupActions.close();\n  };\n\n  const onReject = () => {\n    PopupActions.close();\n  };\n\n  return (\n    <GenericYesNoPopup\n      title={\"Exit project\"}\n      renderContent={renderContent}\n      acceptLabel={\"Exit\"}\n      onAccept={onAccept}\n      rejectLabel={\"Back\"}\n      onReject={onReject}\n    />\n  );\n};\n\nconst mapDispatchToProps = {\n  updateActiveLabelNameIndex,\n  updateLabelNamesList,\n  updateProjectType,\n  updateActiveImageIndex,\n  updateImageData,\n  updateFirstLabelCreatedFlag,\n};\n\nconst mapStateToProps = (state: AppState) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ExitProjectPopup);\n","import React from \"react\";\nimport \"./LoadMoreImagesPopup.scss\";\nimport { AppState } from \"../../../store\";\nimport { connect } from \"react-redux\";\nimport { addImageData } from \"../../../store/editor/actionCreators\";\nimport { GenericYesNoPopup } from \"../GenericYesNoPopup/GenericYesNoPopup\";\nimport { useDropzone } from \"react-dropzone\";\nimport { FileUtil } from \"../../../utils/FileUtil\";\nimport { ImageData } from \"../../../store/editor/types\";\nimport { AcceptedFileType } from \"../../../data/enums/AcceptedFileType\";\nimport { PopupActions } from \"../../../logic/actions/PopupActions\";\n\ninterface IProps {\n  addImageData: (imageData: ImageData[]) => any;\n}\n\nconst LoadMoreImagesPopup: React.FC<IProps> = ({ addImageData }) => {\n  const { acceptedFiles, getRootProps, getInputProps } = useDropzone({\n    accept: AcceptedFileType.IMAGE,\n  });\n\n  const onAccept = () => {\n    if (acceptedFiles.length > 0) {\n      addImageData(\n        acceptedFiles.map((fileData: File) => FileUtil.mapFileDataToImageData(fileData))\n      );\n      PopupActions.close();\n    }\n  };\n\n  const onReject = () => {\n    PopupActions.close();\n  };\n\n  const getDropZoneContent = () => {\n    if (acceptedFiles.length === 0)\n      return (\n        <>\n          <input {...getInputProps()} />\n          <img draggable={false} alt={\"upload\"} src={\"img/box-opened.png\"} />\n          <p className=\"extraBold\">拖拽到这里</p>\n          <p>或</p>\n          <p className=\"extraBold\">点击导入</p>\n        </>\n      );\n    else if (acceptedFiles.length === 1)\n      return (\n        <>\n          <img draggable={false} alt={\"uploaded\"} src={\"img/box-closed.png\"} />\n          <p className=\"extraBold\">导入了 1 张新图片 </p>\n        </>\n      );\n    else\n      return (\n        <>\n          <img draggable={false} key={1} alt={\"uploaded\"} src={\"img/box-closed.png\"} />\n          <p key={2} className=\"extraBold\">\n            导入了 {acceptedFiles.length} 张新图片\n          </p>\n        </>\n      );\n  };\n\n  const renderContent = () => {\n    return (\n      <div className=\"LoadMoreImagesPopupContent\">\n        <div {...getRootProps({ className: \"DropZone\" })}>{getDropZoneContent()}</div>\n      </div>\n    );\n  };\n\n  return (\n    <GenericYesNoPopup\n      title={\"导入更多图片\"}\n      renderContent={renderContent}\n      acceptLabel={\"载入\"}\n      disableAcceptButton={acceptedFiles.length < 1}\n      onAccept={onAccept}\n      rejectLabel={\"取消\"}\n      onReject={onReject}\n    />\n  );\n};\n\nconst mapDispatchToProps = {\n  addImageData,\n};\n\nconst mapStateToProps = (state: AppState) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoadMoreImagesPopup);\n","import React from \"react\";\nimport \"./PopupView.scss\";\nimport { PopupWindowType } from \"../../data/enums/PopupWindowType\";\nimport { AppState } from \"../../store\";\nimport { connect } from \"react-redux\";\nimport LoadLabelsPopup from \"./LoadLabelNamesPopup/LoadLabelNamesPopup\";\nimport ExportLabelPopup from \"./ExportLabelsPopup/ExportLabelPopup\";\nimport InsertLabelNamesPopup from \"./InsertLabelNamesPopup/InsertLabelNamesPopup\";\nimport ExitProjectPopup from \"./ExitProjectPopup/ExitProjectPopup\";\nimport LoadMoreImagesPopup from \"./LoadMoreImagesPopup/LoadMoreImagesPopup\";\n\ninterface IProps {\n  activePopupType: PopupWindowType;\n}\n\nconst PopupView: React.FC<IProps> = ({ activePopupType }) => {\n  const selectPopup = () => {\n    switch (activePopupType) {\n      case PopupWindowType.LOAD_LABEL_NAMES:\n        return <LoadLabelsPopup />;\n      case PopupWindowType.EXPORT_LABELS:\n        return <ExportLabelPopup />;\n      case PopupWindowType.INSERT_LABEL_NAMES:\n        return <InsertLabelNamesPopup />;\n      case PopupWindowType.EXIT_PROJECT:\n        return <ExitProjectPopup />;\n      case PopupWindowType.LOAD_IMAGES:\n        return <LoadMoreImagesPopup />;\n      default:\n        return null;\n    }\n  };\n\n  return activePopupType && <div className=\"PopupView\">{selectPopup()}</div>;\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  activePopupType: state.general.activePopupType,\n});\n\nexport default connect(mapStateToProps)(PopupView);\n","import React, {useState} from 'react';\nimport './MobileMainView.scss';\nimport Scrollbars from 'react-custom-scrollbars';\nimport {ISize} from \"../../interfaces/ISize\";\nimport {AppState} from \"../../store\";\nimport {connect} from \"react-redux\";\nimport classNames from 'classnames'\nimport {EditorFeatureData, IEditorFeature} from \"../../data/info/EditorFeatureData\";\nimport {ISocialMedia, SocialMediaData} from \"../../data/info/SocialMediaData\";\nimport {ImageButton} from \"../Common/ImageButton/ImageButton\";\n\ninterface IProps {\n    size: ISize;\n}\n\nconst MobileMainView: React.FC<IProps> = ({size}) => {\n    const scrollPositionThreshold: number = 350;\n    const [scrollPosition, setScrollPosition] = useState(0);\n\n    const getClassName = () => {\n        return classNames('MobileTopNavigationBar', {\n            Hide: scrollPosition < scrollPositionThreshold,\n            Show: scrollPosition >= scrollPositionThreshold,\n        })\n    };\n\n    const onScroll = (value) => {\n        setScrollPosition(value.scrollTop);\n    };\n\n    const getEditorFeatureTiles = (features: IEditorFeature[]) => {\n        return features.map((data:IEditorFeature) => {\n            return <div\n                className=\"EditorFeaturesTiles\"\n                key={data.displayText}\n            >\n                <div\n                    className=\"EditorFeaturesTilesWrapper\"\n                >\n                    <img\n                        draggable={false}\n                        alt={data.imageAlt}\n                        src={data.imageSrc}\n                    />\n                    <div className=\"EditorFeatureLabel\">\n                        {data.displayText}\n                    </div>\n                </div>\n            </div>\n        });\n    };\n\n    const getSocialMediaButtons = (size:ISize) => {\n        return SocialMediaData.map((data:ISocialMedia, index: number) => {\n            return <ImageButton\n                key={index}\n                size={size}\n                image={data.imageSrc}\n                imageAlt={data.imageAlt}\n                href={data.href}\n            />\n        });\n    };\n\n    const topNavigationBar = <div className={getClassName()}>\n        <div className=\"NavigationBarGroupWrapper\">\n            <div className=\"Header\">\n                <img\n                    draggable={false}\n                    alt={\"make-sense\"}\n                    src={\"/make-sense-ico-transparent.png\"}\n                />\n                Make Sense\n            </div>\n        </div>\n        <div className=\"TriangleHorizontal Bottom\">\n            <div className=\"TriangleHorizontalContent\"/>\n        </div>\n    </div>;\n\n    const firstStage = <div className=\"FirstStage\">\n        <img\n            draggable={false}\n            alt={\"main-logo\"}\n            src={\"img/main-image-color.png\"}\n        />\n        <div className=\"TriangleHorizontal Bottom\">\n            <div className=\"TriangleHorizontalContent\"/>\n        </div>\n    </div>;\n\n    const secondStage = <div className=\"SecondStage\">\n        {getEditorFeatureTiles(EditorFeatureData.slice(0, 3))}\n    </div>;\n\n    const thirdStage = <div className=\"ThirdStage\">\n        {getEditorFeatureTiles(EditorFeatureData.slice(3, 6))}\n        <div className=\"TriangleHorizontal Top\">\n            <div className=\"TriangleHorizontalContent\"/>\n        </div>\n        <div className=\"TriangleHorizontal Bottom\">\n            <div className=\"TriangleHorizontalContent\"/>\n        </div>\n    </div>;\n\n    const fourthStage = <div className=\"FourthStage\">\n        <div className=\"Message\">\n            Due to the small size of the screen we do not support our editor on mobile devices. Check what you missed and visit us from a desktop.\n        </div>\n        <div className=\"SocialMediaWrapper\">\n            {getSocialMediaButtons({width: 40, height: 40})}\n        </div>\n    </div>;\n\n    return(<div className=\"MobileMainView\">\n        {topNavigationBar}\n        <Scrollbars\n            onScrollFrame={onScroll}\n        >\n            <div\n                className=\"MobileMainViewContent\"\n                style={{width: size.width}}\n            >\n                {firstStage}\n                {secondStage}\n                {thirdStage}\n                {fourthStage}\n            </div>\n        </Scrollbars>\n    </div>)\n};\n\nconst mapDispatchToProps = {};\n\nconst mapStateToProps = (state: AppState) => ({\n    size: state.general.windowSize\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(MobileMainView);","import React from 'react';\nimport './SizeItUpView.scss';\nimport {Settings} from \"../../settings/Settings\";\n\nexport const SizeItUpView: React.FC = () => {\n    return(<div className=\"SizeItUpView\">\n        <p className=\"extraBold\">Ops... This window is to tight for me!</p>\n        <img\n            draggable={false}\n            alt={\"small_window\"}\n            src={\"img/small_window.png\"}\n        />\n        <p className=\"extraBold\">Please... make it at least {Settings.EDITOR_MIN_WIDTH} x {Settings.EDITOR_MIN_HEIGHT} px.</p>\n    </div>)\n};","import React from \"react\";\nimport \"./App.scss\";\nimport EditorView from \"./views/EditorView/EditorView\";\nimport MainView from \"./views/MainView/MainView\";\nimport { ProjectType } from \"./data/enums/ProjectType\";\nimport { AppState } from \"./store\";\nimport { connect } from \"react-redux\";\nimport PopupView from \"./views/PopupView/PopupView\";\nimport MobileMainView from \"./views/MobileMainView/MobileMainView\";\nimport { ISize } from \"./interfaces/ISize\";\nimport { Settings } from \"./settings/Settings\";\nimport { SizeItUpView } from \"./views/SizeItUpView/SizeItUpView\";\nimport { PlatformModel } from \"./staticModels/PlatformModel\";\n\ninterface IProps {\n  projectType: ProjectType;\n  windowSize: ISize;\n}\n\nconst App: React.FC<IProps> = ({ projectType, windowSize }) => {\n  const selectRoute = () => {\n    if (!!PlatformModel.mobileDeviceData.manufacturer && !!PlatformModel.mobileDeviceData.os) return <MobileMainView />;\n    if (!projectType) return <MainView />;\n    else {\n      if (windowSize.height < Settings.EDITOR_MIN_HEIGHT || windowSize.width < Settings.EDITOR_MIN_WIDTH) {\n        return <SizeItUpView />;\n      } else {\n        return <EditorView />;\n      }\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {selectRoute()}\n      <PopupView />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  projectType: state.editor.projectType,\n  windowSize: state.general.windowSize,\n});\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { EditorActionTypes, EditorState, ImageData } from \"./types\";\nimport { Action } from \"../Actions\";\nimport produce from \"immer\";\nimport { LabelType } from \"../../data/enums/LabelType\";\nconst initialState: EditorState = {\n  activeImageIndex: 0,\n  projectName: \"my_project\",\n  imagesData: [],\n  projectType: null,\n  labelNames: [\"头顶\", \"左手心\", \"右手心\", \"左脚跟\", \"左脚尖\", \"右脚跟\", \"右脚尖\"],\n};\n\nexport function editorReducer(state = initialState, action: EditorActionTypes): EditorState {\n  const activeImageIndex = state.activeImageIndex;\n  const activeGroupIndex = state.imagesData[activeImageIndex]\n    ? state.imagesData[activeImageIndex].activeGroupIndex\n    : undefined;\n  const result = produce(state, draft => {\n    switch (action.type) {\n      case Action.UPDATE_PROJECT_TYPE:\n        draft.projectType = action.payload.projectType;\n        break;\n      case Action.UPDATE_PROJECT_NAME:\n        draft.projectName = action.payload.projectName;\n        break;\n      case Action.UPDATE_ACTIVE_IMAGE_INDEX:\n        draft.activeImageIndex = action.payload.activeImageIndex;\n        break;\n      case Action.UPDATE_ACTIVE_LABEL_NAME_INDEX:\n        draft.imagesData[activeImageIndex].groupList[activeGroupIndex].activeLabelNameIndex =\n          action.payload.activeLabelNameIndex;\n        break;\n      case Action.UPDATE_ACTIVE_LABEL_ID:\n        draft.imagesData[activeImageIndex].groupList[activeGroupIndex].activeLabelId = action.payload.activeLabelId;\n        break;\n      case Action.UPDATE_HIGHLIGHTED_LABEL_ID:\n        draft.imagesData[activeImageIndex].groupList[activeGroupIndex].highlightedLabelId =\n          action.payload.highlightedLabelId;\n        break;\n      case Action.UPDATE_ACTIVE_LABEL_TYPE:\n        draft.imagesData[activeImageIndex].groupList[activeGroupIndex].activeLabelType = action.payload.activeLabelType;\n        break;\n      case Action.UPDATE_IMAGE_DATA_BY_ID:\n        //filter TODO\n        draft.imagesData = state.imagesData.map((imageData: ImageData) =>\n          imageData.id === action.payload.id ? action.payload.newImageData : imageData\n        );\n        break;\n      case Action.ADD_IMAGES_DATA:\n        draft.imagesData = draft.imagesData.concat(action.payload.imageData);\n        break;\n      case Action.UPDATE_IMAGES_DATA:\n        draft.imagesData = action.payload.imageData;\n        break;\n      case Action.UPDATE_LABEL_NAMES_LIST:\n        draft.labelNames = action.payload.labelNames;\n        break;\n      case Action.UPDATE_FIRST_LABEL_CREATED_FLAG:\n        draft.imagesData[activeImageIndex].groupList[activeGroupIndex].firstLabelCreatedFlag =\n          action.payload.firstLabelCreatedFlag;\n        break;\n      case Action.UPDATE_GROUP_LIST:\n        draft.imagesData[activeImageIndex].groupList.push({\n          activeLabelNameIndex: 0,\n          activeLabelType: LabelType.POINT,\n          activeLabelId: null,\n          highlightedLabelId: null,\n          firstLabelCreatedFlag: false,\n          labelRects: [],\n          labelPoints: [],\n          labelPolygons: [],\n        });\n        break;\n      case Action.UPDATE_ACTIVE_GROUP_INDEX:\n        draft.imagesData[activeImageIndex].activeGroupIndex = action.payload.groupIndex;\n        break;\n    }\n  });\n  return result;\n}\n","import {GeneralActionTypes, GeneralState} from \"./types\";\nimport {Action} from \"../Actions\";\nimport {CustomCursorStyle} from \"../../data/enums/CustomCursorStyle\";\n\nconst initialState: GeneralState = {\n    windowSize: null,\n    activePopupType: null,\n    customCursorStyle: CustomCursorStyle.DEFAULT,\n    activeContext: null\n};\n\nexport function generalReducer(\n    state = initialState,\n    action: GeneralActionTypes\n): GeneralState {\n    switch (action.type) {\n        case Action.UPDATE_WINDOW_SIZE: {\n            return {\n                ...state,\n                windowSize: action.payload.windowSize\n            }\n        }\n        case Action.UPDATE_ACTIVE_POPUP_TYPE: {\n            return {\n                ...state,\n                activePopupType: action.payload.activePopupType\n            }\n        }\n        case Action.UPDATE_CUSTOM_CURSOR_STYLE: {\n            return {\n                ...state,\n                customCursorStyle: action.payload.customCursorStyle\n            }\n        }\n        case Action.UPDATE_CONTEXT: {\n            return {\n                ...state,\n                activeContext: action.payload.activeContext\n            }\n        }\n        default:\n            return state;\n    }\n}","import { combineReducers } from \"redux\";\nimport { editorReducer } from \"./editor/reducer\";\nimport { generalReducer } from \"./general/reducer\";\n\nexport const rootReducer = combineReducers({\n  general: generalReducer,\n  editor: editorReducer,\n});\n\nexport type AppState = ReturnType<typeof rootReducer>;\n","import {MobileDeviceData} from \"../data/MobileDeviceData\";\nimport MobileDetect from 'mobile-detect'\n\nexport class PlatformUtil {\n    public static getMobileDeviceData(userAgent: string): MobileDeviceData {\n        const mobileDetect = new MobileDetect(userAgent);\n        return {\n            manufacturer: mobileDetect.mobile(),\n            browser: mobileDetect.userAgent(),\n            os: mobileDetect.os()\n        }\n    }\n\n    public static isMac(userAgent: string): boolean {\n        return !!userAgent.toLowerCase().match(\"mac\");\n    }\n\n    public static isSafari(userAgent: string): boolean {\n        return !!userAgent.toLowerCase().match(\"safari\");\n    }\n\n    public static isFirefox(userAgent: string): boolean {\n        return !!userAgent.toLowerCase().match(\"firefox\");\n    }\n}","import { updateWindowSize } from \"../../store/general/actionCreators\";\nimport { ContextManager } from \"../context/ContextManager\";\nimport { store } from \"../../index\";\nimport { PlatformUtil } from \"../../utils/PlatformUtil\";\nimport { PlatformModel } from \"../../staticModels/PlatformModel\";\n\nexport class AppInitializer {\n  public static inti(): void {\n    AppInitializer.handleResize();\n    AppInitializer.detectDeviceParams();\n    window.addEventListener(\"resize\", AppInitializer.handleResize);\n    ContextManager.init();\n  }\n\n  private static handleResize = () => {\n    store.dispatch(\n      updateWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      })\n    );\n  };\n\n  private static detectDeviceParams = () => {\n    const userAgent: string = window.navigator.userAgent;\n    PlatformModel.mobileDeviceData = PlatformUtil.getMobileDeviceData(userAgent);\n    PlatformModel.isMac = PlatformUtil.isMac(userAgent);\n    PlatformModel.isSafari = PlatformUtil.isSafari(userAgent);\n    PlatformModel.isFirefox = PlatformUtil.isFirefox(userAgent);\n  };\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport configureStore from \"./configureStore\";\nimport { Provider } from \"react-redux\";\nimport { AppInitializer } from \"./logic/initializer/AppInitializer\";\n\nexport const store = configureStore();\nAppInitializer.inti();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\") || document.createElement(\"div\") // fix for testing purposes\n);\n\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from \"redux\";\nimport { rootReducer } from \"./store\";\nimport logger from \"redux-logger\";\n\nexport default function configureStore() {\n  return createStore(\n    rootReducer\n    // applyMiddleware(logger)\n    // @ts-ignore\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  );\n}\n"],"sourceRoot":""}